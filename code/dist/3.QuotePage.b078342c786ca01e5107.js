webpackJsonp([3],Array(554).concat([
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var ScrollToFirstError_1 = __webpack_require__(555);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var subheader_1 = __webpack_require__(681);
	var Person_1 = __webpack_require__(682);
	var underscore_1 = __webpack_require__(540);
	var selectPersons_1 = __webpack_require__(707);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var ScrollToTopOnMount_1 = __webpack_require__(711);
	var Main = (function (_super) {
	    __extends(Main, _super);
	    function Main() {
	        _super.call(this);
	        this.state = {
	            persons: [{}, {}],
	            errors: [{}, {}]
	        };
	        this.submitQuoteForm.bind(this);
	    }
	    Main.prototype.setCookie = function (cname, cvalue, exdays) {
	        var d = new Date();
	        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
	        var expires = "expires=" + d.toUTCString();
	        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
	    };
	    Main.prototype.componentWillMount = function () {
	        if (this.props.location.query.agent_id) {
	            this.setCookie("agent_id", this.props.location.query.agent_id, 1);
	        }
	        if (!underscore_1.isEmpty(this.props.persons) && !underscore_1.isEmpty(this.props.persons[0])) {
	            var persons = JSON.parse(JSON.stringify(this.props.persons));
	            if (persons[0] && persons[0].s_birthDate) {
	                persons[0].s_birthDate = moment(persons[0].s_birthDate);
	            }
	            if (persons[1] && persons[1].s_birthDate) {
	                persons[1].s_birthDate = moment(persons[1].s_birthDate);
	            }
	            this.setState({
	                persons: persons
	            });
	        }
	    };
	    Main.prototype.validateQuoteForm = function () {
	        var _this = this;
	        var result = true;
	        var errors = [];
	        this.setState({
	            initialQuoteSubmittedOnce: true
	        });
	        underscore_1.each(this.state.persons, function (person, index) {
	            if (index < _this.props.noOfPersons) {
	                var s_birthDate = person.s_birthDate, s_gender = person.s_gender, state = person.state, smoke = person.smoke, health = person.health, name_1 = person.name;
	                var s_birthDateError = !(s_birthDate && moment(s_birthDate).format("YYYY-MM-DD").length > 0);
	                var s_genderError = !(s_gender == 1 || s_gender == 2);
	                var stateError = !(state && state.length > 0);
	                var smokeError = !(smoke == "Yes" || smoke == "No");
	                var healthError = !(health);
	                var nameError = !(name_1 && String.prototype.trim.call(name_1).length > 0);
	                errors.push({
	                    s_birthDateError: s_birthDateError,
	                    s_genderError: s_genderError,
	                    stateError: stateError,
	                    smokeError: smokeError,
	                    healthError: healthError,
	                    nameError: nameError
	                });
	                result = result && !(s_birthDateError || s_genderError || stateError || smokeError || healthError || nameError);
	            }
	        });
	        this.setState({
	            errors: errors
	        });
	        return result;
	    };
	    Main.prototype.componentDidMount = function () {
	        document.addEventListener("keydown", this.keyDownTextField.bind(this), false);
	        setTimeout(function () {
	            window.scrollTo(0, 0);
	        }, 300);
	    };
	    Main.prototype.componentWillUnmount = function () {
	        document.removeEventListener("keydown", this.keyDownTextField.bind(this), false);
	    };
	    Main.prototype.keyDownTextField = function (e) {
	        var keyCode = e.keyCode;
	        if (keyCode == 13) {
	            var isModalPopup = document.querySelector('div[role="dialog"].fade.in');
	            var last_page = window.location.href.lastIndexOf('/next-steps') > -1;
	            if (isModalPopup == null && !last_page) {
	                var activeElement = document.activeElement;
	                if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                    this.submitQuoteForm();
	                }
	            }
	        }
	    };
	    Main.prototype.submitQuoteForm = function () {
	        var _this = this;
	        if (this.validateQuoteForm()) {
	            var persons = [];
	            this.setState({
	                submittingUserInfo: true
	            });
	            var personOne = JSON.parse(JSON.stringify(this.state.persons[0]));
	            personOne.s_birthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	            personOne.applicant = "1";
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                var personTwo = JSON.parse(JSON.stringify(this.state.persons[1]));
	                personTwo.s_birthDate = moment(personTwo.s_birthDate).format("YYYY-MM-DD");
	                personTwo.applicant = "2";
	                persons.push(personTwo);
	            }
	            this.props.setPersonsData(persons);
	            return this.props.submitQuoteForm(persons).then(function () {
	                if (_this.props.products && _this.props.products.LOGIN_URL && _this.props.products.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.products.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.products && _this.props.products.redirect_url && _this.props.products.redirect_url.length > 0) {
	                    window.location.href = _this.props.products.redirect_url;
	                    return;
	                }
	                var basePath = _this.props.location.pathname.indexOf("agent") >= 0 || _this.props.is_agent ? "/agent/" : "/";
	                var queryParams = _this.props.location.query;
	                var queryParamsString = "?";
	                for (var k in queryParams) {
	                    if (queryParams[k]) {
	                        queryParamsString += k + "=" + queryParams[k] + "&";
	                    }
	                    else {
	                        queryParamsString += k + "&";
	                    }
	                }
	                queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                react_router_1.browserHistory.push(basePath + "products" + queryParamsString);
	                _this.setState({
	                    submittingUserInfo: false
	                });
	            }).catch(function () {
	                var queryParams = _this.props.location.query;
	                var queryParamsString = "?";
	                for (var k in queryParams) {
	                    if (queryParams[k]) {
	                        queryParamsString += k + "=" + queryParams[k] + "&";
	                    }
	                    else {
	                        queryParamsString += k + "&";
	                    }
	                }
	                queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                react_router_1.browserHistory.push("/products" + queryParamsString);
	                _this.setState({
	                    submittingUserInfo: false
	                });
	            });
	        }
	        else {
	            ScrollToFirstError_1.scrollToFirstError();
	        }
	    };
	    Main.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.persons) && underscore_1.isEmpty(this.state.persons)) {
	            this.setState({
	                persons: nextProps.persons
	            });
	        }
	    };
	    Main.prototype.changePersonInfo = function (index, key, val) {
	        if (this.state.persons[index]) {
	            var person = JSON.parse(JSON.stringify(this.state.persons[index]));
	        }
	        else {
	            var person = {};
	        }
	        if (person.s_birthDate) {
	            person.s_birthDate = moment(person.s_birthDate);
	        }
	        person[key] = val;
	        var persons = [];
	        if (this.props.noOfPersons == 2) {
	            if (index == 0) {
	                persons[0] = person;
	                persons[1] = this.state.persons[1];
	            }
	            else {
	                persons[0] = this.state.persons[0];
	                persons[1] = person;
	            }
	        }
	        else {
	            persons.push(person);
	            persons.push({});
	        }
	        this.setState({ persons: persons });
	    };
	    Main.prototype.getContinueBtnActiveClass = function () {
	        var result = true;
	        var errors = [];
	        underscore_1.each(this.state.persons, function (person, index) {
	            if (index == 0 || (!underscore_1.isEmpty(person))) {
	                var s_birthDate = person.s_birthDate, s_gender = person.s_gender, state = person.state, smoke = person.smoke, health = person.health, name_2 = person.name;
	                var s_birthDateError = !(s_birthDate && moment(s_birthDate).format("YYYY-MM-DD").length > 0);
	                var s_genderError = !(s_gender == 1 || s_gender == 2);
	                var stateError = !(state && state.length > 0);
	                var smokeError = !(smoke == "Yes" || smoke == "No");
	                var healthError = !(health);
	                var nameError = !(name_2 && name_2.length > 0);
	                result = result && !(s_birthDateError || s_genderError || stateError || smokeError || healthError);
	            }
	        });
	        if (result) {
	            return "active";
	        }
	        else {
	            return "";
	        }
	    };
	    Main.prototype.getMobileContinueBtnActiveClass = function () {
	        if (this.props.noOfPersons > 0) {
	            return "active";
	        }
	        return "";
	    };
	    Main.prototype.render = function () {
	        var _this = this;
	        var personsContainerWidth = this.props.noOfPersons == 2 ? 4 : 8;
	        var healthRatingObjects = [
	            { value: "Fair", label: "Fair" },
	            { value: "Good", label: "Good" },
	            { value: "Very Good", label: "Very Good" },
	            { value: "Excellent", label: "Excellent" },
	        ];
	        return (React.createElement("div", null, React.createElement(ScrollToTopOnMount_1.default, null), React.createElement(subheader_1.default, {location: this.props.location, products: this.props.products, plans: this.props.plans, premiums: this.props.premiums}), React.createElement(selectPersons_1.default, null), React.createElement("div", {className: "row c-quote"}, this.props.noOfPersons && React.createElement("div", null, React.createElement("div", {className: "header"}, React.createElement("div", {style: { textAlign: "center", fontSize: "26px" }, className: "fwbold"})), React.createElement("div", {className: this.props.noOfPersons == 2 ? "two-person-outer-container c-center" : "one-person-outer-container"}, React.createElement(react_bootstrap_1.Col, {sm: personsContainerWidth, className: "one-person-content"}, React.createElement(Person_1.default, {onChange: this.changePersonInfo.bind(this), index: 0, personIndex: 0, person: this.state.persons[0], errors: this.state.errors[0], submitQuoteForm: this.submitQuoteForm.bind(this), validateQuoteForm: this.validateQuoteForm.bind(this), initialQuoteSubmittedOnce: this.state.initialQuoteSubmittedOnce})), this.props.noOfPersons == 2 &&
	            React.createElement(react_bootstrap_1.Col, {sm: personsContainerWidth, className: "second-person-content"}, React.createElement(Person_1.default, {onChange: this.changePersonInfo.bind(this), index: 1, personIndex: 1, person: this.state.persons[1], errors: this.state.errors[1], submitQuoteForm: this.submitQuoteForm.bind(this), validateQuoteForm: this.validateQuoteForm.bind(this), initialQuoteSubmittedOnce: this.state.initialQuoteSubmittedOnce})), React.createElement("div", {className: "c-submit-person-info-btn c-center", style: { marginTop: "30px" }}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular hidden-xs " + this.getContinueBtnActiveClass(), onClick: function () {
	            _this.submitQuoteForm();
	        }}, "NEXT", this.state.submittingUserInfo && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular visible-xs", onClick: function () {
	            _this.submitQuoteForm();
	        }}, "NEXT", this.state.submittingUserInfo && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))))));
	    };
	    return Main;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        products: state.quotes.products,
	        plans: state.quotes.plans,
	        persons: state.quotes.persons,
	        noOfPersons: state.selectPersons.noOfPersons,
	        is_agent: state.quotes.is_agent,
	        premiums: state.quotes.premiums
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        submitQuoteForm: function (data) { return dispatch(Quote_1.submitQuoteForm(data, true)); },
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        submitPlansForm: function (data) {
	            return dispatch(Quote_1.submitPlansForm(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Main);


/***/ }),
/* 555 */
/***/ (function(module, exports) {

	"use strict";
	exports.scrollToFirstError = function () {
	    setTimeout(function () {
	        var bodyRectTop = document.body.getBoundingClientRect().top;
	        var elemRect = document.getElementsByClassName('c-subheader-text error visibility-show');
	        if (elemRect.length > 0) {
	            var top = elemRect[0].getBoundingClientRect().top;
	            var offset = top - bodyRectTop;
	            window.scroll(0, offset - 80);
	        }
	    }, 200);
	};


/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

	var require;/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	
	;(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, (function () { 'use strict';
	
	    var hookCallback;
	
	    function hooks () {
	        return hookCallback.apply(null, arguments);
	    }
	
	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback (callback) {
	        hookCallback = callback;
	    }
	
	    function isArray(input) {
	        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
	    }
	
	    function isObject(input) {
	        // IE8 will treat undefined and null as object if it wasn't for
	        // input != null
	        return input != null && Object.prototype.toString.call(input) === '[object Object]';
	    }
	
	    function isObjectEmpty(obj) {
	        if (Object.getOwnPropertyNames) {
	            return (Object.getOwnPropertyNames(obj).length === 0);
	        } else {
	            var k;
	            for (k in obj) {
	                if (obj.hasOwnProperty(k)) {
	                    return false;
	                }
	            }
	            return true;
	        }
	    }
	
	    function isUndefined(input) {
	        return input === void 0;
	    }
	
	    function isNumber(input) {
	        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
	    }
	
	    function isDate(input) {
	        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	    }
	
	    function map(arr, fn) {
	        var res = [], i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }
	
	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }
	
	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }
	
	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }
	
	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }
	
	        return a;
	    }
	
	    function createUTC (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }
	
	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty           : false,
	            unusedTokens    : [],
	            unusedInput     : [],
	            overflow        : -2,
	            charsLeftOver   : 0,
	            nullInput       : false,
	            invalidMonth    : null,
	            invalidFormat   : false,
	            userInvalidated : false,
	            iso             : false,
	            parsedDateParts : [],
	            meridiem        : null,
	            rfc2822         : false,
	            weekdayMismatch : false
	        };
	    }
	
	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }
	
	    var some;
	    if (Array.prototype.some) {
	        some = Array.prototype.some;
	    } else {
	        some = function (fun) {
	            var t = Object(this);
	            var len = t.length >>> 0;
	
	            for (var i = 0; i < len; i++) {
	                if (i in t && fun.call(this, t[i], i, t)) {
	                    return true;
	                }
	            }
	
	            return false;
	        };
	    }
	
	    function isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m);
	            var parsedParts = some.call(flags.parsedDateParts, function (i) {
	                return i != null;
	            });
	            var isNowValid = !isNaN(m._d.getTime()) &&
	                flags.overflow < 0 &&
	                !flags.empty &&
	                !flags.invalidMonth &&
	                !flags.invalidWeekday &&
	                !flags.weekdayMismatch &&
	                !flags.nullInput &&
	                !flags.invalidFormat &&
	                !flags.userInvalidated &&
	                (!flags.meridiem || (flags.meridiem && parsedParts));
	
	            if (m._strict) {
	                isNowValid = isNowValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }
	
	            if (Object.isFrozen == null || !Object.isFrozen(m)) {
	                m._isValid = isNowValid;
	            }
	            else {
	                return isNowValid;
	            }
	        }
	        return m._isValid;
	    }
	
	    function createInvalid (flags) {
	        var m = createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        }
	        else {
	            getParsingFlags(m).userInvalidated = true;
	        }
	
	        return m;
	    }
	
	    // Plugins that add properties should also add the key here (null value),
	    // so we can properly clone ourselves.
	    var momentProperties = hooks.momentProperties = [];
	
	    function copyConfig(to, from) {
	        var i, prop, val;
	
	        if (!isUndefined(from._isAMomentObject)) {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (!isUndefined(from._i)) {
	            to._i = from._i;
	        }
	        if (!isUndefined(from._f)) {
	            to._f = from._f;
	        }
	        if (!isUndefined(from._l)) {
	            to._l = from._l;
	        }
	        if (!isUndefined(from._strict)) {
	            to._strict = from._strict;
	        }
	        if (!isUndefined(from._tzm)) {
	            to._tzm = from._tzm;
	        }
	        if (!isUndefined(from._isUTC)) {
	            to._isUTC = from._isUTC;
	        }
	        if (!isUndefined(from._offset)) {
	            to._offset = from._offset;
	        }
	        if (!isUndefined(from._pf)) {
	            to._pf = getParsingFlags(from);
	        }
	        if (!isUndefined(from._locale)) {
	            to._locale = from._locale;
	        }
	
	        if (momentProperties.length > 0) {
	            for (i = 0; i < momentProperties.length; i++) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (!isUndefined(val)) {
	                    to[prop] = val;
	                }
	            }
	        }
	
	        return to;
	    }
	
	    var updateInProgress = false;
	
	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        if (!this.isValid()) {
	            this._d = new Date(NaN);
	        }
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }
	
	    function isMoment (obj) {
	        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	    }
	
	    function absFloor (number) {
	        if (number < 0) {
	            // -0 -> 0
	            return Math.ceil(number) || 0;
	        } else {
	            return Math.floor(number);
	        }
	    }
	
	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;
	
	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }
	
	        return value;
	    }
	
	    // compare two arrays, return the number of differences
	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }
	
	    function warn(msg) {
	        if (hooks.suppressDeprecationWarnings === false &&
	                (typeof console !==  'undefined') && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }
	
	    function deprecate(msg, fn) {
	        var firstTime = true;
	
	        return extend(function () {
	            if (hooks.deprecationHandler != null) {
	                hooks.deprecationHandler(null, msg);
	            }
	            if (firstTime) {
	                var args = [];
	                var arg;
	                for (var i = 0; i < arguments.length; i++) {
	                    arg = '';
	                    if (typeof arguments[i] === 'object') {
	                        arg += '\n[' + i + '] ';
	                        for (var key in arguments[0]) {
	                            arg += key + ': ' + arguments[0][key] + ', ';
	                        }
	                        arg = arg.slice(0, -2); // Remove trailing comma and space
	                    } else {
	                        arg = arguments[i];
	                    }
	                    args.push(arg);
	                }
	                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }
	
	    var deprecations = {};
	
	    function deprecateSimple(name, msg) {
	        if (hooks.deprecationHandler != null) {
	            hooks.deprecationHandler(name, msg);
	        }
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }
	
	    hooks.suppressDeprecationWarnings = false;
	    hooks.deprecationHandler = null;
	
	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }
	
	    function set (config) {
	        var prop, i;
	        for (i in config) {
	            prop = config[i];
	            if (isFunction(prop)) {
	                this[i] = prop;
	            } else {
	                this['_' + i] = prop;
	            }
	        }
	        this._config = config;
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        this._dayOfMonthOrdinalParseLenient = new RegExp(
	            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
	                '|' + (/\d{1,2}/).source);
	    }
	
	    function mergeConfigs(parentConfig, childConfig) {
	        var res = extend({}, parentConfig), prop;
	        for (prop in childConfig) {
	            if (hasOwnProp(childConfig, prop)) {
	                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                    res[prop] = {};
	                    extend(res[prop], parentConfig[prop]);
	                    extend(res[prop], childConfig[prop]);
	                } else if (childConfig[prop] != null) {
	                    res[prop] = childConfig[prop];
	                } else {
	                    delete res[prop];
	                }
	            }
	        }
	        for (prop in parentConfig) {
	            if (hasOwnProp(parentConfig, prop) &&
	                    !hasOwnProp(childConfig, prop) &&
	                    isObject(parentConfig[prop])) {
	                // make sure changes to properties don't modify parent config
	                res[prop] = extend({}, res[prop]);
	            }
	        }
	        return res;
	    }
	
	    function Locale(config) {
	        if (config != null) {
	            this.set(config);
	        }
	    }
	
	    var keys;
	
	    if (Object.keys) {
	        keys = Object.keys;
	    } else {
	        keys = function (obj) {
	            var i, res = [];
	            for (i in obj) {
	                if (hasOwnProp(obj, i)) {
	                    res.push(i);
	                }
	            }
	            return res;
	        };
	    }
	
	    var defaultCalendar = {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    };
	
	    function calendar (key, mom, now) {
	        var output = this._calendar[key] || this._calendar['sameElse'];
	        return isFunction(output) ? output.call(mom, now) : output;
	    }
	
	    var defaultLongDateFormat = {
	        LTS  : 'h:mm:ss A',
	        LT   : 'h:mm A',
	        L    : 'MM/DD/YYYY',
	        LL   : 'MMMM D, YYYY',
	        LLL  : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    };
	
	    function longDateFormat (key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];
	
	        if (format || !formatUpper) {
	            return format;
	        }
	
	        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	            return val.slice(1);
	        });
	
	        return this._longDateFormat[key];
	    }
	
	    var defaultInvalidDate = 'Invalid date';
	
	    function invalidDate () {
	        return this._invalidDate;
	    }
	
	    var defaultOrdinal = '%d';
	    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;
	
	    function ordinal (number) {
	        return this._ordinal.replace('%d', number);
	    }
	
	    var defaultRelativeTime = {
	        future : 'in %s',
	        past   : '%s ago',
	        s  : 'a few seconds',
	        ss : '%d seconds',
	        m  : 'a minute',
	        mm : '%d minutes',
	        h  : 'an hour',
	        hh : '%d hours',
	        d  : 'a day',
	        dd : '%d days',
	        M  : 'a month',
	        MM : '%d months',
	        y  : 'a year',
	        yy : '%d years'
	    };
	
	    function relativeTime (number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return (isFunction(output)) ?
	            output(number, withoutSuffix, string, isFuture) :
	            output.replace(/%d/i, number);
	    }
	
	    function pastFuture (diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	    }
	
	    var aliases = {};
	
	    function addUnitAlias (unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }
	
	    function normalizeUnits(units) {
	        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	    }
	
	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;
	
	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }
	
	        return normalizedInput;
	    }
	
	    var priorities = {};
	
	    function addUnitPriority(unit, priority) {
	        priorities[unit] = priority;
	    }
	
	    function getPrioritizedUnits(unitsObj) {
	        var units = [];
	        for (var u in unitsObj) {
	            units.push({unit: u, priority: priorities[u]});
	        }
	        units.sort(function (a, b) {
	            return a.priority - b.priority;
	        });
	        return units;
	    }
	
	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	    }
	
	    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
	
	    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
	
	    var formatFunctions = {};
	
	    var formatTokenFunctions = {};
	
	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken (token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(func.apply(this, arguments), token);
	            };
	        }
	    }
	
	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }
	
	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;
	
	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }
	
	        return function (mom) {
	            var output = '', i;
	            for (i = 0; i < length; i++) {
	                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }
	
	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }
	
	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
	
	        return formatFunctions[format](m);
	    }
	
	    function expandFormat(format, locale) {
	        var i = 5;
	
	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }
	
	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }
	
	        return format;
	    }
	
	    var match1         = /\d/;            //       0 - 9
	    var match2         = /\d\d/;          //      00 - 99
	    var match3         = /\d{3}/;         //     000 - 999
	    var match4         = /\d{4}/;         //    0000 - 9999
	    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	    var match1to2      = /\d\d?/;         //       0 - 99
	    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
	    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
	    var match1to3      = /\d{1,3}/;       //       0 - 999
	    var match1to4      = /\d{1,4}/;       //       0 - 9999
	    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999
	
	    var matchUnsigned  = /\d+/;           //       0 - inf
	    var matchSigned    = /[+-]?\d+/;      //    -inf - inf
	
	    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
	    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z
	
	    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123
	
	    // any word (or two) characters or numbers including two/three word month in arabic.
	    // includes scottish gaelic two word and hyphenated months
	    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
	
	    var regexes = {};
	
	    function addRegexToken (token, regex, strictRegex) {
	        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
	            return (isStrict && strictRegex) ? strictRegex : regex;
	        };
	    }
	
	    function getParseRegexForToken (token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }
	
	        return regexes[token](config._strict, config._locale);
	    }
	
	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        }));
	    }
	
	    function regexEscape(s) {
	        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }
	
	    var tokens = {};
	
	    function addParseToken (token, callback) {
	        var i, func = callback;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (isNumber(callback)) {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        for (i = 0; i < token.length; i++) {
	            tokens[token[i]] = func;
	        }
	    }
	
	    function addWeekParseToken (token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }
	
	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }
	
	    var YEAR = 0;
	    var MONTH = 1;
	    var DATE = 2;
	    var HOUR = 3;
	    var MINUTE = 4;
	    var SECOND = 5;
	    var MILLISECOND = 6;
	    var WEEK = 7;
	    var WEEKDAY = 8;
	
	    // FORMATTING
	
	    addFormatToken('Y', 0, 0, function () {
	        var y = this.year();
	        return y <= 9999 ? '' + y : '+' + y;
	    });
	
	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });
	
	    addFormatToken(0, ['YYYY',   4],       0, 'year');
	    addFormatToken(0, ['YYYYY',  5],       0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');
	
	    // ALIASES
	
	    addUnitAlias('year', 'y');
	
	    // PRIORITIES
	
	    addUnitPriority('year', 1);
	
	    // PARSING
	
	    addRegexToken('Y',      matchSigned);
	    addRegexToken('YY',     match1to2, match2);
	    addRegexToken('YYYY',   match1to4, match4);
	    addRegexToken('YYYYY',  match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);
	
	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = hooks.parseTwoDigitYear(input);
	    });
	    addParseToken('Y', function (input, array) {
	        array[YEAR] = parseInt(input, 10);
	    });
	
	    // HELPERS
	
	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }
	
	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }
	
	    // HOOKS
	
	    hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };
	
	    // MOMENTS
	
	    var getSetYear = makeGetSet('FullYear', true);
	
	    function getIsLeapYear () {
	        return isLeapYear(this.year());
	    }
	
	    function makeGetSet (unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                set$1(this, unit, value);
	                hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get(this, unit);
	            }
	        };
	    }
	
	    function get (mom, unit) {
	        return mom.isValid() ?
	            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
	    }
	
	    function set$1 (mom, unit, value) {
	        if (mom.isValid() && !isNaN(value)) {
	            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
	            }
	            else {
	                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	            }
	        }
	    }
	
	    // MOMENTS
	
	    function stringGet (units) {
	        units = normalizeUnits(units);
	        if (isFunction(this[units])) {
	            return this[units]();
	        }
	        return this;
	    }
	
	
	    function stringSet (units, value) {
	        if (typeof units === 'object') {
	            units = normalizeObjectUnits(units);
	            var prioritized = getPrioritizedUnits(units);
	            for (var i = 0; i < prioritized.length; i++) {
	                this[prioritized[i].unit](units[prioritized[i].unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (isFunction(this[units])) {
	                return this[units](value);
	            }
	        }
	        return this;
	    }
	
	    function mod(n, x) {
	        return ((n % x) + x) % x;
	    }
	
	    var indexOf;
	
	    if (Array.prototype.indexOf) {
	        indexOf = Array.prototype.indexOf;
	    } else {
	        indexOf = function (o) {
	            // I know
	            var i;
	            for (i = 0; i < this.length; ++i) {
	                if (this[i] === o) {
	                    return i;
	                }
	            }
	            return -1;
	        };
	    }
	
	    function daysInMonth(year, month) {
	        if (isNaN(year) || isNaN(month)) {
	            return NaN;
	        }
	        var modMonth = mod(month, 12);
	        year += (month - modMonth) / 12;
	        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
	    }
	
	    // FORMATTING
	
	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });
	
	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });
	
	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });
	
	    // ALIASES
	
	    addUnitAlias('month', 'M');
	
	    // PRIORITY
	
	    addUnitPriority('month', 8);
	
	    // PARSING
	
	    addRegexToken('M',    match1to2);
	    addRegexToken('MM',   match1to2, match2);
	    addRegexToken('MMM',  function (isStrict, locale) {
	        return locale.monthsShortRegex(isStrict);
	    });
	    addRegexToken('MMMM', function (isStrict, locale) {
	        return locale.monthsRegex(isStrict);
	    });
	
	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });
	
	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });
	
	    // LOCALES
	
	    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
	    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	    function localeMonths (m, format) {
	        if (!m) {
	            return isArray(this._months) ? this._months :
	                this._months['standalone'];
	        }
	        return isArray(this._months) ? this._months[m.month()] :
	            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
	    }
	
	    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	    function localeMonthsShort (m, format) {
	        if (!m) {
	            return isArray(this._monthsShort) ? this._monthsShort :
	                this._monthsShort['standalone'];
	        }
	        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
	            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	    }
	
	    function handleStrictParse(monthName, format, strict) {
	        var i, ii, mom, llc = monthName.toLocaleLowerCase();
	        if (!this._monthsParse) {
	            // this is not used
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	            for (i = 0; i < 12; ++i) {
	                mom = createUTC([2000, i]);
	                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
	                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	            }
	        }
	
	        if (strict) {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'MMM') {
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._longMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._longMonthsParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortMonthsParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }
	
	    function localeMonthsParse (monthName, format, strict) {
	        var i, mom, regex;
	
	        if (this._monthsParseExact) {
	            return handleStrictParse.call(this, monthName, format, strict);
	        }
	
	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }
	
	        // TODO: add sorting
	        // Sorting makes sure if one month (or abbr) is a prefix of another
	        // see sorting in computeMonthsParse
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }
	
	    // MOMENTS
	
	    function setMonth (mom, value) {
	        var dayOfMonth;
	
	        if (!mom.isValid()) {
	            // No op
	            return mom;
	        }
	
	        if (typeof value === 'string') {
	            if (/^\d+$/.test(value)) {
	                value = toInt(value);
	            } else {
	                value = mom.localeData().monthsParse(value);
	                // TODO: Another silent failure?
	                if (!isNumber(value)) {
	                    return mom;
	                }
	            }
	        }
	
	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }
	
	    function getSetMonth (value) {
	        if (value != null) {
	            setMonth(this, value);
	            hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get(this, 'Month');
	        }
	    }
	
	    function getDaysInMonth () {
	        return daysInMonth(this.year(), this.month());
	    }
	
	    var defaultMonthsShortRegex = matchWord;
	    function monthsShortRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsShortStrictRegex;
	            } else {
	                return this._monthsShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsShortRegex')) {
	                this._monthsShortRegex = defaultMonthsShortRegex;
	            }
	            return this._monthsShortStrictRegex && isStrict ?
	                this._monthsShortStrictRegex : this._monthsShortRegex;
	        }
	    }
	
	    var defaultMonthsRegex = matchWord;
	    function monthsRegex (isStrict) {
	        if (this._monthsParseExact) {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                computeMonthsParse.call(this);
	            }
	            if (isStrict) {
	                return this._monthsStrictRegex;
	            } else {
	                return this._monthsRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_monthsRegex')) {
	                this._monthsRegex = defaultMonthsRegex;
	            }
	            return this._monthsStrictRegex && isStrict ?
	                this._monthsStrictRegex : this._monthsRegex;
	        }
	    }
	
	    function computeMonthsParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }
	
	        var shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom;
	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, i]);
	            shortPieces.push(this.monthsShort(mom, ''));
	            longPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.months(mom, ''));
	            mixedPieces.push(this.monthsShort(mom, ''));
	        }
	        // Sorting makes sure if one month (or abbr) is a prefix of another it
	        // will match the longer piece.
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 12; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	        }
	        for (i = 0; i < 24; i++) {
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }
	
	        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._monthsShortRegex = this._monthsRegex;
	        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	    }
	
	    function createDate (y, m, d, h, M, s, ms) {
	        // can't just apply() to create a date:
	        // https://stackoverflow.com/q/181348
	        var date = new Date(y, m, d, h, M, s, ms);
	
	        // the date constructor remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
	            date.setFullYear(y);
	        }
	        return date;
	    }
	
	    function createUTCDate (y) {
	        var date = new Date(Date.UTC.apply(null, arguments));
	
	        // the Date.UTC function remaps years 0-99 to 1900-1999
	        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }
	
	    // start-of-first-week - start-of-year
	    function firstWeekOffset(year, dow, doy) {
	        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	            fwd = 7 + dow - doy,
	            // first-week day local weekday -- which local weekday is fwd
	            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
	
	        return -fwdlw + fwd - 1;
	    }
	
	    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	        var localWeekday = (7 + weekday - dow) % 7,
	            weekOffset = firstWeekOffset(year, dow, doy),
	            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	            resYear, resDayOfYear;
	
	        if (dayOfYear <= 0) {
	            resYear = year - 1;
	            resDayOfYear = daysInYear(resYear) + dayOfYear;
	        } else if (dayOfYear > daysInYear(year)) {
	            resYear = year + 1;
	            resDayOfYear = dayOfYear - daysInYear(year);
	        } else {
	            resYear = year;
	            resDayOfYear = dayOfYear;
	        }
	
	        return {
	            year: resYear,
	            dayOfYear: resDayOfYear
	        };
	    }
	
	    function weekOfYear(mom, dow, doy) {
	        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	            resWeek, resYear;
	
	        if (week < 1) {
	            resYear = mom.year() - 1;
	            resWeek = week + weeksInYear(resYear, dow, doy);
	        } else if (week > weeksInYear(mom.year(), dow, doy)) {
	            resWeek = week - weeksInYear(mom.year(), dow, doy);
	            resYear = mom.year() + 1;
	        } else {
	            resYear = mom.year();
	            resWeek = week;
	        }
	
	        return {
	            week: resWeek,
	            year: resYear
	        };
	    }
	
	    function weeksInYear(year, dow, doy) {
	        var weekOffset = firstWeekOffset(year, dow, doy),
	            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	    }
	
	    // FORMATTING
	
	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');
	
	    // ALIASES
	
	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');
	
	    // PRIORITIES
	
	    addUnitPriority('week', 5);
	    addUnitPriority('isoWeek', 5);
	
	    // PARSING
	
	    addRegexToken('w',  match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W',  match1to2);
	    addRegexToken('WW', match1to2, match2);
	
	    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	        week[token.substr(0, 1)] = toInt(input);
	    });
	
	    // HELPERS
	
	    // LOCALES
	
	    function localeWeek (mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }
	
	    var defaultLocaleWeek = {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    };
	
	    function localeFirstDayOfWeek () {
	        return this._week.dow;
	    }
	
	    function localeFirstDayOfYear () {
	        return this._week.doy;
	    }
	
	    // MOMENTS
	
	    function getSetWeek (input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }
	
	    function getSetISOWeek (input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }
	
	    // FORMATTING
	
	    addFormatToken('d', 0, 'do', 'day');
	
	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });
	
	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });
	
	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });
	
	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');
	
	    // ALIASES
	
	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');
	
	    // PRIORITY
	    addUnitPriority('day', 11);
	    addUnitPriority('weekday', 11);
	    addUnitPriority('isoWeekday', 11);
	
	    // PARSING
	
	    addRegexToken('d',    match1to2);
	    addRegexToken('e',    match1to2);
	    addRegexToken('E',    match1to2);
	    addRegexToken('dd',   function (isStrict, locale) {
	        return locale.weekdaysMinRegex(isStrict);
	    });
	    addRegexToken('ddd',   function (isStrict, locale) {
	        return locale.weekdaysShortRegex(isStrict);
	    });
	    addRegexToken('dddd',   function (isStrict, locale) {
	        return locale.weekdaysRegex(isStrict);
	    });
	
	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	        var weekday = config._locale.weekdaysParse(input, token, config._strict);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });
	
	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });
	
	    // HELPERS
	
	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }
	
	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }
	
	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }
	
	        return null;
	    }
	
	    function parseIsoWeekday(input, locale) {
	        if (typeof input === 'string') {
	            return locale.weekdaysParse(input) % 7 || 7;
	        }
	        return isNaN(input) ? null : input;
	    }
	
	    // LOCALES
	
	    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	    function localeWeekdays (m, format) {
	        if (!m) {
	            return isArray(this._weekdays) ? this._weekdays :
	                this._weekdays['standalone'];
	        }
	        return isArray(this._weekdays) ? this._weekdays[m.day()] :
	            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
	    }
	
	    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	    function localeWeekdaysShort (m) {
	        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
	    }
	
	    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	    function localeWeekdaysMin (m) {
	        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
	    }
	
	    function handleStrictParse$1(weekdayName, format, strict) {
	        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._minWeekdaysParse = [];
	
	            for (i = 0; i < 7; ++i) {
	                mom = createUTC([2000, 1]).day(i);
	                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
	                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
	                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	            }
	        }
	
	        if (strict) {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        } else {
	            if (format === 'dddd') {
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else if (format === 'ddd') {
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            } else {
	                ii = indexOf.call(this._minWeekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._weekdaysParse, llc);
	                if (ii !== -1) {
	                    return ii;
	                }
	                ii = indexOf.call(this._shortWeekdaysParse, llc);
	                return ii !== -1 ? ii : null;
	            }
	        }
	    }
	
	    function localeWeekdaysParse (weekdayName, format, strict) {
	        var i, mom, regex;
	
	        if (this._weekdaysParseExact) {
	            return handleStrictParse$1.call(this, weekdayName, format, strict);
	        }
	
	        if (!this._weekdaysParse) {
	            this._weekdaysParse = [];
	            this._minWeekdaysParse = [];
	            this._shortWeekdaysParse = [];
	            this._fullWeekdaysParse = [];
	        }
	
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	
	            mom = createUTC([2000, 1]).day(i);
	            if (strict && !this._fullWeekdaysParse[i]) {
	                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
	                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
	                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
	            }
	            if (!this._weekdaysParse[i]) {
	                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
	                return i;
	            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }
	
	    // MOMENTS
	
	    function getSetDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }
	
	    function getSetLocaleDayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }
	
	    function getSetISODayOfWeek (input) {
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	
	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.
	
	        if (input != null) {
	            var weekday = parseIsoWeekday(input, this.localeData());
	            return this.day(this.day() % 7 ? weekday : weekday - 7);
	        } else {
	            return this.day() || 7;
	        }
	    }
	
	    var defaultWeekdaysRegex = matchWord;
	    function weekdaysRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysStrictRegex;
	            } else {
	                return this._weekdaysRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                this._weekdaysRegex = defaultWeekdaysRegex;
	            }
	            return this._weekdaysStrictRegex && isStrict ?
	                this._weekdaysStrictRegex : this._weekdaysRegex;
	        }
	    }
	
	    var defaultWeekdaysShortRegex = matchWord;
	    function weekdaysShortRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysShortStrictRegex;
	            } else {
	                return this._weekdaysShortRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
	                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
	            }
	            return this._weekdaysShortStrictRegex && isStrict ?
	                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
	        }
	    }
	
	    var defaultWeekdaysMinRegex = matchWord;
	    function weekdaysMinRegex (isStrict) {
	        if (this._weekdaysParseExact) {
	            if (!hasOwnProp(this, '_weekdaysRegex')) {
	                computeWeekdaysParse.call(this);
	            }
	            if (isStrict) {
	                return this._weekdaysMinStrictRegex;
	            } else {
	                return this._weekdaysMinRegex;
	            }
	        } else {
	            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
	                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
	            }
	            return this._weekdaysMinStrictRegex && isStrict ?
	                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
	        }
	    }
	
	
	    function computeWeekdaysParse () {
	        function cmpLenRev(a, b) {
	            return b.length - a.length;
	        }
	
	        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
	            i, mom, minp, shortp, longp;
	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            mom = createUTC([2000, 1]).day(i);
	            minp = this.weekdaysMin(mom, '');
	            shortp = this.weekdaysShort(mom, '');
	            longp = this.weekdays(mom, '');
	            minPieces.push(minp);
	            shortPieces.push(shortp);
	            longPieces.push(longp);
	            mixedPieces.push(minp);
	            mixedPieces.push(shortp);
	            mixedPieces.push(longp);
	        }
	        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	        // will match the longer piece.
	        minPieces.sort(cmpLenRev);
	        shortPieces.sort(cmpLenRev);
	        longPieces.sort(cmpLenRev);
	        mixedPieces.sort(cmpLenRev);
	        for (i = 0; i < 7; i++) {
	            shortPieces[i] = regexEscape(shortPieces[i]);
	            longPieces[i] = regexEscape(longPieces[i]);
	            mixedPieces[i] = regexEscape(mixedPieces[i]);
	        }
	
	        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	        this._weekdaysShortRegex = this._weekdaysRegex;
	        this._weekdaysMinRegex = this._weekdaysRegex;
	
	        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
	    }
	
	    // FORMATTING
	
	    function hFormat() {
	        return this.hours() % 12 || 12;
	    }
	
	    function kFormat() {
	        return this.hours() || 24;
	    }
	
	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, hFormat);
	    addFormatToken('k', ['kk', 2], 0, kFormat);
	
	    addFormatToken('hmm', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	    });
	
	    addFormatToken('hmmss', 0, 0, function () {
	        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });
	
	    addFormatToken('Hmm', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2);
	    });
	
	    addFormatToken('Hmmss', 0, 0, function () {
	        return '' + this.hours() + zeroFill(this.minutes(), 2) +
	            zeroFill(this.seconds(), 2);
	    });
	
	    function meridiem (token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	        });
	    }
	
	    meridiem('a', true);
	    meridiem('A', false);
	
	    // ALIASES
	
	    addUnitAlias('hour', 'h');
	
	    // PRIORITY
	    addUnitPriority('hour', 13);
	
	    // PARSING
	
	    function matchMeridiem (isStrict, locale) {
	        return locale._meridiemParse;
	    }
	
	    addRegexToken('a',  matchMeridiem);
	    addRegexToken('A',  matchMeridiem);
	    addRegexToken('H',  match1to2);
	    addRegexToken('h',  match1to2);
	    addRegexToken('k',  match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);
	    addRegexToken('kk', match1to2, match2);
	
	    addRegexToken('hmm', match3to4);
	    addRegexToken('hmmss', match5to6);
	    addRegexToken('Hmm', match3to4);
	    addRegexToken('Hmmss', match5to6);
	
	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['k', 'kk'], function (input, array, config) {
	        var kInput = toInt(input);
	        array[HOUR] = kInput === 24 ? 0 : kInput;
	    });
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	        getParsingFlags(config).bigHour = true;
	    });
	    addParseToken('Hmm', function (input, array, config) {
	        var pos = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos));
	        array[MINUTE] = toInt(input.substr(pos));
	    });
	    addParseToken('Hmmss', function (input, array, config) {
	        var pos1 = input.length - 4;
	        var pos2 = input.length - 2;
	        array[HOUR] = toInt(input.substr(0, pos1));
	        array[MINUTE] = toInt(input.substr(pos1, 2));
	        array[SECOND] = toInt(input.substr(pos2));
	    });
	
	    // LOCALES
	
	    function localeIsPM (input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return ((input + '').toLowerCase().charAt(0) === 'p');
	    }
	
	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	    function localeMeridiem (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }
	
	
	    // MOMENTS
	
	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour they want. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    var getSetHour = makeGetSet('Hours', true);
	
	    var baseConfig = {
	        calendar: defaultCalendar,
	        longDateFormat: defaultLongDateFormat,
	        invalidDate: defaultInvalidDate,
	        ordinal: defaultOrdinal,
	        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
	        relativeTime: defaultRelativeTime,
	
	        months: defaultLocaleMonths,
	        monthsShort: defaultLocaleMonthsShort,
	
	        week: defaultLocaleWeek,
	
	        weekdays: defaultLocaleWeekdays,
	        weekdaysMin: defaultLocaleWeekdaysMin,
	        weekdaysShort: defaultLocaleWeekdaysShort,
	
	        meridiemParse: defaultLocaleMeridiemParse
	    };
	
	    // internal storage for locale config files
	    var locales = {};
	    var localeFamilies = {};
	    var globalLocale;
	
	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }
	
	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0, j, next, locale, split;
	
	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return globalLocale;
	    }
	
	    function loadLocale(name) {
	        var oldLocale = null;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (!locales[name] && (typeof module !== 'undefined') &&
	                module && module.exports) {
	            try {
	                oldLocale = globalLocale._abbr;
	                var aliasedRequire = require;
	                __webpack_require__(557)("./" + name);
	                getSetGlobalLocale(oldLocale);
	            } catch (e) {}
	        }
	        return locales[name];
	    }
	
	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function getSetGlobalLocale (key, values) {
	        var data;
	        if (key) {
	            if (isUndefined(values)) {
	                data = getLocale(key);
	            }
	            else {
	                data = defineLocale(key, values);
	            }
	
	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            }
	            else {
	                if ((typeof console !==  'undefined') && console.warn) {
	                    //warn user if arguments are passed but the locale could not be set
	                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
	                }
	            }
	        }
	
	        return globalLocale._abbr;
	    }
	
	    function defineLocale (name, config) {
	        if (config !== null) {
	            var locale, parentConfig = baseConfig;
	            config.abbr = name;
	            if (locales[name] != null) {
	                deprecateSimple('defineLocaleOverride',
	                        'use moment.updateLocale(localeName, config) to change ' +
	                        'an existing locale. moment.defineLocale(localeName, ' +
	                        'config) should only be used for creating a new locale ' +
	                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
	                parentConfig = locales[name]._config;
	            } else if (config.parentLocale != null) {
	                if (locales[config.parentLocale] != null) {
	                    parentConfig = locales[config.parentLocale]._config;
	                } else {
	                    locale = loadLocale(config.parentLocale);
	                    if (locale != null) {
	                        parentConfig = locale._config;
	                    } else {
	                        if (!localeFamilies[config.parentLocale]) {
	                            localeFamilies[config.parentLocale] = [];
	                        }
	                        localeFamilies[config.parentLocale].push({
	                            name: name,
	                            config: config
	                        });
	                        return null;
	                    }
	                }
	            }
	            locales[name] = new Locale(mergeConfigs(parentConfig, config));
	
	            if (localeFamilies[name]) {
	                localeFamilies[name].forEach(function (x) {
	                    defineLocale(x.name, x.config);
	                });
	            }
	
	            // backwards compat for now: also set the locale
	            // make sure we set the locale AFTER all child locales have been
	            // created, so we won't end up with the child locale set.
	            getSetGlobalLocale(name);
	
	
	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }
	
	    function updateLocale(name, config) {
	        if (config != null) {
	            var locale, tmpLocale, parentConfig = baseConfig;
	            // MERGE
	            tmpLocale = loadLocale(name);
	            if (tmpLocale != null) {
	                parentConfig = tmpLocale._config;
	            }
	            config = mergeConfigs(parentConfig, config);
	            locale = new Locale(config);
	            locale.parentLocale = locales[name];
	            locales[name] = locale;
	
	            // backwards compat for now: also set the locale
	            getSetGlobalLocale(name);
	        } else {
	            // pass null for config to unupdate, useful for tests
	            if (locales[name] != null) {
	                if (locales[name].parentLocale != null) {
	                    locales[name] = locales[name].parentLocale;
	                } else if (locales[name] != null) {
	                    delete locales[name];
	                }
	            }
	        }
	        return locales[name];
	    }
	
	    // returns locale data
	    function getLocale (key) {
	        var locale;
	
	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }
	
	        if (!key) {
	            return globalLocale;
	        }
	
	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }
	
	        return chooseLocale(key);
	    }
	
	    function listLocales() {
	        return keys(locales);
	    }
	
	    function checkOverflow (m) {
	        var overflow;
	        var a = m._a;
	
	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;
	
	            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }
	            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	                overflow = WEEK;
	            }
	            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	                overflow = WEEKDAY;
	            }
	
	            getParsingFlags(m).overflow = overflow;
	        }
	
	        return m;
	    }
	
	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }
	
	    function currentDateArray(config) {
	        // hooks is actually the exported moment object
	        var nowValue = new Date(hooks.now());
	        if (config._useUTC) {
	            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
	        }
	        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	    }
	
	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray (config) {
	        var i, date, input = [], currentDate, expectedWeekday, yearToUse;
	
	        if (config._d) {
	            return;
	        }
	
	        currentDate = currentDateArray(config);
	
	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }
	
	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear != null) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
	
	            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }
	
	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }
	
	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }
	
	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }
	
	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 &&
	                config._a[MINUTE] === 0 &&
	                config._a[SECOND] === 0 &&
	                config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }
	
	        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
	
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }
	
	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	
	        // check for mismatching day of week
	        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
	            getParsingFlags(config).weekdayMismatch = true;
	        }
	    }
	
	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;
	
	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;
	
	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	            if (weekday < 1 || weekday > 7) {
	                weekdayOverflow = true;
	            }
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;
	
	            var curWeek = weekOfYear(createLocal(), dow, doy);
	
	            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
	
	            // Default to current week.
	            week = defaults(w.w, curWeek.week);
	
	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < 0 || weekday > 6) {
	                    weekdayOverflow = true;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from begining of week
	                weekday = w.e + dow;
	                if (w.e < 0 || w.e > 6) {
	                    weekdayOverflow = true;
	                }
	            } else {
	                // default to begining of week
	                weekday = dow;
	            }
	        }
	        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	            getParsingFlags(config)._overflowWeeks = true;
	        } else if (weekdayOverflow != null) {
	            getParsingFlags(config)._overflowWeekday = true;
	        } else {
	            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	            config._a[YEAR] = temp.year;
	            config._dayOfYear = temp.dayOfYear;
	        }
	    }
	
	    // iso 8601 regex
	    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
	    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
	
	    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
	
	    var isoDates = [
	        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	        ['YYYY-DDD', /\d{4}-\d{3}/],
	        ['YYYY-MM', /\d{4}-\d\d/, false],
	        ['YYYYYYMMDD', /[+-]\d{10}/],
	        ['YYYYMMDD', /\d{8}/],
	        // YYYYMM is NOT allowed by the standard
	        ['GGGG[W]WWE', /\d{4}W\d{3}/],
	        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	        ['YYYYDDD', /\d{7}/]
	    ];
	
	    // iso time formats and regexes
	    var isoTimes = [
	        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	        ['HH:mm', /\d\d:\d\d/],
	        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	        ['HHmmss', /\d\d\d\d\d\d/],
	        ['HHmm', /\d\d\d\d/],
	        ['HH', /\d\d/]
	    ];
	
	    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;
	
	    // date from iso format
	    function configFromISO(config) {
	        var i, l,
	            string = config._i,
	            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	            allowTime, dateFormat, timeFormat, tzFormat;
	
	        if (match) {
	            getParsingFlags(config).iso = true;
	
	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(match[1])) {
	                    dateFormat = isoDates[i][0];
	                    allowTime = isoDates[i][2] !== false;
	                    break;
	                }
	            }
	            if (dateFormat == null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[3]) {
	                for (i = 0, l = isoTimes.length; i < l; i++) {
	                    if (isoTimes[i][1].exec(match[3])) {
	                        // match[2] should be 'T' or space
	                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                        break;
	                    }
	                }
	                if (timeFormat == null) {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            if (!allowTime && timeFormat != null) {
	                config._isValid = false;
	                return;
	            }
	            if (match[4]) {
	                if (tzRegex.exec(match[4])) {
	                    tzFormat = 'Z';
	                } else {
	                    config._isValid = false;
	                    return;
	                }
	            }
	            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }
	
	    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
	    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
	
	    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
	        var result = [
	            untruncateYear(yearStr),
	            defaultLocaleMonthsShort.indexOf(monthStr),
	            parseInt(dayStr, 10),
	            parseInt(hourStr, 10),
	            parseInt(minuteStr, 10)
	        ];
	
	        if (secondStr) {
	            result.push(parseInt(secondStr, 10));
	        }
	
	        return result;
	    }
	
	    function untruncateYear(yearStr) {
	        var year = parseInt(yearStr, 10);
	        if (year <= 49) {
	            return 2000 + year;
	        } else if (year <= 999) {
	            return 1900 + year;
	        }
	        return year;
	    }
	
	    function preprocessRFC2822(s) {
	        // Remove comments and folding whitespace and replace multiple-spaces with a single space
	        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
	    }
	
	    function checkWeekday(weekdayStr, parsedInput, config) {
	        if (weekdayStr) {
	            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
	            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
	                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
	            if (weekdayProvided !== weekdayActual) {
	                getParsingFlags(config).weekdayMismatch = true;
	                config._isValid = false;
	                return false;
	            }
	        }
	        return true;
	    }
	
	    var obsOffsets = {
	        UT: 0,
	        GMT: 0,
	        EDT: -4 * 60,
	        EST: -5 * 60,
	        CDT: -5 * 60,
	        CST: -6 * 60,
	        MDT: -6 * 60,
	        MST: -7 * 60,
	        PDT: -7 * 60,
	        PST: -8 * 60
	    };
	
	    function calculateOffset(obsOffset, militaryOffset, numOffset) {
	        if (obsOffset) {
	            return obsOffsets[obsOffset];
	        } else if (militaryOffset) {
	            // the only allowed military tz is Z
	            return 0;
	        } else {
	            var hm = parseInt(numOffset, 10);
	            var m = hm % 100, h = (hm - m) / 100;
	            return h * 60 + m;
	        }
	    }
	
	    // date and time from ref 2822 format
	    function configFromRFC2822(config) {
	        var match = rfc2822.exec(preprocessRFC2822(config._i));
	        if (match) {
	            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
	            if (!checkWeekday(match[1], parsedArray, config)) {
	                return;
	            }
	
	            config._a = parsedArray;
	            config._tzm = calculateOffset(match[8], match[9], match[10]);
	
	            config._d = createUTCDate.apply(null, config._a);
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	
	            getParsingFlags(config).rfc2822 = true;
	        } else {
	            config._isValid = false;
	        }
	    }
	
	    // date from iso format or fallback
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);
	
	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }
	
	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }
	
	        configFromRFC2822(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	        } else {
	            return;
	        }
	
	        // Final attempt, use Input Fallback
	        hooks.createFromInputFallback(config);
	    }
	
	    hooks.createFromInputFallback = deprecate(
	        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
	        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
	        'discouraged and will be removed in an upcoming major release. Please refer to ' +
	        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );
	
	    // constant that refers to the ISO standard
	    hooks.ISO_8601 = function () {};
	
	    // constant that refers to the RFC 2822 form
	    hooks.RFC_2822 = function () {};
	
	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }
	        if (config._f === hooks.RFC_2822) {
	            configFromRFC2822(config);
	            return;
	        }
	        config._a = [];
	        getParsingFlags(config).empty = true;
	
	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;
	
	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
	
	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            // console.log('token', token, 'parsedInput', parsedInput,
	            //         'regex', getParseRegexForToken(token, config));
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                }
	                else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }
	
	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }
	
	        // clear _12h flag if hour is <= 12
	        if (config._a[HOUR] <= 12 &&
	            getParsingFlags(config).bigHour === true &&
	            config._a[HOUR] > 0) {
	            getParsingFlags(config).bigHour = undefined;
	        }
	
	        getParsingFlags(config).parsedDateParts = config._a.slice(0);
	        getParsingFlags(config).meridiem = config._meridiem;
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
	
	        configFromArray(config);
	        checkOverflow(config);
	    }
	
	
	    function meridiemFixWrap (locale, hour, meridiem) {
	        var isPm;
	
	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }
	
	    // date from string and array of format strings
	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,
	
	            scoreToBeat,
	            i,
	            currentScore;
	
	        if (config._f.length === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }
	
	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);
	
	            if (!isValid(tempConfig)) {
	                continue;
	            }
	
	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;
	
	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
	
	            getParsingFlags(tempConfig).score = currentScore;
	
	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }
	
	        extend(config, bestMoment || tempConfig);
	    }
	
	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }
	
	        var i = normalizeObjectUnits(config._i);
	        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
	            return obj && parseInt(obj, 10);
	        });
	
	        configFromArray(config);
	    }
	
	    function createFromConfig (config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }
	
	        return res;
	    }
	
	    function prepareConfig (config) {
	        var input = config._i,
	            format = config._f;
	
	        config._locale = config._locale || getLocale(config._l);
	
	        if (input === null || (format === undefined && input === '')) {
	            return createInvalid({nullInput: true});
	        }
	
	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }
	
	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isDate(input)) {
	            config._d = input;
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        }  else {
	            configFromInput(config);
	        }
	
	        if (!isValid(config)) {
	            config._d = null;
	        }
	
	        return config;
	    }
	
	    function configFromInput(config) {
	        var input = config._i;
	        if (isUndefined(input)) {
	            config._d = new Date(hooks.now());
	        } else if (isDate(input)) {
	            config._d = new Date(input.valueOf());
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (isObject(input)) {
	            configFromObject(config);
	        } else if (isNumber(input)) {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            hooks.createFromInputFallback(config);
	        }
	    }
	
	    function createLocalOrUTC (input, format, locale, strict, isUTC) {
	        var c = {};
	
	        if (locale === true || locale === false) {
	            strict = locale;
	            locale = undefined;
	        }
	
	        if ((isObject(input) && isObjectEmpty(input)) ||
	                (isArray(input) && input.length === 0)) {
	            input = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;
	
	        return createFromConfig(c);
	    }
	
	    function createLocal (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }
	
	    var prototypeMin = deprecate(
	        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
	        function () {
	            var other = createLocal.apply(null, arguments);
	            if (this.isValid() && other.isValid()) {
	                return other < this ? this : other;
	            } else {
	                return createInvalid();
	            }
	        }
	    );
	
	    var prototypeMax = deprecate(
	        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
	        function () {
	            var other = createLocal.apply(null, arguments);
	            if (this.isValid() && other.isValid()) {
	                return other > this ? this : other;
	            } else {
	                return createInvalid();
	            }
	        }
	    );
	
	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }
	
	    // TODO: Use [].sort instead?
	    function min () {
	        var args = [].slice.call(arguments, 0);
	
	        return pickBy('isBefore', args);
	    }
	
	    function max () {
	        var args = [].slice.call(arguments, 0);
	
	        return pickBy('isAfter', args);
	    }
	
	    var now = function () {
	        return Date.now ? Date.now() : +(new Date());
	    };
	
	    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];
	
	    function isDurationValid(m) {
	        for (var key in m) {
	            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
	                return false;
	            }
	        }
	
	        var unitHasDecimal = false;
	        for (var i = 0; i < ordering.length; ++i) {
	            if (m[ordering[i]]) {
	                if (unitHasDecimal) {
	                    return false; // only allow non-integers for smallest unit
	                }
	                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
	                    unitHasDecimal = true;
	                }
	            }
	        }
	
	        return true;
	    }
	
	    function isValid$1() {
	        return this._isValid;
	    }
	
	    function createInvalid$1() {
	        return createDuration(NaN);
	    }
	
	    function Duration (duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;
	
	        this._isValid = isDurationValid(normalizedInput);
	
	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible to translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;
	
	        this._data = {};
	
	        this._locale = getLocale();
	
	        this._bubble();
	    }
	
	    function isDuration (obj) {
	        return obj instanceof Duration;
	    }
	
	    function absRound (number) {
	        if (number < 0) {
	            return Math.round(-1 * number) * -1;
	        } else {
	            return Math.round(number);
	        }
	    }
	
	    // FORMATTING
	
	    function offset (token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset();
	            var sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	        });
	    }
	
	    offset('Z', ':');
	    offset('ZZ', '');
	
	    // PARSING
	
	    addRegexToken('Z',  matchShortOffset);
	    addRegexToken('ZZ', matchShortOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(matchShortOffset, input);
	    });
	
	    // HELPERS
	
	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;
	
	    function offsetFromString(matcher, string) {
	        var matches = (string || '').match(matcher);
	
	        if (matches === null) {
	            return null;
	        }
	
	        var chunk   = matches[matches.length - 1] || [];
	        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        var minutes = +(parts[1] * 60) + toInt(parts[2]);
	
	        return minutes === 0 ?
	          0 :
	          parts[0] === '+' ? minutes : -minutes;
	    }
	
	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(res._d.valueOf() + diff);
	            hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return createLocal(input).local();
	        }
	    }
	
	    function getDateOffset (m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	    }
	
	    // HOOKS
	
	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    hooks.updateOffset = function () {};
	
	    // MOMENTS
	
	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset (input, keepLocalTime, keepMinutes) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (!this.isValid()) {
	            return input != null ? this : NaN;
	        }
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(matchShortOffset, input);
	                if (input === null) {
	                    return this;
	                }
	            } else if (Math.abs(input) < 16 && !keepMinutes) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }
	
	    function getSetZone (input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }
	
	            this.utcOffset(input, keepLocalTime);
	
	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }
	
	    function setOffsetToUTC (keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }
	
	    function setOffsetToLocal (keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;
	
	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }
	
	    function setOffsetToParsedOffset () {
	        if (this._tzm != null) {
	            this.utcOffset(this._tzm, false, true);
	        } else if (typeof this._i === 'string') {
	            var tZone = offsetFromString(matchOffset, this._i);
	            if (tZone != null) {
	                this.utcOffset(tZone);
	            }
	            else {
	                this.utcOffset(0, true);
	            }
	        }
	        return this;
	    }
	
	    function hasAlignedHourOffset (input) {
	        if (!this.isValid()) {
	            return false;
	        }
	        input = input ? createLocal(input).utcOffset() : 0;
	
	        return (this.utcOffset() - input) % 60 === 0;
	    }
	
	    function isDaylightSavingTime () {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }
	
	    function isDaylightSavingTimeShifted () {
	        if (!isUndefined(this._isDSTShifted)) {
	            return this._isDSTShifted;
	        }
	
	        var c = {};
	
	        copyConfig(c, this);
	        c = prepareConfig(c);
	
	        if (c._a) {
	            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
	            this._isDSTShifted = this.isValid() &&
	                compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }
	
	        return this._isDSTShifted;
	    }
	
	    function isLocal () {
	        return this.isValid() ? !this._isUTC : false;
	    }
	
	    function isUtcOffset () {
	        return this.isValid() ? this._isUTC : false;
	    }
	
	    function isUtc () {
	        return this.isValid() ? this._isUTC && this._offset === 0 : false;
	    }
	
	    // ASP.NET json date format regex
	    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;
	
	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    // and further modified to allow for strings containing both week and day
	    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
	
	    function createDuration (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;
	
	        if (isDuration(input)) {
	            duration = {
	                ms : input._milliseconds,
	                d  : input._days,
	                M  : input._months
	            };
	        } else if (isNumber(input)) {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y  : 0,
	                d  : toInt(match[DATE])                         * sign,
	                h  : toInt(match[HOUR])                         * sign,
	                m  : toInt(match[MINUTE])                       * sign,
	                s  : toInt(match[SECOND])                       * sign,
	                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
	            };
	        } else if (!!(match = isoRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
	            duration = {
	                y : parseIso(match[2], sign),
	                M : parseIso(match[3], sign),
	                w : parseIso(match[4], sign),
	                d : parseIso(match[5], sign),
	                h : parseIso(match[6], sign),
	                m : parseIso(match[7], sign),
	                s : parseIso(match[8], sign)
	            };
	        } else if (duration == null) {// checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
	
	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }
	
	        ret = new Duration(duration);
	
	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }
	
	        return ret;
	    }
	
	    createDuration.fn = Duration.prototype;
	    createDuration.invalid = createInvalid$1;
	
	    function parseIso (inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }
	
	    function positiveMomentsDifference(base, other) {
	        var res = {milliseconds: 0, months: 0};
	
	        res.months = other.month() - base.month() +
	            (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }
	
	        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));
	
	        return res;
	    }
	
	    function momentsDifference(base, other) {
	        var res;
	        if (!(base.isValid() && other.isValid())) {
	            return {milliseconds: 0, months: 0};
	        }
	
	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }
	
	        return res;
	    }
	
	    // TODO: remove 'name' arg after deprecation is removed
	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
	                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
	                tmp = val; val = period; period = tmp;
	            }
	
	            val = typeof val === 'string' ? +val : val;
	            dur = createDuration(val, period);
	            addSubtract(this, dur, direction);
	            return this;
	        };
	    }
	
	    function addSubtract (mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = absRound(duration._days),
	            months = absRound(duration._months);
	
	        if (!mom.isValid()) {
	            // No op
	            return;
	        }
	
	        updateOffset = updateOffset == null ? true : updateOffset;
	
	        if (months) {
	            setMonth(mom, get(mom, 'Month') + months * isAdding);
	        }
	        if (days) {
	            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
	        }
	        if (milliseconds) {
	            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	        }
	        if (updateOffset) {
	            hooks.updateOffset(mom, days || months);
	        }
	    }
	
	    var add      = createAdder(1, 'add');
	    var subtract = createAdder(-1, 'subtract');
	
	    function getCalendarFormat(myMoment, now) {
	        var diff = myMoment.diff(now, 'days', true);
	        return diff < -6 ? 'sameElse' :
	                diff < -1 ? 'lastWeek' :
	                diff < 0 ? 'lastDay' :
	                diff < 1 ? 'sameDay' :
	                diff < 2 ? 'nextDay' :
	                diff < 7 ? 'nextWeek' : 'sameElse';
	    }
	
	    function calendar$1 (time, formats) {
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            format = hooks.calendarFormat(this, sod) || 'sameElse';
	
	        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);
	
	        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
	    }
	
	    function clone () {
	        return new Moment(this);
	    }
	
	    function isAfter (input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() > localInput.valueOf();
	        } else {
	            return localInput.valueOf() < this.clone().startOf(units).valueOf();
	        }
	    }
	
	    function isBefore (input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input);
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() < localInput.valueOf();
	        } else {
	            return this.clone().endOf(units).valueOf() < localInput.valueOf();
	        }
	    }
	
	    function isBetween (from, to, units, inclusivity) {
	        inclusivity = inclusivity || '()';
	        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
	            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
	    }
	
	    function isSame (input, units) {
	        var localInput = isMoment(input) ? input : createLocal(input),
	            inputMs;
	        if (!(this.isValid() && localInput.isValid())) {
	            return false;
	        }
	        units = normalizeUnits(units || 'millisecond');
	        if (units === 'millisecond') {
	            return this.valueOf() === localInput.valueOf();
	        } else {
	            inputMs = localInput.valueOf();
	            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
	        }
	    }
	
	    function isSameOrAfter (input, units) {
	        return this.isSame(input, units) || this.isAfter(input,units);
	    }
	
	    function isSameOrBefore (input, units) {
	        return this.isSame(input, units) || this.isBefore(input,units);
	    }
	
	    function diff (input, units, asFloat) {
	        var that,
	            zoneDelta,
	            output;
	
	        if (!this.isValid()) {
	            return NaN;
	        }
	
	        that = cloneWithOffset(input, this);
	
	        if (!that.isValid()) {
	            return NaN;
	        }
	
	        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
	
	        units = normalizeUnits(units);
	
	        switch (units) {
	            case 'year': output = monthDiff(this, that) / 12; break;
	            case 'month': output = monthDiff(this, that); break;
	            case 'quarter': output = monthDiff(this, that) / 3; break;
	            case 'second': output = (this - that) / 1e3; break; // 1000
	            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
	            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
	            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
	            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
	            default: output = this - that;
	        }
	
	        return asFloat ? output : absFloor(output);
	    }
	
	    function monthDiff (a, b) {
	        // difference in months
	        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2, adjust;
	
	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }
	
	        //check for negative zero, return zero if negative zero
	        return -(wholeMonthDiff + adjust) || 0;
	    }
	
	    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';
	
	    function toString () {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }
	
	    function toISOString(keepOffset) {
	        if (!this.isValid()) {
	            return null;
	        }
	        var utc = keepOffset !== true;
	        var m = utc ? this.clone().utc() : this;
	        if (m.year() < 0 || m.year() > 9999) {
	            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
	        }
	        if (isFunction(Date.prototype.toISOString)) {
	            // native implementation is ~50x faster, use it when we can
	            if (utc) {
	                return this.toDate().toISOString();
	            } else {
	                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
	            }
	        }
	        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
	    }
	
	    /**
	     * Return a human readable representation of a moment that can
	     * also be evaluated to get a new moment which is the same
	     *
	     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
	     */
	    function inspect () {
	        if (!this.isValid()) {
	            return 'moment.invalid(/* ' + this._i + ' */)';
	        }
	        var func = 'moment';
	        var zone = '';
	        if (!this.isLocal()) {
	            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
	            zone = 'Z';
	        }
	        var prefix = '[' + func + '("]';
	        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
	        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
	        var suffix = zone + '[")]';
	
	        return this.format(prefix + year + datetime + suffix);
	    }
	
	    function format (inputString) {
	        if (!inputString) {
	            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
	        }
	        var output = formatMoment(this, inputString);
	        return this.localeData().postformat(output);
	    }
	
	    function from (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 createLocal(time).isValid())) {
	            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }
	
	    function fromNow (withoutSuffix) {
	        return this.from(createLocal(), withoutSuffix);
	    }
	
	    function to (time, withoutSuffix) {
	        if (this.isValid() &&
	                ((isMoment(time) && time.isValid()) ||
	                 createLocal(time).isValid())) {
	            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	        } else {
	            return this.localeData().invalidDate();
	        }
	    }
	
	    function toNow (withoutSuffix) {
	        return this.to(createLocal(), withoutSuffix);
	    }
	
	    // If passed a locale key, it will set the locale for this
	    // instance.  Otherwise, it will return the locale configuration
	    // variables for this instance.
	    function locale (key) {
	        var newLocaleData;
	
	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }
	
	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );
	
	    function localeData () {
	        return this._locale;
	    }
	
	    function startOf (units) {
	        units = normalizeUnits(units);
	        // the following switch intentionally omits break keywords
	        // to utilize falling through the cases.
	        switch (units) {
	            case 'year':
	                this.month(0);
	                /* falls through */
	            case 'quarter':
	            case 'month':
	                this.date(1);
	                /* falls through */
	            case 'week':
	            case 'isoWeek':
	            case 'day':
	            case 'date':
	                this.hours(0);
	                /* falls through */
	            case 'hour':
	                this.minutes(0);
	                /* falls through */
	            case 'minute':
	                this.seconds(0);
	                /* falls through */
	            case 'second':
	                this.milliseconds(0);
	        }
	
	        // weeks are a special case
	        if (units === 'week') {
	            this.weekday(0);
	        }
	        if (units === 'isoWeek') {
	            this.isoWeekday(1);
	        }
	
	        // quarters are also special
	        if (units === 'quarter') {
	            this.month(Math.floor(this.month() / 3) * 3);
	        }
	
	        return this;
	    }
	
	    function endOf (units) {
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond') {
	            return this;
	        }
	
	        // 'date' is an alias for 'day', so it should be considered as such.
	        if (units === 'date') {
	            units = 'day';
	        }
	
	        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	    }
	
	    function valueOf () {
	        return this._d.valueOf() - ((this._offset || 0) * 60000);
	    }
	
	    function unix () {
	        return Math.floor(this.valueOf() / 1000);
	    }
	
	    function toDate () {
	        return new Date(this.valueOf());
	    }
	
	    function toArray () {
	        var m = this;
	        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	    }
	
	    function toObject () {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds()
	        };
	    }
	
	    function toJSON () {
	        // new Date(NaN).toJSON() === null
	        return this.isValid() ? this.toISOString() : null;
	    }
	
	    function isValid$2 () {
	        return isValid(this);
	    }
	
	    function parsingFlags () {
	        return extend({}, getParsingFlags(this));
	    }
	
	    function invalidAt () {
	        return getParsingFlags(this).overflow;
	    }
	
	    function creationData() {
	        return {
	            input: this._i,
	            format: this._f,
	            locale: this._locale,
	            isUTC: this._isUTC,
	            strict: this._strict
	        };
	    }
	
	    // FORMATTING
	
	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });
	
	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });
	
	    function addWeekYearFormatToken (token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }
	
	    addWeekYearFormatToken('gggg',     'weekYear');
	    addWeekYearFormatToken('ggggg',    'weekYear');
	    addWeekYearFormatToken('GGGG',  'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');
	
	    // ALIASES
	
	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');
	
	    // PRIORITY
	
	    addUnitPriority('weekYear', 1);
	    addUnitPriority('isoWeekYear', 1);
	
	
	    // PARSING
	
	    addRegexToken('G',      matchSigned);
	    addRegexToken('g',      matchSigned);
	    addRegexToken('GG',     match1to2, match2);
	    addRegexToken('gg',     match1to2, match2);
	    addRegexToken('GGGG',   match1to4, match4);
	    addRegexToken('gggg',   match1to4, match4);
	    addRegexToken('GGGGG',  match1to6, match6);
	    addRegexToken('ggggg',  match1to6, match6);
	
	    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	        week[token.substr(0, 2)] = toInt(input);
	    });
	
	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = hooks.parseTwoDigitYear(input);
	    });
	
	    // MOMENTS
	
	    function getSetWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input,
	                this.week(),
	                this.weekday(),
	                this.localeData()._week.dow,
	                this.localeData()._week.doy);
	    }
	
	    function getSetISOWeekYear (input) {
	        return getSetWeekYearHelper.call(this,
	                input, this.isoWeek(), this.isoWeekday(), 1, 4);
	    }
	
	    function getISOWeeksInYear () {
	        return weeksInYear(this.year(), 1, 4);
	    }
	
	    function getWeeksInYear () {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }
	
	    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	        var weeksTarget;
	        if (input == null) {
	            return weekOfYear(this, dow, doy).year;
	        } else {
	            weeksTarget = weeksInYear(input, dow, doy);
	            if (week > weeksTarget) {
	                week = weeksTarget;
	            }
	            return setWeekAll.call(this, input, week, weekday, dow, doy);
	        }
	    }
	
	    function setWeekAll(weekYear, week, weekday, dow, doy) {
	        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
	
	        this.year(date.getUTCFullYear());
	        this.month(date.getUTCMonth());
	        this.date(date.getUTCDate());
	        return this;
	    }
	
	    // FORMATTING
	
	    addFormatToken('Q', 0, 'Qo', 'quarter');
	
	    // ALIASES
	
	    addUnitAlias('quarter', 'Q');
	
	    // PRIORITY
	
	    addUnitPriority('quarter', 7);
	
	    // PARSING
	
	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });
	
	    // MOMENTS
	
	    function getSetQuarter (input) {
	        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	    }
	
	    // FORMATTING
	
	    addFormatToken('D', ['DD', 2], 'Do', 'date');
	
	    // ALIASES
	
	    addUnitAlias('date', 'D');
	
	    // PRIORITY
	    addUnitPriority('date', 9);
	
	    // PARSING
	
	    addRegexToken('D',  match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        // TODO: Remove "ordinalParse" fallback in next major release.
	        return isStrict ?
	          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
	          locale._dayOfMonthOrdinalParseLenient;
	    });
	
	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0]);
	    });
	
	    // MOMENTS
	
	    var getSetDayOfMonth = makeGetSet('Date', true);
	
	    // FORMATTING
	
	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');
	
	    // ALIASES
	
	    addUnitAlias('dayOfYear', 'DDD');
	
	    // PRIORITY
	    addUnitPriority('dayOfYear', 4);
	
	    // PARSING
	
	    addRegexToken('DDD',  match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });
	
	    // HELPERS
	
	    // MOMENTS
	
	    function getSetDayOfYear (input) {
	        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	    }
	
	    // FORMATTING
	
	    addFormatToken('m', ['mm', 2], 0, 'minute');
	
	    // ALIASES
	
	    addUnitAlias('minute', 'm');
	
	    // PRIORITY
	
	    addUnitPriority('minute', 14);
	
	    // PARSING
	
	    addRegexToken('m',  match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);
	
	    // MOMENTS
	
	    var getSetMinute = makeGetSet('Minutes', false);
	
	    // FORMATTING
	
	    addFormatToken('s', ['ss', 2], 0, 'second');
	
	    // ALIASES
	
	    addUnitAlias('second', 's');
	
	    // PRIORITY
	
	    addUnitPriority('second', 15);
	
	    // PARSING
	
	    addRegexToken('s',  match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);
	
	    // MOMENTS
	
	    var getSetSecond = makeGetSet('Seconds', false);
	
	    // FORMATTING
	
	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });
	
	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });
	
	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });
	
	
	    // ALIASES
	
	    addUnitAlias('millisecond', 'ms');
	
	    // PRIORITY
	
	    addUnitPriority('millisecond', 16);
	
	    // PARSING
	
	    addRegexToken('S',    match1to3, match1);
	    addRegexToken('SS',   match1to3, match2);
	    addRegexToken('SSS',  match1to3, match3);
	
	    var token;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }
	
	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }
	
	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }
	    // MOMENTS
	
	    var getSetMillisecond = makeGetSet('Milliseconds', false);
	
	    // FORMATTING
	
	    addFormatToken('z',  0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');
	
	    // MOMENTS
	
	    function getZoneAbbr () {
	        return this._isUTC ? 'UTC' : '';
	    }
	
	    function getZoneName () {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }
	
	    var proto = Moment.prototype;
	
	    proto.add               = add;
	    proto.calendar          = calendar$1;
	    proto.clone             = clone;
	    proto.diff              = diff;
	    proto.endOf             = endOf;
	    proto.format            = format;
	    proto.from              = from;
	    proto.fromNow           = fromNow;
	    proto.to                = to;
	    proto.toNow             = toNow;
	    proto.get               = stringGet;
	    proto.invalidAt         = invalidAt;
	    proto.isAfter           = isAfter;
	    proto.isBefore          = isBefore;
	    proto.isBetween         = isBetween;
	    proto.isSame            = isSame;
	    proto.isSameOrAfter     = isSameOrAfter;
	    proto.isSameOrBefore    = isSameOrBefore;
	    proto.isValid           = isValid$2;
	    proto.lang              = lang;
	    proto.locale            = locale;
	    proto.localeData        = localeData;
	    proto.max               = prototypeMax;
	    proto.min               = prototypeMin;
	    proto.parsingFlags      = parsingFlags;
	    proto.set               = stringSet;
	    proto.startOf           = startOf;
	    proto.subtract          = subtract;
	    proto.toArray           = toArray;
	    proto.toObject          = toObject;
	    proto.toDate            = toDate;
	    proto.toISOString       = toISOString;
	    proto.inspect           = inspect;
	    proto.toJSON            = toJSON;
	    proto.toString          = toString;
	    proto.unix              = unix;
	    proto.valueOf           = valueOf;
	    proto.creationData      = creationData;
	    proto.year       = getSetYear;
	    proto.isLeapYear = getIsLeapYear;
	    proto.weekYear    = getSetWeekYear;
	    proto.isoWeekYear = getSetISOWeekYear;
	    proto.quarter = proto.quarters = getSetQuarter;
	    proto.month       = getSetMonth;
	    proto.daysInMonth = getDaysInMonth;
	    proto.week           = proto.weeks        = getSetWeek;
	    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
	    proto.weeksInYear    = getWeeksInYear;
	    proto.isoWeeksInYear = getISOWeeksInYear;
	    proto.date       = getSetDayOfMonth;
	    proto.day        = proto.days             = getSetDayOfWeek;
	    proto.weekday    = getSetLocaleDayOfWeek;
	    proto.isoWeekday = getSetISODayOfWeek;
	    proto.dayOfYear  = getSetDayOfYear;
	    proto.hour = proto.hours = getSetHour;
	    proto.minute = proto.minutes = getSetMinute;
	    proto.second = proto.seconds = getSetSecond;
	    proto.millisecond = proto.milliseconds = getSetMillisecond;
	    proto.utcOffset            = getSetOffset;
	    proto.utc                  = setOffsetToUTC;
	    proto.local                = setOffsetToLocal;
	    proto.parseZone            = setOffsetToParsedOffset;
	    proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    proto.isDST                = isDaylightSavingTime;
	    proto.isLocal              = isLocal;
	    proto.isUtcOffset          = isUtcOffset;
	    proto.isUtc                = isUtc;
	    proto.isUTC                = isUtc;
	    proto.zoneAbbr = getZoneAbbr;
	    proto.zoneName = getZoneName;
	    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
	    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);
	
	    function createUnix (input) {
	        return createLocal(input * 1000);
	    }
	
	    function createInZone () {
	        return createLocal.apply(null, arguments).parseZone();
	    }
	
	    function preParsePostFormat (string) {
	        return string;
	    }
	
	    var proto$1 = Locale.prototype;
	
	    proto$1.calendar        = calendar;
	    proto$1.longDateFormat  = longDateFormat;
	    proto$1.invalidDate     = invalidDate;
	    proto$1.ordinal         = ordinal;
	    proto$1.preparse        = preParsePostFormat;
	    proto$1.postformat      = preParsePostFormat;
	    proto$1.relativeTime    = relativeTime;
	    proto$1.pastFuture      = pastFuture;
	    proto$1.set             = set;
	
	    proto$1.months            =        localeMonths;
	    proto$1.monthsShort       =        localeMonthsShort;
	    proto$1.monthsParse       =        localeMonthsParse;
	    proto$1.monthsRegex       = monthsRegex;
	    proto$1.monthsShortRegex  = monthsShortRegex;
	    proto$1.week = localeWeek;
	    proto$1.firstDayOfYear = localeFirstDayOfYear;
	    proto$1.firstDayOfWeek = localeFirstDayOfWeek;
	
	    proto$1.weekdays       =        localeWeekdays;
	    proto$1.weekdaysMin    =        localeWeekdaysMin;
	    proto$1.weekdaysShort  =        localeWeekdaysShort;
	    proto$1.weekdaysParse  =        localeWeekdaysParse;
	
	    proto$1.weekdaysRegex       =        weekdaysRegex;
	    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
	    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;
	
	    proto$1.isPM = localeIsPM;
	    proto$1.meridiem = localeMeridiem;
	
	    function get$1 (format, index, field, setter) {
	        var locale = getLocale();
	        var utc = createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }
	
	    function listMonthsImpl (format, index, field) {
	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }
	
	        format = format || '';
	
	        if (index != null) {
	            return get$1(format, index, field, 'month');
	        }
	
	        var i;
	        var out = [];
	        for (i = 0; i < 12; i++) {
	            out[i] = get$1(format, i, field, 'month');
	        }
	        return out;
	    }
	
	    // ()
	    // (5)
	    // (fmt, 5)
	    // (fmt)
	    // (true)
	    // (true, 5)
	    // (true, fmt, 5)
	    // (true, fmt)
	    function listWeekdaysImpl (localeSorted, format, index, field) {
	        if (typeof localeSorted === 'boolean') {
	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }
	
	            format = format || '';
	        } else {
	            format = localeSorted;
	            index = format;
	            localeSorted = false;
	
	            if (isNumber(format)) {
	                index = format;
	                format = undefined;
	            }
	
	            format = format || '';
	        }
	
	        var locale = getLocale(),
	            shift = localeSorted ? locale._week.dow : 0;
	
	        if (index != null) {
	            return get$1(format, (index + shift) % 7, field, 'day');
	        }
	
	        var i;
	        var out = [];
	        for (i = 0; i < 7; i++) {
	            out[i] = get$1(format, (i + shift) % 7, field, 'day');
	        }
	        return out;
	    }
	
	    function listMonths (format, index) {
	        return listMonthsImpl(format, index, 'months');
	    }
	
	    function listMonthsShort (format, index) {
	        return listMonthsImpl(format, index, 'monthsShort');
	    }
	
	    function listWeekdays (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	    }
	
	    function listWeekdaysShort (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	    }
	
	    function listWeekdaysMin (localeSorted, format, index) {
	        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	    }
	
	    getSetGlobalLocale('en', {
	        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	
	    // Side effect imports
	
	    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
	    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);
	
	    var mathAbs = Math.abs;
	
	    function abs () {
	        var data           = this._data;
	
	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days         = mathAbs(this._days);
	        this._months       = mathAbs(this._months);
	
	        data.milliseconds  = mathAbs(data.milliseconds);
	        data.seconds       = mathAbs(data.seconds);
	        data.minutes       = mathAbs(data.minutes);
	        data.hours         = mathAbs(data.hours);
	        data.months        = mathAbs(data.months);
	        data.years         = mathAbs(data.years);
	
	        return this;
	    }
	
	    function addSubtract$1 (duration, input, value, direction) {
	        var other = createDuration(input, value);
	
	        duration._milliseconds += direction * other._milliseconds;
	        duration._days         += direction * other._days;
	        duration._months       += direction * other._months;
	
	        return duration._bubble();
	    }
	
	    // supports only 2.0-style add(1, 's') or add(duration)
	    function add$1 (input, value) {
	        return addSubtract$1(this, input, value, 1);
	    }
	
	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function subtract$1 (input, value) {
	        return addSubtract$1(this, input, value, -1);
	    }
	
	    function absCeil (number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }
	
	    function bubble () {
	        var milliseconds = this._milliseconds;
	        var days         = this._days;
	        var months       = this._months;
	        var data         = this._data;
	        var seconds, minutes, hours, years, monthsFromDays;
	
	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0))) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }
	
	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;
	
	        seconds           = absFloor(milliseconds / 1000);
	        data.seconds      = seconds % 60;
	
	        minutes           = absFloor(seconds / 60);
	        data.minutes      = minutes % 60;
	
	        hours             = absFloor(minutes / 60);
	        data.hours        = hours % 24;
	
	        days += absFloor(hours / 24);
	
	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));
	
	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;
	
	        data.days   = days;
	        data.months = months;
	        data.years  = years;
	
	        return this;
	    }
	
	    function daysToMonths (days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return days * 4800 / 146097;
	    }
	
	    function monthsToDays (months) {
	        // the reverse of daysToMonths
	        return months * 146097 / 4800;
	    }
	
	    function as (units) {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        var days;
	        var months;
	        var milliseconds = this._milliseconds;
	
	        units = normalizeUnits(units);
	
	        if (units === 'month' || units === 'year') {
	            days   = this._days   + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            return units === 'month' ? months : months / 12;
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week'   : return days / 7     + milliseconds / 6048e5;
	                case 'day'    : return days         + milliseconds / 864e5;
	                case 'hour'   : return days * 24    + milliseconds / 36e5;
	                case 'minute' : return days * 1440  + milliseconds / 6e4;
	                case 'second' : return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	                default: throw new Error('Unknown unit ' + units);
	            }
	        }
	    }
	
	    // TODO: Use this.as('ms')?
	    function valueOf$1 () {
	        if (!this.isValid()) {
	            return NaN;
	        }
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }
	
	    function makeAs (alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }
	
	    var asMilliseconds = makeAs('ms');
	    var asSeconds      = makeAs('s');
	    var asMinutes      = makeAs('m');
	    var asHours        = makeAs('h');
	    var asDays         = makeAs('d');
	    var asWeeks        = makeAs('w');
	    var asMonths       = makeAs('M');
	    var asYears        = makeAs('y');
	
	    function clone$1 () {
	        return createDuration(this);
	    }
	
	    function get$2 (units) {
	        units = normalizeUnits(units);
	        return this.isValid() ? this[units + 's']() : NaN;
	    }
	
	    function makeGetter(name) {
	        return function () {
	            return this.isValid() ? this._data[name] : NaN;
	        };
	    }
	
	    var milliseconds = makeGetter('milliseconds');
	    var seconds      = makeGetter('seconds');
	    var minutes      = makeGetter('minutes');
	    var hours        = makeGetter('hours');
	    var days         = makeGetter('days');
	    var months       = makeGetter('months');
	    var years        = makeGetter('years');
	
	    function weeks () {
	        return absFloor(this.days() / 7);
	    }
	
	    var round = Math.round;
	    var thresholds = {
	        ss: 44,         // a few seconds to seconds
	        s : 45,         // seconds to minute
	        m : 45,         // minutes to hour
	        h : 22,         // hours to day
	        d : 26,         // days to month
	        M : 11          // months to year
	    };
	
	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }
	
	    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
	        var duration = createDuration(posNegDuration).abs();
	        var seconds  = round(duration.as('s'));
	        var minutes  = round(duration.as('m'));
	        var hours    = round(duration.as('h'));
	        var days     = round(duration.as('d'));
	        var months   = round(duration.as('M'));
	        var years    = round(duration.as('y'));
	
	        var a = seconds <= thresholds.ss && ['s', seconds]  ||
	                seconds < thresholds.s   && ['ss', seconds] ||
	                minutes <= 1             && ['m']           ||
	                minutes < thresholds.m   && ['mm', minutes] ||
	                hours   <= 1             && ['h']           ||
	                hours   < thresholds.h   && ['hh', hours]   ||
	                days    <= 1             && ['d']           ||
	                days    < thresholds.d   && ['dd', days]    ||
	                months  <= 1             && ['M']           ||
	                months  < thresholds.M   && ['MM', months]  ||
	                years   <= 1             && ['y']           || ['yy', years];
	
	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }
	
	    // This function allows you to set the rounding function for relative time strings
	    function getSetRelativeTimeRounding (roundingFunction) {
	        if (roundingFunction === undefined) {
	            return round;
	        }
	        if (typeof(roundingFunction) === 'function') {
	            round = roundingFunction;
	            return true;
	        }
	        return false;
	    }
	
	    // This function allows you to set a threshold for relative time strings
	    function getSetRelativeTimeThreshold (threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        if (threshold === 's') {
	            thresholds.ss = limit - 1;
	        }
	        return true;
	    }
	
	    function humanize (withSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	
	        var locale = this.localeData();
	        var output = relativeTime$1(this, !withSuffix, locale);
	
	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }
	
	        return locale.postformat(output);
	    }
	
	    var abs$1 = Math.abs;
	
	    function sign(x) {
	        return ((x > 0) - (x < 0)) || +x;
	    }
	
	    function toISOString$1() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	
	        var seconds = abs$1(this._milliseconds) / 1000;
	        var days         = abs$1(this._days);
	        var months       = abs$1(this._months);
	        var minutes, hours, years;
	
	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes           = absFloor(seconds / 60);
	        hours             = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;
	
	        // 12 months -> 1 year
	        years  = absFloor(months / 12);
	        months %= 12;
	
	
	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        var Y = years;
	        var M = months;
	        var D = days;
	        var h = hours;
	        var m = minutes;
	        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
	        var total = this.asSeconds();
	
	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }
	
	        var totalSign = total < 0 ? '-' : '';
	        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
	        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
	        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';
	
	        return totalSign + 'P' +
	            (Y ? ymSign + Y + 'Y' : '') +
	            (M ? ymSign + M + 'M' : '') +
	            (D ? daysSign + D + 'D' : '') +
	            ((h || m || s) ? 'T' : '') +
	            (h ? hmsSign + h + 'H' : '') +
	            (m ? hmsSign + m + 'M' : '') +
	            (s ? hmsSign + s + 'S' : '');
	    }
	
	    var proto$2 = Duration.prototype;
	
	    proto$2.isValid        = isValid$1;
	    proto$2.abs            = abs;
	    proto$2.add            = add$1;
	    proto$2.subtract       = subtract$1;
	    proto$2.as             = as;
	    proto$2.asMilliseconds = asMilliseconds;
	    proto$2.asSeconds      = asSeconds;
	    proto$2.asMinutes      = asMinutes;
	    proto$2.asHours        = asHours;
	    proto$2.asDays         = asDays;
	    proto$2.asWeeks        = asWeeks;
	    proto$2.asMonths       = asMonths;
	    proto$2.asYears        = asYears;
	    proto$2.valueOf        = valueOf$1;
	    proto$2._bubble        = bubble;
	    proto$2.clone          = clone$1;
	    proto$2.get            = get$2;
	    proto$2.milliseconds   = milliseconds;
	    proto$2.seconds        = seconds;
	    proto$2.minutes        = minutes;
	    proto$2.hours          = hours;
	    proto$2.days           = days;
	    proto$2.weeks          = weeks;
	    proto$2.months         = months;
	    proto$2.years          = years;
	    proto$2.humanize       = humanize;
	    proto$2.toISOString    = toISOString$1;
	    proto$2.toString       = toISOString$1;
	    proto$2.toJSON         = toISOString$1;
	    proto$2.locale         = locale;
	    proto$2.localeData     = localeData;
	
	    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
	    proto$2.lang = lang;
	
	    // Side effect imports
	
	    // FORMATTING
	
	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');
	
	    // PARSING
	
	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input, 10) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });
	
	    // Side effect imports
	
	
	    hooks.version = '2.22.2';
	
	    setHookCallback(createLocal);
	
	    hooks.fn                    = proto;
	    hooks.min                   = min;
	    hooks.max                   = max;
	    hooks.now                   = now;
	    hooks.utc                   = createUTC;
	    hooks.unix                  = createUnix;
	    hooks.months                = listMonths;
	    hooks.isDate                = isDate;
	    hooks.locale                = getSetGlobalLocale;
	    hooks.invalid               = createInvalid;
	    hooks.duration              = createDuration;
	    hooks.isMoment              = isMoment;
	    hooks.weekdays              = listWeekdays;
	    hooks.parseZone             = createInZone;
	    hooks.localeData            = getLocale;
	    hooks.isDuration            = isDuration;
	    hooks.monthsShort           = listMonthsShort;
	    hooks.weekdaysMin           = listWeekdaysMin;
	    hooks.defineLocale          = defineLocale;
	    hooks.updateLocale          = updateLocale;
	    hooks.locales               = listLocales;
	    hooks.weekdaysShort         = listWeekdaysShort;
	    hooks.normalizeUnits        = normalizeUnits;
	    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
	    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
	    hooks.calendarFormat        = getCalendarFormat;
	    hooks.prototype             = proto;
	
	    // currently HTML5 input type only supports 24-hour formats
	    hooks.HTML5_FMT = {
	        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
	        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
	        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
	        DATE: 'YYYY-MM-DD',                             // <input type="date" />
	        TIME: 'HH:mm',                                  // <input type="time" />
	        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
	        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
	        WEEK: 'YYYY-[W]WW',                             // <input type="week" />
	        MONTH: 'YYYY-MM'                                // <input type="month" />
	    };
	
	    return hooks;
	
	})));
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(261)(module)))

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

	var map = {
		"./af": 558,
		"./af.js": 558,
		"./ar": 559,
		"./ar-dz": 560,
		"./ar-dz.js": 560,
		"./ar-kw": 561,
		"./ar-kw.js": 561,
		"./ar-ly": 562,
		"./ar-ly.js": 562,
		"./ar-ma": 563,
		"./ar-ma.js": 563,
		"./ar-sa": 564,
		"./ar-sa.js": 564,
		"./ar-tn": 565,
		"./ar-tn.js": 565,
		"./ar.js": 559,
		"./az": 566,
		"./az.js": 566,
		"./be": 567,
		"./be.js": 567,
		"./bg": 568,
		"./bg.js": 568,
		"./bm": 569,
		"./bm.js": 569,
		"./bn": 570,
		"./bn.js": 570,
		"./bo": 571,
		"./bo.js": 571,
		"./br": 572,
		"./br.js": 572,
		"./bs": 573,
		"./bs.js": 573,
		"./ca": 574,
		"./ca.js": 574,
		"./cs": 575,
		"./cs.js": 575,
		"./cv": 576,
		"./cv.js": 576,
		"./cy": 577,
		"./cy.js": 577,
		"./da": 578,
		"./da.js": 578,
		"./de": 579,
		"./de-at": 580,
		"./de-at.js": 580,
		"./de-ch": 581,
		"./de-ch.js": 581,
		"./de.js": 579,
		"./dv": 582,
		"./dv.js": 582,
		"./el": 583,
		"./el.js": 583,
		"./en-au": 584,
		"./en-au.js": 584,
		"./en-ca": 585,
		"./en-ca.js": 585,
		"./en-gb": 586,
		"./en-gb.js": 586,
		"./en-ie": 587,
		"./en-ie.js": 587,
		"./en-il": 588,
		"./en-il.js": 588,
		"./en-nz": 589,
		"./en-nz.js": 589,
		"./eo": 590,
		"./eo.js": 590,
		"./es": 591,
		"./es-do": 592,
		"./es-do.js": 592,
		"./es-us": 593,
		"./es-us.js": 593,
		"./es.js": 591,
		"./et": 594,
		"./et.js": 594,
		"./eu": 595,
		"./eu.js": 595,
		"./fa": 596,
		"./fa.js": 596,
		"./fi": 597,
		"./fi.js": 597,
		"./fo": 598,
		"./fo.js": 598,
		"./fr": 599,
		"./fr-ca": 600,
		"./fr-ca.js": 600,
		"./fr-ch": 601,
		"./fr-ch.js": 601,
		"./fr.js": 599,
		"./fy": 602,
		"./fy.js": 602,
		"./gd": 603,
		"./gd.js": 603,
		"./gl": 604,
		"./gl.js": 604,
		"./gom-latn": 605,
		"./gom-latn.js": 605,
		"./gu": 606,
		"./gu.js": 606,
		"./he": 607,
		"./he.js": 607,
		"./hi": 608,
		"./hi.js": 608,
		"./hr": 609,
		"./hr.js": 609,
		"./hu": 610,
		"./hu.js": 610,
		"./hy-am": 611,
		"./hy-am.js": 611,
		"./id": 612,
		"./id.js": 612,
		"./is": 613,
		"./is.js": 613,
		"./it": 614,
		"./it.js": 614,
		"./ja": 615,
		"./ja.js": 615,
		"./jv": 616,
		"./jv.js": 616,
		"./ka": 617,
		"./ka.js": 617,
		"./kk": 618,
		"./kk.js": 618,
		"./km": 619,
		"./km.js": 619,
		"./kn": 620,
		"./kn.js": 620,
		"./ko": 621,
		"./ko.js": 621,
		"./ky": 622,
		"./ky.js": 622,
		"./lb": 623,
		"./lb.js": 623,
		"./lo": 624,
		"./lo.js": 624,
		"./lt": 625,
		"./lt.js": 625,
		"./lv": 626,
		"./lv.js": 626,
		"./me": 627,
		"./me.js": 627,
		"./mi": 628,
		"./mi.js": 628,
		"./mk": 629,
		"./mk.js": 629,
		"./ml": 630,
		"./ml.js": 630,
		"./mn": 631,
		"./mn.js": 631,
		"./mr": 632,
		"./mr.js": 632,
		"./ms": 633,
		"./ms-my": 634,
		"./ms-my.js": 634,
		"./ms.js": 633,
		"./mt": 635,
		"./mt.js": 635,
		"./my": 636,
		"./my.js": 636,
		"./nb": 637,
		"./nb.js": 637,
		"./ne": 638,
		"./ne.js": 638,
		"./nl": 639,
		"./nl-be": 640,
		"./nl-be.js": 640,
		"./nl.js": 639,
		"./nn": 641,
		"./nn.js": 641,
		"./pa-in": 642,
		"./pa-in.js": 642,
		"./pl": 643,
		"./pl.js": 643,
		"./pt": 644,
		"./pt-br": 645,
		"./pt-br.js": 645,
		"./pt.js": 644,
		"./ro": 646,
		"./ro.js": 646,
		"./ru": 647,
		"./ru.js": 647,
		"./sd": 648,
		"./sd.js": 648,
		"./se": 649,
		"./se.js": 649,
		"./si": 650,
		"./si.js": 650,
		"./sk": 651,
		"./sk.js": 651,
		"./sl": 652,
		"./sl.js": 652,
		"./sq": 653,
		"./sq.js": 653,
		"./sr": 654,
		"./sr-cyrl": 655,
		"./sr-cyrl.js": 655,
		"./sr.js": 654,
		"./ss": 656,
		"./ss.js": 656,
		"./sv": 657,
		"./sv.js": 657,
		"./sw": 658,
		"./sw.js": 658,
		"./ta": 659,
		"./ta.js": 659,
		"./te": 660,
		"./te.js": 660,
		"./tet": 661,
		"./tet.js": 661,
		"./tg": 662,
		"./tg.js": 662,
		"./th": 663,
		"./th.js": 663,
		"./tl-ph": 664,
		"./tl-ph.js": 664,
		"./tlh": 665,
		"./tlh.js": 665,
		"./tr": 666,
		"./tr.js": 666,
		"./tzl": 667,
		"./tzl.js": 667,
		"./tzm": 668,
		"./tzm-latn": 669,
		"./tzm-latn.js": 669,
		"./tzm.js": 668,
		"./ug-cn": 670,
		"./ug-cn.js": 670,
		"./uk": 671,
		"./uk.js": 671,
		"./ur": 672,
		"./ur.js": 672,
		"./uz": 673,
		"./uz-latn": 674,
		"./uz-latn.js": 674,
		"./uz.js": 673,
		"./vi": 675,
		"./vi.js": 675,
		"./x-pseudo": 676,
		"./x-pseudo.js": 676,
		"./yo": 677,
		"./yo.js": 677,
		"./zh-cn": 678,
		"./zh-cn.js": 678,
		"./zh-hk": 679,
		"./zh-hk.js": 679,
		"./zh-tw": 680,
		"./zh-tw.js": 680
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 557;


/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var af = moment.defineLocale('af', {
	        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM : function (input) {
	            return /^nm$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Vandag om] LT',
	            nextDay : '[Môre om] LT',
	            nextWeek : 'dddd [om] LT',
	            lastDay : '[Gister om] LT',
	            lastWeek : '[Laas] dddd [om] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'oor %s',
	            past : '%s gelede',
	            s : '\'n paar sekondes',
	            ss : '%d sekondes',
	            m : '\'n minuut',
	            mm : '%d minute',
	            h : '\'n uur',
	            hh : '%d ure',
	            d : '\'n dag',
	            dd : '%d dae',
	            M : '\'n maand',
	            MM : '%d maande',
	            y : '\'n jaar',
	            yy : '%d jaar'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week : {
	            dow : 1, // Maandag is die eerste dag van die week.
	            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });
	
	    return af;
	
	})));


/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'يناير',
	        'فبراير',
	        'مارس',
	        'أبريل',
	        'مايو',
	        'يونيو',
	        'يوليو',
	        'أغسطس',
	        'سبتمبر',
	        'أكتوبر',
	        'نوفمبر',
	        'ديسمبر'
	    ];
	
	    var ar = moment.defineLocale('ar', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            ss : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ar;
	
	})));


/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var arDz = moment.defineLocale('ar-dz', {
	        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            ss : '%d ثانية',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 4  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return arDz;
	
	})));


/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var arKw = moment.defineLocale('ar-kw', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            ss : '%d ثانية',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return arKw;
	
	})));


/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '1',
	        '2': '2',
	        '3': '3',
	        '4': '4',
	        '5': '5',
	        '6': '6',
	        '7': '7',
	        '8': '8',
	        '9': '9',
	        '0': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'يناير',
	        'فبراير',
	        'مارس',
	        'أبريل',
	        'مايو',
	        'يونيو',
	        'يوليو',
	        'أغسطس',
	        'سبتمبر',
	        'أكتوبر',
	        'نوفمبر',
	        'ديسمبر'
	    ];
	
	    var arLy = moment.defineLocale('ar-ly', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            ss : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return arLy;
	
	})));


/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var arMa = moment.defineLocale('ar-ma', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            ss : '%d ثانية',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return arMa;
	
	})));


/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };
	
	    var arSa = moment.defineLocale('ar-sa', {
	        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            ss : '%d ثانية',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return arSa;
	
	})));


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var arTn = moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            ss : '%d ثانية',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return arTn;
	
	})));


/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',
	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',
	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',
	        6: '-ncı',
	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',
	        60: '-ıncı',
	        90: '-ıncı'
	    };
	
	    var az = moment.defineLocale('az', {
	        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[sabah saat] LT',
	            nextWeek : '[gələn həftə] dddd [saat] LT',
	            lastDay : '[dünən] LT',
	            lastWeek : '[keçən həftə] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s əvvəl',
	            s : 'birneçə saniyə',
	            ss : '%d saniyə',
	            m : 'bir dəqiqə',
	            mm : '%d dəqiqə',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir il',
	            yy : '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM : function (input) {
	            return /^(gündüz|axşam)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return az;
	
	})));


/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	
	    var be = moment.defineLocale('be', {
	        months : {
	            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
	            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
	        },
	        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays : {
	            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
	            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
	        },
	        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function () {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[У мінулую] dddd [ў] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'праз %s',
	            past : '%s таму',
	            s : 'некалькі секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithPlural,
	            hh : relativeTimeWithPlural,
	            d : 'дзень',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM : function (input) {
	            return /^(дня|вечара)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                case 'w':
	                case 'W':
	                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	                case 'D':
	                    return number + '-га';
	                default:
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return be;
	
	})));


/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var bg = moment.defineLocale('bg', {
	        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Днес в] LT',
	            nextDay : '[Утре в] LT',
	            nextWeek : 'dddd [в] LT',
	            lastDay : '[Вчера в] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 6:
	                        return '[В изминалата] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'след %s',
	            past : 'преди %s',
	            s : 'няколко секунди',
	            ss : '%d секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дни',
	            M : 'месец',
	            MM : '%d месеца',
	            y : 'година',
	            yy : '%d години'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return bg;
	
	})));


/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var bm = moment.defineLocale('bm', {
	        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
	        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
	        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
	        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
	        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'MMMM [tile] D [san] YYYY',
	            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
	            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
	        },
	        calendar : {
	            sameDay : '[Bi lɛrɛ] LT',
	            nextDay : '[Sini lɛrɛ] LT',
	            nextWeek : 'dddd [don lɛrɛ] LT',
	            lastDay : '[Kunu lɛrɛ] LT',
	            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s kɔnɔ',
	            past : 'a bɛ %s bɔ',
	            s : 'sanga dama dama',
	            ss : 'sekondi %d',
	            m : 'miniti kelen',
	            mm : 'miniti %d',
	            h : 'lɛrɛ kelen',
	            hh : 'lɛrɛ %d',
	            d : 'tile kelen',
	            dd : 'tile %d',
	            M : 'kalo kelen',
	            MM : 'kalo %d',
	            y : 'san kelen',
	            yy : 'san %d'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return bm;
	
	})));


/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	    numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };
	
	    var bn = moment.defineLocale('bn', {
	        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
	        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
	        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
	        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm সময়',
	            LTS : 'A h:mm:ss সময়',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm সময়',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	        },
	        calendar : {
	            sameDay : '[আজ] LT',
	            nextDay : '[আগামীকাল] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[গতকাল] LT',
	            lastWeek : '[গত] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s পরে',
	            past : '%s আগে',
	            s : 'কয়েক সেকেন্ড',
	            ss : '%d সেকেন্ড',
	            m : 'এক মিনিট',
	            mm : '%d মিনিট',
	            h : 'এক ঘন্টা',
	            hh : '%d ঘন্টা',
	            d : 'এক দিন',
	            dd : '%d দিন',
	            M : 'এক মাস',
	            MM : '%d মাস',
	            y : 'এক বছর',
	            yy : '%d বছর'
	        },
	        preparse: function (string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'রাত' && hour >= 4) ||
	                    (meridiem === 'দুপুর' && hour < 5) ||
	                    meridiem === 'বিকাল') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'সকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকাল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return bn;
	
	})));


/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	    numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };
	
	    var bo = moment.defineLocale('bo', {
	        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[དི་རིང] LT',
	            nextDay : '[སང་ཉིན] LT',
	            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay : '[ཁ་སང] LT',
	            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ལ་',
	            past : '%s སྔན་ལ',
	            s : 'ལམ་སང',
	            ss : '%d སྐར་ཆ།',
	            m : 'སྐར་མ་གཅིག',
	            mm : '%d སྐར་མ',
	            h : 'ཆུ་ཚོད་གཅིག',
	            hh : '%d ཆུ་ཚོད',
	            d : 'ཉིན་གཅིག',
	            dd : '%d ཉིན་',
	            M : 'ཟླ་བ་གཅིག',
	            MM : '%d ཟླ་བ',
	            y : 'ལོ་གཅིག',
	            yy : '%d ལོ'
	        },
	        preparse: function (string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
	                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
	                    meridiem === 'དགོང་དག') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return bo;
	
	})));


/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }
	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	            case 1:
	            case 3:
	            case 4:
	            case 5:
	            case 9:
	                return number + ' bloaz';
	            default:
	                return number + ' vloaz';
	        }
	    }
	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }
	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }
	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }
	
	    var br = moment.defineLocale('br', {
	        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h[e]mm A',
	            LTS : 'h[e]mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [a viz] MMMM YYYY',
	            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	        },
	        calendar : {
	            sameDay : '[Hiziv da] LT',
	            nextDay : '[Warc\'hoazh da] LT',
	            nextWeek : 'dddd [da] LT',
	            lastDay : '[Dec\'h da] LT',
	            lastWeek : 'dddd [paset da] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'a-benn %s',
	            past : '%s \'zo',
	            s : 'un nebeud segondennoù',
	            ss : '%d eilenn',
	            m : 'ur vunutenn',
	            mm : relativeTimeWithMutation,
	            h : 'un eur',
	            hh : '%d eur',
	            d : 'un devezh',
	            dd : relativeTimeWithMutation,
	            M : 'ur miz',
	            MM : relativeTimeWithMutation,
	            y : 'ur bloaz',
	            yy : specialMutationForYears
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
	        ordinal : function (number) {
	            var output = (number === 1) ? 'añ' : 'vet';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return br;
	
	})));


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'ss':
	                if (number === 1) {
	                    result += 'sekunda';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sekunde';
	                } else {
	                    result += 'sekundi';
	                }
	                return result;
	            case 'm':
	                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	            case 'mm':
	                if (number === 1) {
	                    result += 'minuta';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'minute';
	                } else {
	                    result += 'minuta';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'jedan sat' : 'jednog sata';
	            case 'hh':
	                if (number === 1) {
	                    result += 'sat';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sata';
	                } else {
	                    result += 'sati';
	                }
	                return result;
	            case 'dd':
	                if (number === 1) {
	                    result += 'dan';
	                } else {
	                    result += 'dana';
	                }
	                return result;
	            case 'MM':
	                if (number === 1) {
	                    result += 'mjesec';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'mjeseca';
	                } else {
	                    result += 'mjeseci';
	                }
	                return result;
	            case 'yy':
	                if (number === 1) {
	                    result += 'godina';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'godine';
	                } else {
	                    result += 'godina';
	                }
	                return result;
	        }
	    }
	
	    var bs = moment.defineLocale('bs', {
	        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                        return '[prošlu] dddd [u] LT';
	                    case 6:
	                        return '[prošle] [subote] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            ss     : translate,
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return bs;
	
	})));


/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ca = moment.defineLocale('ca', {
	        months : {
	            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	            format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
	            isFormat: /D[oD]?(\s)+MMMM/
	        },
	        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [de] YYYY',
	            ll : 'D MMM YYYY',
	            LLL : 'D MMMM [de] YYYY [a les] H:mm',
	            lll : 'D MMM YYYY, H:mm',
	            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
	            llll : 'ddd D MMM YYYY, H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextDay : function () {
	                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastDay : function () {
	                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'd\'aquí %s',
	            past : 'fa %s',
	            s : 'uns segons',
	            ss : '%d segons',
	            m : 'un minut',
	            mm : '%d minuts',
	            h : 'una hora',
	            hh : '%d hores',
	            d : 'un dia',
	            dd : '%d dies',
	            M : 'un mes',
	            MM : '%d mesos',
	            y : 'un any',
	            yy : '%d anys'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal : function (number, period) {
	            var output = (number === 1) ? 'r' :
	                (number === 2) ? 'n' :
	                (number === 3) ? 'r' :
	                (number === 4) ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ca;
	
	})));


/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':  // a few seconds / in a few seconds / a few seconds ago
	                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'sekundy' : 'sekund');
	                } else {
	                    return result + 'sekundami';
	                }
	                break;
	            case 'm':  // a minute / in a minute / a minute ago
	                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'minuty' : 'minut');
	                } else {
	                    return result + 'minutami';
	                }
	                break;
	            case 'h':  // an hour / in an hour / an hour ago
	                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	            case 'hh': // 9 hours / in 9 hours / 9 hours ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'hodiny' : 'hodin');
	                } else {
	                    return result + 'hodinami';
	                }
	                break;
	            case 'd':  // a day / in a day / a day ago
	                return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	            case 'dd': // 9 days / in 9 days / 9 days ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'dny' : 'dní');
	                } else {
	                    return result + 'dny';
	                }
	                break;
	            case 'M':  // a month / in a month / a month ago
	                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	            case 'MM': // 9 months / in 9 months / 9 months ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'měsíce' : 'měsíců');
	                } else {
	                    return result + 'měsíci';
	                }
	                break;
	            case 'y':  // a year / in a year / a year ago
	                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	            case 'yy': // 9 years / in 9 years / 9 years ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'roky' : 'let');
	                } else {
	                    return result + 'lety';
	                }
	                break;
	        }
	    }
	
	    var cs = moment.defineLocale('cs', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        shortMonthsParse : (function (monthsShort) {
	            var i, _shortMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
	            }
	            return _shortMonthsParse;
	        }(monthsShort)),
	        longMonthsParse : (function (months) {
	            var i, _longMonthsParse = [];
	            for (i = 0; i < 12; i++) {
	                _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
	            }
	            return _longMonthsParse;
	        }(months)),
	        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm',
	            l : 'D. M. YYYY'
	        },
	        calendar : {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[v neděli v] LT';
	                    case 1:
	                    case 2:
	                        return '[v] dddd [v] LT';
	                    case 3:
	                        return '[ve středu v] LT';
	                    case 4:
	                        return '[ve čtvrtek v] LT';
	                    case 5:
	                        return '[v pátek v] LT';
	                    case 6:
	                        return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[minulou neděli v] LT';
	                    case 1:
	                    case 2:
	                        return '[minulé] dddd [v] LT';
	                    case 3:
	                        return '[minulou středu v] LT';
	                    case 4:
	                    case 5:
	                        return '[minulý] dddd [v] LT';
	                    case 6:
	                        return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'před %s',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return cs;
	
	})));


/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var cv = moment.defineLocale('cv', {
	        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	        },
	        calendar : {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ӗнер] LT [сехетре]',
	            nextWeek: '[Ҫитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past : '%s каялла',
	            s : 'пӗр-ик ҫеккунт',
	            ss : '%d ҫеккунт',
	            m : 'пӗр минут',
	            mm : '%d минут',
	            h : 'пӗр сехет',
	            hh : '%d сехет',
	            d : 'пӗр кун',
	            dd : '%d кун',
	            M : 'пӗр уйӑх',
	            MM : '%d уйӑх',
	            y : 'пӗр ҫул',
	            yy : '%d ҫул'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
	        ordinal : '%d-мӗш',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return cv;
	
	})));


/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var cy = moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        weekdaysParseExact : true,
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            ss: '%d eiliad',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function (number) {
	            var b = number,
	                output = '',
	                lookup = [
	                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	                ];
	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return cy;
	
	})));


/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var da = moment.defineLocale('da', {
	        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay : '[i dag kl.] LT',
	            nextDay : '[i morgen kl.] LT',
	            nextWeek : 'på dddd [kl.] LT',
	            lastDay : '[i går kl.] LT',
	            lastWeek : '[i] dddd[s kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'få sekunder',
	            ss : '%d sekunder',
	            m : 'et minut',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dage',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'et år',
	            yy : '%d år'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return da;
	
	})));


/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var de = moment.defineLocale('de', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            ss : '%d Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return de;
	
	})));


/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var deAt = moment.defineLocale('de-at', {
	        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            ss : '%d Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return deAt;
	
	})));


/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var deCh = moment.defineLocale('de-ch', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            ss : '%d Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return deCh;
	
	})));


/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = [
	        'ޖެނުއަރީ',
	        'ފެބްރުއަރީ',
	        'މާރިޗު',
	        'އޭޕްރީލު',
	        'މޭ',
	        'ޖޫން',
	        'ޖުލައި',
	        'އޯގަސްޓު',
	        'ސެޕްޓެމްބަރު',
	        'އޮކްޓޯބަރު',
	        'ނޮވެމްބަރު',
	        'ޑިސެމްބަރު'
	    ], weekdays = [
	        'އާދިއްތަ',
	        'ހޯމަ',
	        'އަންގާރަ',
	        'ބުދަ',
	        'ބުރާސްފަތި',
	        'ހުކުރު',
	        'ހޮނިހިރު'
	    ];
	
	    var dv = moment.defineLocale('dv', {
	        months : months,
	        monthsShort : months,
	        weekdays : weekdays,
	        weekdaysShort : weekdays,
	        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
	        longDateFormat : {
	
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/M/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /މކ|މފ/,
	        isPM : function (input) {
	            return 'މފ' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'މކ';
	            } else {
	                return 'މފ';
	            }
	        },
	        calendar : {
	            sameDay : '[މިއަދު] LT',
	            nextDay : '[މާދަމާ] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[އިއްޔެ] LT',
	            lastWeek : '[ފާއިތުވި] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ތެރޭގައި %s',
	            past : 'ކުރިން %s',
	            s : 'ސިކުންތުކޮޅެއް',
	            ss : 'd% ސިކުންތު',
	            m : 'މިނިޓެއް',
	            mm : 'މިނިޓު %d',
	            h : 'ގަޑިއިރެއް',
	            hh : 'ގަޑިއިރު %d',
	            d : 'ދުވަހެއް',
	            dd : 'ދުވަސް %d',
	            M : 'މަހެއް',
	            MM : 'މަސް %d',
	            y : 'އަހަރެއް',
	            yy : 'އަހަރު %d'
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week : {
	            dow : 7,  // Sunday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return dv;
	
	})));


/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	    function isFunction(input) {
	        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	    }
	
	
	    var el = moment.defineLocale('el', {
	        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months : function (momentToFormat, format) {
	            if (!momentToFormat) {
	                return this._monthsNominativeEl;
	            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM : function (input) {
	            return ((input + '').toLowerCase()[0] === 'μ');
	        },
	        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendarEl : {
	            sameDay : '[Σήμερα {}] LT',
	            nextDay : '[Αύριο {}] LT',
	            nextWeek : 'dddd [{}] LT',
	            lastDay : '[Χθες {}] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();
	            if (isFunction(output)) {
	                output = output.apply(mom);
	            }
	            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	        },
	        relativeTime : {
	            future : 'σε %s',
	            past : '%s πριν',
	            s : 'λίγα δευτερόλεπτα',
	            ss : '%d δευτερόλεπτα',
	            m : 'ένα λεπτό',
	            mm : '%d λεπτά',
	            h : 'μία ώρα',
	            hh : '%d ώρες',
	            d : 'μία μέρα',
	            dd : '%d μέρες',
	            M : 'ένας μήνας',
	            MM : '%d μήνες',
	            y : 'ένας χρόνος',
	            yy : '%d χρόνια'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4st is the first week of the year.
	        }
	    });
	
	    return el;
	
	})));


/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enAu = moment.defineLocale('en-au', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return enAu;
	
	})));


/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enCa = moment.defineLocale('en-ca', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'YYYY-MM-DD',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY h:mm A',
	            LLLL : 'dddd, MMMM D, YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	
	    return enCa;
	
	})));


/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enGb = moment.defineLocale('en-gb', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return enGb;
	
	})));


/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enIe = moment.defineLocale('en-ie', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return enIe;
	
	})));


/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enIl = moment.defineLocale('en-il', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });
	
	    return enIl;
	
	})));


/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var enNz = moment.defineLocale('en-nz', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            ss : '%d seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return enNz;
	
	})));


/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var eo = moment.defineLocale('eo', {
	        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
	        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
	        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D[-a de] MMMM, YYYY',
	            LLL : 'D[-a de] MMMM, YYYY HH:mm',
	            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function (input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar : {
	            sameDay : '[Hodiaŭ je] LT',
	            nextDay : '[Morgaŭ je] LT',
	            nextWeek : 'dddd [je] LT',
	            lastDay : '[Hieraŭ je] LT',
	            lastWeek : '[pasinta] dddd [je] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'post %s',
	            past : 'antaŭ %s',
	            s : 'sekundoj',
	            ss : '%d sekundoj',
	            m : 'minuto',
	            mm : '%d minutoj',
	            h : 'horo',
	            hh : '%d horoj',
	            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	            dd : '%d tagoj',
	            M : 'monato',
	            MM : '%d monatoj',
	            y : 'jaro',
	            yy : '%d jaroj'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}a/,
	        ordinal : '%da',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return eo;
	
	})));


/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
	    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
	
	    var es = moment.defineLocale('es', {
	        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortDot;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsRegex : monthsRegex,
	        monthsShortRegex : monthsRegex,
	        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
	        monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            ss : '%d segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return es;
	
	})));


/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
	    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
	
	    var esDo = moment.defineLocale('es-do', {
	        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortDot;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsRegex: monthsRegex,
	        monthsShortRegex: monthsRegex,
	        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
	        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
	        monthsParse: monthsParse,
	        longMonthsParse: monthsParse,
	        shortMonthsParse: monthsParse,
	        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY h:mm A',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            ss : '%d segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return esDo;
	
	})));


/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
	        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');
	
	    var esUs = moment.defineLocale('es-us', {
	        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortDot;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'MM/DD/YYYY',
	            LL : 'MMMM [de] D [de] YYYY',
	            LLL : 'MMMM [de] D [de] YYYY h:mm A',
	            LLLL : 'dddd, MMMM [de] D [de] YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            ss : '%d segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return esUs;
	
	})));


/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'ss': [number + 'sekundi', number + 'sekundit'],
	            'm' : ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd' : ['ühe päeva', 'üks päev'],
	            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }
	
	    var et = moment.defineLocale('et', {
	        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat : {
	            LT   : 'H:mm',
	            LTS : 'H:mm:ss',
	            L    : 'DD.MM.YYYY',
	            LL   : 'D. MMMM YYYY',
	            LLL  : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[Täna,] LT',
	            nextDay  : '[Homme,] LT',
	            nextWeek : '[Järgmine] dddd LT',
	            lastDay  : '[Eile,] LT',
	            lastWeek : '[Eelmine] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s pärast',
	            past   : '%s tagasi',
	            s      : processRelativeTime,
	            ss     : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : '%d päeva',
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return et;
	
	})));


/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var eu = moment.defineLocale('eu', {
	        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY[ko] MMMM[ren] D[a]',
	            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	            l : 'YYYY-M-D',
	            ll : 'YYYY[ko] MMM D[a]',
	            lll : 'YYYY[ko] MMM D[a] HH:mm',
	            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	        },
	        calendar : {
	            sameDay : '[gaur] LT[etan]',
	            nextDay : '[bihar] LT[etan]',
	            nextWeek : 'dddd LT[etan]',
	            lastDay : '[atzo] LT[etan]',
	            lastWeek : '[aurreko] dddd LT[etan]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s barru',
	            past : 'duela %s',
	            s : 'segundo batzuk',
	            ss : '%d segundo',
	            m : 'minutu bat',
	            mm : '%d minutu',
	            h : 'ordu bat',
	            hh : '%d ordu',
	            d : 'egun bat',
	            dd : '%d egun',
	            M : 'hilabete bat',
	            MM : '%d hilabete',
	            y : 'urte bat',
	            yy : '%d urte'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return eu;
	
	})));


/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    }, numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };
	
	    var fa = moment.defineLocale('fa', {
	        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function (input) {
	            return /بعد از ظهر/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar : {
	            sameDay : '[امروز ساعت] LT',
	            nextDay : '[فردا ساعت] LT',
	            nextWeek : 'dddd [ساعت] LT',
	            lastDay : '[دیروز ساعت] LT',
	            lastWeek : 'dddd [پیش] [ساعت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'در %s',
	            past : '%s پیش',
	            s : 'چند ثانیه',
	            ss : 'ثانیه d%',
	            m : 'یک دقیقه',
	            mm : '%d دقیقه',
	            h : 'یک ساعت',
	            hh : '%d ساعت',
	            d : 'یک روز',
	            dd : '%d روز',
	            M : 'یک ماه',
	            MM : '%d ماه',
	            y : 'یک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}م/,
	        ordinal : '%dم',
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return fa;
	
	})));


/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = [
	            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	            numbersPast[7], numbersPast[8], numbersPast[9]
	        ];
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	            case 's':
	                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	            case 'ss':
	                return isFuture ? 'sekunnin' : 'sekuntia';
	            case 'm':
	                return isFuture ? 'minuutin' : 'minuutti';
	            case 'mm':
	                result = isFuture ? 'minuutin' : 'minuuttia';
	                break;
	            case 'h':
	                return isFuture ? 'tunnin' : 'tunti';
	            case 'hh':
	                result = isFuture ? 'tunnin' : 'tuntia';
	                break;
	            case 'd':
	                return isFuture ? 'päivän' : 'päivä';
	            case 'dd':
	                result = isFuture ? 'päivän' : 'päivää';
	                break;
	            case 'M':
	                return isFuture ? 'kuukauden' : 'kuukausi';
	            case 'MM':
	                result = isFuture ? 'kuukauden' : 'kuukautta';
	                break;
	            case 'y':
	                return isFuture ? 'vuoden' : 'vuosi';
	            case 'yy':
	                result = isFuture ? 'vuoden' : 'vuotta';
	                break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }
	    function verbalNumber(number, isFuture) {
	        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	    }
	
	    var fi = moment.defineLocale('fi', {
	        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'Do MMMM[ta] YYYY',
	            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	            l : 'D.M.YYYY',
	            ll : 'Do MMM YYYY',
	            lll : 'Do MMM YYYY, [klo] HH.mm',
	            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	        },
	        calendar : {
	            sameDay : '[tänään] [klo] LT',
	            nextDay : '[huomenna] [klo] LT',
	            nextWeek : 'dddd [klo] LT',
	            lastDay : '[eilen] [klo] LT',
	            lastWeek : '[viime] dddd[na] [klo] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s päästä',
	            past : '%s sitten',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fi;
	
	})));


/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var fo = moment.defineLocale('fo', {
	        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D. MMMM, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Í dag kl.] LT',
	            nextDay : '[Í morgin kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[Í gjár kl.] LT',
	            lastWeek : '[síðstu] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'um %s',
	            past : '%s síðani',
	            s : 'fá sekund',
	            ss : '%d sekundir',
	            m : 'ein minutt',
	            mm : '%d minuttir',
	            h : 'ein tími',
	            hh : '%d tímar',
	            d : 'ein dagur',
	            dd : '%d dagar',
	            M : 'ein mánaði',
	            MM : '%d mánaðir',
	            y : 'eitt ár',
	            yy : '%d ár'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fo;
	
	})));


/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var fr = moment.defineLocale('fr', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Aujourd’hui à] LT',
	            nextDay : '[Demain à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[Hier à] LT',
	            lastWeek : 'dddd [dernier à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            ss : '%d secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                // TODO: Return 'e' when day of month > 1. Move this case inside
	                // block for masculine words below.
	                // See https://github.com/moment/moment/issues/3375
	                case 'D':
	                    return number + (number === 1 ? 'er' : '');
	
	                // Words with masculine grammatical gender: mois, trimestre, jour
	                default:
	                case 'M':
	                case 'Q':
	                case 'DDD':
	                case 'd':
	                    return number + (number === 1 ? 'er' : 'e');
	
	                // Words with feminine grammatical gender: semaine
	                case 'w':
	                case 'W':
	                    return number + (number === 1 ? 're' : 'e');
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fr;
	
	})));


/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var frCa = moment.defineLocale('fr-ca', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Aujourd’hui à] LT',
	            nextDay : '[Demain à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[Hier à] LT',
	            lastWeek : 'dddd [dernier à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            ss : '%d secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                // Words with masculine grammatical gender: mois, trimestre, jour
	                default:
	                case 'M':
	                case 'Q':
	                case 'D':
	                case 'DDD':
	                case 'd':
	                    return number + (number === 1 ? 'er' : 'e');
	
	                // Words with feminine grammatical gender: semaine
	                case 'w':
	                case 'W':
	                    return number + (number === 1 ? 're' : 'e');
	            }
	        }
	    });
	
	    return frCa;
	
	})));


/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var frCh = moment.defineLocale('fr-ch', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Aujourd’hui à] LT',
	            nextDay : '[Demain à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[Hier à] LT',
	            lastWeek : 'dddd [dernier à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            ss : '%d secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                // Words with masculine grammatical gender: mois, trimestre, jour
	                default:
	                case 'M':
	                case 'Q':
	                case 'D':
	                case 'DDD':
	                case 'd':
	                    return number + (number === 1 ? 'er' : 'e');
	
	                // Words with feminine grammatical gender: semaine
	                case 'w':
	                case 'W':
	                    return number + (number === 1 ? 're' : 'e');
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return frCh;
	
	})));


/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');
	
	    var fy = moment.defineLocale('fy', {
	        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortWithDots;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        monthsParseExact : true,
	        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'oer %s',
	            past : '%s lyn',
	            s : 'in pear sekonden',
	            ss : '%d sekonden',
	            m : 'ien minút',
	            mm : '%d minuten',
	            h : 'ien oere',
	            hh : '%d oeren',
	            d : 'ien dei',
	            dd : '%d dagen',
	            M : 'ien moanne',
	            MM : '%d moannen',
	            y : 'ien jier',
	            yy : '%d jierren'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return fy;
	
	})));


/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = [
	        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
	    ];
	
	    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];
	
	    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];
	
	    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];
	
	    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];
	
	    var gd = moment.defineLocale('gd', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParseExact : true,
	        weekdays : weekdays,
	        weekdaysShort : weekdaysShort,
	        weekdaysMin : weekdaysMin,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[An-diugh aig] LT',
	            nextDay : '[A-màireach aig] LT',
	            nextWeek : 'dddd [aig] LT',
	            lastDay : '[An-dè aig] LT',
	            lastWeek : 'dddd [seo chaidh] [aig] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ann an %s',
	            past : 'bho chionn %s',
	            s : 'beagan diogan',
	            ss : '%d diogan',
	            m : 'mionaid',
	            mm : '%d mionaidean',
	            h : 'uair',
	            hh : '%d uairean',
	            d : 'latha',
	            dd : '%d latha',
	            M : 'mìos',
	            MM : '%d mìosan',
	            y : 'bliadhna',
	            yy : '%d bliadhna'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
	        ordinal : function (number) {
	            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return gd;
	
	})));


/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var gl = moment.defineLocale('gl', {
	        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
	        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
	        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
	        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            lastDay : function () {
	                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	            },
	            lastWeek : function () {
	                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (str) {
	                if (str.indexOf('un') === 0) {
	                    return 'n' + str;
	                }
	                return 'en ' + str;
	            },
	            past : 'hai %s',
	            s : 'uns segundos',
	            ss : '%d segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'unha hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un ano',
	            yy : '%d anos'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return gl;
	
	})));


/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['thodde secondanim', 'thodde second'],
	            'ss': [number + ' secondanim', number + ' second'],
	            'm': ['eka mintan', 'ek minute'],
	            'mm': [number + ' mintanim', number + ' mintam'],
	            'h': ['eka horan', 'ek hor'],
	            'hh': [number + ' horanim', number + ' horam'],
	            'd': ['eka disan', 'ek dis'],
	            'dd': [number + ' disanim', number + ' dis'],
	            'M': ['eka mhoinean', 'ek mhoino'],
	            'MM': [number + ' mhoineanim', number + ' mhoine'],
	            'y': ['eka vorsan', 'ek voros'],
	            'yy': [number + ' vorsanim', number + ' vorsam']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	
	    var gomLatn = moment.defineLocale('gom-latn', {
	        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
	        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
	        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
	        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'A h:mm [vazta]',
	            LTS : 'A h:mm:ss [vazta]',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY A h:mm [vazta]',
	            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
	            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
	        },
	        calendar : {
	            sameDay: '[Aiz] LT',
	            nextDay: '[Faleam] LT',
	            nextWeek: '[Ieta to] dddd[,] LT',
	            lastDay: '[Kal] LT',
	            lastWeek: '[Fatlo] dddd[,] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s',
	            past : '%s adim',
	            s : processRelativeTime,
	            ss : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}(er)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                // the ordinal 'er' only applies to day of the month
	                case 'D':
	                    return number + 'er';
	                default:
	                case 'M':
	                case 'Q':
	                case 'DDD':
	                case 'd':
	                case 'w':
	                case 'W':
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        },
	        meridiemParse: /rati|sokalli|donparam|sanje/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'rati') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'sokalli') {
	                return hour;
	            } else if (meridiem === 'donparam') {
	                return hour > 12 ? hour : hour + 12;
	            } else if (meridiem === 'sanje') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'rati';
	            } else if (hour < 12) {
	                return 'sokalli';
	            } else if (hour < 16) {
	                return 'donparam';
	            } else if (hour < 20) {
	                return 'sanje';
	            } else {
	                return 'rati';
	            }
	        }
	    });
	
	    return gomLatn;
	
	})));


/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	            '1': '૧',
	            '2': '૨',
	            '3': '૩',
	            '4': '૪',
	            '5': '૫',
	            '6': '૬',
	            '7': '૭',
	            '8': '૮',
	            '9': '૯',
	            '0': '૦'
	        },
	        numberMap = {
	            '૧': '1',
	            '૨': '2',
	            '૩': '3',
	            '૪': '4',
	            '૫': '5',
	            '૬': '6',
	            '૭': '7',
	            '૮': '8',
	            '૯': '9',
	            '૦': '0'
	        };
	
	    var gu = moment.defineLocale('gu', {
	        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
	        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
	        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
	        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
	        longDateFormat: {
	            LT: 'A h:mm વાગ્યે',
	            LTS: 'A h:mm:ss વાગ્યે',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
	            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
	        },
	        calendar: {
	            sameDay: '[આજ] LT',
	            nextDay: '[કાલે] LT',
	            nextWeek: 'dddd, LT',
	            lastDay: '[ગઇકાલે] LT',
	            lastWeek: '[પાછલા] dddd, LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s મા',
	            past: '%s પેહલા',
	            s: 'અમુક પળો',
	            ss: '%d સેકંડ',
	            m: 'એક મિનિટ',
	            mm: '%d મિનિટ',
	            h: 'એક કલાક',
	            hh: '%d કલાક',
	            d: 'એક દિવસ',
	            dd: '%d દિવસ',
	            M: 'એક મહિનો',
	            MM: '%d મહિનો',
	            y: 'એક વર્ષ',
	            yy: '%d વર્ષ'
	        },
	        preparse: function (string) {
	            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
	        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'રાત') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'સવાર') {
	                return hour;
	            } else if (meridiem === 'બપોર') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'સાંજ') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'રાત';
	            } else if (hour < 10) {
	                return 'સવાર';
	            } else if (hour < 17) {
	                return 'બપોર';
	            } else if (hour < 20) {
	                return 'સાંજ';
	            } else {
	                return 'રાત';
	            }
	        },
	        week: {
	            dow: 0, // Sunday is the first day of the week.
	            doy: 6 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return gu;
	
	})));


/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var he = moment.defineLocale('he', {
	        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [ב]MMMM YYYY',
	            LLL : 'D [ב]MMMM YYYY HH:mm',
	            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	            l : 'D/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[היום ב־]LT',
	            nextDay : '[מחר ב־]LT',
	            nextWeek : 'dddd [בשעה] LT',
	            lastDay : '[אתמול ב־]LT',
	            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'בעוד %s',
	            past : 'לפני %s',
	            s : 'מספר שניות',
	            ss : '%d שניות',
	            m : 'דקה',
	            mm : '%d דקות',
	            h : 'שעה',
	            hh : function (number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d : 'יום',
	            dd : function (number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M : 'חודש',
	            MM : function (number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y : 'שנה',
	            yy : function (number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        },
	        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
	        isPM : function (input) {
	            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 5) {
	                return 'לפנות בוקר';
	            } else if (hour < 10) {
	                return 'בבוקר';
	            } else if (hour < 12) {
	                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
	            } else if (hour < 18) {
	                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
	            } else {
	                return 'בערב';
	            }
	        }
	    });
	
	    return he;
	
	})));


/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };
	
	    var hi = moment.defineLocale('hi', {
	        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm बजे',
	            LTS : 'A h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[कल] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[कल] LT',
	            lastWeek : '[पिछले] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s में',
	            past : '%s पहले',
	            s : 'कुछ ही क्षण',
	            ss : '%d सेकंड',
	            m : 'एक मिनट',
	            mm : '%d मिनट',
	            h : 'एक घंटा',
	            hh : '%d घंटे',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महीने',
	            MM : '%d महीने',
	            y : 'एक वर्ष',
	            yy : '%d वर्ष'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return hi;
	
	})));


/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'ss':
	                if (number === 1) {
	                    result += 'sekunda';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sekunde';
	                } else {
	                    result += 'sekundi';
	                }
	                return result;
	            case 'm':
	                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	            case 'mm':
	                if (number === 1) {
	                    result += 'minuta';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'minute';
	                } else {
	                    result += 'minuta';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'jedan sat' : 'jednog sata';
	            case 'hh':
	                if (number === 1) {
	                    result += 'sat';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'sata';
	                } else {
	                    result += 'sati';
	                }
	                return result;
	            case 'dd':
	                if (number === 1) {
	                    result += 'dan';
	                } else {
	                    result += 'dana';
	                }
	                return result;
	            case 'MM':
	                if (number === 1) {
	                    result += 'mjesec';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'mjeseca';
	                } else {
	                    result += 'mjeseci';
	                }
	                return result;
	            case 'yy':
	                if (number === 1) {
	                    result += 'godina';
	                } else if (number === 2 || number === 3 || number === 4) {
	                    result += 'godine';
	                } else {
	                    result += 'godina';
	                }
	                return result;
	        }
	    }
	
	    var hr = moment.defineLocale('hr', {
	        months : {
	            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
	            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
	        },
	        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                        return '[prošlu] dddd [u] LT';
	                    case 6:
	                        return '[prošle] [subote] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            ss     : translate,
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return hr;
	
	})));


/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number;
	        switch (key) {
	            case 's':
	                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	            case 'ss':
	                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
	            case 'm':
	                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	            case 'mm':
	                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	            case 'h':
	                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	            case 'hh':
	                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	            case 'd':
	                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	            case 'dd':
	                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	            case 'M':
	                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	            case 'MM':
	                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	            case 'y':
	                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	            case 'yy':
	                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }
	        return '';
	    }
	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }
	
	    var hu = moment.defineLocale('hu', {
	        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY. MMMM D.',
	            LLL : 'YYYY. MMMM D. H:mm',
	            LLLL : 'YYYY. MMMM D., dddd H:mm'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function (input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar : {
	            sameDay : '[ma] LT[-kor]',
	            nextDay : '[holnap] LT[-kor]',
	            nextWeek : function () {
	                return week.call(this, true);
	            },
	            lastDay : '[tegnap] LT[-kor]',
	            lastWeek : function () {
	                return week.call(this, false);
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s múlva',
	            past : '%s',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return hu;
	
	})));


/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var hyAm = moment.defineLocale('hy-am', {
	        months : {
	            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
	            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
	        },
	        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
	        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
	        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY թ.',
	            LLL : 'D MMMM YYYY թ., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	        },
	        calendar : {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function () {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function () {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s հետո',
	            past : '%s առաջ',
	            s : 'մի քանի վայրկյան',
	            ss : '%d վայրկյան',
	            m : 'րոպե',
	            mm : '%d րոպե',
	            h : 'ժամ',
	            hh : '%d ժամ',
	            d : 'օր',
	            dd : '%d օր',
	            M : 'ամիս',
	            MM : '%d ամիս',
	            y : 'տարի',
	            yy : '%d տարի'
	        },
	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function (input) {
	            return /^(ցերեկվա|երեկոյան)$/.test(input);
	        },
	        meridiem : function (hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'DDD':
	                case 'w':
	                case 'W':
	                case 'DDDo':
	                    if (number === 1) {
	                        return number + '-ին';
	                    }
	                    return number + '-րդ';
	                default:
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return hyAm;
	
	})));


/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var id = moment.defineLocale('id', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Besok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kemarin pukul] LT',
	            lastWeek : 'dddd [lalu pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lalu',
	            s : 'beberapa detik',
	            ss : '%d detik',
	            m : 'semenit',
	            mm : '%d menit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return id;
	
	})));


/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	            case 'ss':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
	                }
	                return result + 'sekúnda';
	            case 'm':
	                return withoutSuffix ? 'mínúta' : 'mínútu';
	            case 'mm':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	                } else if (withoutSuffix) {
	                    return result + 'mínúta';
	                }
	                return result + 'mínútu';
	            case 'hh':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	                }
	                return result + 'klukkustund';
	            case 'd':
	                if (withoutSuffix) {
	                    return 'dagur';
	                }
	                return isFuture ? 'dag' : 'degi';
	            case 'dd':
	                if (plural(number)) {
	                    if (withoutSuffix) {
	                        return result + 'dagar';
	                    }
	                    return result + (isFuture ? 'daga' : 'dögum');
	                } else if (withoutSuffix) {
	                    return result + 'dagur';
	                }
	                return result + (isFuture ? 'dag' : 'degi');
	            case 'M':
	                if (withoutSuffix) {
	                    return 'mánuður';
	                }
	                return isFuture ? 'mánuð' : 'mánuði';
	            case 'MM':
	                if (plural(number)) {
	                    if (withoutSuffix) {
	                        return result + 'mánuðir';
	                    }
	                    return result + (isFuture ? 'mánuði' : 'mánuðum');
	                } else if (withoutSuffix) {
	                    return result + 'mánuður';
	                }
	                return result + (isFuture ? 'mánuð' : 'mánuði');
	            case 'y':
	                return withoutSuffix || isFuture ? 'ár' : 'ári';
	            case 'yy':
	                if (plural(number)) {
	                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	                }
	                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }
	
	    var is = moment.defineLocale('is', {
	        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	        },
	        calendar : {
	            sameDay : '[í dag kl.] LT',
	            nextDay : '[á morgun kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[í gær kl.] LT',
	            lastWeek : '[síðasta] dddd [kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'eftir %s',
	            past : 'fyrir %s síðan',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : 'klukkustund',
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return is;
	
	})));


/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var it = moment.defineLocale('it', {
	        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
	        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
	        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past : '%s fa',
	            s : 'alcuni secondi',
	            ss : '%d secondi',
	            m : 'un minuto',
	            mm : '%d minuti',
	            h : 'un\'ora',
	            hh : '%d ore',
	            d : 'un giorno',
	            dd : '%d giorni',
	            M : 'un mese',
	            MM : '%d mesi',
	            y : 'un anno',
	            yy : '%d anni'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return it;
	
	})));


/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ja = moment.defineLocale('ja', {
	        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日 HH:mm',
	            LLLL : 'YYYY年M月D日 dddd HH:mm',
	            l : 'YYYY/MM/DD',
	            ll : 'YYYY年M月D日',
	            lll : 'YYYY年M月D日 HH:mm',
	            llll : 'YYYY年M月D日(ddd) HH:mm'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM : function (input) {
	            return input === '午後';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar : {
	            sameDay : '[今日] LT',
	            nextDay : '[明日] LT',
	            nextWeek : function (now) {
	                if (now.week() < this.week()) {
	                    return '[来週]dddd LT';
	                } else {
	                    return 'dddd LT';
	                }
	            },
	            lastDay : '[昨日] LT',
	            lastWeek : function (now) {
	                if (this.week() < now.week()) {
	                    return '[先週]dddd LT';
	                } else {
	                    return 'dddd LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}日/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                default:
	                    return number;
	            }
	        },
	        relativeTime : {
	            future : '%s後',
	            past : '%s前',
	            s : '数秒',
	            ss : '%d秒',
	            m : '1分',
	            mm : '%d分',
	            h : '1時間',
	            hh : '%d時間',
	            d : '1日',
	            dd : '%d日',
	            M : '1ヶ月',
	            MM : '%dヶ月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });
	
	    return ja;
	
	})));


/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var jv = moment.defineLocale('jv', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /enjing|siyang|sonten|ndalu/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'enjing') {
	                return hour;
	            } else if (meridiem === 'siyang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'enjing';
	            } else if (hours < 15) {
	                return 'siyang';
	            } else if (hours < 19) {
	                return 'sonten';
	            } else {
	                return 'ndalu';
	            }
	        },
	        calendar : {
	            sameDay : '[Dinten puniko pukul] LT',
	            nextDay : '[Mbenjang pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kala wingi pukul] LT',
	            lastWeek : 'dddd [kepengker pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'wonten ing %s',
	            past : '%s ingkang kepengker',
	            s : 'sawetawis detik',
	            ss : '%d detik',
	            m : 'setunggal menit',
	            mm : '%d menit',
	            h : 'setunggal jam',
	            hh : '%d jam',
	            d : 'sedinten',
	            dd : '%d dinten',
	            M : 'sewulan',
	            MM : '%d wulan',
	            y : 'setaun',
	            yy : '%d taun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return jv;
	
	})));


/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ka = moment.defineLocale('ka', {
	        months : {
	            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays : {
	            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
	            isFormat: /(წინა|შემდეგ)/
	        },
	        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[დღეს] LT[-ზე]',
	            nextDay : '[ხვალ] LT[-ზე]',
	            lastDay : '[გუშინ] LT[-ზე]',
	            nextWeek : '[შემდეგ] dddd LT[-ზე]',
	            lastWeek : '[წინა] dddd LT-ზე',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                    s.replace(/ი$/, 'ში') :
	                    s + 'ში';
	            },
	            past : function (s) {
	                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if ((/წელი/).test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s : 'რამდენიმე წამი',
	            ss : '%d წამი',
	            m : 'წუთი',
	            mm : '%d წუთი',
	            h : 'საათი',
	            hh : '%d საათი',
	            d : 'დღე',
	            dd : '%d დღე',
	            M : 'თვე',
	            MM : '%d თვე',
	            y : 'წელი',
	            yy : '%d წელი'
	        },
	        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal : function (number) {
	            if (number === 0) {
	                return number;
	            }
	            if (number === 1) {
	                return number + '-ლი';
	            }
	            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	                return 'მე-' + number;
	            }
	            return number + '-ე';
	        },
	        week : {
	            dow : 1,
	            doy : 7
	        }
	    });
	
	    return ka;
	
	})));


/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var suffixes = {
	        0: '-ші',
	        1: '-ші',
	        2: '-ші',
	        3: '-ші',
	        4: '-ші',
	        5: '-ші',
	        6: '-шы',
	        7: '-ші',
	        8: '-ші',
	        9: '-шы',
	        10: '-шы',
	        20: '-шы',
	        30: '-шы',
	        40: '-шы',
	        50: '-ші',
	        60: '-шы',
	        70: '-ші',
	        80: '-ші',
	        90: '-шы',
	        100: '-ші'
	    };
	
	    var kk = moment.defineLocale('kk', {
	        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
	        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
	        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
	        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
	        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгін сағат] LT',
	            nextDay : '[Ертең сағат] LT',
	            nextWeek : 'dddd [сағат] LT',
	            lastDay : '[Кеше сағат] LT',
	            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ішінде',
	            past : '%s бұрын',
	            s : 'бірнеше секунд',
	            ss : '%d секунд',
	            m : 'бір минут',
	            mm : '%d минут',
	            h : 'бір сағат',
	            hh : '%d сағат',
	            d : 'бір күн',
	            dd : '%d күн',
	            M : 'бір ай',
	            MM : '%d ай',
	            y : 'бір жыл',
	            yy : '%d жыл'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return kk;
	
	})));


/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '១',
	        '2': '២',
	        '3': '៣',
	        '4': '៤',
	        '5': '៥',
	        '6': '៦',
	        '7': '៧',
	        '8': '៨',
	        '9': '៩',
	        '0': '០'
	    }, numberMap = {
	        '១': '1',
	        '២': '2',
	        '៣': '3',
	        '៤': '4',
	        '៥': '5',
	        '៦': '6',
	        '៧': '7',
	        '៨': '8',
	        '៩': '9',
	        '០': '0'
	    };
	
	    var km = moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
	            '_'
	        ),
	        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
	            '_'
	        ),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
	        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
	        weekdaysParseExact: true,
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ព្រឹក|ល្ងាច/,
	        isPM: function (input) {
	            return input === 'ល្ងាច';
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ព្រឹក';
	            } else {
	                return 'ល្ងាច';
	            }
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            ss: '%d វិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        dayOfMonthOrdinalParse : /ទី\d{1,2}/,
	        ordinal : 'ទី%d',
	        preparse: function (string) {
	            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return km;
	
	})));


/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '೧',
	        '2': '೨',
	        '3': '೩',
	        '4': '೪',
	        '5': '೫',
	        '6': '೬',
	        '7': '೭',
	        '8': '೮',
	        '9': '೯',
	        '0': '೦'
	    },
	    numberMap = {
	        '೧': '1',
	        '೨': '2',
	        '೩': '3',
	        '೪': '4',
	        '೫': '5',
	        '೬': '6',
	        '೭': '7',
	        '೮': '8',
	        '೯': '9',
	        '೦': '0'
	    };
	
	    var kn = moment.defineLocale('kn', {
	        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
	        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
	        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
	        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[ಇಂದು] LT',
	            nextDay : '[ನಾಳೆ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ನಿನ್ನೆ] LT',
	            lastWeek : '[ಕೊನೆಯ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ನಂತರ',
	            past : '%s ಹಿಂದೆ',
	            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
	            ss : '%d ಸೆಕೆಂಡುಗಳು',
	            m : 'ಒಂದು ನಿಮಿಷ',
	            mm : '%d ನಿಮಿಷ',
	            h : 'ಒಂದು ಗಂಟೆ',
	            hh : '%d ಗಂಟೆ',
	            d : 'ಒಂದು ದಿನ',
	            dd : '%d ದಿನ',
	            M : 'ಒಂದು ತಿಂಗಳು',
	            MM : '%d ತಿಂಗಳು',
	            y : 'ಒಂದು ವರ್ಷ',
	            yy : '%d ವರ್ಷ'
	        },
	        preparse: function (string) {
	            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ರಾತ್ರಿ') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
	                return hour;
	            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'ಸಂಜೆ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ರಾತ್ರಿ';
	            } else if (hour < 10) {
	                return 'ಬೆಳಿಗ್ಗೆ';
	            } else if (hour < 17) {
	                return 'ಮಧ್ಯಾಹ್ನ';
	            } else if (hour < 20) {
	                return 'ಸಂಜೆ';
	            } else {
	                return 'ರಾತ್ರಿ';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
	        ordinal : function (number) {
	            return number + 'ನೇ';
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return kn;
	
	})));


/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ko = moment.defineLocale('ko', {
	        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY년 MMMM D일',
	            LLL : 'YYYY년 MMMM D일 A h:mm',
	            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
	            l : 'YYYY.MM.DD.',
	            ll : 'YYYY년 MMMM D일',
	            lll : 'YYYY년 MMMM D일 A h:mm',
	            llll : 'YYYY년 MMMM D일 dddd A h:mm'
	        },
	        calendar : {
	            sameDay : '오늘 LT',
	            nextDay : '내일 LT',
	            nextWeek : 'dddd LT',
	            lastDay : '어제 LT',
	            lastWeek : '지난주 dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s 후',
	            past : '%s 전',
	            s : '몇 초',
	            ss : '%d초',
	            m : '1분',
	            mm : '%d분',
	            h : '한 시간',
	            hh : '%d시간',
	            d : '하루',
	            dd : '%d일',
	            M : '한 달',
	            MM : '%d달',
	            y : '일 년',
	            yy : '%d년'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '일';
	                case 'M':
	                    return number + '월';
	                case 'w':
	                case 'W':
	                    return number + '주';
	                default:
	                    return number;
	            }
	        },
	        meridiemParse : /오전|오후/,
	        isPM : function (token) {
	            return token === '오후';
	        },
	        meridiem : function (hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });
	
	    return ko;
	
	})));


/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var suffixes = {
	        0: '-чү',
	        1: '-чи',
	        2: '-чи',
	        3: '-чү',
	        4: '-чү',
	        5: '-чи',
	        6: '-чы',
	        7: '-чи',
	        8: '-чи',
	        9: '-чу',
	        10: '-чу',
	        20: '-чы',
	        30: '-чу',
	        40: '-чы',
	        50: '-чү',
	        60: '-чы',
	        70: '-чи',
	        80: '-чи',
	        90: '-чу',
	        100: '-чү'
	    };
	
	    var ky = moment.defineLocale('ky', {
	        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
	        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
	        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бүгүн саат] LT',
	            nextDay : '[Эртең саат] LT',
	            nextWeek : 'dddd [саат] LT',
	            lastDay : '[Кече саат] LT',
	            lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ичинде',
	            past : '%s мурун',
	            s : 'бирнече секунд',
	            ss : '%d секунд',
	            m : 'бир мүнөт',
	            mm : '%d мүнөт',
	            h : 'бир саат',
	            hh : '%d саат',
	            d : 'бир күн',
	            dd : '%d күн',
	            M : 'бир ай',
	            MM : '%d ай',
	            y : 'бир жыл',
	            yy : '%d жыл'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
	        ordinal : function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ky;
	
	})));


/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }
	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }
	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10, firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }
	
	    var lb = moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm [Auer]',
	            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function () {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime : {
	            future : processFutureTime,
	            past : processPastTime,
	            s : 'e puer Sekonnen',
	            ss : '%d Sekonnen',
	            m : processRelativeTime,
	            mm : '%d Minutten',
	            h : processRelativeTime,
	            hh : '%d Stonnen',
	            d : processRelativeTime,
	            dd : '%d Deeg',
	            M : processRelativeTime,
	            MM : '%d Méint',
	            y : processRelativeTime,
	            yy : '%d Joer'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return lb;
	
	})));


/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var lo = moment.defineLocale('lo', {
	        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
	        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
	        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
	        isPM: function (input) {
	            return input === 'ຕອນແລງ';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ຕອນເຊົ້າ';
	            } else {
	                return 'ຕອນແລງ';
	            }
	        },
	        calendar : {
	            sameDay : '[ມື້ນີ້ເວລາ] LT',
	            nextDay : '[ມື້ອື່ນເວລາ] LT',
	            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
	            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
	            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ອີກ %s',
	            past : '%sຜ່ານມາ',
	            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
	            ss : '%d ວິນາທີ' ,
	            m : '1 ນາທີ',
	            mm : '%d ນາທີ',
	            h : '1 ຊົ່ວໂມງ',
	            hh : '%d ຊົ່ວໂມງ',
	            d : '1 ມື້',
	            dd : '%d ມື້',
	            M : '1 ເດືອນ',
	            MM : '%d ເດືອນ',
	            y : '1 ປີ',
	            yy : '%d ປີ'
	        },
	        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
	        ordinal : function (number) {
	            return 'ທີ່' + number;
	        }
	    });
	
	    return lo;
	
	})));


/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var units = {
	        'ss' : 'sekundė_sekundžių_sekundes',
	        'm' : 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h' : 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd' : 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M' : 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y' : 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    };
	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }
	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	    }
	    function special(number) {
	        return number % 10 === 0 || (number > 10 && number < 20);
	    }
	    function forms(key) {
	        return units[key].split('_');
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }
	    var lt = moment.defineLocale('lt', {
	        months : {
	            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
	            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
	            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
	        },
	        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays : {
	            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
	            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
	            isFormat: /dddd HH:mm/
	        },
	        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY [m.] MMMM D [d.]',
	            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY [m.] MMMM D [d.]',
	            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	        },
	        calendar : {
	            sameDay : '[Šiandien] LT',
	            nextDay : '[Rytoj] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[Vakar] LT',
	            lastWeek : '[Praėjusį] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'po %s',
	            past : 'prieš %s',
	            s : translateSeconds,
	            ss : translate,
	            m : translateSingular,
	            mm : translate,
	            h : translateSingular,
	            hh : translate,
	            d : translateSingular,
	            dd : translate,
	            M : translateSingular,
	            MM : translate,
	            y : translateSingular,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
	        ordinal : function (number) {
	            return number + '-oji';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return lt;
	
	})));


/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var units = {
	        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
	        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'h': 'stundas_stundām_stunda_stundas'.split('_'),
	        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	        'd': 'dienas_dienām_diena_dienas'.split('_'),
	        'dd': 'dienas_dienām_diena_dienas'.split('_'),
	        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'y': 'gada_gadiem_gads_gadi'.split('_'),
	        'yy': 'gada_gadiem_gads_gadi'.split('_')
	    };
	    /**
	     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	     */
	    function format(forms, number, withoutSuffix) {
	        if (withoutSuffix) {
	            // E.g. "21 minūte", "3 minūtes".
	            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
	        } else {
	            // E.g. "21 minūtes" as in "pēc 21 minūtes".
	            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
	        }
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }
	    function relativeTimeWithSingular(number, withoutSuffix, key) {
	        return format(units[key], number, withoutSuffix);
	    }
	    function relativeSeconds(number, withoutSuffix) {
	        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	    }
	
	    var lv = moment.defineLocale('lv', {
	        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY.',
	            LL : 'YYYY. [gada] D. MMMM',
	            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	        },
	        calendar : {
	            sameDay : '[Šodien pulksten] LT',
	            nextDay : '[Rīt pulksten] LT',
	            nextWeek : 'dddd [pulksten] LT',
	            lastDay : '[Vakar pulksten] LT',
	            lastWeek : '[Pagājušā] dddd [pulksten] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'pēc %s',
	            past : 'pirms %s',
	            s : relativeSeconds,
	            ss : relativeTimeWithPlural,
	            m : relativeTimeWithSingular,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithSingular,
	            hh : relativeTimeWithPlural,
	            d : relativeTimeWithSingular,
	            dd : relativeTimeWithPlural,
	            M : relativeTimeWithSingular,
	            MM : relativeTimeWithPlural,
	            y : relativeTimeWithSingular,
	            yy : relativeTimeWithPlural
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return lv;
	
	})));


/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var translator = {
	        words: { //Different grammatical cases
	            ss: ['sekund', 'sekunda', 'sekundi'],
	            m: ['jedan minut', 'jednog minuta'],
	            mm: ['minut', 'minuta', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mjesec', 'mjeseca', 'mjeseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };
	
	    var me = moment.defineLocale('me', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact : true,
	        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sjutra u] LT',
	
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedjelju] [u] LT';
	                    case 3:
	                        return '[u] [srijedu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedjelje] [u] LT',
	                    '[prošlog] [ponedjeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srijede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'nekoliko sekundi',
	            ss     : translator.translate,
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mjesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return me;
	
	})));


/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var mi = moment.defineLocale('mi', {
	        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
	        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
	        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
	        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
	        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
	        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY [i] HH:mm',
	            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
	        },
	        calendar: {
	            sameDay: '[i teie mahana, i] LT',
	            nextDay: '[apopo i] LT',
	            nextWeek: 'dddd [i] LT',
	            lastDay: '[inanahi i] LT',
	            lastWeek: 'dddd [whakamutunga i] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'i roto i %s',
	            past: '%s i mua',
	            s: 'te hēkona ruarua',
	            ss: '%d hēkona',
	            m: 'he meneti',
	            mm: '%d meneti',
	            h: 'te haora',
	            hh: '%d haora',
	            d: 'he ra',
	            dd: '%d ra',
	            M: 'he marama',
	            MM: '%d marama',
	            y: 'he tau',
	            yy: '%d tau'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return mi;
	
	})));


/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var mk = moment.defineLocale('mk', {
	        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Денес во] LT',
	            nextDay : '[Утре во] LT',
	            nextWeek : '[Во] dddd [во] LT',
	            lastDay : '[Вчера во] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 6:
	                        return '[Изминатата] dddd [во] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[Изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'после %s',
	            past : 'пред %s',
	            s : 'неколку секунди',
	            ss : '%d секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дена',
	            M : 'месец',
	            MM : '%d месеци',
	            y : 'година',
	            yy : '%d години'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return mk;
	
	})));


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ml = moment.defineLocale('ml', {
	        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm -നു',
	            LTS : 'A h:mm:ss -നു',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm -നു',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	        },
	        calendar : {
	            sameDay : '[ഇന്ന്] LT',
	            nextDay : '[നാളെ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ഇന്നലെ] LT',
	            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s കഴിഞ്ഞ്',
	            past : '%s മുൻപ്',
	            s : 'അൽപ നിമിഷങ്ങൾ',
	            ss : '%d സെക്കൻഡ്',
	            m : 'ഒരു മിനിറ്റ്',
	            mm : '%d മിനിറ്റ്',
	            h : 'ഒരു മണിക്കൂർ',
	            hh : '%d മണിക്കൂർ',
	            d : 'ഒരു ദിവസം',
	            dd : '%d ദിവസം',
	            M : 'ഒരു മാസം',
	            MM : '%d മാസം',
	            y : 'ഒരു വർഷം',
	            yy : '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if ((meridiem === 'രാത്രി' && hour >= 4) ||
	                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
	                    meridiem === 'വൈകുന്നേരം') {
	                return hour + 12;
	            } else {
	                return hour;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });
	
	    return ml;
	
	})));


/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function translate(number, withoutSuffix, key, isFuture) {
	        switch (key) {
	            case 's':
	                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
	            case 'ss':
	                return number + (withoutSuffix ? ' секунд' : ' секундын');
	            case 'm':
	            case 'mm':
	                return number + (withoutSuffix ? ' минут' : ' минутын');
	            case 'h':
	            case 'hh':
	                return number + (withoutSuffix ? ' цаг' : ' цагийн');
	            case 'd':
	            case 'dd':
	                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
	            case 'M':
	            case 'MM':
	                return number + (withoutSuffix ? ' сар' : ' сарын');
	            case 'y':
	            case 'yy':
	                return number + (withoutSuffix ? ' жил' : ' жилийн');
	            default:
	                return number;
	        }
	    }
	
	    var mn = moment.defineLocale('mn', {
	        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),
	        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
	        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
	        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY оны MMMMын D',
	            LLL : 'YYYY оны MMMMын D HH:mm',
	            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'
	        },
	        meridiemParse: /ҮӨ|ҮХ/i,
	        isPM : function (input) {
	            return input === 'ҮХ';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ҮӨ';
	            } else {
	                return 'ҮХ';
	            }
	        },
	        calendar : {
	            sameDay : '[Өнөөдөр] LT',
	            nextDay : '[Маргааш] LT',
	            nextWeek : '[Ирэх] dddd LT',
	            lastDay : '[Өчигдөр] LT',
	            lastWeek : '[Өнгөрсөн] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s дараа',
	            past : '%s өмнө',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + ' өдөр';
	                default:
	                    return number;
	            }
	        }
	    });
	
	    return mn;
	
	})));


/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };
	
	    function relativeTimeMr(number, withoutSuffix, string, isFuture)
	    {
	        var output = '';
	        if (withoutSuffix) {
	            switch (string) {
	                case 's': output = 'काही सेकंद'; break;
	                case 'ss': output = '%d सेकंद'; break;
	                case 'm': output = 'एक मिनिट'; break;
	                case 'mm': output = '%d मिनिटे'; break;
	                case 'h': output = 'एक तास'; break;
	                case 'hh': output = '%d तास'; break;
	                case 'd': output = 'एक दिवस'; break;
	                case 'dd': output = '%d दिवस'; break;
	                case 'M': output = 'एक महिना'; break;
	                case 'MM': output = '%d महिने'; break;
	                case 'y': output = 'एक वर्ष'; break;
	                case 'yy': output = '%d वर्षे'; break;
	            }
	        }
	        else {
	            switch (string) {
	                case 's': output = 'काही सेकंदां'; break;
	                case 'ss': output = '%d सेकंदां'; break;
	                case 'm': output = 'एका मिनिटा'; break;
	                case 'mm': output = '%d मिनिटां'; break;
	                case 'h': output = 'एका तासा'; break;
	                case 'hh': output = '%d तासां'; break;
	                case 'd': output = 'एका दिवसा'; break;
	                case 'dd': output = '%d दिवसां'; break;
	                case 'M': output = 'एका महिन्या'; break;
	                case 'MM': output = '%d महिन्यां'; break;
	                case 'y': output = 'एका वर्षा'; break;
	                case 'yy': output = '%d वर्षां'; break;
	            }
	        }
	        return output.replace(/%d/i, number);
	    }
	
	    var mr = moment.defineLocale('mr', {
	        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm वाजता',
	            LTS : 'A h:mm:ss वाजता',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm वाजता',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[उद्या] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future: '%sमध्ये',
	            past: '%sपूर्वी',
	            s: relativeTimeMr,
	            ss: relativeTimeMr,
	            m: relativeTimeMr,
	            mm: relativeTimeMr,
	            h: relativeTimeMr,
	            hh: relativeTimeMr,
	            d: relativeTimeMr,
	            dd: relativeTimeMr,
	            M: relativeTimeMr,
	            MM: relativeTimeMr,
	            y: relativeTimeMr,
	            yy: relativeTimeMr
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return mr;
	
	})));


/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ms = moment.defineLocale('ms', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            ss : '%d saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ms;
	
	})));


/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var msMy = moment.defineLocale('ms-my', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            ss : '%d saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return msMy;
	
	})));


/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var mt = moment.defineLocale('mt', {
	        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
	        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
	        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
	        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
	        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Illum fil-]LT',
	            nextDay : '[Għada fil-]LT',
	            nextWeek : 'dddd [fil-]LT',
	            lastDay : '[Il-bieraħ fil-]LT',
	            lastWeek : 'dddd [li għadda] [fil-]LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'f’ %s',
	            past : '%s ilu',
	            s : 'ftit sekondi',
	            ss : '%d sekondi',
	            m : 'minuta',
	            mm : '%d minuti',
	            h : 'siegħa',
	            hh : '%d siegħat',
	            d : 'ġurnata',
	            dd : '%d ġranet',
	            M : 'xahar',
	            MM : '%d xhur',
	            y : 'sena',
	            yy : '%d sni'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return mt;
	
	})));


/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    }, numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };
	
	    var my = moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            ss : '%d စက္ကန့်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function (string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return my;
	
	})));


/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var nb = moment.defineLocale('nb', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'noen sekunder',
	            ss : '%d sekunder',
	            m : 'ett minutt',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dager',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nb;
	
	})));


/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };
	
	    var ne = moment.defineLocale('ne', {
	        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'Aको h:mm बजे',
	            LTS : 'Aको h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, Aको h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राति') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राति';
	            } else if (hour < 12) {
	                return 'बिहान';
	            } else if (hour < 16) {
	                return 'दिउँसो';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राति';
	            }
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[भोलि] LT',
	            nextWeek : '[आउँदो] dddd[,] LT',
	            lastDay : '[हिजो] LT',
	            lastWeek : '[गएको] dddd[,] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sमा',
	            past : '%s अगाडि',
	            s : 'केही क्षण',
	            ss : '%d सेकेण्ड',
	            m : 'एक मिनेट',
	            mm : '%d मिनेट',
	            h : 'एक घण्टा',
	            hh : '%d घण्टा',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महिना',
	            MM : '%d महिना',
	            y : 'एक बर्ष',
	            yy : '%d बर्ष'
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ne;
	
	})));


/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
	
	    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
	    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
	
	    var nl = moment.defineLocale('nl', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortWithDots;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	
	        monthsRegex: monthsRegex,
	        monthsShortRegex: monthsRegex,
	        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
	        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
	
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            ss : '%d seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nl;
	
	})));


/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');
	
	    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
	    var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
	
	    var nlBe = moment.defineLocale('nl-be', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (!m) {
	                return monthsShortWithDots;
	            } else if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	
	        monthsRegex: monthsRegex,
	        monthsShortRegex: monthsRegex,
	        monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
	        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
	
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            ss : '%d seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nlBe;
	
	})));


/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var nn = moment.defineLocale('nn', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s sidan',
	            s : 'nokre sekund',
	            ss : '%d sekund',
	            m : 'eit minutt',
	            mm : '%d minutt',
	            h : 'ein time',
	            hh : '%d timar',
	            d : 'ein dag',
	            dd : '%d dagar',
	            M : 'ein månad',
	            MM : '%d månader',
	            y : 'eit år',
	            yy : '%d år'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return nn;
	
	})));


/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '੧',
	        '2': '੨',
	        '3': '੩',
	        '4': '੪',
	        '5': '੫',
	        '6': '੬',
	        '7': '੭',
	        '8': '੮',
	        '9': '੯',
	        '0': '੦'
	    },
	    numberMap = {
	        '੧': '1',
	        '੨': '2',
	        '੩': '3',
	        '੪': '4',
	        '੫': '5',
	        '੬': '6',
	        '੭': '7',
	        '੮': '8',
	        '੯': '9',
	        '੦': '0'
	    };
	
	    var paIn = moment.defineLocale('pa-in', {
	        // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
	        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
	        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
	        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm ਵਜੇ',
	            LTS : 'A h:mm:ss ਵਜੇ',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
	        },
	        calendar : {
	            sameDay : '[ਅਜ] LT',
	            nextDay : '[ਕਲ] LT',
	            nextWeek : '[ਅਗਲਾ] dddd, LT',
	            lastDay : '[ਕਲ] LT',
	            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ਵਿੱਚ',
	            past : '%s ਪਿਛਲੇ',
	            s : 'ਕੁਝ ਸਕਿੰਟ',
	            ss : '%d ਸਕਿੰਟ',
	            m : 'ਇਕ ਮਿੰਟ',
	            mm : '%d ਮਿੰਟ',
	            h : 'ਇੱਕ ਘੰਟਾ',
	            hh : '%d ਘੰਟੇ',
	            d : 'ਇੱਕ ਦਿਨ',
	            dd : '%d ਦਿਨ',
	            M : 'ਇੱਕ ਮਹੀਨਾ',
	            MM : '%d ਮਹੀਨੇ',
	            y : 'ਇੱਕ ਸਾਲ',
	            yy : '%d ਸਾਲ'
	        },
	        preparse: function (string) {
	            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
	        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ਰਾਤ') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ਸਵੇਰ') {
	                return hour;
	            } else if (meridiem === 'ਦੁਪਹਿਰ') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'ਸ਼ਾਮ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ਰਾਤ';
	            } else if (hour < 10) {
	                return 'ਸਵੇਰ';
	            } else if (hour < 17) {
	                return 'ਦੁਪਹਿਰ';
	            } else if (hour < 20) {
	                return 'ਸ਼ਾਮ';
	            } else {
	                return 'ਰਾਤ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return paIn;
	
	})));


/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	    function plural(n) {
	        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	            case 'ss':
	                return result + (plural(number) ? 'sekundy' : 'sekund');
	            case 'm':
	                return withoutSuffix ? 'minuta' : 'minutę';
	            case 'mm':
	                return result + (plural(number) ? 'minuty' : 'minut');
	            case 'h':
	                return withoutSuffix  ? 'godzina'  : 'godzinę';
	            case 'hh':
	                return result + (plural(number) ? 'godziny' : 'godzin');
	            case 'MM':
	                return result + (plural(number) ? 'miesiące' : 'miesięcy');
	            case 'yy':
	                return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }
	
	    var pl = moment.defineLocale('pl', {
	        months : function (momentToFormat, format) {
	            if (!momentToFormat) {
	                return monthsNominative;
	            } else if (format === '') {
	                // Hack: if format empty we know this is used to generate
	                // RegExp by moment. Give then back both valid forms of months
	                // in RegExp ready format.
	                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	            } else if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
	        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[W niedzielę o] LT';
	
	                    case 2:
	                        return '[We wtorek o] LT';
	
	                    case 3:
	                        return '[W środę o] LT';
	
	                    case 6:
	                        return '[W sobotę o] LT';
	
	                    default:
	                        return '[W] dddd [o] LT';
	                }
	            },
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[W zeszłą niedzielę o] LT';
	                    case 3:
	                        return '[W zeszłą środę o] LT';
	                    case 6:
	                        return '[W zeszłą sobotę o] LT';
	                    default:
	                        return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : '%s temu',
	            s : 'kilka sekund',
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : '1 dzień',
	            dd : '%d dni',
	            M : 'miesiąc',
	            MM : translate,
	            y : 'rok',
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return pl;
	
	})));


/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var pt = moment.defineLocale('pt', {
	        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
	        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
	        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'segundos',
	            ss : '%d segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return pt;
	
	})));


/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ptBr = moment.defineLocale('pt-br', {
	        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
	        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
	        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'poucos segundos',
	            ss : '%d segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}º/,
	        ordinal : '%dº'
	    });
	
	    return ptBr;
	
	})));


/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	                'ss': 'secunde',
	                'mm': 'minute',
	                'hh': 'ore',
	                'dd': 'zile',
	                'MM': 'luni',
	                'yy': 'ani'
	            },
	            separator = ' ';
	        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	            separator = ' de ';
	        }
	        return number + separator + format[key];
	    }
	
	    var ro = moment.defineLocale('ro', {
	        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'peste %s',
	            past : '%s în urmă',
	            s : 'câteva secunde',
	            ss : relativeTimeWithPlural,
	            m : 'un minut',
	            mm : relativeTimeWithPlural,
	            h : 'o oră',
	            hh : relativeTimeWithPlural,
	            d : 'o zi',
	            dd : relativeTimeWithPlural,
	            M : 'o lună',
	            MM : relativeTimeWithPlural,
	            y : 'un an',
	            yy : relativeTimeWithPlural
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ro;
	
	})));


/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];
	
	    // http://new.gramota.ru/spravka/rules/139-prop : § 103
	    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
	    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
	    var ru = moment.defineLocale('ru', {
	        months : {
	            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
	            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
	        },
	        monthsShort : {
	            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
	            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
	            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
	        },
	        weekdays : {
	            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
	            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
	        },
	        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse : monthsParse,
	        longMonthsParse : monthsParse,
	        shortMonthsParse : monthsParse,
	
	        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
	        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
	
	        // копия предыдущего
	        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
	
	        // полные названия с падежами
	        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
	
	        // Выражение, которое соотвествует только сокращённым формам
	        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., H:mm',
	            LLLL : 'dddd, D MMMM YYYY г., H:mm'
	        },
	        calendar : {
	            sameDay: '[Сегодня, в] LT',
	            nextDay: '[Завтра, в] LT',
	            lastDay: '[Вчера, в] LT',
	            nextWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                        case 0:
	                            return '[В следующее] dddd, [в] LT';
	                        case 1:
	                        case 2:
	                        case 4:
	                            return '[В следующий] dddd, [в] LT';
	                        case 3:
	                        case 5:
	                        case 6:
	                            return '[В следующую] dddd, [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd, [в] LT';
	                    } else {
	                        return '[В] dddd, [в] LT';
	                    }
	                }
	            },
	            lastWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                        case 0:
	                            return '[В прошлое] dddd, [в] LT';
	                        case 1:
	                        case 2:
	                        case 4:
	                            return '[В прошлый] dddd, [в] LT';
	                        case 3:
	                        case 5:
	                        case 6:
	                            return '[В прошлую] dddd, [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd, [в] LT';
	                    } else {
	                        return '[В] dddd, [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'через %s',
	            past : '%s назад',
	            s : 'несколько секунд',
	            ss : relativeTimeWithPlural,
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'час',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM : function (input) {
	            return /^(дня|вечера)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                    return number + '-й';
	                case 'D':
	                    return number + '-го';
	                case 'w':
	                case 'W':
	                    return number + '-я';
	                default:
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ru;
	
	})));


/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = [
	        'جنوري',
	        'فيبروري',
	        'مارچ',
	        'اپريل',
	        'مئي',
	        'جون',
	        'جولاءِ',
	        'آگسٽ',
	        'سيپٽمبر',
	        'آڪٽوبر',
	        'نومبر',
	        'ڊسمبر'
	    ];
	    var days = [
	        'آچر',
	        'سومر',
	        'اڱارو',
	        'اربع',
	        'خميس',
	        'جمع',
	        'ڇنڇر'
	    ];
	
	    var sd = moment.defineLocale('sd', {
	        months : months,
	        monthsShort : months,
	        weekdays : days,
	        weekdaysShort : days,
	        weekdaysMin : days,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd، D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /صبح|شام/,
	        isPM : function (input) {
	            return 'شام' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'صبح';
	            }
	            return 'شام';
	        },
	        calendar : {
	            sameDay : '[اڄ] LT',
	            nextDay : '[سڀاڻي] LT',
	            nextWeek : 'dddd [اڳين هفتي تي] LT',
	            lastDay : '[ڪالهه] LT',
	            lastWeek : '[گزريل هفتي] dddd [تي] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s پوء',
	            past : '%s اڳ',
	            s : 'چند سيڪنڊ',
	            ss : '%d سيڪنڊ',
	            m : 'هڪ منٽ',
	            mm : '%d منٽ',
	            h : 'هڪ ڪلاڪ',
	            hh : '%d ڪلاڪ',
	            d : 'هڪ ڏينهن',
	            dd : '%d ڏينهن',
	            M : 'هڪ مهينو',
	            MM : '%d مهينا',
	            y : 'هڪ سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sd;
	
	})));


/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var se = moment.defineLocale('se', {
	        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
	        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
	        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
	        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
	        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'MMMM D. [b.] YYYY',
	            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
	            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
	        },
	        calendar : {
	            sameDay: '[otne ti] LT',
	            nextDay: '[ihttin ti] LT',
	            nextWeek: 'dddd [ti] LT',
	            lastDay: '[ikte ti] LT',
	            lastWeek: '[ovddit] dddd [ti] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s geažes',
	            past : 'maŋit %s',
	            s : 'moadde sekunddat',
	            ss: '%d sekunddat',
	            m : 'okta minuhta',
	            mm : '%d minuhtat',
	            h : 'okta diimmu',
	            hh : '%d diimmut',
	            d : 'okta beaivi',
	            dd : '%d beaivvit',
	            M : 'okta mánnu',
	            MM : '%d mánut',
	            y : 'okta jahki',
	            yy : '%d jagit'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return se;
	
	})));


/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    /*jshint -W100*/
	    var si = moment.defineLocale('si', {
	        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'a h:mm',
	            LTS : 'a h:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY MMMM D',
	            LLL : 'YYYY MMMM D, a h:mm',
	            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	        },
	        calendar : {
	            sameDay : '[අද] LT[ට]',
	            nextDay : '[හෙට] LT[ට]',
	            nextWeek : 'dddd LT[ට]',
	            lastDay : '[ඊයේ] LT[ට]',
	            lastWeek : '[පසුගිය] dddd LT[ට]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sකින්',
	            past : '%sකට පෙර',
	            s : 'තත්පර කිහිපය',
	            ss : 'තත්පර %d',
	            m : 'මිනිත්තුව',
	            mm : 'මිනිත්තු %d',
	            h : 'පැය',
	            hh : 'පැය %d',
	            d : 'දිනය',
	            dd : 'දින %d',
	            M : 'මාසය',
	            MM : 'මාස %d',
	            y : 'වසර',
	            yy : 'වසර %d'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
	        ordinal : function (number) {
	            return number + ' වැනි';
	        },
	        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
	        isPM : function (input) {
	            return input === 'ප.ව.' || input === 'පස් වරු';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'ප.ව.' : 'පස් වරු';
	            } else {
	                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	            }
	        }
	    });
	
	    return si;
	
	})));


/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':  // a few seconds / in a few seconds / a few seconds ago
	                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
	                } else {
	                    return result + 'sekundami';
	                }
	                break;
	            case 'm':  // a minute / in a minute / a minute ago
	                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'minúty' : 'minút');
	                } else {
	                    return result + 'minútami';
	                }
	                break;
	            case 'h':  // an hour / in an hour / an hour ago
	                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	            case 'hh': // 9 hours / in 9 hours / 9 hours ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'hodiny' : 'hodín');
	                } else {
	                    return result + 'hodinami';
	                }
	                break;
	            case 'd':  // a day / in a day / a day ago
	                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	            case 'dd': // 9 days / in 9 days / 9 days ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'dni' : 'dní');
	                } else {
	                    return result + 'dňami';
	                }
	                break;
	            case 'M':  // a month / in a month / a month ago
	                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	            case 'MM': // 9 months / in 9 months / 9 months ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
	                } else {
	                    return result + 'mesiacmi';
	                }
	                break;
	            case 'y':  // a year / in a year / a year ago
	                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	            case 'yy': // 9 years / in 9 years / 9 years ago
	                if (withoutSuffix || isFuture) {
	                    return result + (plural(number) ? 'roky' : 'rokov');
	                } else {
	                    return result + 'rokmi';
	                }
	                break;
	        }
	    }
	
	    var sk = moment.defineLocale('sk', {
	        months : months,
	        monthsShort : monthsShort,
	        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[v nedeľu o] LT';
	                    case 1:
	                    case 2:
	                        return '[v] dddd [o] LT';
	                    case 3:
	                        return '[v stredu o] LT';
	                    case 4:
	                        return '[vo štvrtok o] LT';
	                    case 5:
	                        return '[v piatok o] LT';
	                    case 6:
	                        return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[minulú nedeľu o] LT';
	                    case 1:
	                    case 2:
	                        return '[minulý] dddd [o] LT';
	                    case 3:
	                        return '[minulú stredu o] LT';
	                    case 4:
	                    case 5:
	                        return '[minulý] dddd [o] LT';
	                    case 6:
	                        return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'pred %s',
	            s : translate,
	            ss : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sk;
	
	})));


/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	            case 's':
	                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	            case 'ss':
	                if (number === 1) {
	                    result += withoutSuffix ? 'sekundo' : 'sekundi';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
	                } else {
	                    result += withoutSuffix || isFuture ? 'sekund' : 'sekund';
	                }
	                return result;
	            case 'm':
	                return withoutSuffix ? 'ena minuta' : 'eno minuto';
	            case 'mm':
	                if (number === 1) {
	                    result += withoutSuffix ? 'minuta' : 'minuto';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	                } else {
	                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	                }
	                return result;
	            case 'h':
	                return withoutSuffix ? 'ena ura' : 'eno uro';
	            case 'hh':
	                if (number === 1) {
	                    result += withoutSuffix ? 'ura' : 'uro';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
	                } else {
	                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
	                }
	                return result;
	            case 'd':
	                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	            case 'dd':
	                if (number === 1) {
	                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	                } else {
	                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	                }
	                return result;
	            case 'M':
	                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	            case 'MM':
	                if (number === 1) {
	                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	                } else {
	                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	                }
	                return result;
	            case 'y':
	                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	            case 'yy':
	                if (number === 1) {
	                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
	                } else if (number === 2) {
	                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	                } else if (number < 5) {
	                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
	                } else {
	                    result += withoutSuffix || isFuture ? 'let' : 'leti';
	                }
	                return result;
	        }
	    }
	
	    var sl = moment.defineLocale('sl', {
	        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danes ob] LT',
	            nextDay  : '[jutri ob] LT',
	
	            nextWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[v] [nedeljo] [ob] LT';
	                    case 3:
	                        return '[v] [sredo] [ob] LT';
	                    case 6:
	                        return '[v] [soboto] [ob] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay  : '[včeraj ob] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[prejšnjo] [nedeljo] [ob] LT';
	                    case 3:
	                        return '[prejšnjo] [sredo] [ob] LT';
	                    case 6:
	                        return '[prejšnjo] [soboto] [ob] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'čez %s',
	            past   : 'pred %s',
	            s      : processRelativeTime,
	            ss     : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : processRelativeTime,
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return sl;
	
	})));


/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var sq = moment.defineLocale('sq', {
	        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /PD|MD/,
	        isPM: function (input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Sot në] LT',
	            nextDay : '[Nesër në] LT',
	            nextWeek : 'dddd [në] LT',
	            lastDay : '[Dje në] LT',
	            lastWeek : 'dddd [e kaluar në] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'në %s',
	            past : '%s më parë',
	            s : 'disa sekonda',
	            ss : '%d sekonda',
	            m : 'një minutë',
	            mm : '%d minuta',
	            h : 'një orë',
	            hh : '%d orë',
	            d : 'një ditë',
	            dd : '%d ditë',
	            M : 'një muaj',
	            MM : '%d muaj',
	            y : 'një vit',
	            yy : '%d vite'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sq;
	
	})));


/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var translator = {
	        words: { //Different grammatical cases
	            ss: ['sekunda', 'sekunde', 'sekundi'],
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };
	
	    var sr = moment.defineLocale('sr', {
	        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
	        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[u] [nedelju] [u] LT';
	                    case 3:
	                        return '[u] [sredu] [u] LT';
	                    case 6:
	                        return '[u] [subotu] [u] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedelje] [u] LT',
	                    '[prošlog] [ponedeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'pre %s',
	            s      : 'nekoliko sekundi',
	            ss     : translator.translate,
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return sr;
	
	})));


/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var translator = {
	        words: { //Different grammatical cases
	            ss: ['секунда', 'секунде', 'секунди'],
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };
	
	    var srCyrl = moment.defineLocale('sr-cyrl', {
	        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
	        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
	        monthsParseExact: true,
	        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
	        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
	        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[у] [недељу] [у] LT';
	                    case 3:
	                        return '[у] [среду] [у] LT';
	                    case 6:
	                        return '[у] [суботу] [у] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                    case 5:
	                        return '[у] dddd [у] LT';
	                }
	            },
	            lastDay  : '[јуче у] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[прошле] [недеље] [у] LT',
	                    '[прошлог] [понедељка] [у] LT',
	                    '[прошлог] [уторка] [у] LT',
	                    '[прошле] [среде] [у] LT',
	                    '[прошлог] [четвртка] [у] LT',
	                    '[прошлог] [петка] [у] LT',
	                    '[прошле] [суботе] [у] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past   : 'пре %s',
	            s      : 'неколико секунди',
	            ss     : translator.translate,
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'дан',
	            dd     : translator.translate,
	            M      : 'месец',
	            MM     : translator.translate,
	            y      : 'годину',
	            yy     : translator.translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return srCyrl;
	
	})));


/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ss = moment.defineLocale('ss', {
	        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
	        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
	        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
	        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
	        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Namuhla nga] LT',
	            nextDay : '[Kusasa nga] LT',
	            nextWeek : 'dddd [nga] LT',
	            lastDay : '[Itolo nga] LT',
	            lastWeek : 'dddd [leliphelile] [nga] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'nga %s',
	            past : 'wenteka nga %s',
	            s : 'emizuzwana lomcane',
	            ss : '%d mzuzwana',
	            m : 'umzuzu',
	            mm : '%d emizuzu',
	            h : 'lihora',
	            hh : '%d emahora',
	            d : 'lilanga',
	            dd : '%d emalanga',
	            M : 'inyanga',
	            MM : '%d tinyanga',
	            y : 'umnyaka',
	            yy : '%d iminyaka'
	        },
	        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'ekuseni';
	            } else if (hours < 15) {
	                return 'emini';
	            } else if (hours < 19) {
	                return 'entsambama';
	            } else {
	                return 'ebusuku';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'ekuseni') {
	                return hour;
	            } else if (meridiem === 'emini') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
	                if (hour === 0) {
	                    return 0;
	                }
	                return hour + 12;
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}/,
	        ordinal : '%d',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ss;
	
	})));


/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var sv = moment.defineLocale('sv', {
	        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [kl.] HH:mm',
	            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: '[På] dddd LT',
	            lastWeek: '[I] dddd[s] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'för %s sedan',
	            s : 'några sekunder',
	            ss : '%d sekunder',
	            m : 'en minut',
	            mm : '%d minuter',
	            h : 'en timme',
	            hh : '%d timmar',
	            d : 'en dag',
	            dd : '%d dagar',
	            M : 'en månad',
	            MM : '%d månader',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'e' :
	                (b === 1) ? 'a' :
	                (b === 2) ? 'a' :
	                (b === 3) ? 'e' : 'e';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return sv;
	
	})));


/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var sw = moment.defineLocale('sw', {
	        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
	        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
	        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[leo saa] LT',
	            nextDay : '[kesho saa] LT',
	            nextWeek : '[wiki ijayo] dddd [saat] LT',
	            lastDay : '[jana] LT',
	            lastWeek : '[wiki iliyopita] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s baadaye',
	            past : 'tokea %s',
	            s : 'hivi punde',
	            ss : 'sekunde %d',
	            m : 'dakika moja',
	            mm : 'dakika %d',
	            h : 'saa limoja',
	            hh : 'masaa %d',
	            d : 'siku moja',
	            dd : 'masiku %d',
	            M : 'mwezi mmoja',
	            MM : 'miezi %d',
	            y : 'mwaka mmoja',
	            yy : 'miaka %d'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return sw;
	
	})));


/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var symbolMap = {
	        '1': '௧',
	        '2': '௨',
	        '3': '௩',
	        '4': '௪',
	        '5': '௫',
	        '6': '௬',
	        '7': '௭',
	        '8': '௮',
	        '9': '௯',
	        '0': '௦'
	    }, numberMap = {
	        '௧': '1',
	        '௨': '2',
	        '௩': '3',
	        '௪': '4',
	        '௫': '5',
	        '௬': '6',
	        '௭': '7',
	        '௮': '8',
	        '௯': '9',
	        '௦': '0'
	    };
	
	    var ta = moment.defineLocale('ta', {
	        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, HH:mm',
	            LLLL : 'dddd, D MMMM YYYY, HH:mm'
	        },
	        calendar : {
	            sameDay : '[இன்று] LT',
	            nextDay : '[நாளை] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[நேற்று] LT',
	            lastWeek : '[கடந்த வாரம்] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s இல்',
	            past : '%s முன்',
	            s : 'ஒரு சில விநாடிகள்',
	            ss : '%d விநாடிகள்',
	            m : 'ஒரு நிமிடம்',
	            mm : '%d நிமிடங்கள்',
	            h : 'ஒரு மணி நேரம்',
	            hh : '%d மணி நேரம்',
	            d : 'ஒரு நாள்',
	            dd : '%d நாட்கள்',
	            M : 'ஒரு மாதம்',
	            MM : '%d மாதங்கள்',
	            y : 'ஒரு வருடம்',
	            yy : '%d ஆண்டுகள்'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}வது/,
	        ordinal : function (number) {
	            return number + 'வது';
	        },
	        preparse: function (string) {
	            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை';  // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ta;
	
	})));


/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var te = moment.defineLocale('te', {
	        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
	        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
	        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
	        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[నేడు] LT',
	            nextDay : '[రేపు] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[నిన్న] LT',
	            lastWeek : '[గత] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s లో',
	            past : '%s క్రితం',
	            s : 'కొన్ని క్షణాలు',
	            ss : '%d సెకన్లు',
	            m : 'ఒక నిమిషం',
	            mm : '%d నిమిషాలు',
	            h : 'ఒక గంట',
	            hh : '%d గంటలు',
	            d : 'ఒక రోజు',
	            dd : '%d రోజులు',
	            M : 'ఒక నెల',
	            MM : '%d నెలలు',
	            y : 'ఒక సంవత్సరం',
	            yy : '%d సంవత్సరాలు'
	        },
	        dayOfMonthOrdinalParse : /\d{1,2}వ/,
	        ordinal : '%dవ',
	        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'రాత్రి') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'ఉదయం') {
	                return hour;
	            } else if (meridiem === 'మధ్యాహ్నం') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'సాయంత్రం') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'రాత్రి';
	            } else if (hour < 10) {
	                return 'ఉదయం';
	            } else if (hour < 17) {
	                return 'మధ్యాహ్నం';
	            } else if (hour < 20) {
	                return 'సాయంత్రం';
	            } else {
	                return 'రాత్రి';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return te;
	
	})));


/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var tet = moment.defineLocale('tet', {
	        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
	        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Ohin iha] LT',
	            nextDay: '[Aban iha] LT',
	            nextWeek: 'dddd [iha] LT',
	            lastDay: '[Horiseik iha] LT',
	            lastWeek: 'dddd [semana kotuk] [iha] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'iha %s',
	            past : '%s liuba',
	            s : 'minutu balun',
	            ss : 'minutu %d',
	            m : 'minutu ida',
	            mm : 'minutu %d',
	            h : 'oras ida',
	            hh : 'oras %d',
	            d : 'loron ida',
	            dd : 'loron %d',
	            M : 'fulan ida',
	            MM : 'fulan %d',
	            y : 'tinan ida',
	            yy : 'tinan %d'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return tet;
	
	})));


/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var suffixes = {
	        0: '-ум',
	        1: '-ум',
	        2: '-юм',
	        3: '-юм',
	        4: '-ум',
	        5: '-ум',
	        6: '-ум',
	        7: '-ум',
	        8: '-ум',
	        9: '-ум',
	        10: '-ум',
	        12: '-ум',
	        13: '-ум',
	        20: '-ум',
	        30: '-юм',
	        40: '-ум',
	        50: '-ум',
	        60: '-ум',
	        70: '-ум',
	        80: '-ум',
	        90: '-ум',
	        100: '-ум'
	    };
	
	    var tg = moment.defineLocale('tg', {
	        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),
	        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
	        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Имрӯз соати] LT',
	            nextDay : '[Пагоҳ соати] LT',
	            lastDay : '[Дирӯз соати] LT',
	            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',
	            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'баъди %s',
	            past : '%s пеш',
	            s : 'якчанд сония',
	            m : 'як дақиқа',
	            mm : '%d дақиқа',
	            h : 'як соат',
	            hh : '%d соат',
	            d : 'як рӯз',
	            dd : '%d рӯз',
	            M : 'як моҳ',
	            MM : '%d моҳ',
	            y : 'як сол',
	            yy : '%d сол'
	        },
	        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'шаб') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'субҳ') {
	                return hour;
	            } else if (meridiem === 'рӯз') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'бегоҳ') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'шаб';
	            } else if (hour < 11) {
	                return 'субҳ';
	            } else if (hour < 16) {
	                return 'рӯз';
	            } else if (hour < 19) {
	                return 'бегоҳ';
	            } else {
	                return 'шаб';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
	        ordinal: function (number) {
	            var a = number % 10,
	                b = number >= 100 ? 100 : null;
	            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1th is the first week of the year.
	        }
	    });
	
	    return tg;
	
	})));


/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var th = moment.defineLocale('th', {
	        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
	        monthsParseExact: true,
	        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY เวลา H:mm',
	            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function (input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar : {
	            sameDay : '[วันนี้ เวลา] LT',
	            nextDay : '[พรุ่งนี้ เวลา] LT',
	            nextWeek : 'dddd[หน้า เวลา] LT',
	            lastDay : '[เมื่อวานนี้ เวลา] LT',
	            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'อีก %s',
	            past : '%sที่แล้ว',
	            s : 'ไม่กี่วินาที',
	            ss : '%d วินาที',
	            m : '1 นาที',
	            mm : '%d นาที',
	            h : '1 ชั่วโมง',
	            hh : '%d ชั่วโมง',
	            d : '1 วัน',
	            dd : '%d วัน',
	            M : '1 เดือน',
	            MM : '%d เดือน',
	            y : '1 ปี',
	            yy : '%d ปี'
	        }
	    });
	
	    return th;
	
	})));


/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var tlPh = moment.defineLocale('tl-ph', {
	        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'MM/D/YYYY',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY HH:mm',
	            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: 'LT [ngayong araw]',
	            nextDay: '[Bukas ng] LT',
	            nextWeek: 'LT [sa susunod na] dddd',
	            lastDay: 'LT [kahapon]',
	            lastWeek: 'LT [noong nakaraang] dddd',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'sa loob ng %s',
	            past : '%s ang nakalipas',
	            s : 'ilang segundo',
	            ss : '%d segundo',
	            m : 'isang minuto',
	            mm : '%d minuto',
	            h : 'isang oras',
	            hh : '%d oras',
	            d : 'isang araw',
	            dd : '%d araw',
	            M : 'isang buwan',
	            MM : '%d buwan',
	            y : 'isang taon',
	            yy : '%d taon'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return tlPh;
	
	})));


/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');
	
	    function translateFuture(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	        time.slice(0, -3) + 'leS' :
	        (output.indexOf('jar') !== -1) ?
	        time.slice(0, -3) + 'waQ' :
	        (output.indexOf('DIS') !== -1) ?
	        time.slice(0, -3) + 'nem' :
	        time + ' pIq';
	        return time;
	    }
	
	    function translatePast(output) {
	        var time = output;
	        time = (output.indexOf('jaj') !== -1) ?
	        time.slice(0, -3) + 'Hu’' :
	        (output.indexOf('jar') !== -1) ?
	        time.slice(0, -3) + 'wen' :
	        (output.indexOf('DIS') !== -1) ?
	        time.slice(0, -3) + 'ben' :
	        time + ' ret';
	        return time;
	    }
	
	    function translate(number, withoutSuffix, string, isFuture) {
	        var numberNoun = numberAsNoun(number);
	        switch (string) {
	            case 'ss':
	                return numberNoun + ' lup';
	            case 'mm':
	                return numberNoun + ' tup';
	            case 'hh':
	                return numberNoun + ' rep';
	            case 'dd':
	                return numberNoun + ' jaj';
	            case 'MM':
	                return numberNoun + ' jar';
	            case 'yy':
	                return numberNoun + ' DIS';
	        }
	    }
	
	    function numberAsNoun(number) {
	        var hundred = Math.floor((number % 1000) / 100),
	        ten = Math.floor((number % 100) / 10),
	        one = number % 10,
	        word = '';
	        if (hundred > 0) {
	            word += numbersNouns[hundred] + 'vatlh';
	        }
	        if (ten > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
	        }
	        if (one > 0) {
	            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
	        }
	        return (word === '') ? 'pagh' : word;
	    }
	
	    var tlh = moment.defineLocale('tlh', {
	        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
	        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[DaHjaj] LT',
	            nextDay: '[wa’leS] LT',
	            nextWeek: 'LLL',
	            lastDay: '[wa’Hu’] LT',
	            lastWeek: 'LLL',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : translateFuture,
	            past : translatePast,
	            s : 'puS lup',
	            ss : translate,
	            m : 'wa’ tup',
	            mm : translate,
	            h : 'wa’ rep',
	            hh : translate,
	            d : 'wa’ jaj',
	            dd : translate,
	            M : 'wa’ jar',
	            MM : translate,
	            y : 'wa’ DIS',
	            yy : translate
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return tlh;
	
	})));


/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',
	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',
	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',
	        6: '\'ncı',
	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',
	        60: '\'ıncı',
	        90: '\'ıncı'
	    };
	
	    var tr = moment.defineLocale('tr', {
	        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[yarın saat] LT',
	            nextWeek : '[gelecek] dddd [saat] LT',
	            lastDay : '[dün] LT',
	            lastWeek : '[geçen] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s önce',
	            s : 'birkaç saniye',
	            ss : '%d saniye',
	            m : 'bir dakika',
	            mm : '%d dakika',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir yıl',
	            yy : '%d yıl'
	        },
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'Do':
	                case 'DD':
	                    return number;
	                default:
	                    if (number === 0) {  // special case for zero
	                        return number + '\'ıncı';
	                    }
	                    var a = number % 10,
	                        b = number % 100 - a,
	                        c = number >= 100 ? 100 : null;
	                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return tr;
	
	})));


/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
	    // This is currently too difficult (maybe even impossible) to add.
	    var tzl = moment.defineLocale('tzl', {
	        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM [dallas] YYYY',
	            LLL : 'D. MMMM [dallas] YYYY HH.mm',
	            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
	        },
	        meridiemParse: /d\'o|d\'a/i,
	        isPM : function (input) {
	            return 'd\'o' === input.toLowerCase();
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'd\'o' : 'D\'O';
	            } else {
	                return isLower ? 'd\'a' : 'D\'A';
	            }
	        },
	        calendar : {
	            sameDay : '[oxhi à] LT',
	            nextDay : '[demà à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[ieiri à] LT',
	            lastWeek : '[sür el] dddd [lasteu à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'osprei %s',
	            past : 'ja%s',
	            s : processRelativeTime,
	            ss : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['viensas secunds', '\'iensas secunds'],
	            'ss': [number + ' secunds', '' + number + ' secunds'],
	            'm': ['\'n míut', '\'iens míut'],
	            'mm': [number + ' míuts', '' + number + ' míuts'],
	            'h': ['\'n þora', '\'iensa þora'],
	            'hh': [number + ' þoras', '' + number + ' þoras'],
	            'd': ['\'n ziua', '\'iensa ziua'],
	            'dd': [number + ' ziuas', '' + number + ' ziuas'],
	            'M': ['\'n mes', '\'iens mes'],
	            'MM': [number + ' mesen', '' + number + ' mesen'],
	            'y': ['\'n ar', '\'iens ar'],
	            'yy': [number + ' ars', '' + number + ' ars']
	        };
	        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
	    }
	
	    return tzl;
	
	})));


/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var tzm = moment.defineLocale('tzm', {
	        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past : 'ⵢⴰⵏ %s',
	            s : 'ⵉⵎⵉⴽ',
	            ss : '%d ⵉⵎⵉⴽ',
	            m : 'ⵎⵉⵏⵓⴺ',
	            mm : '%d ⵎⵉⵏⵓⴺ',
	            h : 'ⵙⴰⵄⴰ',
	            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d : 'ⴰⵙⵙ',
	            dd : '%d oⵙⵙⴰⵏ',
	            M : 'ⴰⵢoⵓⵔ',
	            MM : '%d ⵉⵢⵢⵉⵔⵏ',
	            y : 'ⴰⵙⴳⴰⵙ',
	            yy : '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return tzm;
	
	})));


/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var tzmLatn = moment.defineLocale('tzm-latn', {
	        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dadkh s yan %s',
	            past : 'yan %s',
	            s : 'imik',
	            ss : '%d imik',
	            m : 'minuḍ',
	            mm : '%d minuḍ',
	            h : 'saɛa',
	            hh : '%d tassaɛin',
	            d : 'ass',
	            dd : '%d ossan',
	            M : 'ayowr',
	            MM : '%d iyyirn',
	            y : 'asgas',
	            yy : '%d isgasn'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return tzmLatn;
	
	})));


/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js language configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var ugCn = moment.defineLocale('ug-cn', {
	        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
	            '_'
	        ),
	        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
	            '_'
	        ),
	        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
	            '_'
	        ),
	        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
	        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'YYYY-MM-DD',
	            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
	            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
	            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'
	        },
	        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (
	                meridiem === 'يېرىم كېچە' ||
	                meridiem === 'سەھەر' ||
	                meridiem === 'چۈشتىن بۇرۇن'
	            ) {
	                return hour;
	            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
	                return hour + 12;
	            } else {
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return 'يېرىم كېچە';
	            } else if (hm < 900) {
	                return 'سەھەر';
	            } else if (hm < 1130) {
	                return 'چۈشتىن بۇرۇن';
	            } else if (hm < 1230) {
	                return 'چۈش';
	            } else if (hm < 1800) {
	                return 'چۈشتىن كېيىن';
	            } else {
	                return 'كەچ';
	            }
	        },
	        calendar: {
	            sameDay: '[بۈگۈن سائەت] LT',
	            nextDay: '[ئەتە سائەت] LT',
	            nextWeek: '[كېلەركى] dddd [سائەت] LT',
	            lastDay: '[تۆنۈگۈن] LT',
	            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%s كېيىن',
	            past: '%s بۇرۇن',
	            s: 'نەچچە سېكونت',
	            ss: '%d سېكونت',
	            m: 'بىر مىنۇت',
	            mm: '%d مىنۇت',
	            h: 'بىر سائەت',
	            hh: '%d سائەت',
	            d: 'بىر كۈن',
	            dd: '%d كۈن',
	            M: 'بىر ئاي',
	            MM: '%d ئاي',
	            y: 'بىر يىل',
	            yy: '%d يىل'
	        },
	
	        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '-كۈنى';
	                case 'w':
	                case 'W':
	                    return number + '-ھەپتە';
	                default:
	                    return number;
	            }
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week: {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow: 1, // Monday is the first day of the week.
	            doy: 7 // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return ugCn;
	
	})));


/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
	            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
	            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        };
	
	        if (!m) {
	            return weekdays['nominative'];
	        }
	
	        var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	            'accusative' :
	            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	                'genitive' :
	                'nominative');
	        return weekdays[nounCase][m.day()];
	    }
	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }
	
	    var uk = moment.defineLocale('uk', {
	        months : {
	            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
	            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
	        },
	        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY р.',
	            LLL : 'D MMMM YYYY р., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	        },
	        calendar : {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                    case 3:
	                    case 5:
	                    case 6:
	                        return processHoursFunction('[Минулої] dddd [').call(this);
	                    case 1:
	                    case 2:
	                    case 4:
	                        return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past : '%s тому',
	            s : 'декілька секунд',
	            ss : relativeTimeWithPlural,
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'годину',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'місяць',
	            MM : relativeTimeWithPlural,
	            y : 'рік',
	            yy : relativeTimeWithPlural
	        },
	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function (input) {
	            return /^(дня|вечора)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function (number, period) {
	            switch (period) {
	                case 'M':
	                case 'd':
	                case 'DDD':
	                case 'w':
	                case 'W':
	                    return number + '-й';
	                case 'D':
	                    return number + '-го';
	                default:
	                    return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return uk;
	
	})));


/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var months = [
	        'جنوری',
	        'فروری',
	        'مارچ',
	        'اپریل',
	        'مئی',
	        'جون',
	        'جولائی',
	        'اگست',
	        'ستمبر',
	        'اکتوبر',
	        'نومبر',
	        'دسمبر'
	    ];
	    var days = [
	        'اتوار',
	        'پیر',
	        'منگل',
	        'بدھ',
	        'جمعرات',
	        'جمعہ',
	        'ہفتہ'
	    ];
	
	    var ur = moment.defineLocale('ur', {
	        months : months,
	        monthsShort : months,
	        weekdays : days,
	        weekdaysShort : days,
	        weekdaysMin : days,
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd، D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /صبح|شام/,
	        isPM : function (input) {
	            return 'شام' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'صبح';
	            }
	            return 'شام';
	        },
	        calendar : {
	            sameDay : '[آج بوقت] LT',
	            nextDay : '[کل بوقت] LT',
	            nextWeek : 'dddd [بوقت] LT',
	            lastDay : '[گذشتہ روز بوقت] LT',
	            lastWeek : '[گذشتہ] dddd [بوقت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s بعد',
	            past : '%s قبل',
	            s : 'چند سیکنڈ',
	            ss : '%d سیکنڈ',
	            m : 'ایک منٹ',
	            mm : '%d منٹ',
	            h : 'ایک گھنٹہ',
	            hh : '%d گھنٹے',
	            d : 'ایک دن',
	            dd : '%d دن',
	            M : 'ایک ماہ',
	            MM : '%d ماہ',
	            y : 'ایک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/,/g, '،');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return ur;
	
	})));


/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var uz = moment.defineLocale('uz', {
	        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бугун соат] LT [да]',
	            nextDay : '[Эртага] LT [да]',
	            nextWeek : 'dddd [куни соат] LT [да]',
	            lastDay : '[Кеча соат] LT [да]',
	            lastWeek : '[Утган] dddd [куни соат] LT [да]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Якин %s ичида',
	            past : 'Бир неча %s олдин',
	            s : 'фурсат',
	            ss : '%d фурсат',
	            m : 'бир дакика',
	            mm : '%d дакика',
	            h : 'бир соат',
	            hh : '%d соат',
	            d : 'бир кун',
	            dd : '%d кун',
	            M : 'бир ой',
	            MM : '%d ой',
	            y : 'бир йил',
	            yy : '%d йил'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return uz;
	
	})));


/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var uzLatn = moment.defineLocale('uz-latn', {
	        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
	        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
	        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
	        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
	        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Bugun soat] LT [da]',
	            nextDay : '[Ertaga] LT [da]',
	            nextWeek : 'dddd [kuni soat] LT [da]',
	            lastDay : '[Kecha soat] LT [da]',
	            lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Yaqin %s ichida',
	            past : 'Bir necha %s oldin',
	            s : 'soniya',
	            ss : '%d soniya',
	            m : 'bir daqiqa',
	            mm : '%d daqiqa',
	            h : 'bir soat',
	            hh : '%d soat',
	            d : 'bir kun',
	            dd : '%d kun',
	            M : 'bir oy',
	            MM : '%d oy',
	            y : 'bir yil',
	            yy : '%d yil'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });
	
	    return uzLatn;
	
	})));


/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var vi = moment.defineLocale('vi', {
	        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysParseExact : true,
	        meridiemParse: /sa|ch/i,
	        isPM : function (input) {
	            return /^ch$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'sa' : 'SA';
	            } else {
	                return isLower ? 'ch' : 'CH';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [năm] YYYY',
	            LLL : 'D MMMM [năm] YYYY HH:mm',
	            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	            l : 'DD/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s tới',
	            past : '%s trước',
	            s : 'vài giây',
	            ss : '%d giây' ,
	            m : 'một phút',
	            mm : '%d phút',
	            h : 'một giờ',
	            hh : '%d giờ',
	            d : 'một ngày',
	            dd : '%d ngày',
	            M : 'một tháng',
	            MM : '%d tháng',
	            y : 'một năm',
	            yy : '%d năm'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return vi;
	
	})));


/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var xPseudo = moment.defineLocale('x-pseudo', {
	        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
	        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
	        monthsParseExact : true,
	        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
	        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
	        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
	        weekdaysParseExact : true,
	        longDateFormat : {
	            LT : 'HH:mm',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[T~ódá~ý át] LT',
	            nextDay : '[T~ómó~rró~w át] LT',
	            nextWeek : 'dddd [át] LT',
	            lastDay : '[Ý~ést~érdá~ý át] LT',
	            lastWeek : '[L~ást] dddd [át] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'í~ñ %s',
	            past : '%s á~gó',
	            s : 'á ~féw ~sécó~ñds',
	            ss : '%d s~écóñ~ds',
	            m : 'á ~míñ~úté',
	            mm : '%d m~íñú~tés',
	            h : 'á~ñ hó~úr',
	            hh : '%d h~óúrs',
	            d : 'á ~dáý',
	            dd : '%d d~áýs',
	            M : 'á ~móñ~th',
	            MM : '%d m~óñt~hs',
	            y : 'á ~ýéár',
	            yy : '%d ý~éárs'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return xPseudo;
	
	})));


/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var yo = moment.defineLocale('yo', {
	        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
	        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
	        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
	        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
	        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Ònì ni] LT',
	            nextDay : '[Ọ̀la ni] LT',
	            nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
	            lastDay : '[Àna ni] LT',
	            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'ní %s',
	            past : '%s kọjá',
	            s : 'ìsẹjú aayá die',
	            ss :'aayá %d',
	            m : 'ìsẹjú kan',
	            mm : 'ìsẹjú %d',
	            h : 'wákati kan',
	            hh : 'wákati %d',
	            d : 'ọjọ́ kan',
	            dd : 'ọjọ́ %d',
	            M : 'osù kan',
	            MM : 'osù %d',
	            y : 'ọdún kan',
	            yy : 'ọdún %d'
	        },
	        dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
	        ordinal : 'ọjọ́ %d',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return yo;
	
	})));


/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var zhCn = moment.defineLocale('zh-cn', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日Ah点mm分',
	            LLLL : 'YYYY年M月D日ddddAh点mm分',
	            l : 'YYYY/M/D',
	            ll : 'YYYY年M月D日',
	            lll : 'YYYY年M月D日 HH:mm',
	            llll : 'YYYY年M月D日dddd HH:mm'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' ||
	                    meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd':
	                case 'D':
	                case 'DDD':
	                    return number + '日';
	                case 'M':
	                    return number + '月';
	                case 'w':
	                case 'W':
	                    return number + '周';
	                default:
	                    return number;
	            }
	        },
	        relativeTime : {
	            future : '%s内',
	            past : '%s前',
	            s : '几秒',
	            ss : '%d 秒',
	            m : '1 分钟',
	            mm : '%d 分钟',
	            h : '1 小时',
	            hh : '%d 小时',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 个月',
	            MM : '%d 个月',
	            y : '1 年',
	            yy : '%d 年'
	        },
	        week : {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });
	
	    return zhCn;
	
	})));


/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var zhHk = moment.defineLocale('zh-hk', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日 HH:mm',
	            LLLL : 'YYYY年M月D日dddd HH:mm',
	            l : 'YYYY/M/D',
	            ll : 'YYYY年M月D日',
	            lll : 'YYYY年M月D日 HH:mm',
	            llll : 'YYYY年M月D日dddd HH:mm'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd' :
	                case 'D' :
	                case 'DDD' :
	                    return number + '日';
	                case 'M' :
	                    return number + '月';
	                case 'w' :
	                case 'W' :
	                    return number + '週';
	                default :
	                    return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            ss : '%d 秒',
	            m : '1 分鐘',
	            mm : '%d 分鐘',
	            h : '1 小時',
	            hh : '%d 小時',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 個月',
	            MM : '%d 個月',
	            y : '1 年',
	            yy : '%d 年'
	        }
	    });
	
	    return zhHk;
	
	})));


/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	
	;(function (global, factory) {
	    true ? factory(__webpack_require__(556)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';
	
	
	    var zhTw = moment.defineLocale('zh-tw', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日 HH:mm',
	            LLLL : 'YYYY年M月D日dddd HH:mm',
	            l : 'YYYY/M/D',
	            ll : 'YYYY年M月D日',
	            lll : 'YYYY年M月D日 HH:mm',
	            llll : 'YYYY年M月D日dddd HH:mm'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天] LT',
	            nextDay : '[明天] LT',
	            nextWeek : '[下]dddd LT',
	            lastDay : '[昨天] LT',
	            lastWeek : '[上]dddd LT',
	            sameElse : 'L'
	        },
	        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	                case 'd' :
	                case 'D' :
	                case 'DDD' :
	                    return number + '日';
	                case 'M' :
	                    return number + '月';
	                case 'w' :
	                case 'W' :
	                    return number + '週';
	                default :
	                    return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            ss : '%d 秒',
	            m : '1 分鐘',
	            mm : '%d 分鐘',
	            h : '1 小時',
	            hh : '%d 小時',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 個月',
	            MM : '%d 個月',
	            y : '1 年',
	            yy : '%d 年'
	        }
	    });
	
	    return zhTw;
	
	})));


/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var react_bootstrap_2 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var react_router_1 = __webpack_require__(184);
	var cfooter = (function (_super) {
	    __extends(cfooter, _super);
	    function cfooter() {
	        _super.apply(this, arguments);
	    }
	    cfooter.prototype.goToPage = function (page) {
	        var basePath = this.props.location.pathname.indexOf("agent") > -1 || this.props.is_agent ? "/agent/" : "/";
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        if (page == "/") {
	            page = "";
	        }
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        if (page.indexOf("products") > -1 && !underscore_1.isEmpty(this.props.products)) {
	            react_router_1.browserHistory.push(basePath + page + queryParamsString);
	        }
	        else if (page.indexOf("next-steps") > -1 && !underscore_1.isEmpty(this.props.premiums)) {
	            react_router_1.browserHistory.push(basePath + page + queryParamsString);
	        }
	        else if (page.indexOf("products") <= -1 && page.indexOf("next-steps") <= -1) {
	            react_router_1.browserHistory.push(basePath + page + queryParamsString);
	        }
	    };
	    cfooter.prototype.render = function () {
	        var _this = this;
	        var breadCrumbs = this.props.breadCrumbs;
	        var noFoGroupsCompleted = this.props.noFoGroupsCompleted || [];
	        if (breadCrumbs) {
	            return (React.createElement(react_bootstrap_1.Navbar, {className: "cf-nav-main-header subheader bread-crumb-container"}, React.createElement(react_bootstrap_2.Row, {className: "hidden-xs"}, breadCrumbs && underscore_1.map(breadCrumbs, function (breadCrumb, index) {
	                return React.createElement(react_bootstrap_2.Col, {key: breadCrumb, className: "confirmation-header gather-information-container dynamic-bread-crumb " + (noFoGroupsCompleted.indexOf(index) >= 0 ? "active" : ""), style: { paddingRight: "0px" }}, React.createElement(react_bootstrap_2.Row, null, React.createElement(react_bootstrap_2.Col, {className: "gather-information " + (index == breadCrumbs.length - 1 ? "last-child" : "")}, breadCrumb)));
	            })), React.createElement(react_bootstrap_2.Row, {className: "visible-xs"}, React.createElement(react_bootstrap_2.Col, {key: breadCrumbs[noFoGroupsCompleted], className: "confirmation-header gather-information-container dynamic-bread-crumb", style: { paddingRight: "0px", display: "block", width: "100%", textAlign: "center" }}, React.createElement(react_bootstrap_2.Row, null, React.createElement(react_bootstrap_2.Col, {className: "gather-information last-child"}, breadCrumbs[noFoGroupsCompleted]))))));
	        }
	        else {
	            return (React.createElement(react_bootstrap_1.Navbar, {className: "cf-nav-main-header subheader"}, React.createElement(react_bootstrap_2.Row, null, React.createElement(react_bootstrap_2.Col, {className: "confirmation-header gather-information-container " + (window.location.pathname == "/" || window.location.pathname == "/agent" || window.location.pathname == "/agent/" ? "active" : ""), style: { paddingRight: "0px" }}, React.createElement(react_bootstrap_2.Row, null, React.createElement(react_bootstrap_2.Col, {className: "gather-information", onClick: function () {
	                _this.goToPage("");
	            }}, "Gather info"))), React.createElement(react_bootstrap_2.Col, {className: "confirmation-header product-selection-text-container " + (window.location.pathname.indexOf("products") > -1 || window.location.pathname.indexOf("plans") > -1 ? "active" : ""), onClick: function () {
	                _this.goToPage("products");
	            }}, React.createElement("div", {className: "product-selection-container"}, React.createElement("div", {className: 'product-selection'}, "Product selection"))), React.createElement(react_bootstrap_2.Col, {style: {}, className: "confirmation-header next-steps " + (window.location.pathname.indexOf("next-steps") > -1 ? "active" : ""), onClick: function () {
	                _this.goToPage("next-steps");
	            }}, React.createElement("span", null, "Next steps")))));
	        }
	    };
	    return cfooter;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = cfooter;


/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var states_1 = __webpack_require__(683);
	var react_datepicker_1 = __webpack_require__(684);
	var BootStrapDatePicker = __webpack_require__(686);
	var react_select_1 = __webpack_require__(688);
	var textInput_1 = __webpack_require__(703);
	var HealthInformationPopup_1 = __webpack_require__(704);
	var react_lightweight_tooltip_1 = __webpack_require__(705);
	var moment = __webpack_require__(556);
	var Person = (function (_super) {
	    __extends(Person, _super);
	    function Person() {
	        _super.apply(this, arguments);
	        this.state = {
	            year: "",
	            month: "",
	            date: ""
	        };
	    }
	    Person.prototype.onChange = function (key, value) {
	        var _this = this;
	        this.setState((_a = {},
	            _a[key] = value,
	            _a
	        ));
	        this.props.onChange(this.props.index, key, value);
	        if (this.props.initialQuoteSubmittedOnce) {
	            setTimeout(function () {
	                _this.props.validateQuoteForm();
	            }, 100);
	        }
	        var _a;
	    };
	    Person.prototype.onDateInputChange = function (year, month, date) {
	        this.setState({ year: year, month: month, date: date });
	        var momentDate = moment(new Date(month + "/" + date + "/" + year));
	        if (momentDate.isValid()) {
	            this.onDateChange("s_birthDate", month + "/" + date + "/" + year);
	        }
	    };
	    Person.prototype.onDateChange = function (key, value) {
	        var _this = this;
	        this.setState((_a = {},
	            _a[key] = ((value == null) ? null : moment(value)),
	            _a.formattedDate = ((value == null) ? null : moment(value).format("MM/DD/YYYY")),
	            _a
	        ));
	        this.props.onChange(this.props.index, key, value);
	        if (this.props.initialQuoteSubmittedOnce) {
	            setTimeout(function () {
	                _this.props.validateQuoteForm();
	            }, 100);
	        }
	        var _a;
	    };
	    Person.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    Person.prototype.onKeyDown = function (e) {
	        if (e.keyCode == 13) {
	            if (e.target.value && e.target.value.length == 10) {
	            }
	            else {
	                e.preventDefault();
	                e.stopPropagation();
	            }
	        }
	    };
	    Person.prototype.onChangeRaw = function (e) {
	        var parentClass = "";
	        if (this.props.index == 0) {
	            parentClass = ".one-person-content ";
	        }
	        else {
	            parentClass = ".second-person-content ";
	        }
	        if (this.previousDateVal && this.previousDateVal.length > e.target.value.length) {
	            this.previousDateVal = e.target.value;
	            return;
	        }
	        if (e.target.value) {
	            var val = e.target.value;
	            if (val.length == 1) {
	                if (isNaN(val) || parseInt(val) > 1) {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = "";
	                }
	                ;
	            }
	            else if (val.length == 2) {
	                if (isNaN(val) || parseInt(val) > 12) {
	                    val = val.substr(0, 1);
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val;
	                }
	                else {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val + "/";
	                }
	            }
	            else if (val.length == 4) {
	                var maxVal = 3;
	                var tempVal = val.substr(3, 1);
	                var monthVal = parseInt(val.substr(0, 2));
	                if (monthVal == 2) {
	                    maxVal = 2;
	                }
	                if (isNaN(tempVal) || parseInt(tempVal) > maxVal) {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 3);
	                }
	                else {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val;
	                }
	            }
	            else if (val.length == 5) {
	                var maxVal = 31;
	                var tempVal = val.substr(3, 2);
	                var monthVal = parseInt(val.substr(0, 2));
	                if (monthVal == 4 || monthVal == 6 || monthVal == 9 || monthVal == 11) {
	                    maxVal = 30;
	                }
	                else if (monthVal == 2) {
	                    maxVal = 29;
	                }
	                if (isNaN(tempVal) || parseInt(tempVal) > maxVal) {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 4);
	                }
	                else {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val + "/";
	                }
	            }
	            else if (val.length == 7) {
	                document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val;
	                var tempVal = val.substr(6, 1);
	                if (isNaN(tempVal) || !(parseInt(tempVal) >= 1 && parseInt(tempVal) <= 2)) {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 6);
	                }
	            }
	            else if (val.length == 8) {
	                var tempVal = val.substr(6, 2);
	                if (isNaN(tempVal) || !(parseInt(tempVal) >= 19 && parseInt(tempVal) <= 20)) {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 7);
	                }
	            }
	            else if (val.length == 9) {
	                var tempVal = val.substr(6, 3);
	                if (isNaN(tempVal)) {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 8);
	                }
	            }
	            else if (val.length == 10) {
	                var tempVal = val.substr(6, 4);
	                if (isNaN(tempVal)) {
	                    document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 9);
	                }
	            }
	            else if (val.length > 10) {
	                var tempVal = val.substr(6, 4);
	                document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 10);
	            }
	            this.previousDateVal = document.querySelector(parentClass + ".react-datepicker__input-container").getElementsByTagName("input")[0].value;
	        }
	    };
	    Person.prototype.closeHealthInformationPopup = function () {
	        this.setState({
	            showHealthPopup: false
	        });
	    };
	    ;
	    Person.prototype.render = function () {
	        var _this = this;
	        var toolTipStyles = {
	            wrapper: {
	                marginLeft: "15px",
	                top: "-16px",
	                zIndex: "none"
	            },
	            content: {
	                background: 'none',
	                borderRadius: '10px',
	                fontSize: "12px",
	                color: "#ffffff",
	                whiteSpace: "normal",
	                padding: '.3em 5px',
	            },
	            tooltip: {
	                borderRadius: '10px',
	                width: "109px",
	                background: 'rgba(0, 0, 0, 0.5)'
	            },
	            arrow: {
	                borderTop: 'solid rgba(0, 0, 0, 0.5) 5px'
	            },
	            gap: {}
	        };
	        var toolTipStylesTobaccoUsage = JSON.parse(JSON.stringify(toolTipStyles));
	        toolTipStylesTobaccoUsage.tooltip.width = "250px";
	        var statesObjects = states_1.getStateObjects();
	        var personIndex = this.props.index;
	        var _a = this.props, errors = _a.errors, person = _a.person;
	        errors = errors || {};
	        person = person || {};
	        var s_birthDate = this.state.s_birthDate || person.s_birthDate;
	        s_birthDate = s_birthDate && s_birthDate.isValid() ? s_birthDate : "";
	        var healthRatingObjects = [
	            { value: "Excellent", label: "Excellent" },
	            { value: "Very Good", label: "Very Good" },
	            { value: "Good", label: "Good" },
	            { value: "Fair", label: "Fair" }
	        ];
	        var _b = this.state, year = _b.year, month = _b.month, date = _b.date;
	        if (!!!year) {
	            year = "YYYY";
	        }
	        ;
	        if (!!!month) {
	            month = "MM";
	        }
	        ;
	        if (!!!date) {
	            date = "DD";
	        }
	        ;
	        var currentDate = moment.now();
	        var minDate = moment('1900-01-01');
	        return (React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-one-person-container"}, React.createElement("div", null, React.createElement(react_bootstrap_1.Col, {sm: 12, style: { textAlign: "center", fontSize: "26px" }, className: "c-person-header-text fwbold"}, "Quote Information"), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { marginBottom: "0px" }, className: "person-name-container"}, React.createElement(textInput_1.default, {name: "first-applicant-name-" + personIndex, label: "First Name", placeholder: "First Name", value: person.name, onChange: function (e) {
	            _this.onChange("name", e.target.value);
	        }, className: this.getErrorsClassNames(errors, "nameError")}), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error " + (errors.nameError ? "visibility-show" : "visibility-hidden"), style: { paddingLeft: "0px" }}, "Please enter applicant name.")), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text"}, "Gender"), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { paddingRight: "22px", marginBottom: "0px" }, className: "person-gender-container"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group hidden-xs"}, React.createElement("div", {className: "c-radio", style: { marginBottom: "0px" }, onClick: function () {
	            _this.onChange("s_gender", "1");
	        }}, React.createElement("input", {type: "radio", name: "person_s_gender_" + personIndex, checked: person.s_gender == "1"}), React.createElement("span", null), React.createElement("label", {htmlFor: "person_s_gender_" + personIndex}, " Male ")), React.createElement("div", {className: "c-radio", style: { marginBottom: "0px" }, onClick: function () {
	            _this.onChange("s_gender", "2");
	        }}, React.createElement("input", {type: "radio", name: "person_s_gender_" + personIndex, checked: person.s_gender == "2"}), React.createElement("span", null), React.createElement("label", {htmlFor: "person_s_gender_" + personIndex, style: { marginBottom: "0px" }}, " Female "))), React.createElement(react_bootstrap_1.Row, {className: "visible-xs"}, React.createElement(react_bootstrap_1.Col, {xs: 6}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default btn-checkbox circular " + (person.s_gender == "1" ? "active" : ""), onClick: function () {
	            _this.onChange("s_gender", "1");
	        }}, "MALE")), React.createElement(react_bootstrap_1.Col, {xs: 6}, React.createElement(react_bootstrap_1.Button, {style: { marginBottom: "0px" }, className: "c-button-default circular btn-checkbox " + (person.s_gender == "2" ? "active" : ""), onClick: function () {
	            _this.onChange("s_gender", "2");
	        }}, "FEMALE"))), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error " + (errors.s_genderError ? "visibility-show" : "visibility-hidden"), style: { paddingLeft: "0px", marginTop: "0px" }}, "Please select gender."))), React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "0px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text", style: { marginTop: "0px", marginBottom: "3px" }}, "Birth date"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "birth-date-picker-container"}, React.createElement("span", {className: "test-class"}), React.createElement(react_bootstrap_1.FormGroup, {controlId: "change_handler_" + this.props.personIndex}, React.createElement(react_bootstrap_1.ControlLabel, null, React.createElement("div", {className: "custom-date-picker-container"}, React.createElement("span", {className: "custom-date-picker", onClick: this.props.onClick}, React.createElement("img", {src: "../images/calendar.svg"})))), React.createElement(react_datepicker_1.default, {selected: s_birthDate, onChange: function (date) {
	            _this.onDateChange("s_birthDate", date);
	        }, showMonthDropdown: true, showYearDropdown: true, dropdownMode: "select", placeholderText: "MM/DD/YYYY", onChangeRaw: this.onChangeRaw.bind(this), minDate: moment().subtract(120, "year"), maxDate: moment().add(0, "month")}))), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error " + (errors.s_birthDateError ? "visibility-show" : "visibility-hidden")}, "Please select birth date.")), React.createElement("div", {style: { marginBottom: "12px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text", style: { marginBottom: "2px" }}, "State"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-address-input"}, React.createElement(react_select_1.default, {name: "form-field-name1", options: statesObjects, value: person.state, onChange: function (stateObj) {
	            _this.onChange("state", stateObj.value);
	        }, className: this.getErrorsClassNames(errors, "stateError")}), React.createElement(react_bootstrap_1.Col, {style: { paddingLeft: "0px", marginTop: "-5px" }, sm: 12, className: "c-subheader-text error " + (errors.stateError ? "visibility-show" : "visibility-hidden")}, "Please select state."))), React.createElement("div", {style: { marginBottom: "0px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text", style: { marginTop: "5px" }}, "How would you rate your overall health?"), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { marginBottom: "0px", marginTop: "6px" }}, React.createElement(react_select_1.default, {name: "form-field-name-" + personIndex, options: healthRatingObjects, value: person.health, onChange: function (healthObj) {
	            _this.onChange("health", healthObj.value);
	        }, className: this.getErrorsClassNames(errors, "healthError")}), React.createElement("div", {style: { display: 'inline-block' }, onClick: function () {
	            _this.setState({
	                showHealthPopup: true
	            });
	        }}, React.createElement("img", {style: { marginTop: "-38px", marginLeft: "15px" }, src: "../images/question-mark.svg"})), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { marginTop: "-5px", paddingLeft: "0px" }, className: "c-subheader-text error " + (errors.healthError ? "visibility-show" : "visibility-hidden")}, "Please select health status.")), React.createElement(HealthInformationPopup_1.default, {show: this.state.showHealthPopup, onCloseModal: this.closeHealthInformationPopup.bind(this)})), React.createElement("div", null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text", style: { marginTop: "0px" }}, React.createElement("span", null, "Tobacco use"), React.createElement("div", {style: { display: 'inline-block' }}, React.createElement(react_lightweight_tooltip_1.Tooltip, {content: "If you use any tobacco-based products, e-cigarettes, vapes, or marijuana, you are a tobacco user.", styles: toolTipStylesTobaccoUsage}, React.createElement("img", {style: { marginBottom: "-30px" }, src: "../images/question-mark.svg"})))), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { paddingRight: "22px" }, className: "person-tobacco-container"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group hidden-xs"}, React.createElement("div", {className: "c-radio", style: { marginBottom: "0px" }, onClick: function () {
	            _this.onChange("smoke", "Yes");
	        }}, React.createElement("input", {type: "radio", name: "person1_smoke_" + personIndex, checked: person.smoke == "Yes"}), React.createElement("span", null), React.createElement("label", null, " Yes ")), React.createElement("div", {className: "c-radio", style: { marginBottom: "0px" }, onClick: function () {
	            _this.onChange("smoke", "No");
	        }}, React.createElement("input", {type: "radio", name: "person1_smoke_" + personIndex, checked: person.smoke == "No"}), React.createElement("span", null), React.createElement("label", {style: { marginBottom: "0px" }}, " No "))), React.createElement(react_bootstrap_1.Row, {className: "visible-xs"}, React.createElement(react_bootstrap_1.Col, {xs: 6}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default btn-checkbox circular " + (person.smoke == "Yes" ? "active" : ""), onClick: function () {
	            _this.onChange("smoke", "Yes");
	        }}, "YES")), React.createElement(react_bootstrap_1.Col, {xs: 6}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default btn-checkbox circular " + (person.smoke == "No" ? "active" : ""), onClick: function () {
	            _this.onChange("smoke", "No");
	        }}, "NO"))), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error " + (errors.smokeError ? "visibility-show" : "visibility-hidden"), style: { marginTop: "0px", paddingLeft: "0px" }}, "Please indicate whether or not use tobacco products.")))));
	    };
	    return Person;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Person;


/***/ }),
/* 683 */
/***/ (function(module, exports) {

	"use strict";
	function getStateObjects() {
	    return [
	        { value: 'AL', label: 'Alabama' },
	        { value: 'AK', label: 'Alaska' },
	        { value: 'AZ', label: 'Arizona' },
	        { value: 'AR', label: 'Arkansas' },
	        { value: 'CA', label: 'California' },
	        { value: 'CO', label: 'Colorado' },
	        { value: 'CT', label: 'Connecticut' },
	        { value: 'DE', label: 'Delaware' },
	        { value: 'DC', label: 'District of Columbia' },
	        { value: 'FL', label: 'Florida' },
	        { value: 'GA', label: 'Georgia' },
	        { value: 'HI', label: 'Hawaii' },
	        { value: 'ID', label: 'Idaho' },
	        { value: 'IL', label: 'Illinois' },
	        { value: 'IN', label: 'Indiana' },
	        { value: 'IA', label: 'Iowa' },
	        { value: 'KS', label: 'Kansas' },
	        { value: 'KY', label: 'Kentucky' },
	        { value: 'LA', label: 'Louisiana' },
	        { value: 'ME', label: 'Maine' },
	        { value: 'MD', label: 'Maryland' },
	        { value: 'MA', label: 'Massachusetts' },
	        { value: 'MI', label: 'Michigan' },
	        { value: 'MN', label: 'Minnesota' },
	        { value: 'MS', label: 'Mississippi' },
	        { value: 'MO', label: 'Missouri' },
	        { value: 'MT', label: 'Montana' },
	        { value: 'NE', label: 'Nebraska' },
	        { value: 'NV', label: 'Nevada' },
	        { value: 'NH', label: 'New Hampshire' },
	        { value: 'NJ', label: 'New Jersey' },
	        { value: 'NM', label: 'New Mexico' },
	        { value: 'NY', label: 'New York' },
	        { value: 'NC', label: 'North Carolina' },
	        { value: 'ND', label: 'North Dakota' },
	        { value: 'OH', label: 'Ohio' },
	        { value: 'OK', label: 'Oklahoma' },
	        { value: 'OR', label: 'Oregon' },
	        { value: 'PA', label: 'Pennsylvania' },
	        { value: 'RI', label: 'Rhode Island' },
	        { value: 'SC', label: 'South Carolina' },
	        { value: 'SD', label: 'South Dakota' },
	        { value: 'TN', label: 'Tennessee' },
	        { value: 'TX', label: 'Texas' },
	        { value: 'UT', label: 'Utah' },
	        { value: 'VT', label: 'Vermont' },
	        { value: 'VA', label: 'Virginia' },
	        { value: 'WA', label: 'Washington' },
	        { value: 'WV', label: 'West Virginia' },
	        { value: 'WI', label: 'Wisconsin' },
	        { value: 'WY', label: 'Wyoming' }
	    ];
	}
	exports.getStateObjects = getStateObjects;


/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

	!function(e,t){ true?module.exports=t(__webpack_require__(556),__webpack_require__(1),__webpack_require__(685)):"function"==typeof define&&define.amd?define(["moment","react","react-onclickoutside"],t):"object"==typeof exports?exports.DatePicker=t(require("moment"),require("react"),require("react-onclickoutside")):e.DatePicker=t(e.moment,e.React,e.onClickOutside)}(this,function(e,t,n){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=n(1),u=r(c),l=n(4),f=r(l),d=n(5),h=(r(d),n(20)),m=r(h),y=n(11),v=r(y),b=n(18),g=n(2),w=r(g),_=n(12),D=r(_),O="react-datepicker-ignore-onclickoutside",k=(0,D.default)(u.default),E=function(e){function t(e){a(this,t);var n=i(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.calcInitialState=function(){var e=n.props.openToDate?(0,w.default)(n.props.openToDate):n.props.selectsEnd&&n.props.startDate?(0,w.default)(n.props.startDate):n.props.selectsStart&&n.props.endDate?(0,w.default)(n.props.endDate):"undefined"!=typeof n.props.utcOffset?w.default.utc().utcOffset(n.props.utcOffset):(0,w.default)(),t=(0,b.getEffectiveMinDate)(n.props),r=(0,b.getEffectiveMaxDate)(n.props),o=t&&e.isBefore(t)?t:r&&e.isAfter(r)?r:e;return{open:!1,preventFocus:!1,preSelection:n.props.selected?(0,w.default)(n.props.selected):o}},n.clearPreventFocusTimeout=function(){n.preventFocusTimeout&&clearTimeout(n.preventFocusTimeout)},n.setFocus=function(){n.input.focus()},n.setOpen=function(e){n.setState({open:e,preSelection:e&&n.state.open?n.state.preSelection:n.calcInitialState().preSelection})},n.handleFocus=function(e){n.state.preventFocus||(n.props.onFocus(e),n.setOpen(!0))},n.cancelFocusInput=function(){clearTimeout(n.inputFocusTimeout),n.inputFocusTimeout=null},n.deferFocusInput=function(){n.cancelFocusInput(),n.inputFocusTimeout=setTimeout(function(){return n.setFocus()},1)},n.handleDropdownFocus=function(){n.cancelFocusInput()},n.handleBlur=function(e){n.state.open?n.deferFocusInput():n.props.onBlur(e)},n.handleCalendarClickOutside=function(e){n.props.inline||n.setOpen(!1),n.props.onClickOutside(e),n.props.withPortal&&e.preventDefault()},n.handleChange=function(e){if(!n.props.onChangeRaw||(n.props.onChangeRaw(e),!e.isDefaultPrevented())){n.setState({inputValue:e.target.value});var t=(0,b.parseDate)(e.target.value,n.props);!t&&e.target.value||n.setSelected(t,e,!0)}},n.handleSelect=function(e,t){n.setState({preventFocus:!0},function(){return n.preventFocusTimeout=setTimeout(function(){return n.setState({preventFocus:!1})},50),n.preventFocusTimeout}),n.setSelected(e,t),n.props.shouldCloseOnSelect?n.props.inline||n.setOpen(!1):n.setPreSelection(e)},n.setSelected=function(e,t,r){var o=e;null!==o&&(0,b.isDayDisabled)(o,n.props)||((0,b.isSameDay)(n.props.selected,o)&&!n.props.allowSameDay||(null!==o&&(n.props.selected&&(o=(0,w.default)(o).set({hour:n.props.selected.hour(),minute:n.props.selected.minute(),second:n.props.selected.second()})),n.setState({preSelection:o})),n.props.onChange(o,t)),n.props.onSelect(o,t),r||n.setState({inputValue:null}))},n.setPreSelection=function(e){var t="undefined"!=typeof n.props.minDate&&"undefined"!=typeof n.props.maxDate,r=!t||!e||(0,b.isDayInRange)(e,n.props.minDate,n.props.maxDate);r&&n.setState({preSelection:e})},n.onInputClick=function(){n.props.disabled||n.setOpen(!0)},n.onInputKeyDown=function(e){n.props.onKeyDown(e);var t=e.key;if(!n.state.open&&!n.props.inline)return void("Enter"!==t&&"Escape"!==t&&"Tab"!==t&&n.onInputClick());var r=(0,w.default)(n.state.preSelection);if("Enter"===t)e.preventDefault(),w.default.isMoment(n.state.preSelection)||w.default.isDate(n.state.preSelection)?(n.handleSelect(r,e),!n.props.shouldCloseOnSelect&&n.setPreSelection(r)):n.setOpen(!1);else if("Escape"===t)e.preventDefault(),n.setOpen(!1);else if("Tab"===t)n.setOpen(!1);else if(!n.props.disabledKeyboardNavigation){var o=void 0;switch(t){case"ArrowLeft":e.preventDefault(),o=r.subtract(1,"days");break;case"ArrowRight":e.preventDefault(),o=r.add(1,"days");break;case"ArrowUp":e.preventDefault(),o=r.subtract(1,"weeks");break;case"ArrowDown":e.preventDefault(),o=r.add(1,"weeks");break;case"PageUp":e.preventDefault(),o=r.subtract(1,"months");break;case"PageDown":e.preventDefault(),o=r.add(1,"months");break;case"Home":e.preventDefault(),o=r.subtract(1,"years");break;case"End":e.preventDefault(),o=r.add(1,"years")}n.setPreSelection(o)}},n.onClearClick=function(e){e.preventDefault(),n.props.onChange(null,e)},n.renderCalendar=function(){return n.props.inline||n.state.open&&!n.props.disabled?f.default.createElement(k,{ref:function(e){n.calendar=e},locale:n.props.locale,dateFormat:n.props.dateFormatCalendar,useWeekdaysShort:n.props.useWeekdaysShort,dropdownMode:n.props.dropdownMode,selected:n.props.selected,preSelection:n.state.preSelection,onSelect:n.handleSelect,onWeekSelect:n.props.onWeekSelect,openToDate:n.props.openToDate,minDate:n.props.minDate,maxDate:n.props.maxDate,selectsStart:n.props.selectsStart,selectsEnd:n.props.selectsEnd,startDate:n.props.startDate,endDate:n.props.endDate,excludeDates:n.props.excludeDates,filterDate:n.props.filterDate,onClickOutside:n.handleCalendarClickOutside,formatWeekNumber:n.props.formatWeekNumber,highlightDates:n.props.highlightDates,includeDates:n.props.includeDates,inline:n.props.inline,peekNextMonth:n.props.peekNextMonth,showMonthDropdown:n.props.showMonthDropdown,showWeekNumbers:n.props.showWeekNumbers,showYearDropdown:n.props.showYearDropdown,forceShowMonthNavigation:n.props.forceShowMonthNavigation,scrollableYearDropdown:n.props.scrollableYearDropdown,todayButton:n.props.todayButton,weekLabel:n.props.weekLabel,utcOffset:n.props.utcOffset,outsideClickIgnoreClass:O,fixedHeight:n.props.fixedHeight,monthsShown:n.props.monthsShown,onDropdownFocus:n.handleDropdownFocus,onMonthChange:n.props.onMonthChange,dayClassName:n.props.dayClassName,className:n.props.calendarClassName,yearDropdownItemNumber:n.props.yearDropdownItemNumber},n.props.children):null},n.renderDateInput=function(){var e=(0,v.default)(n.props.className,o({},O,n.state.open)),t=n.props.customInput||f.default.createElement("input",{type:"text"}),r="string"==typeof n.props.value?n.props.value:"string"==typeof n.state.inputValue?n.state.inputValue:(0,b.safeDateFormat)(n.props.selected,n.props);return f.default.cloneElement(t,{ref:function(e){n.input=e},value:r,onBlur:n.handleBlur,onChange:n.handleChange,onClick:n.onInputClick,onFocus:n.handleFocus,onKeyDown:n.onInputKeyDown,id:n.props.id,name:n.props.name,autoFocus:n.props.autoFocus,placeholder:n.props.placeholderText,disabled:n.props.disabled,autoComplete:n.props.autoComplete,className:e,title:n.props.title,readOnly:n.props.readOnly,required:n.props.required,tabIndex:n.props.tabIndex})},n.renderClearButton=function(){return n.props.isClearable&&null!=n.props.selected?f.default.createElement("a",{className:"react-datepicker__close-icon",href:"#",onClick:n.onClearClick}):null},n.state=n.calcInitialState(),n}return s(t,e),p(t,null,[{key:"defaultProps",get:function(){return{allowSameDay:!1,dateFormat:"L",dateFormatCalendar:"MMMM YYYY",onChange:function(){},disabled:!1,disabledKeyboardNavigation:!1,dropdownMode:"scroll",onFocus:function(){},onBlur:function(){},onKeyDown:function(){},onSelect:function(){},onClickOutside:function(){},onMonthChange:function(){},utcOffset:(0,w.default)().utcOffset(),monthsShown:1,withPortal:!1,shouldCloseOnSelect:!0}}}]),p(t,[{key:"componentWillReceiveProps",value:function(e){var t=this.props.selected&&this.props.selected.month(),n=e.selected&&e.selected.month();this.props.inline&&t!==n&&this.setPreSelection(e.selected)}},{key:"componentWillUnmount",value:function(){this.clearPreventFocusTimeout()}},{key:"render",value:function(){var e=this.renderCalendar();return this.props.inline&&!this.props.withPortal?e:this.props.withPortal?f.default.createElement("div",null,this.props.inline?null:f.default.createElement("div",{className:"react-datepicker__input-container"},this.renderDateInput(),this.renderClearButton()),this.state.open||this.props.inline?f.default.createElement("div",{className:"react-datepicker__portal"},e):null):f.default.createElement(m.default,{className:this.props.popperClassName,hidePopper:!this.state.open||this.props.disabled,popperModifiers:this.props.popperModifiers,targetComponent:f.default.createElement("div",{className:"react-datepicker__input-container"},this.renderDateInput(),this.renderClearButton()),popperComponent:e,popperPlacement:this.props.popperPlacement})}}]),t}(f.default.Component);t.default=E},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=n(2),c=r(p),u=n(3),l=r(u),f=n(13),d=r(f),h=n(15),m=r(h),y=n(4),v=r(y),b=n(5),g=(r(b),n(11)),w=r(g),_=n(18),D=["react-datepicker__year-select","react-datepicker__month-select"],O=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(e.className||"").split(/\s+/);return D.some(function(e){return t.indexOf(e)>=0})},k=function(e){function t(e){o(this,t);var n=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.handleClickOutside=function(e){n.props.onClickOutside(e)},n.handleDropdownFocus=function(e){O(e.target)&&n.props.onDropdownFocus()},n.getDateInView=function(){var e=n.props,t=e.preSelection,r=e.selected,o=e.openToDate,a=e.utcOffset,i=(0,_.getEffectiveMinDate)(n.props),s=(0,_.getEffectiveMaxDate)(n.props),p=c.default.utc().utcOffset(a),u=o||r||t;return u?u:i&&p.isBefore(i)?i:s&&p.isAfter(s)?s:p},n.localizeMoment=function(e){return e.clone().locale(n.props.locale||c.default.locale())},n.increaseMonth=function(){n.setState({date:n.state.date.clone().add(1,"month")},function(){return n.handleMonthChange(n.state.date)})},n.decreaseMonth=function(){n.setState({date:n.state.date.clone().subtract(1,"month")},function(){return n.handleMonthChange(n.state.date)})},n.handleDayClick=function(e,t){return n.props.onSelect(e,t)},n.handleDayMouseEnter=function(e){return n.setState({selectingDate:e})},n.handleMonthMouseLeave=function(){return n.setState({selectingDate:null})},n.handleMonthChange=function(e){n.props.onMonthChange&&n.props.onMonthChange(e)},n.changeYear=function(e){n.setState({date:n.state.date.clone().set("year",e)})},n.changeMonth=function(e){n.setState({date:n.state.date.clone().set("month",e)},function(){return n.handleMonthChange(n.state.date)})},n.header=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.state.date,t=e.clone().startOf("week"),r=[];return n.props.showWeekNumbers&&r.push(v.default.createElement("div",{key:"W",className:"react-datepicker__day-name"},n.props.weekLabel||"#")),r.concat([0,1,2,3,4,5,6].map(function(e){var r=t.clone().add(e,"days"),o=n.props.useWeekdaysShort?r.localeData().weekdaysShort(r):r.localeData().weekdaysMin(r);return v.default.createElement("div",{key:e,className:"react-datepicker__day-name"},o)}))},n.renderPreviousMonthButton=function(){if(n.props.forceShowMonthNavigation||!(0,_.allDaysDisabledBefore)(n.state.date,"month",n.props))return v.default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--previous",onClick:n.decreaseMonth})},n.renderNextMonthButton=function(){if(n.props.forceShowMonthNavigation||!(0,_.allDaysDisabledAfter)(n.state.date,"month",n.props))return v.default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--next",onClick:n.increaseMonth})},n.renderCurrentMonth=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.state.date,t=["react-datepicker__current-month"];return n.props.showYearDropdown&&t.push("react-datepicker__current-month--hasYearDropdown"),n.props.showMonthDropdown&&t.push("react-datepicker__current-month--hasMonthDropdown"),v.default.createElement("div",{className:t.join(" ")},e.format(n.props.dateFormat))},n.renderYearDropdown=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(n.props.showYearDropdown&&!e)return v.default.createElement(l.default,{dropdownMode:n.props.dropdownMode,onChange:n.changeYear,minDate:n.props.minDate,maxDate:n.props.maxDate,year:n.state.date.year(),scrollableYearDropdown:n.props.scrollableYearDropdown,yearDropdownItemNumber:n.props.yearDropdownItemNumber})},n.renderMonthDropdown=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(n.props.showMonthDropdown)return v.default.createElement(d.default,{dropdownMode:n.props.dropdownMode,locale:n.props.locale,dateFormat:n.props.dateFormat,onChange:n.changeMonth,month:n.state.date.month()})},n.renderTodayButton=function(){if(n.props.todayButton)return v.default.createElement("div",{className:"react-datepicker__today-button",onClick:function(e){return n.props.onSelect(c.default.utc().utcOffset(n.props.utcOffset).startOf("date"),e)}},n.props.todayButton)},n.renderMonths=function(){for(var e=[],t=0;t<n.props.monthsShown;++t){var r=n.state.date.clone().add(t,"M"),o="month-"+t;e.push(v.default.createElement("div",{key:o,className:"react-datepicker__month-container"},v.default.createElement("div",{className:"react-datepicker__header"},n.renderCurrentMonth(r),v.default.createElement("div",{className:"react-datepicker__header__dropdown react-datepicker__header__dropdown--"+n.props.dropdownMode,onFocus:n.handleDropdownFocus},n.renderMonthDropdown(0!==t),n.renderYearDropdown(0!==t)),v.default.createElement("div",{className:"react-datepicker__day-names"},n.header(r))),v.default.createElement(m.default,{day:r,dayClassName:n.props.dayClassName,onDayClick:n.handleDayClick,onDayMouseEnter:n.handleDayMouseEnter,onMouseLeave:n.handleMonthMouseLeave,onWeekSelect:n.props.onWeekSelect,formatWeekNumber:n.props.formatWeekNumber,minDate:n.props.minDate,maxDate:n.props.maxDate,excludeDates:n.props.excludeDates,highlightDates:n.props.highlightDates,selectingDate:n.state.selectingDate,includeDates:n.props.includeDates,inline:n.props.inline,fixedHeight:n.props.fixedHeight,filterDate:n.props.filterDate,preSelection:n.props.preSelection,selected:n.props.selected,selectsStart:n.props.selectsStart,selectsEnd:n.props.selectsEnd,showWeekNumbers:n.props.showWeekNumbers,startDate:n.props.startDate,endDate:n.props.endDate,peekNextMonth:n.props.peekNextMonth,utcOffset:n.props.utcOffset})))}return e},n.state={date:n.localizeMoment(n.getDateInView()),selectingDate:null},n}return i(t,e),s(t,null,[{key:"defaultProps",get:function(){return{onDropdownFocus:function(){},utcOffset:c.default.utc().utcOffset(),monthsShown:1,forceShowMonthNavigation:!1}}}]),s(t,[{key:"componentWillReceiveProps",value:function(e){e.preSelection&&!(0,_.isSameDay)(e.preSelection,this.props.preSelection)?this.setState({date:this.localizeMoment(e.preSelection)}):e.openToDate&&!(0,_.isSameDay)(e.openToDate,this.props.openToDate)&&this.setState({date:this.localizeMoment(e.openToDate)})}},{key:"render",value:function(){return v.default.createElement("div",{className:(0,w.default)("react-datepicker",this.props.className)},v.default.createElement("div",{className:"react-datepicker__triangle"}),this.renderPreviousMonthButton(),this.renderNextMonthButton(),this.renderMonths(),this.renderTodayButton(),this.props.children)}}]),t}(v.default.Component);t.default=k},function(t,n){t.exports=e},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=n(4),c=r(p),u=n(5),l=(r(u),n(10)),f=r(l),d=n(12),h=r(d),m=(0,h.default)(f.default),y=function(e){function t(){var e,n,r,i;o(this,t);for(var s=arguments.length,p=Array(s),u=0;u<s;u++)p[u]=arguments[u];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(p))),r.state={dropdownVisible:!1},r.renderSelectOptions=function(){for(var e=r.props.minDate?r.props.minDate.year():1900,t=r.props.maxDate?r.props.maxDate.year():2100,n=[],o=e;o<=t;o++)n.push(c.default.createElement("option",{key:o,value:o},o));return n},r.onSelectChange=function(e){r.onChange(e.target.value)},r.renderSelectMode=function(){return c.default.createElement("select",{value:r.props.year,className:"react-datepicker__year-select",onChange:r.onSelectChange},r.renderSelectOptions())},r.renderReadView=function(e){return c.default.createElement("div",{key:"read",style:{visibility:e?"visible":"hidden"},className:"react-datepicker__year-read-view",onClick:r.toggleDropdown},c.default.createElement("span",{className:"react-datepicker__year-read-view--down-arrow"}),c.default.createElement("span",{className:"react-datepicker__year-read-view--selected-year"},r.props.year))},r.renderDropdown=function(){return c.default.createElement(m,{key:"dropdown",ref:"options",year:r.props.year,onChange:r.onChange,onCancel:r.toggleDropdown,scrollableYearDropdown:r.props.scrollableYearDropdown,yearDropdownItemNumber:r.props.yearDropdownItemNumber})},r.renderScrollMode=function(){var e=r.state.dropdownVisible,t=[r.renderReadView(!e)];return e&&t.unshift(r.renderDropdown()),t},r.onChange=function(e){r.toggleDropdown(),e!==r.props.year&&r.props.onChange(e)},r.toggleDropdown=function(){r.setState({dropdownVisible:!r.state.dropdownVisible})},i=n,a(r,i)}return i(t,e),s(t,[{key:"render",value:function(){var e=void 0;switch(this.props.dropdownMode){case"scroll":e=this.renderScrollMode();break;case"select":e=this.renderSelectMode()}return c.default.createElement("div",{className:"react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--"+this.props.dropdownMode},e)}}]),t}(c.default.Component);t.default=y},function(e,n){e.exports=t},function(e,t,n){e.exports=n(6)()},function(e,t,n){"use strict";var r=n(7),o=n(8),a=n(9);e.exports=function(){function e(e,t,n,r,i,s){s!==a&&o(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t){"use strict";function n(e){return function(){return e}}var r=function(){};r.thatReturns=n,r.thatReturnsFalse=n(!1),r.thatReturnsTrue=n(!0),r.thatReturnsNull=n(null),r.thatReturnsThis=function(){return this},r.thatReturnsArgument=function(e){return e},e.exports=r},function(e,t,n){"use strict";function r(e,t,n,r,a,i,s,p){if(o(t),!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,a,i,s,p],l=0;c=new Error(t.replace(/%s/g,function(){return u[l++]})),c.name="Invariant Violation"}throw c.framesToPop=1,c}}var o=function(e){};e.exports=r},function(e,t){"use strict";var n="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";e.exports=n},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function s(e,t){for(var n=[],r=0;r<2*t+1;r++)n.push(e+t-r);return n}Object.defineProperty(t,"__esModule",{value:!0});var p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=n(4),u=r(c),l=n(5),f=(r(l),n(11)),d=r(f),h=function(e){function t(e){o(this,t);var n=a(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));n.renderOptions=function(){var e=n.props.year,t=n.state.yearsList.map(function(t){return u.default.createElement("div",{className:"react-datepicker__year-option",key:t,ref:t,onClick:n.onChange.bind(n,t)},e===t?u.default.createElement("span",{className:"react-datepicker__year-option--selected"},"✓"):"",t)});return t.unshift(u.default.createElement("div",{className:"react-datepicker__year-option",ref:"upcoming",key:"upcoming",onClick:n.incrementYears},u.default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-upcoming"}))),t.push(u.default.createElement("div",{className:"react-datepicker__year-option",ref:"previous",key:"previous",onClick:n.decrementYears},u.default.createElement("a",{className:"react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-previous"}))),t},n.onChange=function(e){n.props.onChange(e)},n.handleClickOutside=function(){n.props.onCancel()},n.shiftYears=function(e){var t=n.state.yearsList.map(function(t){return t+e});n.setState({yearsList:t})},n.incrementYears=function(){return n.shiftYears(1)},n.decrementYears=function(){return n.shiftYears(-1)};var r=e.yearDropdownItemNumber,i=e.scrollableYearDropdown,p=r||(i?10:5);return n.state={yearsList:s(n.props.year,p)},n}return i(t,e),p(t,[{key:"render",value:function(){var e=(0,d.default)({"react-datepicker__year-dropdown":!0,"react-datepicker__year-dropdown--scrollable":this.props.scrollableYearDropdown});return u.default.createElement("div",{className:e},this.renderOptions())}}]),t}(u.default.Component);t.default=h},function(e,t,n){var r,o;/*!
		  Copyright (c) 2016 Jed Watson.
		  Licensed under the MIT License (MIT), see
		  http://jedwatson.github.io/classnames
		*/
	!function(){"use strict";function n(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var o=typeof r;if("string"===o||"number"===o)e.push(r);else if(Array.isArray(r))e.push(n.apply(null,r));else if("object"===o)for(var i in r)a.call(r,i)&&r[i]&&e.push(i)}}return e.join(" ")}var a={}.hasOwnProperty;"undefined"!=typeof e&&e.exports?e.exports=n:(r=[],o=function(){return n}.apply(t,r),!(void 0!==o&&(e.exports=o)))}()},function(e,t){e.exports=n},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=n(4),c=r(p),u=n(5),l=(r(u),n(14)),f=r(l),d=n(12),h=r(d),m=n(2),y=r(m),v=(0,h.default)(f.default),b=function(e){function t(){var e,n,r,i;o(this,t);for(var s=arguments.length,p=Array(s),u=0;u<s;u++)p[u]=arguments[u];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(p))),r.state={dropdownVisible:!1},r.renderSelectOptions=function(e){return e.map(function(e,t){return c.default.createElement("option",{key:t,value:t},e)})},r.renderSelectMode=function(e){return c.default.createElement("select",{value:r.props.month,className:"react-datepicker__month-select",onChange:function(e){return r.onChange(e.target.value)}},r.renderSelectOptions(e))},r.renderReadView=function(e,t){return c.default.createElement("div",{key:"read",style:{visibility:e?"visible":"hidden"},className:"react-datepicker__month-read-view",onClick:r.toggleDropdown},c.default.createElement("span",{className:"react-datepicker__month-read-view--selected-month"},t[r.props.month]),c.default.createElement("span",{className:"react-datepicker__month-read-view--down-arrow"}))},r.renderDropdown=function(e){return c.default.createElement(v,{key:"dropdown",ref:"options",month:r.props.month,monthNames:e,onChange:r.onChange,onCancel:r.toggleDropdown})},r.renderScrollMode=function(e){var t=r.state.dropdownVisible,n=[r.renderReadView(!t,e)];return t&&n.unshift(r.renderDropdown(e)),n},r.onChange=function(e){r.toggleDropdown(),e!==r.props.month&&r.props.onChange(e)},r.toggleDropdown=function(){return r.setState({dropdownVisible:!r.state.dropdownVisible})},i=n,a(r,i)}return i(t,e),s(t,[{key:"render",value:function(){var e=this,t=y.default.localeData(this.props.locale),n=[0,1,2,3,4,5,6,7,8,9,10,11].map(function(n){return t.months((0,y.default)({M:n}),e.props.dateFormat)}),r=void 0;switch(this.props.dropdownMode){case"scroll":r=this.renderScrollMode(n);break;case"select":r=this.renderSelectMode(n)}return c.default.createElement("div",{className:"react-datepicker__month-dropdown-container react-datepicker__month-dropdown-container--"+this.props.dropdownMode},r)}}]),t}(c.default.Component);t.default=b},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=n(4),c=r(p),u=n(5),l=(r(u),function(e){function t(){var e,n,r,i;o(this,t);for(var s=arguments.length,p=Array(s),u=0;u<s;u++)p[u]=arguments[u];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(p))),r.renderOptions=function(){return r.props.monthNames.map(function(e,t){return c.default.createElement("div",{className:"react-datepicker__month-option",key:e,ref:e,onClick:r.onChange.bind(r,t)},r.props.month===t?c.default.createElement("span",{className:"react-datepicker__month-option--selected"},"✓"):"",e)})},r.onChange=function(e){return r.props.onChange(e)},r.handleClickOutside=function(){return r.props.onCancel()},i=n,a(r,i)}return i(t,e),s(t,[{key:"render",value:function(){return c.default.createElement("div",{className:"react-datepicker__month-dropdown"},this.renderOptions())}}]),t}(c.default.Component));t.default=l},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=n(4),c=r(p),u=n(5),l=(r(u),n(11)),f=r(l),d=n(16),h=r(d),m=6,y=function(e){function t(){var e,n,r,i;o(this,t);for(var s=arguments.length,p=Array(s),u=0;u<s;u++)p[u]=arguments[u];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(p))),r.handleDayClick=function(e,t){r.props.onDayClick&&r.props.onDayClick(e,t)},r.handleDayMouseEnter=function(e){r.props.onDayMouseEnter&&r.props.onDayMouseEnter(e)},r.handleMouseLeave=function(){r.props.onMouseLeave&&r.props.onMouseLeave()},r.isWeekInMonth=function(e){var t=r.props.day,n=e.clone().add(6,"days");return e.isSame(t,"month")||n.isSame(t,"month")},r.renderWeeks=function(){for(var e=[],t=r.props.fixedHeight,n=r.props.day.clone().startOf("month").startOf("week"),o=0,a=!1;;){if(e.push(c.default.createElement(h.default,{key:o,day:n,month:r.props.day.month(),onDayClick:r.handleDayClick,onDayMouseEnter:r.handleDayMouseEnter,onWeekSelect:r.props.onWeekSelect,formatWeekNumber:r.props.formatWeekNumber,minDate:r.props.minDate,maxDate:r.props.maxDate,excludeDates:r.props.excludeDates,includeDates:r.props.includeDates,inline:r.props.inline,highlightDates:r.props.highlightDates,selectingDate:r.props.selectingDate,filterDate:r.props.filterDate,preSelection:r.props.preSelection,selected:r.props.selected,selectsStart:r.props.selectsStart,selectsEnd:r.props.selectsEnd,showWeekNumber:r.props.showWeekNumbers,startDate:r.props.startDate,endDate:r.props.endDate,dayClassName:r.props.dayClassName,utcOffset:r.props.utcOffset})),a)break;o++,n=n.clone().add(1,"weeks");var i=t&&o>=m,s=!t&&!r.isWeekInMonth(n);if(i||s){if(!r.props.peekNextMonth)break;a=!0}}return e},r.getClassNames=function(){var e=r.props,t=e.selectingDate,n=e.selectsStart,o=e.selectsEnd;return(0,f.default)("react-datepicker__month",{"react-datepicker__month--selecting-range":t&&(n||o)})},i=n,a(r,i)}return i(t,e),s(t,[{key:"render",value:function(){return c.default.createElement("div",{className:this.getClassNames(),onMouseLeave:this.handleMouseLeave,role:"listbox"},this.renderWeeks())}}]),t}(c.default.Component);t.default=y},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=n(4),c=r(p),u=n(5),l=(r(u),n(17)),f=r(l),d=n(19),h=r(d),m=function(e){function t(){var e,n,r,i;o(this,t);for(var s=arguments.length,p=Array(s),u=0;u<s;u++)p[u]=arguments[u];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(p))),r.handleDayClick=function(e,t){r.props.onDayClick&&r.props.onDayClick(e,t)},r.handleDayMouseEnter=function(e){r.props.onDayMouseEnter&&r.props.onDayMouseEnter(e)},r.handleWeekClick=function(e,t,n){"function"==typeof r.props.onWeekSelect&&r.props.onWeekSelect(e,t,n)},r.formatWeekNumber=function(e){return r.props.formatWeekNumber?r.props.formatWeekNumber(e):parseInt(e.format("w"),10)},r.renderDays=function(){var e=r.props.day.clone().startOf("week"),t=[],n=r.formatWeekNumber(e);if(r.props.showWeekNumber){var o=r.props.onWeekSelect?r.handleWeekClick.bind(r,e,n):void 0;t.push(c.default.createElement(h.default,{key:"W",weekNumber:n,onClick:o}))}return t.concat([0,1,2,3,4,5,6].map(function(t){var n=e.clone().add(t,"days");return c.default.createElement(f.default,{key:t,day:n,month:r.props.month,onClick:r.handleDayClick.bind(r,n),onMouseEnter:r.handleDayMouseEnter.bind(r,n),minDate:r.props.minDate,maxDate:r.props.maxDate,excludeDates:r.props.excludeDates,includeDates:r.props.includeDates,inline:r.props.inline,highlightDates:r.props.highlightDates,selectingDate:r.props.selectingDate,filterDate:r.props.filterDate,preSelection:r.props.preSelection,selected:r.props.selected,selectsStart:r.props.selectsStart,selectsEnd:r.props.selectsEnd,startDate:r.props.startDate,endDate:r.props.endDate,dayClassName:r.props.dayClassName,utcOffset:r.props.utcOffset})}))},i=n,a(r,i)}return i(t,e),s(t,[{key:"render",value:function(){return c.default.createElement("div",{className:"react-datepicker__week"},this.renderDays())}}]),t}(c.default.Component);t.default=m},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),u=n(2),l=r(u),f=n(4),d=r(f),h=n(5),m=(r(h),n(11)),y=r(m),v=n(18),b=function(e){function t(){var e,n,r,s;a(this,t);for(var c=arguments.length,u=Array(c),f=0;f<c;f++)u[f]=arguments[f];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(u))),r.handleClick=function(e){!r.isDisabled()&&r.props.onClick&&r.props.onClick(e)},r.handleMouseEnter=function(e){!r.isDisabled()&&r.props.onMouseEnter&&r.props.onMouseEnter(e)},r.isSameDay=function(e){return(0,v.isSameDay)(r.props.day,e)},r.isKeyboardSelected=function(){return!r.props.inline&&!r.isSameDay(r.props.selected)&&r.isSameDay(r.props.preSelection)},r.isDisabled=function(){return(0,v.isDayDisabled)(r.props.day,r.props)},r.getHighLightedClass=function(e){var t=r.props,n=t.day,a=t.highlightDates;if(!a)return o({},e,!1);for(var i={},s=0,c=a.length;s<c;s++){var u=a[s];if(u instanceof l.default)(0,v.isSameDay)(n,u)&&(i[e]=!0);else if("object"===("undefined"==typeof u?"undefined":p(u))){var f=Object.keys(u),d=u[f[0]];if("string"==typeof f[0]&&d.constructor===Array)for(var h=0,m=d.length;h<m;h++)(0,v.isSameDay)(n,d[h])&&(i[f[0]]=!0)}}return i},r.isInRange=function(){var e=r.props,t=e.day,n=e.startDate,o=e.endDate;return!(!n||!o)&&(0,v.isDayInRange)(t,n,o)},r.isInSelectingRange=function(){var e=r.props,t=e.day,n=e.selectsStart,o=e.selectsEnd,a=e.selectingDate,i=e.startDate,s=e.endDate;return!(!n&&!o||!a||r.isDisabled())&&(n&&s&&a.isSameOrBefore(s)?(0,v.isDayInRange)(t,a,s):!!(o&&i&&a.isSameOrAfter(i))&&(0,v.isDayInRange)(t,i,a))},r.isSelectingRangeStart=function(){if(!r.isInSelectingRange())return!1;var e=r.props,t=e.day,n=e.selectingDate,o=e.startDate,a=e.selectsStart;return a?(0,v.isSameDay)(t,n):(0,v.isSameDay)(t,o)},r.isSelectingRangeEnd=function(){if(!r.isInSelectingRange())return!1;var e=r.props,t=e.day,n=e.selectingDate,o=e.endDate,a=e.selectsEnd;return a?(0,v.isSameDay)(t,n):(0,v.isSameDay)(t,o)},r.isRangeStart=function(){var e=r.props,t=e.day,n=e.startDate,o=e.endDate;return!(!n||!o)&&(0,v.isSameDay)(n,t)},r.isRangeEnd=function(){var e=r.props,t=e.day,n=e.startDate,o=e.endDate;return!(!n||!o)&&(0,v.isSameDay)(o,t)},r.isWeekend=function(){var e=r.props.day.day();return 0===e||6===e},r.isOutsideMonth=function(){return void 0!==r.props.month&&r.props.month!==r.props.day.month()},r.getClassNames=function(e){var t=r.props.dayClassName?r.props.dayClassName(e):void 0;return(0,y.default)("react-datepicker__day",t,"react-datepicker__day--"+(0,v.getDayOfWeekCode)(r.props.day),{"react-datepicker__day--disabled":r.isDisabled(),"react-datepicker__day--selected":r.isSameDay(r.props.selected),"react-datepicker__day--keyboard-selected":r.isKeyboardSelected(),"react-datepicker__day--range-start":r.isRangeStart(),"react-datepicker__day--range-end":r.isRangeEnd(),"react-datepicker__day--in-range":r.isInRange(),"react-datepicker__day--in-selecting-range":r.isInSelectingRange(),"react-datepicker__day--selecting-range-start":r.isSelectingRangeStart(),"react-datepicker__day--selecting-range-end":r.isSelectingRangeEnd(),"react-datepicker__day--today":r.isSameDay(l.default.utc().utcOffset(r.props.utcOffset)),"react-datepicker__day--weekend":r.isWeekend(),"react-datepicker__day--outside-month":r.isOutsideMonth()},r.getHighLightedClass("react-datepicker__day--highlighted"))},s=n,i(r,s)}return s(t,e),c(t,[{key:"render",value:function(){return d.default.createElement("div",{className:this.getClassNames(this.props.day),onClick:this.handleClick,onMouseEnter:this.handleMouseEnter,"aria-label":"day-"+this.props.day.date(),role:"option"},this.props.day.date())}}]),t}(d.default.Component);b.defaultProps={utcOffset:l.default.utc().utcOffset()},t.default=b},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){return e&&t?e.isSame(t,"day"):!e&&!t}function a(e,t){return e&&t?e.utcOffset()===t.utcOffset():!e&&!t}function i(e,t,n){var r=t.clone().startOf("day").subtract(1,"seconds"),o=n.clone().startOf("day").add(1,"seconds");return e.clone().startOf("day").isBetween(r,o)}function s(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.minDate,r=t.maxDate,a=t.excludeDates,i=t.includeDates,s=t.filterDate;return n&&e.isBefore(n,"day")||r&&e.isAfter(r,"day")||a&&a.some(function(t){return o(e,t)})||i&&!i.some(function(t){return o(e,t)})||s&&!s(e.clone())||!1}function p(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.minDate,o=n.includeDates,a=e.clone().subtract(1,t);return r&&a.isBefore(r,t)||o&&o.every(function(e){return a.isBefore(e,t)})||!1}function c(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.maxDate,o=n.includeDates,a=e.clone().add(1,t);return r&&a.isAfter(r,t)||o&&o.every(function(e){return a.isAfter(e,t)})||!1}function u(e){var t=e.minDate,n=e.includeDates;return n&&t?y.default.min(n.filter(function(e){return t.isSameOrBefore(e,"day")})):n?y.default.min(n):t}function l(e){var t=e.maxDate,n=e.includeDates;return n&&t?y.default.max(n.filter(function(e){return t.isSameOrAfter(e,"day")})):n?y.default.max(n):t}function f(e,t){var n=t.dateFormat,r=t.locale,o=(0,y.default)(e,n,r||y.default.locale(),!0);return o.isValid()?o:null}function d(e,t){var n=t.dateFormat,r=t.locale;return e&&e.clone().locale(r||y.default.locale()).format(Array.isArray(n)?n[0]:n)||""}function h(e){return v[e.isoWeekday()]}Object.defineProperty(t,"__esModule",{value:!0}),t.isSameDay=o,t.isSameUtcOffset=a,t.isDayInRange=i,t.isDayDisabled=s,t.allDaysDisabledBefore=p,t.allDaysDisabledAfter=c,t.getEffectiveMinDate=u,t.getEffectiveMaxDate=l,t.parseDate=f,t.safeDateFormat=d,t.getDayOfWeekCode=h;var m=n(2),y=r(m),v={1:"mon",2:"tue",3:"wed",4:"thu",5:"fri",6:"sat",7:"sun"}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=n(4),c=r(p),u=n(5),l=(r(u),n(11)),f=r(l),d=function(e){function t(){var e,n,r,i;o(this,t);for(var s=arguments.length,p=Array(s),c=0;c<s;c++)p[c]=arguments[c];return n=r=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(p))),r.handleClick=function(e){r.props.onClick&&r.props.onClick(e)},i=n,a(r,i)}return i(t,e),s(t,[{key:"render",value:function(){var e={"react-datepicker__week-number":!0,"react-datepicker__week-number--clickable":!!this.props.onClick};return c.default.createElement("div",{className:(0,f.default)(e),"aria-label":"week-"+this.props.weekNumber,onClick:this.handleClick},this.props.weekNumber)}}]),t}(c.default.Component);t.default=d},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.popperPlacementPositions=void 0;var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),p=n(4),c=r(p),u=n(5),l=(r(u),n(21)),f=(t.popperPlacementPositions=["auto","auto-left","auto-right","bottom","bottom-end","bottom-start","left","left-end","left-start","right","right-end","right-start","top","top-end","top-start"],function(e){function t(){return o(this,t),a(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return i(t,e),s(t,[{key:"render",value:function(){var e=this.props,t=e.hidePopper,n=e.popperComponent,r=e.popperModifiers,o=e.popperPlacement,a=e.targetComponent;return c.default.createElement(l.Manager,null,c.default.createElement(l.Target,{className:"react-datepicker-wrapper"},a),!t&&c.default.createElement(l.Popper,{className:"react-datepicker-popper",modifiers:r,placement:o},n))}}],[{key:"defaultProps",get:function(){return{hidePopper:!0,popperModifiers:{preventOverflow:{enabled:!0,escapeWithReference:!0,boundariesElement:"viewport"}},popperPlacement:"bottom-start"}}}]),t}(c.default.Component));t.default=f},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.Arrow=t.Popper=t.Target=t.Manager=void 0;var o=n(22),a=r(o),i=n(23),s=r(i),p=n(24),c=r(p),u=n(28),l=r(u);t.Manager=a.default,t.Target=s.default,t.Popper=c.default,t.Arrow=l.default},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function s(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var p=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=n(4),u=(r(c),n(5)),l=r(u),f=function(e){function t(){var e,n,r,o;a(this,t);for(var s=arguments.length,p=Array(s),c=0;c<s;c++)p[c]=arguments[c];return n=r=i(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(p))),r._setTargetNode=function(e){r._targetNode=e},r._getTargetNode=function(){return r._targetNode},o=n,i(r,o)}return s(t,e),p(t,[{key:"getChildContext",value:function(){return{popperManager:{setTargetNode:this._setTargetNode,getTargetNode:this._getTargetNode}}}},{key:"render",value:function(){var e=this.props,t=e.tag,n=e.children,r=o(e,["tag","children"]);return t!==!1?(0,c.createElement)(t,r,n):n}}]),t}(c.Component);f.childContextTypes={popperManager:l.default.object.isRequired},f.propTypes={tag:l.default.oneOfType([l.default.string,l.default.bool])},f.defaultProps={tag:"div"},t.default=f},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=n(4),s=(r(i),n(5)),p=r(s),c=function(e,t){var n=e.component,r=void 0===n?"div":n,s=e.innerRef,p=e.children,c=o(e,["component","innerRef","children"]),u=t.popperManager,l=function(e){u.setTargetNode(e),"function"==typeof s&&s(e)};if("function"==typeof p){var f={ref:l};return p({targetProps:f,restProps:c})}var d=a({},c);return"string"==typeof r?d.ref=l:d.innerRef=l,(0,i.createElement)(r,d,p)};c.contextTypes={popperManager:p.default.object.isRequired},c.propTypes={component:p.default.oneOfType([p.default.node,p.default.func]),innerRef:p.default.func,children:p.default.oneOfType([p.default.node,p.default.func])},t.default=c},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function p(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0});var c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),l=n(4),f=(r(l),n(5)),d=r(f),h=n(25),m=r(h),y=n(26),v=r(y),b=function(e){function t(){var e,n,r,o;i(this,t);for(var a=arguments.length,p=Array(a),u=0;u<a;u++)p[u]=arguments[u];return n=r=s(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(p))),r.state={},r._setArrowNode=function(e){r._arrowNode=e},r._getTargetNode=function(){return r.context.popperManager.getTargetNode()},r._updateStateModifier={enabled:!0,order:900,fn:function(e){return(r.state.data&&!(0,v.default)(e.offsets,r.state.data.offsets)||!r.state.data)&&r.setState({data:e}),e}},r._getPopperStyle=function(){var e=r.state.data;if(!r._popper||!e)return{position:"absolute",pointerEvents:"none",opacity:0};var t=e.offsets.popper,n=(t.top,t.left,t.position);return c({position:n},e.styles)},r._getPopperPlacement=function(){return r.state.data?r.state.data.placement:void 0},r._getArrowStyle=function(){if(r.state.data&&r.state.data.offsets.arrow){var e=r.state.data.offsets.arrow,t=e.top,n=e.left;return{top:t,left:n}}return{}},o=n,s(r,o)}return p(t,e),u(t,[{key:"getChildContext",value:function(){return{popper:{setArrowNode:this._setArrowNode,getArrowStyle:this._getArrowStyle}}}},{key:"componentDidMount",value:function(){this._updatePopper()}},{key:"componentDidUpdate",value:function(e){e.placement===this.props.placement&&e.eventsEnabled===this.props.eventsEnabled||this._updatePopper(),this._popper&&e.children!==this.props.children&&this._popper.scheduleUpdate()}},{key:"componentWillUnmount",value:function(){this._destroyPopper()}},{key:"_updatePopper",value:function(){this._destroyPopper(),this._node&&this._createPopper()}},{key:"_createPopper",value:function(){var e=this.props,t=e.placement,n=e.eventsEnabled,r=c({},this.props.modifiers,{applyStyle:{enabled:!1},updateState:this._updateStateModifier});this._arrowNode&&(r.arrow={element:this._arrowNode}),this._popper=new m.default(this._getTargetNode(),this._node,{placement:t,eventsEnabled:n,modifiers:r}),this._popper.scheduleUpdate()}},{key:"_destroyPopper",value:function(){this._popper&&this._popper.destroy()}},{key:"render",value:function(){var e=this,t=this.props,n=t.component,r=t.innerRef,i=(t.placement,t.eventsEnabled,t.modifiers,t.children),s=a(t,["component","innerRef","placement","eventsEnabled","modifiers","children"]),p=function(t){e._node=t,"function"==typeof r&&r(t)},u=this._getPopperStyle(),f=this._getPopperPlacement();if("function"==typeof i){var d=o({ref:p,style:u},"data-placement",f);return i({popperProps:d,restProps:s,scheduleUpdate:this._popper&&this._popper.scheduleUpdate})}var h=c({},s,{style:c({},s.style,u),"data-placement":f});return"string"==typeof n?h.ref=p:h.innerRef=p,(0,l.createElement)(n,h,i)}}]),t}(l.Component);b.contextTypes={popperManager:d.default.object.isRequired},b.childContextTypes={popper:d.default.object.isRequired},b.propTypes={component:d.default.oneOfType([d.default.node,d.default.func]),innerRef:d.default.func,placement:d.default.oneOf(m.default.placements),eventsEnabled:d.default.bool,modifiers:d.default.object,children:d.default.oneOfType([d.default.node,d.default.func])},b.defaultProps={component:"div",placement:"bottom",eventsEnabled:!0,modifiers:{}},t.default=b},function(e,t,n){(function(t){/**!
		 * @fileOverview Kickass library to create and place poppers near their reference elements.
		 * @version 1.12.3
		 * @license
		 * Copyright (c) 2016 Federico Zivolo and contributors
		 *
		 * Permission is hereby granted, free of charge, to any person obtaining a copy
		 * of this software and associated documentation files (the "Software"), to deal
		 * in the Software without restriction, including without limitation the rights
		 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		 * copies of the Software, and to permit persons to whom the Software is
		 * furnished to do so, subject to the following conditions:
		 *
		 * The above copyright notice and this permission notice shall be included in all
		 * copies or substantial portions of the Software.
		 *
		 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
		 * SOFTWARE.
		 */
	!function(t,n){e.exports=n()}(this,function(){"use strict";function e(e){var t=!1,n=0,r=document.createElement("span"),o=new MutationObserver(function(){e(),t=!1});return o.observe(r,{attributes:!0}),function(){t||(t=!0,r.setAttribute("x-index",n),n+=1)}}function n(e){var t=!1;return function(){t||(t=!0,setTimeout(function(){t=!1,e()},ce))}}function r(e){var t={};return e&&"[object Function]"===t.toString.call(e)}function o(e,t){if(1!==e.nodeType)return[];var n=window.getComputedStyle(e,null);return t?n[t]:n}function a(e){return"HTML"===e.nodeName?e:e.parentNode||e.host}function i(e){if(!e||["HTML","BODY","#document"].indexOf(e.nodeName)!==-1)return window.document.body;var t=o(e),n=t.overflow,r=t.overflowX,s=t.overflowY;return/(auto|scroll)/.test(n+s+r)?e:i(a(e))}function s(e){var t=e&&e.offsetParent,n=t&&t.nodeName;return n&&"BODY"!==n&&"HTML"!==n?["TD","TABLE"].indexOf(t.nodeName)!==-1&&"static"===o(t,"position")?s(t):t:window.document.documentElement}function p(e){var t=e.nodeName;return"BODY"!==t&&("HTML"===t||s(e.firstElementChild)===e)}function c(e){return null!==e.parentNode?c(e.parentNode):e}function u(e,t){if(!(e&&e.nodeType&&t&&t.nodeType))return window.document.documentElement;var n=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,r=n?e:t,o=n?t:e,a=document.createRange();a.setStart(r,0),a.setEnd(o,0);var i=a.commonAncestorContainer;if(e!==i&&t!==i||r.contains(o))return p(i)?i:s(i);var l=c(e);return l.host?u(l.host,t):u(e,c(t).host)}function l(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"top",n="top"===t?"scrollTop":"scrollLeft",r=e.nodeName;if("BODY"===r||"HTML"===r){var o=window.document.documentElement,a=window.document.scrollingElement||o;return a[n]}return e[n]}function f(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=l(t,"top"),o=l(t,"left"),a=n?-1:1;return e.top+=r*a,e.bottom+=r*a,e.left+=o*a,e.right+=o*a,e}function d(e,t){var n="x"===t?"Left":"Top",r="Left"===n?"Right":"Bottom";return+e["border"+n+"Width"].split("px")[0]+ +e["border"+r+"Width"].split("px")[0]}function h(e,t,n,r){return Math.max(t["offset"+e],t["scroll"+e],n["client"+e],n["offset"+e],n["scroll"+e],he()?n["offset"+e]+r["margin"+("Height"===e?"Top":"Left")]+r["margin"+("Height"===e?"Bottom":"Right")]:0)}function m(){var e=window.document.body,t=window.document.documentElement,n=he()&&window.getComputedStyle(t);return{height:h("Height",e,t,n),width:h("Width",e,t,n)}}function y(e){return be({},e,{right:e.left+e.width,bottom:e.top+e.height})}function v(e){var t={};if(he())try{t=e.getBoundingClientRect();var n=l(e,"top"),r=l(e,"left");t.top+=n,t.left+=r,t.bottom+=n,t.right+=r}catch(e){}else t=e.getBoundingClientRect();var a={left:t.left,top:t.top,width:t.right-t.left,height:t.bottom-t.top},i="HTML"===e.nodeName?m():{},s=i.width||e.clientWidth||a.right-a.left,p=i.height||e.clientHeight||a.bottom-a.top,c=e.offsetWidth-s,u=e.offsetHeight-p;if(c||u){var f=o(e);c-=d(f,"x"),u-=d(f,"y"),a.width-=c,a.height-=u}return y(a)}function b(e,t){var n=he(),r="HTML"===t.nodeName,a=v(e),s=v(t),p=i(e),c=o(t),u=+c.borderTopWidth.split("px")[0],l=+c.borderLeftWidth.split("px")[0],d=y({top:a.top-s.top-u,left:a.left-s.left-l,width:a.width,height:a.height});if(d.marginTop=0,d.marginLeft=0,!n&&r){var h=+c.marginTop.split("px")[0],m=+c.marginLeft.split("px")[0];d.top-=u-h,d.bottom-=u-h,d.left-=l-m,d.right-=l-m,d.marginTop=h,d.marginLeft=m}return(n?t.contains(p):t===p&&"BODY"!==p.nodeName)&&(d=f(d,t)),d}function g(e){var t=window.document.documentElement,n=b(e,t),r=Math.max(t.clientWidth,window.innerWidth||0),o=Math.max(t.clientHeight,window.innerHeight||0),a=l(t),i=l(t,"left"),s={top:a-n.top+n.marginTop,left:i-n.left+n.marginLeft,width:r,height:o};return y(s)}function w(e){var t=e.nodeName;return"BODY"!==t&&"HTML"!==t&&("fixed"===o(e,"position")||w(a(e)))}function _(e,t,n,r){var o={top:0,left:0},s=u(e,t);if("viewport"===r)o=g(s);else{var p=void 0;"scrollParent"===r?(p=i(a(e)),"BODY"===p.nodeName&&(p=window.document.documentElement)):p="window"===r?window.document.documentElement:r;var c=b(p,s);if("HTML"!==p.nodeName||w(s))o=c;else{var l=m(),f=l.height,d=l.width;o.top+=c.top-c.marginTop,o.bottom=f+c.top,o.left+=c.left-c.marginLeft,o.right=d+c.left}}return o.left+=n,o.top+=n,o.right-=n,o.bottom-=n,o}function D(e){var t=e.width,n=e.height;return t*n}function O(e,t,n,r,o){var a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;if(e.indexOf("auto")===-1)return e;var i=_(n,r,a,o),s={top:{width:i.width,height:t.top-i.top},right:{width:i.right-t.right,height:i.height},bottom:{width:i.width,height:i.bottom-t.bottom},left:{width:t.left-i.left,height:i.height}},p=Object.keys(s).map(function(e){return be({key:e},s[e],{area:D(s[e])})}).sort(function(e,t){return t.area-e.area}),c=p.filter(function(e){var t=e.width,r=e.height;return t>=n.clientWidth&&r>=n.clientHeight}),u=c.length>0?c[0].key:p[0].key,l=e.split("-")[1];return u+(l?"-"+l:"")}function k(e,t,n){var r=u(t,n);return b(n,r)}function E(e){var t=window.getComputedStyle(e),n=parseFloat(t.marginTop)+parseFloat(t.marginBottom),r=parseFloat(t.marginLeft)+parseFloat(t.marginRight),o={width:e.offsetWidth+r,height:e.offsetHeight+n};return o}function S(e){var t={left:"right",right:"left",bottom:"top",top:"bottom"};return e.replace(/left|right|bottom|top/g,function(e){return t[e]})}function C(e,t,n){n=n.split("-")[0];var r=E(e),o={width:r.width,height:r.height},a=["right","left"].indexOf(n)!==-1,i=a?"top":"left",s=a?"left":"top",p=a?"height":"width",c=a?"width":"height";return o[i]=t[i]+t[p]/2-r[p]/2,n===s?o[s]=t[s]-r[c]:o[s]=t[S(s)],o}function M(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function P(e,t,n){if(Array.prototype.findIndex)return e.findIndex(function(e){return e[t]===n});var r=M(e,function(e){return e[t]===n});return e.indexOf(r)}function N(e,t,n){var o=void 0===n?e:e.slice(0,P(e,"name",n));return o.forEach(function(e){e.function&&console.warn("`modifier.function` is deprecated, use `modifier.fn`!");var n=e.function||e.fn;e.enabled&&r(n)&&(t.offsets.popper=y(t.offsets.popper),t.offsets.reference=y(t.offsets.reference),t=n(t,e))}),t}function x(){if(!this.state.isDestroyed){var e={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};e.offsets.reference=k(this.state,this.popper,this.reference),e.placement=O(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.offsets.popper=C(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position="absolute",e=N(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e))}}function j(e,t){return e.some(function(e){var n=e.name,r=e.enabled;return r&&n===t})}function T(e){for(var t=[!1,"ms","Webkit","Moz","O"],n=e.charAt(0).toUpperCase()+e.slice(1),r=0;r<t.length-1;r++){var o=t[r],a=o?""+o+n:e;if("undefined"!=typeof window.document.body.style[a])return a}return null}function R(){return this.state.isDestroyed=!0,j(this.modifiers,"applyStyle")&&(this.popper.removeAttribute("x-placement"),this.popper.style.left="",this.popper.style.position="",this.popper.style.top="",this.popper.style[T("transform")]=""),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function W(e,t,n,r){var o="BODY"===e.nodeName,a=o?window:e;a.addEventListener(t,n,{passive:!0}),o||W(i(a.parentNode),t,n,r),r.push(a)}function L(e,t,n,r){n.updateBound=r,window.addEventListener("resize",n.updateBound,{passive:!0});var o=i(e);return W(o,"scroll",n.updateBound,n.scrollParents),n.scrollElement=o,n.eventsEnabled=!0,n}function F(){this.state.eventsEnabled||(this.state=L(this.reference,this.options,this.state,this.scheduleUpdate))}function I(e,t){return window.removeEventListener("resize",t.updateBound),t.scrollParents.forEach(function(e){e.removeEventListener("scroll",t.updateBound)}),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t}function A(){this.state.eventsEnabled&&(window.cancelAnimationFrame(this.scheduleUpdate),this.state=I(this.reference,this.state))}function B(e){return""!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function Y(e,t){Object.keys(t).forEach(function(n){var r="";["width","height","top","right","bottom","left"].indexOf(n)!==-1&&B(t[n])&&(r="px"),e.style[n]=t[n]+r})}function H(e,t){Object.keys(t).forEach(function(n){var r=t[n];r!==!1?e.setAttribute(n,t[n]):e.removeAttribute(n)})}function U(e){return Y(e.instance.popper,e.styles),H(e.instance.popper,e.attributes),e.arrowElement&&Object.keys(e.arrowStyles).length&&Y(e.arrowElement,e.arrowStyles),e}function V(e,t,n,r,o){var a=k(o,t,e),i=O(n.placement,a,t,e,n.modifiers.flip.boundariesElement,n.modifiers.flip.padding);return t.setAttribute("x-placement",i),Y(t,{position:"absolute"}),n}function q(e,t){var n=t.x,r=t.y,o=e.offsets.popper,a=M(e.instance.modifiers,function(e){return"applyStyle"===e.name}).gpuAcceleration;void 0!==a&&console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");var i=void 0!==a?a:t.gpuAcceleration,p=s(e.instance.popper),c=v(p),u={position:o.position},l={left:Math.floor(o.left),top:Math.floor(o.top),bottom:Math.floor(o.bottom),right:Math.floor(o.right)},f="bottom"===n?"top":"bottom",d="right"===r?"left":"right",h=T("transform"),m=void 0,y=void 0;if(y="bottom"===f?-c.height+l.bottom:l.top,m="right"===d?-c.width+l.right:l.left,i&&h)u[h]="translate3d("+m+"px, "+y+"px, 0)",u[f]=0,u[d]=0,u.willChange="transform";else{var b="bottom"===f?-1:1,g="right"===d?-1:1;u[f]=y*b,u[d]=m*g,u.willChange=f+", "+d}var w={"x-placement":e.placement};return e.attributes=be({},w,e.attributes),e.styles=be({},u,e.styles),e.arrowStyles=be({},e.offsets.arrow,e.arrowStyles),e}function K(e,t,n){var r=M(e,function(e){var n=e.name;return n===t}),o=!!r&&e.some(function(e){return e.name===n&&e.enabled&&e.order<r.order});if(!o){var a="`"+t+"`",i="`"+n+"`";console.warn(i+" modifier is required by "+a+" modifier in order to work, be sure to include it before "+a+"!")}return o}function z(e,t){if(!K(e.instance.modifiers,"arrow","keepTogether"))return e;var n=t.element;if("string"==typeof n){if(n=e.instance.popper.querySelector(n),!n)return e}else if(!e.instance.popper.contains(n))return console.warn("WARNING: `arrow.element` must be child of its popper element!"),e;var r=e.placement.split("-")[0],a=e.offsets,i=a.popper,s=a.reference,p=["left","right"].indexOf(r)!==-1,c=p?"height":"width",u=p?"Top":"Left",l=u.toLowerCase(),f=p?"left":"top",d=p?"bottom":"right",h=E(n)[c];s[d]-h<i[l]&&(e.offsets.popper[l]-=i[l]-(s[d]-h)),s[l]+h>i[d]&&(e.offsets.popper[l]+=s[l]+h-i[d]);var m=s[l]+s[c]/2-h/2,v=o(e.instance.popper,"margin"+u).replace("px",""),b=m-y(e.offsets.popper)[l]-v;return b=Math.max(Math.min(i[c]-h,b),0),e.arrowElement=n,e.offsets.arrow={},e.offsets.arrow[l]=Math.round(b),e.offsets.arrow[f]="",e}function G(e){return"end"===e?"start":"start"===e?"end":e}function X(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=we.indexOf(e),r=we.slice(n+1).concat(we.slice(0,n));return t?r.reverse():r}function J(e,t){if(j(e.instance.modifiers,"inner"))return e;if(e.flipped&&e.placement===e.originalPlacement)return e;var n=_(e.instance.popper,e.instance.reference,t.padding,t.boundariesElement),r=e.placement.split("-")[0],o=S(r),a=e.placement.split("-")[1]||"",i=[];switch(t.behavior){case _e.FLIP:i=[r,o];break;case _e.CLOCKWISE:i=X(r);break;case _e.COUNTERCLOCKWISE:i=X(r,!0);break;default:i=t.behavior}return i.forEach(function(s,p){if(r!==s||i.length===p+1)return e;r=e.placement.split("-")[0],o=S(r);var c=e.offsets.popper,u=e.offsets.reference,l=Math.floor,f="left"===r&&l(c.right)>l(u.left)||"right"===r&&l(c.left)<l(u.right)||"top"===r&&l(c.bottom)>l(u.top)||"bottom"===r&&l(c.top)<l(u.bottom),d=l(c.left)<l(n.left),h=l(c.right)>l(n.right),m=l(c.top)<l(n.top),y=l(c.bottom)>l(n.bottom),v="left"===r&&d||"right"===r&&h||"top"===r&&m||"bottom"===r&&y,b=["top","bottom"].indexOf(r)!==-1,g=!!t.flipVariations&&(b&&"start"===a&&d||b&&"end"===a&&h||!b&&"start"===a&&m||!b&&"end"===a&&y);(f||v||g)&&(e.flipped=!0,(f||v)&&(r=i[p+1]),g&&(a=G(a)),e.placement=r+(a?"-"+a:""),e.offsets.popper=be({},e.offsets.popper,C(e.instance.popper,e.offsets.reference,e.placement)),e=N(e.instance.modifiers,e,"flip"))}),e}function Q(e){var t=e.offsets,n=t.popper,r=t.reference,o=e.placement.split("-")[0],a=Math.floor,i=["top","bottom"].indexOf(o)!==-1,s=i?"right":"bottom",p=i?"left":"top",c=i?"width":"height";return n[s]<a(r[p])&&(e.offsets.popper[p]=a(r[p])-n[c]),n[p]>a(r[s])&&(e.offsets.popper[p]=a(r[s])),e}function Z(e,t,n,r){var o=e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),a=+o[1],i=o[2];if(!a)return e;if(0===i.indexOf("%")){var s=void 0;switch(i){case"%p":s=n;break;case"%":case"%r":default:s=r}var p=y(s);return p[t]/100*a}if("vh"===i||"vw"===i){var c=void 0;return c="vh"===i?Math.max(document.documentElement.clientHeight,window.innerHeight||0):Math.max(document.documentElement.clientWidth,window.innerWidth||0),c/100*a}return a}function $(e,t,n,r){var o=[0,0],a=["right","left"].indexOf(r)!==-1,i=e.split(/(\+|\-)/).map(function(e){return e.trim()}),s=i.indexOf(M(i,function(e){return e.search(/,|\s/)!==-1}));i[s]&&i[s].indexOf(",")===-1&&console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");var p=/\s*,\s*|\s+/,c=s!==-1?[i.slice(0,s).concat([i[s].split(p)[0]]),[i[s].split(p)[1]].concat(i.slice(s+1))]:[i];return c=c.map(function(e,r){var o=(1===r?!a:a)?"height":"width",i=!1;return e.reduce(function(e,t){return""===e[e.length-1]&&["+","-"].indexOf(t)!==-1?(e[e.length-1]=t,i=!0,e):i?(e[e.length-1]+=t,i=!1,e):e.concat(t)},[]).map(function(e){return Z(e,o,t,n)})}),c.forEach(function(e,t){e.forEach(function(n,r){B(n)&&(o[t]+=n*("-"===e[r-1]?-1:1))})}),o}function ee(e,t){var n=t.offset,r=e.placement,o=e.offsets,a=o.popper,i=o.reference,s=r.split("-")[0],p=void 0;return p=B(+n)?[+n,0]:$(n,a,i,s),"left"===s?(a.top+=p[0],a.left-=p[1]):"right"===s?(a.top+=p[0],a.left+=p[1]):"top"===s?(a.left+=p[0],a.top-=p[1]):"bottom"===s&&(a.left+=p[0],a.top+=p[1]),e.popper=a,e}function te(e,t){var n=t.boundariesElement||s(e.instance.popper);e.instance.reference===n&&(n=s(n));var r=_(e.instance.popper,e.instance.reference,t.padding,n);t.boundaries=r;var o=t.priority,a=e.offsets.popper,i={primary:function(e){var n=a[e];return a[e]<r[e]&&!t.escapeWithReference&&(n=Math.max(a[e],r[e])),ve({},e,n)},secondary:function(e){var n="right"===e?"left":"top",o=a[n];return a[e]>r[e]&&!t.escapeWithReference&&(o=Math.min(a[n],r[e]-("right"===e?a.width:a.height))),ve({},n,o)}};return o.forEach(function(e){var t=["left","top"].indexOf(e)!==-1?"primary":"secondary";a=be({},a,i[t](e))}),e.offsets.popper=a,e}function ne(e){var t=e.placement,n=t.split("-")[0],r=t.split("-")[1];if(r){var o=e.offsets,a=o.reference,i=o.popper,s=["bottom","top"].indexOf(n)!==-1,p=s?"left":"top",c=s?"width":"height",u={start:ve({},p,a[p]),end:ve({},p,a[p]+a[c]-i[c])};e.offsets.popper=be({},i,u[r])}return e}function re(e){if(!K(e.instance.modifiers,"hide","preventOverflow"))return e;var t=e.offsets.reference,n=M(e.instance.modifiers,function(e){return"preventOverflow"===e.name}).boundaries;if(t.bottom<n.top||t.left>n.right||t.top>n.bottom||t.right<n.left){if(e.hide===!0)return e;e.hide=!0,e.attributes["x-out-of-boundaries"]=""}else{if(e.hide===!1)return e;e.hide=!1,e.attributes["x-out-of-boundaries"]=!1}return e}function oe(e){var t=e.placement,n=t.split("-")[0],r=e.offsets,o=r.popper,a=r.reference,i=["left","right"].indexOf(n)!==-1,s=["top","left"].indexOf(n)===-1;return o[i?"left":"top"]=a[n]-(s?o[i?"width":"height"]:0),e.placement=S(t),e.offsets.popper=y(o),e}for(var ae=["native code","[object MutationObserverConstructor]"],ie=function(e){return ae.some(function(t){return(e||"").toString().indexOf(t)>-1})},se="undefined"!=typeof window,pe=["Edge","Trident","Firefox"],ce=0,ue=0;ue<pe.length;ue+=1)if(se&&navigator.userAgent.indexOf(pe[ue])>=0){ce=1;break}var le=se&&ie(window.MutationObserver),fe=le?e:n,de=void 0,he=function(){return void 0===de&&(de=navigator.appVersion.indexOf("MSIE 10")!==-1),de},me=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},ye=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),ve=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e},be=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},ge=["auto-start","auto","auto-end","top-start","top","top-end","right-start","right","right-end","bottom-end","bottom","bottom-start","left-end","left","left-start"],we=ge.slice(3),_e={FLIP:"flip",CLOCKWISE:"clockwise",COUNTERCLOCKWISE:"counterclockwise"},De={shift:{order:100,enabled:!0,fn:ne},offset:{order:200,enabled:!0,fn:ee,offset:0},preventOverflow:{order:300,enabled:!0,fn:te,priority:["left","right","top","bottom"],padding:5,boundariesElement:"scrollParent"},keepTogether:{order:400,enabled:!0,fn:Q},arrow:{order:500,enabled:!0,fn:z,element:"[x-arrow]"},flip:{order:600,enabled:!0,fn:J,behavior:"flip",padding:5,boundariesElement:"viewport"},inner:{order:700,enabled:!1,fn:oe},hide:{order:800,enabled:!0,fn:re},computeStyle:{order:850,enabled:!0,fn:q,gpuAcceleration:!0,x:"bottom",y:"right"},applyStyle:{order:900,enabled:!0,fn:U,onLoad:V,gpuAcceleration:void 0}},Oe={placement:"bottom",eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:De},ke=function(){function e(t,n){var o=this,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};me(this,e),this.scheduleUpdate=function(){return requestAnimationFrame(o.update)},this.update=fe(this.update.bind(this)),this.options=be({},e.Defaults,a),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=t.jquery?t[0]:t,this.popper=n.jquery?n[0]:n,this.options.modifiers={},Object.keys(be({},e.Defaults.modifiers,a.modifiers)).forEach(function(t){o.options.modifiers[t]=be({},e.Defaults.modifiers[t]||{},a.modifiers?a.modifiers[t]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(e){return be({name:e},o.options.modifiers[e])}).sort(function(e,t){return e.order-t.order}),this.modifiers.forEach(function(e){e.enabled&&r(e.onLoad)&&e.onLoad(o.reference,o.popper,o.options,e,o.state)}),this.update();var i=this.options.eventsEnabled;i&&this.enableEventListeners(),this.state.eventsEnabled=i}return ye(e,[{key:"update",value:function(){return x.call(this)}},{key:"destroy",value:function(){return R.call(this)}},{key:"enableEventListeners",value:function(){return F.call(this)}},{key:"disableEventListeners",value:function(){return A.call(this)}}]),e}();return ke.Utils=("undefined"!=typeof window?window:t).PopperUtils,ke.placements=ge,ke.Defaults=Oe,ke})}).call(t,function(){return this}())},function(e,t,n){/*!
		 * is-equal-shallow <https://github.com/jonschlinkert/is-equal-shallow>
		 *
		 * Copyright (c) 2015, Jon Schlinkert.
		 * Licensed under the MIT License.
		 */
	"use strict";var r=n(27);e.exports=function(e,t){if(!e&&!t)return!0;if(!e&&t||e&&!t)return!1;var n,o=0,a=0;for(n in t)if(a++,!r(t[n])||!e.hasOwnProperty(n)||e[n]!==t[n])return!1;for(n in e)o++;return o===a}},function(e,t){/*!
		 * is-primitive <https://github.com/jonschlinkert/is-primitive>
		 *
		 * Copyright (c) 2014-2015, Jon Schlinkert.
		 * Licensed under the MIT License.
		 */
	"use strict";e.exports=function(e){return null==e||"function"!=typeof e&&"object"!=typeof e}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function o(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}Object.defineProperty(t,"__esModule",{value:!0});var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i=n(4),s=(r(i),n(5)),p=r(s),c=function(e,t){var n=e.component,r=void 0===n?"span":n,s=e.innerRef,p=e.children,c=o(e,["component","innerRef","children"]),u=t.popper,l=function(e){u.setArrowNode(e),"function"==typeof s&&s(e)},f=u.getArrowStyle();if("function"==typeof p){var d={ref:l,style:f};return p({arrowProps:d,restProps:c})}var h=a({},c,{style:a({},f,c.style)});return"string"==typeof r?h.ref=l:h.innerRef=l,(0,i.createElement)(r,h,p)};c.contextTypes={popper:p.default.object.isRequired},c.propTypes={component:p.default.oneOfType([p.default.node,p.default.func]),innerRef:p.default.func,children:p.default.oneOfType([p.default.node,p.default.func])},t.default=c}])});

/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	var react = __webpack_require__(1);
	var reactDom = __webpack_require__(37);
	
	function _inheritsLoose(subClass, superClass) {
	  subClass.prototype = Object.create(superClass.prototype);
	  subClass.prototype.constructor = subClass;
	  subClass.__proto__ = superClass;
	}
	
	function _objectWithoutProperties(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;
	
	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }
	
	  if (Object.getOwnPropertySymbols) {
	    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
	
	    for (i = 0; i < sourceSymbolKeys.length; i++) {
	      key = sourceSymbolKeys[i];
	      if (excluded.indexOf(key) >= 0) continue;
	      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
	      target[key] = source[key];
	    }
	  }
	
	  return target;
	}
	
	/**
	 * Check whether some DOM node is our Component's node.
	 */
	function isNodeFound(current, componentNode, ignoreClass) {
	  if (current === componentNode) {
	    return true;
	  } // SVG <use/> elements do not technically reside in the rendered DOM, so
	  // they do not have classList directly, but they offer a link to their
	  // corresponding element, which can have classList. This extra check is for
	  // that case.
	  // See: http://www.w3.org/TR/SVG11/struct.html#InterfaceSVGUseElement
	  // Discussion: https://github.com/Pomax/react-onclickoutside/pull/17
	
	
	  if (current.correspondingElement) {
	    return current.correspondingElement.classList.contains(ignoreClass);
	  }
	
	  return current.classList.contains(ignoreClass);
	}
	/**
	 * Try to find our node in a hierarchy of nodes, returning the document
	 * node as highest node if our node is not found in the path up.
	 */
	
	function findHighest(current, componentNode, ignoreClass) {
	  if (current === componentNode) {
	    return true;
	  } // If source=local then this event came from 'somewhere'
	  // inside and should be ignored. We could handle this with
	  // a layered approach, too, but that requires going back to
	  // thinking in terms of Dom node nesting, running counter
	  // to React's 'you shouldn't care about the DOM' philosophy.
	
	
	  while (current.parentNode) {
	    if (isNodeFound(current, componentNode, ignoreClass)) {
	      return true;
	    }
	
	    current = current.parentNode;
	  }
	
	  return current;
	}
	/**
	 * Check if the browser scrollbar was clicked
	 */
	
	function clickedScrollbar(evt) {
	  return document.documentElement.clientWidth <= evt.clientX || document.documentElement.clientHeight <= evt.clientY;
	}
	
	// ideally will get replaced with external dep
	// when rafrex/detect-passive-events#4 and rafrex/detect-passive-events#5 get merged in
	var testPassiveEventSupport = function testPassiveEventSupport() {
	  if (typeof window === 'undefined' || typeof window.addEventListener !== 'function') {
	    return;
	  }
	
	  var passive = false;
	  var options = Object.defineProperty({}, 'passive', {
	    get: function get() {
	      passive = true;
	    }
	  });
	
	  var noop = function noop() {};
	
	  window.addEventListener('testPassiveEventSupport', noop, options);
	  window.removeEventListener('testPassiveEventSupport', noop, options);
	  return passive;
	};
	
	function autoInc(seed) {
	  if (seed === void 0) {
	    seed = 0;
	  }
	
	  return function () {
	    return ++seed;
	  };
	}
	
	var uid = autoInc();
	
	var passiveEventSupport;
	var handlersMap = {};
	var enabledInstances = {};
	var touchEvents = ['touchstart', 'touchmove'];
	var IGNORE_CLASS_NAME = 'ignore-react-onclickoutside';
	/**
	 * Options for addEventHandler and removeEventHandler
	 */
	
	function getEventHandlerOptions(instance, eventName) {
	  var handlerOptions = null;
	  var isTouchEvent = touchEvents.indexOf(eventName) !== -1;
	
	  if (isTouchEvent && passiveEventSupport) {
	    handlerOptions = {
	      passive: !instance.props.preventDefault
	    };
	  }
	
	  return handlerOptions;
	}
	/**
	 * This function generates the HOC function that you'll use
	 * in order to impart onOutsideClick listening to an
	 * arbitrary component. It gets called at the end of the
	 * bootstrapping code to yield an instance of the
	 * onClickOutsideHOC function defined inside setupHOC().
	 */
	
	
	function onClickOutsideHOC(WrappedComponent, config) {
	  var _class, _temp;
	
	  return _temp = _class =
	  /*#__PURE__*/
	  function (_Component) {
	    _inheritsLoose(onClickOutside, _Component);
	
	    function onClickOutside(props) {
	      var _this;
	
	      _this = _Component.call(this, props) || this;
	
	      _this.__outsideClickHandler = function (event) {
	        if (typeof _this.__clickOutsideHandlerProp === 'function') {
	          _this.__clickOutsideHandlerProp(event);
	
	          return;
	        }
	
	        var instance = _this.getInstance();
	
	        if (typeof instance.props.handleClickOutside === 'function') {
	          instance.props.handleClickOutside(event);
	          return;
	        }
	
	        if (typeof instance.handleClickOutside === 'function') {
	          instance.handleClickOutside(event);
	          return;
	        }
	
	        throw new Error('WrappedComponent lacks a handleClickOutside(event) function for processing outside click events.');
	      };
	
	      _this.enableOnClickOutside = function () {
	        if (typeof document === 'undefined' || enabledInstances[_this._uid]) {
	          return;
	        }
	
	        if (typeof passiveEventSupport === 'undefined') {
	          passiveEventSupport = testPassiveEventSupport();
	        }
	
	        enabledInstances[_this._uid] = true;
	        var events = _this.props.eventTypes;
	
	        if (!events.forEach) {
	          events = [events];
	        }
	
	        handlersMap[_this._uid] = function (event) {
	          if (_this.props.disableOnClickOutside) return;
	          if (_this.componentNode === null) return;
	
	          if (_this.props.preventDefault) {
	            event.preventDefault();
	          }
	
	          if (_this.props.stopPropagation) {
	            event.stopPropagation();
	          }
	
	          if (_this.props.excludeScrollbar && clickedScrollbar(event)) return;
	          var current = event.target;
	
	          if (findHighest(current, _this.componentNode, _this.props.outsideClickIgnoreClass) !== document) {
	            return;
	          }
	
	          _this.__outsideClickHandler(event);
	        };
	
	        events.forEach(function (eventName) {
	          document.addEventListener(eventName, handlersMap[_this._uid], getEventHandlerOptions(_this, eventName));
	        });
	      };
	
	      _this.disableOnClickOutside = function () {
	        delete enabledInstances[_this._uid];
	        var fn = handlersMap[_this._uid];
	
	        if (fn && typeof document !== 'undefined') {
	          var events = _this.props.eventTypes;
	
	          if (!events.forEach) {
	            events = [events];
	          }
	
	          events.forEach(function (eventName) {
	            return document.removeEventListener(eventName, fn, getEventHandlerOptions(_this, eventName));
	          });
	          delete handlersMap[_this._uid];
	        }
	      };
	
	      _this.getRef = function (ref) {
	        return _this.instanceRef = ref;
	      };
	
	      _this._uid = uid();
	      return _this;
	    }
	    /**
	     * Access the WrappedComponent's instance.
	     */
	
	
	    var _proto = onClickOutside.prototype;
	
	    _proto.getInstance = function getInstance() {
	      if (!WrappedComponent.prototype.isReactComponent) {
	        return this;
	      }
	
	      var ref = this.instanceRef;
	      return ref.getInstance ? ref.getInstance() : ref;
	    };
	
	    /**
	     * Add click listeners to the current document,
	     * linked to this component's state.
	     */
	    _proto.componentDidMount = function componentDidMount() {
	      // If we are in an environment without a DOM such
	      // as shallow rendering or snapshots then we exit
	      // early to prevent any unhandled errors being thrown.
	      if (typeof document === 'undefined' || !document.createElement) {
	        return;
	      }
	
	      var instance = this.getInstance();
	
	      if (config && typeof config.handleClickOutside === 'function') {
	        this.__clickOutsideHandlerProp = config.handleClickOutside(instance);
	
	        if (typeof this.__clickOutsideHandlerProp !== 'function') {
	          throw new Error('WrappedComponent lacks a function for processing outside click events specified by the handleClickOutside config option.');
	        }
	      }
	
	      this.componentNode = reactDom.findDOMNode(this.getInstance());
	      this.enableOnClickOutside();
	    };
	
	    _proto.componentDidUpdate = function componentDidUpdate() {
	      this.componentNode = reactDom.findDOMNode(this.getInstance());
	    };
	    /**
	     * Remove all document's event listeners for this component
	     */
	
	
	    _proto.componentWillUnmount = function componentWillUnmount() {
	      this.disableOnClickOutside();
	    };
	    /**
	     * Can be called to explicitly enable event listening
	     * for clicks and touches outside of this element.
	     */
	
	
	    /**
	     * Pass-through render
	     */
	    _proto.render = function render() {
	      // eslint-disable-next-line no-unused-vars
	      var _props = this.props,
	          excludeScrollbar = _props.excludeScrollbar,
	          props = _objectWithoutProperties(_props, ["excludeScrollbar"]);
	
	      if (WrappedComponent.prototype.isReactComponent) {
	        props.ref = this.getRef;
	      } else {
	        props.wrappedRef = this.getRef;
	      }
	
	      props.disableOnClickOutside = this.disableOnClickOutside;
	      props.enableOnClickOutside = this.enableOnClickOutside;
	      return react.createElement(WrappedComponent, props);
	    };
	
	    return onClickOutside;
	  }(react.Component), _class.displayName = "OnClickOutside(" + (WrappedComponent.displayName || WrappedComponent.name || 'Component') + ")", _class.defaultProps = {
	    eventTypes: ['mousedown', 'touchstart'],
	    excludeScrollbar: config && config.excludeScrollbar || false,
	    outsideClickIgnoreClass: IGNORE_CLASS_NAME,
	    preventDefault: false,
	    stopPropagation: false
	  }, _class.getClass = function () {
	    return WrappedComponent.getClass ? WrappedComponent.getClass() : WrappedComponent;
	  }, _temp;
	}
	
	exports.IGNORE_CLASS_NAME = IGNORE_CLASS_NAME;
	exports['default'] = onClickOutsideHOC;


/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _Button = __webpack_require__(389);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _FormControl = __webpack_require__(445);
	
	var _FormControl2 = _interopRequireDefault(_FormControl);
	
	var _InputGroup = __webpack_require__(452);
	
	var _InputGroup2 = _interopRequireDefault(_InputGroup);
	
	var _Overlay = __webpack_require__(502);
	
	var _Overlay2 = _interopRequireDefault(_Overlay);
	
	var _Popover = __webpack_require__(520);
	
	var _Popover2 = _interopRequireDefault(_Popover);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _createReactClass = __webpack_require__(687);
	
	var _createReactClass2 = _interopRequireDefault(_createReactClass);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var instanceCount = 0; // See http://jszen.blogspot.com/2007/03/how-to-build-simple-calendar-with.html for calendar logic.
	
	var CalendarHeader = (0, _createReactClass2.default)({
	  displayName: 'DatePickerHeader',
	
	  propTypes: {
	    displayDate: _propTypes2.default.object.isRequired,
	    minDate: _propTypes2.default.string,
	    maxDate: _propTypes2.default.string,
	    onChange: _propTypes2.default.func.isRequired,
	    monthLabels: _propTypes2.default.array.isRequired,
	    previousButtonElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired,
	    nextButtonElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
	  },
	
	  displayingMinMonth: function displayingMinMonth() {
	    if (!this.props.minDate) return false;
	
	    var displayDate = new Date(this.props.displayDate);
	    var minDate = new Date(this.props.minDate);
	    return minDate.getFullYear() == displayDate.getFullYear() && minDate.getMonth() == displayDate.getMonth();
	  },
	  displayingMaxMonth: function displayingMaxMonth() {
	    if (!this.props.maxDate) return false;
	
	    var displayDate = new Date(this.props.displayDate);
	    var maxDate = new Date(this.props.maxDate);
	    return maxDate.getFullYear() == displayDate.getFullYear() && maxDate.getMonth() == displayDate.getMonth();
	  },
	  handleClickPrevious: function handleClickPrevious() {
	    var newDisplayDate = new Date(this.props.displayDate);
	    newDisplayDate.setDate(1);
	    newDisplayDate.setMonth(newDisplayDate.getMonth() - 1);
	    this.props.onChange(newDisplayDate);
	  },
	  handleClickNext: function handleClickNext() {
	    var newDisplayDate = new Date(this.props.displayDate);
	    newDisplayDate.setDate(1);
	    newDisplayDate.setMonth(newDisplayDate.getMonth() + 1);
	    this.props.onChange(newDisplayDate);
	  },
	  render: function render() {
	    return _react2.default.createElement(
	      'div',
	      { className: 'text-center' },
	      _react2.default.createElement(
	        'div',
	        { className: 'text-muted pull-left datepicker-previous-wrapper', onClick: this.handleClickPrevious, style: { cursor: 'pointer' } },
	        this.displayingMinMonth() ? null : this.props.previousButtonElement
	      ),
	      _react2.default.createElement(
	        'span',
	        null,
	        this.props.monthLabels[this.props.displayDate.getMonth()],
	        ' ',
	        this.props.displayDate.getFullYear()
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: 'text-muted pull-right datepicker-next-wrapper', onClick: this.handleClickNext, style: { cursor: 'pointer' } },
	        this.displayingMaxMonth() ? null : this.props.nextButtonElement
	      )
	    );
	  }
	});
	
	var daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
	
	var Calendar = (0, _createReactClass2.default)({
	  displayName: 'DatePickerCalendar',
	
	  propTypes: {
	    selectedDate: _react2.default.PropTypes.object,
	    displayDate: _react2.default.PropTypes.object.isRequired,
	    minDate: _react2.default.PropTypes.string,
	    maxDate: _react2.default.PropTypes.string,
	    onChange: _react2.default.PropTypes.func.isRequired,
	    dayLabels: _react2.default.PropTypes.array.isRequired,
	    cellPadding: _react2.default.PropTypes.string.isRequired,
	    weekStartsOn: _react2.default.PropTypes.number,
	    showTodayButton: _react2.default.PropTypes.bool,
	    todayButtonLabel: _react2.default.PropTypes.string,
	    roundedCorners: _react2.default.PropTypes.bool,
	    showWeeks: _react2.default.PropTypes.bool
	  },
	
	  handleClick: function handleClick(day) {
	    var newSelectedDate = this.setTimeToNoon(new Date(this.props.displayDate));
	    newSelectedDate.setDate(day);
	    this.props.onChange(newSelectedDate);
	  },
	  handleClickToday: function handleClickToday() {
	    var newSelectedDate = this.setTimeToNoon(new Date());
	    this.props.onChange(newSelectedDate);
	  },
	  setTimeToNoon: function setTimeToNoon(date) {
	    date.setHours(12);
	    date.setMinutes(0);
	    date.setSeconds(0);
	    date.setMilliseconds(0);
	    return date;
	  },
	  getWeekNumber: function getWeekNumber(date) {
	    var target = new Date(date.valueOf());
	    var dayNr = (date.getDay() + 6) % 7;
	    target.setDate(target.getDate() - dayNr + 3);
	    var firstThursday = target.valueOf();
	    target.setMonth(0, 1);
	    if (target.getDay() !== 4) {
	      target.setMonth(0, 1 + (4 - target.getDay() + 7) % 7);
	    }
	    return 1 + Math.ceil((firstThursday - target) / 604800000);
	  },
	  render: function render() {
	    var _this = this;
	
	    var currentDate = this.setTimeToNoon(new Date());
	    var selectedDate = this.props.selectedDate ? this.setTimeToNoon(new Date(this.props.selectedDate)) : null;
	    var minDate = this.props.minDate ? this.setTimeToNoon(new Date(this.props.minDate)) : null;
	    var maxDate = this.props.maxDate ? this.setTimeToNoon(new Date(this.props.maxDate)) : null;
	    var year = this.props.displayDate.getFullYear();
	    var month = this.props.displayDate.getMonth();
	    var firstDay = new Date(year, month, 1);
	    var startingDay = this.props.weekStartsOn > 1 ? firstDay.getDay() - this.props.weekStartsOn + 7 : this.props.weekStartsOn === 1 ? firstDay.getDay() === 0 ? 6 : firstDay.getDay() - 1 : firstDay.getDay();
	    var showWeeks = this.props.showWeeks;
	
	    var monthLength = daysInMonth[month];
	    if (month == 1) {
	      if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0) {
	        monthLength = 29;
	      }
	    }
	
	    var weeks = [];
	    var day = 1;
	    for (var i = 0; i < 9; i++) {
	      var week = [];
	      for (var j = 0; j <= 6; j++) {
	        if (day <= monthLength && (i > 0 || j >= startingDay)) {
	          var className = null;
	          var date = new Date(year, month, day, 12, 0, 0, 0).toISOString();
	          var beforeMinDate = minDate && Date.parse(date) < Date.parse(minDate);
	          var afterMinDate = maxDate && Date.parse(date) > Date.parse(maxDate);
	          if (beforeMinDate || afterMinDate) {
	            week.push(_react2.default.createElement(
	              'td',
	              {
	                key: j,
	                style: { padding: this.props.cellPadding },
	                className: 'text-muted'
	              },
	              day
	            ));
	          } else if (Date.parse(date) === Date.parse(selectedDate)) {
	            className = 'bg-primary';
	          } else if (Date.parse(date) === Date.parse(currentDate)) {
	            className = 'text-primary';
	          }
	          week.push(_react2.default.createElement(
	            'td',
	            {
	              key: j,
	              onClick: this.handleClick.bind(this, day),
	              style: { cursor: 'pointer', padding: this.props.cellPadding, borderRadius: this.props.roundedCorners ? 5 : 0 },
	              className: className
	            },
	            day
	          ));
	          day++;
	        } else {
	          week.push(_react2.default.createElement('td', { key: j }));
	        }
	      }
	
	      if (showWeeks) {
	        var weekNum = this.getWeekNumber(new Date(year, month, day - 1, 12, 0, 0, 0));
	        week.unshift(_react2.default.createElement(
	          'td',
	          {
	            key: 7,
	            style: { padding: this.props.cellPadding, fontSize: '0.8em', color: 'darkgrey' },
	            className: 'text-muted'
	          },
	          weekNum
	        ));
	      }
	
	      weeks.push(_react2.default.createElement(
	        'tr',
	        { key: i },
	        week
	      ));
	      if (day > monthLength) {
	        break;
	      }
	    }
	
	    var weekColumn = showWeeks ? _react2.default.createElement('td', {
	      className: 'text-muted current-week',
	      style: { padding: this.props.cellPadding } }) : null;
	
	    return _react2.default.createElement(
	      'table',
	      { className: 'text-center' },
	      _react2.default.createElement(
	        'thead',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          weekColumn,
	          this.props.dayLabels.map(function (label, index) {
	            return _react2.default.createElement(
	              'td',
	              {
	                key: index,
	                className: 'text-muted',
	                style: { padding: _this.props.cellPadding } },
	              _react2.default.createElement(
	                'small',
	                null,
	                label
	              )
	            );
	          })
	        )
	      ),
	      _react2.default.createElement(
	        'tbody',
	        null,
	        weeks
	      ),
	      this.props.showTodayButton && _react2.default.createElement(
	        'tfoot',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { colSpan: this.props.dayLabels.length, style: { paddingTop: '9px' } },
	            _react2.default.createElement(
	              _Button2.default,
	              {
	                block: true,
	                bsSize: 'xsmall',
	                className: 'u-today-button',
	                onClick: this.handleClickToday },
	              this.props.todayButtonLabel
	            )
	          )
	        )
	      )
	    );
	  }
	});
	
	exports.default = (0, _createReactClass2.default)({
	  displayName: 'DatePicker',
	
	  propTypes: {
	    defaultValue: _propTypes2.default.string,
	    value: _propTypes2.default.string,
	    required: _propTypes2.default.bool,
	    className: _propTypes2.default.string,
	    style: _propTypes2.default.object,
	    minDate: _propTypes2.default.string,
	    maxDate: _propTypes2.default.string,
	    cellPadding: _propTypes2.default.string,
	    autoComplete: _propTypes2.default.string,
	    placeholder: _propTypes2.default.string,
	    dayLabels: _propTypes2.default.array,
	    monthLabels: _propTypes2.default.array,
	    onChange: _propTypes2.default.func,
	    onClear: _propTypes2.default.func,
	    onBlur: _propTypes2.default.func,
	    onFocus: _propTypes2.default.func,
	    autoFocus: _propTypes2.default.bool,
	    disabled: _propTypes2.default.bool,
	    weekStartsOnMonday: function weekStartsOnMonday(props, propName, componentName) {
	      if (props[propName]) {
	        return new Error('Prop \'' + propName + '\' supplied to \'' + componentName + '\' is obsolete. Use \'weekStartsOn\' instead.');
	      }
	    },
	    weekStartsOn: _propTypes2.default.number,
	    clearButtonElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
	    showClearButton: _propTypes2.default.bool,
	    previousButtonElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
	    nextButtonElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
	    calendarPlacement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),
	    dateFormat: _propTypes2.default.string, // 'MM/DD/YYYY', 'DD/MM/YYYY', 'YYYY/MM/DD', 'DD-MM-YYYY'
	    bsClass: _propTypes2.default.string,
	    bsSize: _propTypes2.default.string,
	    calendarContainer: _propTypes2.default.object,
	    id: _propTypes2.default.string,
	    name: _propTypes2.default.string,
	    showTodayButton: _propTypes2.default.bool,
	    todayButtonLabel: _propTypes2.default.string,
	    instanceCount: _propTypes2.default.number,
	    customControl: _propTypes2.default.object,
	    roundedCorners: _propTypes2.default.bool,
	    showWeeks: _propTypes2.default.bool,
	    children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),
	    onInvalid: _propTypes2.default.func,
	    noValidate: _propTypes2.default.bool
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    var language = typeof window !== 'undefined' && window.navigator ? (window.navigator.userLanguage || window.navigator.language || '').toLowerCase() : '';
	    var dateFormat = !language || language === 'en-us' ? 'MM/DD/YYYY' : 'DD/MM/YYYY';
	    return {
	      cellPadding: '5px',
	      dayLabels: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
	      monthLabels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
	      clearButtonElement: '×',
	      previousButtonElement: '<',
	      nextButtonElement: '>',
	      calendarPlacement: 'bottom',
	      dateFormat: dateFormat,
	      showClearButton: true,
	      autoFocus: false,
	      disabled: false,
	      showTodayButton: false,
	      todayButtonLabel: 'Today',
	      autoComplete: 'on',
	      showWeeks: false,
	      instanceCount: instanceCount++,
	      style: {
	        width: '100%'
	      },
	      roundedCorners: false,
	      noValidate: false
	    };
	  },
	  getInitialState: function getInitialState() {
	    if (this.props.value && this.props.defaultValue) {
	      throw new Error('Conflicting DatePicker properties \'value\' and \'defaultValue\'');
	    }
	    var state = this.makeDateValues(this.props.value || this.props.defaultValue);
	    if (this.props.weekStartsOn > 1) {
	      state.dayLabels = this.props.dayLabels.slice(this.props.weekStartsOn).concat(this.props.dayLabels.slice(0, this.props.weekStartsOn));
	    } else if (this.props.weekStartsOn === 1) {
	      state.dayLabels = this.props.dayLabels.slice(1).concat(this.props.dayLabels.slice(0, 1));
	    } else {
	      state.dayLabels = this.props.dayLabels;
	    }
	    state.focused = false;
	    state.inputFocused = false;
	    state.placeholder = this.props.placeholder || this.props.dateFormat;
	    state.separator = this.props.dateFormat.match(/[^A-Z]/)[0];
	    return state;
	  },
	  makeDateValues: function makeDateValues(isoString) {
	    var displayDate = void 0;
	    var selectedDate = isoString ? new Date(isoString.slice(0, 10) + 'T12:00:00.000Z') : null;
	    var minDate = this.props.minDate ? new Date(isoString.slice(0, 10) + 'T12:00:00.000Z') : null;
	    var maxDate = this.props.maxDate ? new Date(isoString.slice(0, 10) + 'T12:00:00.000Z') : null;
	
	    var inputValue = isoString ? this.makeInputValueString(selectedDate) : null;
	    if (selectedDate) {
	      displayDate = new Date(selectedDate);
	    } else {
	      var today = new Date(new Date().toISOString().slice(0, 10) + 'T12:00:00.000Z');
	      if (minDate && Date.parse(minDate) >= Date.parse(today)) {
	        displayDate = minDate;
	      } else if (maxDate && Date.parse(maxDate) <= Date.parse(today)) {
	        displayDate = maxDate;
	      } else {
	        displayDate = today;
	      }
	    }
	
	    return {
	      value: selectedDate ? selectedDate.toISOString() : null,
	      displayDate: displayDate,
	      selectedDate: selectedDate,
	      inputValue: inputValue
	    };
	  },
	  clear: function clear() {
	    if (this.props.onClear) {
	      this.props.onClear();
	    } else {
	      this.setState(this.makeDateValues(null));
	    }
	
	    if (this.props.onChange) {
	      this.props.onChange(null, null);
	    }
	  },
	  handleHide: function handleHide() {
	    if (this.state.inputFocused) {
	      return;
	    }
	    this.setState({
	      focused: false
	    });
	    if (this.props.onBlur) {
	      var event = document.createEvent('CustomEvent');
	      event.initEvent('Change Date', true, false);
	      _reactDom2.default.findDOMNode(this.refs.hiddenInput).dispatchEvent(event);
	      this.props.onBlur(event);
	    }
	  },
	  handleKeyDown: function handleKeyDown(e) {
	    if (e.which === 9 && this.state.inputFocused) {
	      this.setState({
	        focused: false
	      });
	
	      if (this.props.onBlur) {
	        var event = document.createEvent('CustomEvent');
	        event.initEvent('Change Date', true, false);
	        _reactDom2.default.findDOMNode(this.refs.hiddenInput).dispatchEvent(event);
	        this.props.onBlur(event);
	      }
	    }
	  },
	  handleFocus: function handleFocus() {
	    if (this.state.focused === true) {
	      return;
	    }
	
	    var placement = this.getCalendarPlacement();
	
	    this.setState({
	      inputFocused: true,
	      focused: true,
	      calendarPlacement: placement
	    });
	
	    if (this.props.onFocus) {
	      var event = document.createEvent('CustomEvent');
	      event.initEvent('Change Date', true, false);
	      _reactDom2.default.findDOMNode(this.refs.hiddenInput).dispatchEvent(event);
	      this.props.onFocus(event);
	    }
	  },
	  handleBlur: function handleBlur() {
	    this.setState({
	      inputFocused: false
	    });
	  },
	
	
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	    return !(this.state.inputFocused === true && nextState.inputFocused === false);
	  },
	
	  getValue: function getValue() {
	    return this.state.selectedDate ? this.state.selectedDate.toISOString() : null;
	  },
	  getFormattedValue: function getFormattedValue() {
	    return this.state.displayDate ? this.state.inputValue : null;
	  },
	  getCalendarPlacement: function getCalendarPlacement() {
	    var tag = Object.prototype.toString.call(this.props.calendarPlacement);
	    var isFunction = tag === '[object AsyncFunction]' || tag === '[object Function]' || tag === '[object GeneratorFunction]' || tag === '[object Proxy]';
	    if (isFunction) {
	      return this.props.calendarPlacement();
	    } else {
	      return this.props.calendarPlacement;
	    }
	  },
	  makeInputValueString: function makeInputValueString(date) {
	    var month = date.getMonth() + 1;
	    var day = date.getDate();
	
	    //this method is executed during intialState setup... handle a missing state properly
	    var separator = this.state ? this.state.separator : this.props.dateFormat.match(/[^A-Z]/)[0];
	    if (this.props.dateFormat.match(/MM.DD.YYYY/)) {
	      return (month > 9 ? month : '0' + month) + separator + (day > 9 ? day : '0' + day) + separator + date.getFullYear();
	    } else if (this.props.dateFormat.match(/DD.MM.YYYY/)) {
	      return (day > 9 ? day : '0' + day) + separator + (month > 9 ? month : '0' + month) + separator + date.getFullYear();
	    } else {
	      return date.getFullYear() + separator + (month > 9 ? month : '0' + month) + separator + (day > 9 ? day : '0' + day);
	    }
	  },
	  handleBadInput: function handleBadInput(originalValue) {
	    var parts = originalValue.replace(new RegExp('[^0-9' + this.state.separator + ']'), '').split(this.state.separator);
	    if (this.props.dateFormat.match(/MM.DD.YYYY/) || this.props.dateFormat.match(/DD.MM.YYYY/)) {
	      if (parts[0] && parts[0].length > 2) {
	        parts[1] = parts[0].slice(2) + (parts[1] || '');
	        parts[0] = parts[0].slice(0, 2);
	      }
	      if (parts[1] && parts[1].length > 2) {
	        parts[2] = parts[1].slice(2) + (parts[2] || '');
	        parts[1] = parts[1].slice(0, 2);
	      }
	      if (parts[2]) {
	        parts[2] = parts[2].slice(0, 4);
	      }
	    } else {
	      if (parts[0] && parts[0].length > 4) {
	        parts[1] = parts[0].slice(4) + (parts[1] || '');
	        parts[0] = parts[0].slice(0, 4);
	      }
	      if (parts[1] && parts[1].length > 2) {
	        parts[2] = parts[1].slice(2) + (parts[2] || '');
	        parts[1] = parts[1].slice(0, 2);
	      }
	      if (parts[2]) {
	        parts[2] = parts[2].slice(0, 2);
	      }
	    }
	    this.setState({
	      inputValue: parts.join(this.state.separator)
	    });
	  },
	  handleInputChange: function handleInputChange() {
	
	    var originalValue = _reactDom2.default.findDOMNode(this.refs.input).value;
	    var inputValue = originalValue.replace(/(-|\/\/)/g, this.state.separator).slice(0, 10);
	
	    if (!inputValue) {
	      this.clear();
	      return;
	    }
	
	    var month = void 0,
	        day = void 0,
	        year = void 0;
	    if (this.props.dateFormat.match(/MM.DD.YYYY/)) {
	      if (!inputValue.match(/[0-1][0-9].[0-3][0-9].[1-2][0-9][0-9][0-9]/)) {
	        return this.handleBadInput(originalValue);
	      }
	
	      month = inputValue.slice(0, 2).replace(/[^0-9]/g, '');
	      day = inputValue.slice(3, 5).replace(/[^0-9]/g, '');
	      year = inputValue.slice(6, 10).replace(/[^0-9]/g, '');
	    } else if (this.props.dateFormat.match(/DD.MM.YYYY/)) {
	      if (!inputValue.match(/[0-3][0-9].[0-1][0-9].[1-2][0-9][0-9][0-9]/)) {
	        return this.handleBadInput(originalValue);
	      }
	
	      day = inputValue.slice(0, 2).replace(/[^0-9]/g, '');
	      month = inputValue.slice(3, 5).replace(/[^0-9]/g, '');
	      year = inputValue.slice(6, 10).replace(/[^0-9]/g, '');
	    } else {
	      if (!inputValue.match(/[1-2][0-9][0-9][0-9].[0-1][0-9].[0-3][0-9]/)) {
	        return this.handleBadInput(originalValue);
	      }
	
	      year = inputValue.slice(0, 4).replace(/[^0-9]/g, '');
	      month = inputValue.slice(5, 7).replace(/[^0-9]/g, '');
	      day = inputValue.slice(8, 10).replace(/[^0-9]/g, '');
	    }
	
	    var monthInteger = parseInt(month, 10);
	    var dayInteger = parseInt(day, 10);
	    var yearInteger = parseInt(year, 10);
	    if (monthInteger > 12 || dayInteger > 31) {
	      return this.handleBadInput(originalValue);
	    }
	
	    if (!isNaN(monthInteger) && !isNaN(dayInteger) && !isNaN(yearInteger) && monthInteger <= 12 && dayInteger <= 31 && yearInteger > 999) {
	      var selectedDate = new Date(yearInteger, monthInteger - 1, dayInteger, 12, 0, 0, 0);
	      this.setState({
	        selectedDate: selectedDate,
	        displayDate: selectedDate,
	        value: selectedDate.toISOString()
	      });
	
	      if (this.props.onChange) {
	        this.props.onChange(selectedDate.toISOString(), inputValue);
	      }
	    }
	
	    this.setState({
	      inputValue: inputValue
	    });
	  },
	  onChangeMonth: function onChangeMonth(newDisplayDate) {
	    this.setState({
	      displayDate: newDisplayDate
	    });
	  },
	  onChangeDate: function onChangeDate(newSelectedDate) {
	    var inputValue = this.makeInputValueString(newSelectedDate);
	    this.setState({
	      inputValue: inputValue,
	      selectedDate: newSelectedDate,
	      displayDate: newSelectedDate,
	      value: newSelectedDate.toISOString(),
	      focused: false
	    });
	
	    if (this.props.onBlur) {
	      var event = document.createEvent('CustomEvent');
	      event.initEvent('Change Date', true, false);
	      _reactDom2.default.findDOMNode(this.refs.hiddenInput).dispatchEvent(event);
	      this.props.onBlur(event);
	    }
	
	    if (this.props.onChange) {
	      this.props.onChange(newSelectedDate.toISOString(), inputValue);
	    }
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(newProps) {
	    var value = newProps.value;
	    if (this.getValue() !== value) {
	      this.setState(this.makeDateValues(value));
	    }
	  },
	  render: function render() {
	    var _this2 = this;
	
	    var calendarHeader = _react2.default.createElement(CalendarHeader, {
	      previousButtonElement: this.props.previousButtonElement,
	      nextButtonElement: this.props.nextButtonElement,
	      displayDate: this.state.displayDate,
	      minDate: this.props.minDate,
	      maxDate: this.props.maxDate,
	      onChange: this.onChangeMonth,
	      monthLabels: this.props.monthLabels,
	      dateFormat: this.props.dateFormat });
	
	    var control = this.props.customControl ? _react2.default.cloneElement(this.props.customControl, {
	      onKeyDown: this.handleKeyDown,
	      value: this.state.inputValue || '',
	      required: this.props.required,
	      placeholder: this.state.focused ? this.props.dateFormat : this.state.placeholder,
	      ref: 'input',
	      disabled: this.props.disabled,
	      onFocus: this.handleFocus,
	      onBlur: this.handleBlur,
	      onChange: this.handleInputChange,
	      className: this.props.className,
	      style: this.props.style,
	      autoComplete: this.props.autoComplete,
	      onInvalid: this.props.onInvalid,
	      noValidate: this.props.noValidate
	    }) : _react2.default.createElement(_FormControl2.default, {
	      onKeyDown: this.handleKeyDown,
	      value: this.state.inputValue || '',
	      required: this.props.required,
	      ref: 'input',
	      type: 'text',
	      className: this.props.className,
	      style: this.props.style,
	      autoFocus: this.props.autoFocus,
	      disabled: this.props.disabled,
	      placeholder: this.state.focused ? this.props.dateFormat : this.state.placeholder,
	      onFocus: this.handleFocus,
	      onBlur: this.handleBlur,
	      onChange: this.handleInputChange,
	      autoComplete: this.props.autoComplete,
	      onInvalid: this.props.onInvalid,
	      noValidate: this.props.noValidate
	    });
	
	    return _react2.default.createElement(
	      _InputGroup2.default,
	      {
	        ref: 'inputGroup',
	        bsClass: this.props.showClearButton ? this.props.bsClass : '',
	        bsSize: this.props.bsSize,
	        id: this.props.id ? this.props.id + '_group' : null },
	      control,
	      _react2.default.createElement(
	        _Overlay2.default,
	        {
	          rootClose: true,
	          onHide: this.handleHide,
	          show: this.state.focused,
	          container: function container() {
	            return _this2.props.calendarContainer || _reactDom2.default.findDOMNode(_this2.refs.overlayContainer);
	          },
	          target: function target() {
	            return _reactDom2.default.findDOMNode(_this2.refs.input);
	          },
	          placement: this.state.calendarPlacement,
	          delayHide: 200 },
	        _react2.default.createElement(
	          _Popover2.default,
	          { id: 'date-picker-popover-' + this.props.instanceCount, className: 'date-picker-popover', title: calendarHeader },
	          _react2.default.createElement(Calendar, {
	            cellPadding: this.props.cellPadding,
	            selectedDate: this.state.selectedDate,
	            displayDate: this.state.displayDate,
	            onChange: this.onChangeDate,
	            dayLabels: this.state.dayLabels,
	            weekStartsOn: this.props.weekStartsOn,
	            showTodayButton: this.props.showTodayButton,
	            todayButtonLabel: this.props.todayButtonLabel,
	            minDate: this.props.minDate,
	            maxDate: this.props.maxDate,
	            roundedCorners: this.props.roundedCorners,
	            showWeeks: this.props.showWeeks
	          })
	        )
	      ),
	      _react2.default.createElement('div', { ref: 'overlayContainer', style: { position: 'relative' } }),
	      _react2.default.createElement('input', { ref: 'hiddenInput', type: 'hidden', id: this.props.id, name: this.props.name, value: this.state.value || '', 'data-formattedvalue': this.state.value ? this.state.inputValue : '' }),
	      this.props.showClearButton && !this.props.customControl && _react2.default.createElement(
	        _InputGroup2.default.Addon,
	        {
	          onClick: this.props.disabled ? null : this.clear,
	          style: { cursor: this.state.inputValue && !this.props.disabled ? 'pointer' : 'not-allowed' } },
	        _react2.default.createElement(
	          'div',
	          { style: { opacity: this.state.inputValue && !this.props.disabled ? 1 : 0.5 } },
	          this.props.clearButtonElement
	        )
	      ),
	      this.props.children
	    );
	  }
	});
	module.exports = exports['default'];

/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	
	'use strict';
	
	var React = __webpack_require__(1);
	var factory = __webpack_require__(35);
	
	if (typeof React === 'undefined') {
	  throw Error(
	    'create-react-class could not find the React object. If you are using script tags, ' +
	      'make sure that React is being loaded before create-react-class.'
	  );
	}
	
	// Hack to grab NoopUpdateQueue from isomorphic React
	var ReactNoopUpdateQueue = new React.Component().updater;
	
	module.exports = factory(
	  React.Component,
	  React.isValidElement,
	  ReactNoopUpdateQueue
	);


/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.defaultFilterOptions = exports.defaultClearRenderer = exports.defaultArrowRenderer = exports.defaultMenuRenderer = exports.Option = exports.Value = exports.Creatable = exports.AsyncCreatable = exports.Async = undefined;
	
	var _Select = __webpack_require__(689);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	var _Async = __webpack_require__(700);
	
	var _Async2 = _interopRequireDefault(_Async);
	
	var _AsyncCreatable = __webpack_require__(701);
	
	var _AsyncCreatable2 = _interopRequireDefault(_AsyncCreatable);
	
	var _Creatable = __webpack_require__(702);
	
	var _Creatable2 = _interopRequireDefault(_Creatable);
	
	var _Value = __webpack_require__(699);
	
	var _Value2 = _interopRequireDefault(_Value);
	
	var _Option = __webpack_require__(697);
	
	var _Option2 = _interopRequireDefault(_Option);
	
	var _defaultMenuRenderer = __webpack_require__(696);
	
	var _defaultMenuRenderer2 = _interopRequireDefault(_defaultMenuRenderer);
	
	var _defaultArrowRenderer = __webpack_require__(691);
	
	var _defaultArrowRenderer2 = _interopRequireDefault(_defaultArrowRenderer);
	
	var _defaultClearRenderer = __webpack_require__(692);
	
	var _defaultClearRenderer2 = _interopRequireDefault(_defaultClearRenderer);
	
	var _defaultFilterOptions = __webpack_require__(693);
	
	var _defaultFilterOptions2 = _interopRequireDefault(_defaultFilterOptions);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	_Select2.default.Async = _Async2.default;
	_Select2.default.AsyncCreatable = _AsyncCreatable2.default;
	_Select2.default.Creatable = _Creatable2.default;
	_Select2.default.Value = _Value2.default;
	_Select2.default.Option = _Option2.default;
	
	exports.default = _Select2.default;
	exports.Async = _Async2.default;
	exports.AsyncCreatable = _AsyncCreatable2.default;
	exports.Creatable = _Creatable2.default;
	exports.Value = _Value2.default;
	exports.Option = _Option2.default;
	exports.defaultMenuRenderer = _defaultMenuRenderer2.default;
	exports.defaultArrowRenderer = _defaultArrowRenderer2.default;
	exports.defaultClearRenderer = _defaultClearRenderer2.default;
	exports.defaultFilterOptions = _defaultFilterOptions2.default;

/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /*!
	                                                                                                                                                                                                                                                                                Copyright (c) 2018 Jed Watson.
	                                                                                                                                                                                                                                                                                Licensed under the MIT License (MIT), see
	                                                                                                                                                                                                                                                                                http://jedwatson.github.io/react-select
	                                                                                                                                                                                                                                                                              */
	
	
	var _reactInputAutosize = __webpack_require__(690);
	
	var _reactInputAutosize2 = _interopRequireDefault(_reactInputAutosize);
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(37);
	
	var _defaultArrowRenderer = __webpack_require__(691);
	
	var _defaultArrowRenderer2 = _interopRequireDefault(_defaultArrowRenderer);
	
	var _defaultClearRenderer = __webpack_require__(692);
	
	var _defaultClearRenderer2 = _interopRequireDefault(_defaultClearRenderer);
	
	var _defaultFilterOptions = __webpack_require__(693);
	
	var _defaultFilterOptions2 = _interopRequireDefault(_defaultFilterOptions);
	
	var _defaultMenuRenderer = __webpack_require__(696);
	
	var _defaultMenuRenderer2 = _interopRequireDefault(_defaultMenuRenderer);
	
	var _Option = __webpack_require__(697);
	
	var _Option2 = _interopRequireDefault(_Option);
	
	var _Value = __webpack_require__(699);
	
	var _Value2 = _interopRequireDefault(_Value);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var stringifyValue = function stringifyValue(value) {
		return typeof value === 'string' ? value : value !== null && JSON.stringify(value) || '';
	};
	
	var stringOrNode = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]);
	var stringOrNumber = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]);
	
	var instanceId = 1;
	
	var shouldShowValue = function shouldShowValue(state, props) {
		var inputValue = state.inputValue,
		    isPseudoFocused = state.isPseudoFocused,
		    isFocused = state.isFocused;
		var onSelectResetsInput = props.onSelectResetsInput;
	
	
		if (!inputValue) return true;
	
		if (!onSelectResetsInput) {
			return !(!isFocused && isPseudoFocused || isFocused && !isPseudoFocused);
		}
	
		return false;
	};
	
	var shouldShowPlaceholder = function shouldShowPlaceholder(state, props, isOpen) {
		var inputValue = state.inputValue,
		    isPseudoFocused = state.isPseudoFocused,
		    isFocused = state.isFocused;
		var onSelectResetsInput = props.onSelectResetsInput;
	
	
		return !inputValue || !onSelectResetsInput && !isOpen && !isPseudoFocused && !isFocused;
	};
	
	/**
	 * Retrieve a value from the given options and valueKey
	 * @param {String|Number|Array} value	- the selected value(s)
	 * @param {Object}		 props	- the Select component's props (or nextProps)
	 */
	var expandValue = function expandValue(value, props) {
		var valueType = typeof value === 'undefined' ? 'undefined' : _typeof(value);
		if (valueType !== 'string' && valueType !== 'number' && valueType !== 'boolean') return value;
		var options = props.options,
		    valueKey = props.valueKey;
	
		if (!options) return;
		for (var i = 0; i < options.length; i++) {
			if (String(options[i][valueKey]) === String(value)) return options[i];
		}
	};
	
	var handleRequired = function handleRequired(value, multi) {
		if (!value) return true;
		return multi ? value.length === 0 : Object.keys(value).length === 0;
	};
	
	var Select = function (_React$Component) {
		_inherits(Select, _React$Component);
	
		function Select(props) {
			_classCallCheck(this, Select);
	
			var _this = _possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));
	
			['clearValue', 'focusOption', 'getOptionLabel', 'handleInputBlur', 'handleInputChange', 'handleInputFocus', 'handleInputValueChange', 'handleKeyDown', 'handleMenuScroll', 'handleMouseDown', 'handleMouseDownOnArrow', 'handleMouseDownOnMenu', 'handleTouchEnd', 'handleTouchEndClearValue', 'handleTouchMove', 'handleTouchOutside', 'handleTouchStart', 'handleValueClick', 'onOptionRef', 'removeValue', 'selectValue'].forEach(function (fn) {
				return _this[fn] = _this[fn].bind(_this);
			});
	
			_this.state = {
				inputValue: '',
				isFocused: false,
				isOpen: false,
				isPseudoFocused: false,
				required: false
			};
			return _this;
		}
	
		_createClass(Select, [{
			key: 'componentWillMount',
			value: function componentWillMount() {
				this._instancePrefix = 'react-select-' + (this.props.instanceId || ++instanceId) + '-';
				var valueArray = this.getValueArray(this.props.value);
	
				if (this.props.required) {
					this.setState({
						required: handleRequired(valueArray[0], this.props.multi)
					});
				}
			}
		}, {
			key: 'componentDidMount',
			value: function componentDidMount() {
				if (typeof this.props.autofocus !== 'undefined' && typeof console !== 'undefined') {
					console.warn('Warning: The autofocus prop has changed to autoFocus, support will be removed after react-select@1.0');
				}
				if (this.props.autoFocus || this.props.autofocus) {
					this.focus();
				}
			}
		}, {
			key: 'componentWillReceiveProps',
			value: function componentWillReceiveProps(nextProps) {
				var valueArray = this.getValueArray(nextProps.value, nextProps);
	
				if (nextProps.required) {
					this.setState({
						required: handleRequired(valueArray[0], nextProps.multi)
					});
				} else if (this.props.required) {
					// Used to be required but it's not any more
					this.setState({ required: false });
				}
	
				if (this.state.inputValue && this.props.value !== nextProps.value && nextProps.onSelectResetsInput) {
					this.setState({ inputValue: this.handleInputValueChange('') });
				}
			}
		}, {
			key: 'componentDidUpdate',
			value: function componentDidUpdate(prevProps, prevState) {
				// focus to the selected option
				if (this.menu && this.focused && this.state.isOpen && !this.hasScrolledToOption) {
					var focusedOptionNode = (0, _reactDom.findDOMNode)(this.focused);
					var menuNode = (0, _reactDom.findDOMNode)(this.menu);
	
					var scrollTop = menuNode.scrollTop;
					var scrollBottom = scrollTop + menuNode.offsetHeight;
					var optionTop = focusedOptionNode.offsetTop;
					var optionBottom = optionTop + focusedOptionNode.offsetHeight;
	
					if (scrollTop > optionTop || scrollBottom < optionBottom) {
						menuNode.scrollTop = focusedOptionNode.offsetTop;
					}
	
					// We still set hasScrolledToOption to true even if we didn't
					// actually need to scroll, as we've still confirmed that the
					// option is in view.
					this.hasScrolledToOption = true;
				} else if (!this.state.isOpen) {
					this.hasScrolledToOption = false;
				}
	
				if (this._scrollToFocusedOptionOnUpdate && this.focused && this.menu) {
					this._scrollToFocusedOptionOnUpdate = false;
					var focusedDOM = (0, _reactDom.findDOMNode)(this.focused);
					var menuDOM = (0, _reactDom.findDOMNode)(this.menu);
					var focusedRect = focusedDOM.getBoundingClientRect();
					var menuRect = menuDOM.getBoundingClientRect();
					if (focusedRect.bottom > menuRect.bottom) {
						menuDOM.scrollTop = focusedDOM.offsetTop + focusedDOM.clientHeight - menuDOM.offsetHeight;
					} else if (focusedRect.top < menuRect.top) {
						menuDOM.scrollTop = focusedDOM.offsetTop;
					}
				}
				if (this.props.scrollMenuIntoView && this.menuContainer) {
					var menuContainerRect = this.menuContainer.getBoundingClientRect();
					if (window.innerHeight < menuContainerRect.bottom + this.props.menuBuffer) {
						window.scrollBy(0, menuContainerRect.bottom + this.props.menuBuffer - window.innerHeight);
					}
				}
				if (prevProps.disabled !== this.props.disabled) {
					this.setState({ isFocused: false }); // eslint-disable-line react/no-did-update-set-state
					this.closeMenu();
				}
				if (prevState.isOpen !== this.state.isOpen) {
					this.toggleTouchOutsideEvent(this.state.isOpen);
					var handler = this.state.isOpen ? this.props.onOpen : this.props.onClose;
					handler && handler();
				}
			}
		}, {
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				this.toggleTouchOutsideEvent(false);
			}
		}, {
			key: 'toggleTouchOutsideEvent',
			value: function toggleTouchOutsideEvent(enabled) {
				var eventTogglerName = enabled ? document.addEventListener ? 'addEventListener' : 'attachEvent' : document.removeEventListener ? 'removeEventListener' : 'detachEvent';
				var pref = document.addEventListener ? '' : 'on';
	
				document[eventTogglerName](pref + 'touchstart', this.handleTouchOutside);
				document[eventTogglerName](pref + 'mousedown', this.handleTouchOutside);
			}
		}, {
			key: 'handleTouchOutside',
			value: function handleTouchOutside(event) {
				// handle touch outside on ios to dismiss menu
				if (this.wrapper && !this.wrapper.contains(event.target)) {
					this.closeMenu();
				}
			}
		}, {
			key: 'focus',
			value: function focus() {
				if (!this.input) return;
				this.input.focus();
			}
		}, {
			key: 'blurInput',
			value: function blurInput() {
				if (!this.input) return;
				this.input.blur();
			}
		}, {
			key: 'handleTouchMove',
			value: function handleTouchMove() {
				// Set a flag that the view is being dragged
				this.dragging = true;
			}
		}, {
			key: 'handleTouchStart',
			value: function handleTouchStart() {
				// Set a flag that the view is not being dragged
				this.dragging = false;
			}
		}, {
			key: 'handleTouchEnd',
			value: function handleTouchEnd(event) {
				// Check if the view is being dragged, In this case
				// we don't want to fire the click event (because the user only wants to scroll)
				if (this.dragging) return;
	
				// Fire the mouse events
				this.handleMouseDown(event);
			}
		}, {
			key: 'handleTouchEndClearValue',
			value: function handleTouchEndClearValue(event) {
				// Check if the view is being dragged, In this case
				// we don't want to fire the click event (because the user only wants to scroll)
				if (this.dragging) return;
	
				// Clear the value
				this.clearValue(event);
			}
		}, {
			key: 'handleMouseDown',
			value: function handleMouseDown(event) {
				// if the event was triggered by a mousedown and not the primary
				// button, or if the component is disabled, ignore it.
				if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
					return;
				}
	
				if (event.target.tagName === 'INPUT') {
					if (!this.state.isFocused) {
						this._openAfterFocus = this.props.openOnClick;
						this.focus();
					} else if (!this.state.isOpen) {
						this.setState({
							isOpen: true,
							isPseudoFocused: false,
							focusedOption: null
						});
					}
	
					return;
				}
	
				// prevent default event handlers
				event.preventDefault();
	
				// for the non-searchable select, toggle the menu
				if (!this.props.searchable) {
					// This code means that if a select is searchable, onClick the options menu will not appear, only on subsequent click will it open.
					this.focus();
					return this.setState({
						isOpen: !this.state.isOpen,
						focusedOption: null
					});
				}
	
				if (this.state.isFocused) {
					// On iOS, we can get into a state where we think the input is focused but it isn't really,
					// since iOS ignores programmatic calls to input.focus() that weren't triggered by a click event.
					// Call focus() again here to be safe.
					this.focus();
	
					var input = this.input;
					var toOpen = true;
	
					if (typeof input.getInput === 'function') {
						// Get the actual DOM input if the ref is an <AutosizeInput /> component
						input = input.getInput();
					}
	
					// clears the value so that the cursor will be at the end of input when the component re-renders
					input.value = '';
	
					if (this._focusAfterClear) {
						toOpen = false;
						this._focusAfterClear = false;
					}
	
					// if the input is focused, ensure the menu is open
					this.setState({
						isOpen: toOpen,
						isPseudoFocused: false,
						focusedOption: null
					});
				} else {
					// otherwise, focus the input and open the menu
					this._openAfterFocus = this.props.openOnClick;
					this.focus();
					this.setState({ focusedOption: null });
				}
			}
		}, {
			key: 'handleMouseDownOnArrow',
			value: function handleMouseDownOnArrow(event) {
				// if the event was triggered by a mousedown and not the primary
				// button, or if the component is disabled, ignore it.
				if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
					return;
				}
	
				if (this.state.isOpen) {
					// prevent default event handlers
					event.stopPropagation();
					event.preventDefault();
					// close the menu
					this.closeMenu();
				} else {
					// If the menu isn't open, let the event bubble to the main handleMouseDown
					this.setState({
						isOpen: true
					});
				}
			}
		}, {
			key: 'handleMouseDownOnMenu',
			value: function handleMouseDownOnMenu(event) {
				// if the event was triggered by a mousedown and not the primary
				// button, or if the component is disabled, ignore it.
				if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
					return;
				}
	
				event.stopPropagation();
				event.preventDefault();
	
				this._openAfterFocus = true;
				this.focus();
			}
		}, {
			key: 'closeMenu',
			value: function closeMenu() {
				if (this.props.onCloseResetsInput) {
					this.setState({
						inputValue: this.handleInputValueChange(''),
						isOpen: false,
						isPseudoFocused: this.state.isFocused && !this.props.multi
					});
				} else {
					this.setState({
						isOpen: false,
						isPseudoFocused: this.state.isFocused && !this.props.multi
					});
				}
				this.hasScrolledToOption = false;
			}
		}, {
			key: 'handleInputFocus',
			value: function handleInputFocus(event) {
				if (this.props.disabled) return;
	
				var toOpen = this.state.isOpen || this._openAfterFocus || this.props.openOnFocus;
				toOpen = this._focusAfterClear ? false : toOpen; //if focus happens after clear values, don't open dropdown yet.
	
				if (this.props.onFocus) {
					this.props.onFocus(event);
				}
	
				this.setState({
					isFocused: true,
					isOpen: !!toOpen
				});
	
				this._focusAfterClear = false;
				this._openAfterFocus = false;
			}
		}, {
			key: 'handleInputBlur',
			value: function handleInputBlur(event) {
				// The check for menu.contains(activeElement) is necessary to prevent IE11's scrollbar from closing the menu in certain contexts.
				if (this.menu && (this.menu === document.activeElement || this.menu.contains(document.activeElement))) {
					this.focus();
					return;
				}
	
				if (this.props.onBlur) {
					this.props.onBlur(event);
				}
				var onBlurredState = {
					isFocused: false,
					isOpen: false,
					isPseudoFocused: false
				};
				if (this.props.onBlurResetsInput) {
					onBlurredState.inputValue = this.handleInputValueChange('');
				}
				this.setState(onBlurredState);
			}
		}, {
			key: 'handleInputChange',
			value: function handleInputChange(event) {
				var newInputValue = event.target.value;
	
				if (this.state.inputValue !== event.target.value) {
					newInputValue = this.handleInputValueChange(newInputValue);
				}
	
				this.setState({
					inputValue: newInputValue,
					isOpen: true,
					isPseudoFocused: false
				});
			}
		}, {
			key: 'setInputValue',
			value: function setInputValue(newValue) {
				if (this.props.onInputChange) {
					var nextState = this.props.onInputChange(newValue);
					if (nextState != null && (typeof nextState === 'undefined' ? 'undefined' : _typeof(nextState)) !== 'object') {
						newValue = '' + nextState;
					}
				}
				this.setState({
					inputValue: newValue
				});
			}
		}, {
			key: 'handleInputValueChange',
			value: function handleInputValueChange(newValue) {
				if (this.props.onInputChange) {
					var nextState = this.props.onInputChange(newValue);
					// Note: != used deliberately here to catch undefined and null
					if (nextState != null && (typeof nextState === 'undefined' ? 'undefined' : _typeof(nextState)) !== 'object') {
						newValue = '' + nextState;
					}
				}
				return newValue;
			}
		}, {
			key: 'handleKeyDown',
			value: function handleKeyDown(event) {
				if (this.props.disabled) return;
	
				if (typeof this.props.onInputKeyDown === 'function') {
					this.props.onInputKeyDown(event);
					if (event.defaultPrevented) {
						return;
					}
				}
	
				switch (event.keyCode) {
					case 8:
						// backspace
						if (!this.state.inputValue && this.props.backspaceRemoves) {
							event.preventDefault();
							this.popValue();
						}
						break;
					case 9:
						// tab
						if (event.shiftKey || !this.state.isOpen || !this.props.tabSelectsValue) {
							break;
						}
						event.preventDefault();
						this.selectFocusedOption();
						break;
					case 13:
						// enter
						event.preventDefault();
						event.stopPropagation();
						if (this.state.isOpen) {
							this.selectFocusedOption();
						} else {
							this.focusNextOption();
						}
						break;
					case 27:
						// escape
						event.preventDefault();
						if (this.state.isOpen) {
							this.closeMenu();
							event.stopPropagation();
						} else if (this.props.clearable && this.props.escapeClearsValue) {
							this.clearValue(event);
							event.stopPropagation();
						}
						break;
					case 32:
						// space
						if (this.props.searchable) {
							break;
						}
						event.preventDefault();
						if (!this.state.isOpen) {
							this.focusNextOption();
							break;
						}
						event.stopPropagation();
						this.selectFocusedOption();
						break;
					case 38:
						// up
						event.preventDefault();
						this.focusPreviousOption();
						break;
					case 40:
						// down
						event.preventDefault();
						this.focusNextOption();
						break;
					case 33:
						// page up
						event.preventDefault();
						this.focusPageUpOption();
						break;
					case 34:
						// page down
						event.preventDefault();
						this.focusPageDownOption();
						break;
					case 35:
						// end key
						if (event.shiftKey) {
							break;
						}
						event.preventDefault();
						this.focusEndOption();
						break;
					case 36:
						// home key
						if (event.shiftKey) {
							break;
						}
						event.preventDefault();
						this.focusStartOption();
						break;
					case 46:
						// delete
						if (!this.state.inputValue && this.props.deleteRemoves) {
							event.preventDefault();
							this.popValue();
						}
						break;
				}
			}
		}, {
			key: 'handleValueClick',
			value: function handleValueClick(option, event) {
				if (!this.props.onValueClick) return;
				this.props.onValueClick(option, event);
			}
		}, {
			key: 'handleMenuScroll',
			value: function handleMenuScroll(event) {
				if (!this.props.onMenuScrollToBottom) return;
				var target = event.target;
	
				if (target.scrollHeight > target.offsetHeight && target.scrollHeight - target.offsetHeight - target.scrollTop <= 0) {
					this.props.onMenuScrollToBottom();
				}
			}
		}, {
			key: 'getOptionLabel',
			value: function getOptionLabel(op) {
				return op[this.props.labelKey];
			}
	
			/**
	   * Turns a value into an array from the given options
	   * @param {String|Number|Array} value		- the value of the select input
	   * @param {Object}		nextProps	- optionally specify the nextProps so the returned array uses the latest configuration
	   * @returns	{Array}	the value of the select represented in an array
	   */
	
		}, {
			key: 'getValueArray',
			value: function getValueArray(value) {
				var nextProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
	
				/** support optionally passing in the `nextProps` so `componentWillReceiveProps` updates will function as expected */
				var props = (typeof nextProps === 'undefined' ? 'undefined' : _typeof(nextProps)) === 'object' ? nextProps : this.props;
				if (props.multi) {
					if (typeof value === 'string') {
						value = value.split(props.delimiter);
					}
					if (!Array.isArray(value)) {
						if (value === null || value === undefined) return [];
						value = [value];
					}
					return value.map(function (value) {
						return expandValue(value, props);
					}).filter(function (i) {
						return i;
					});
				}
				var expandedValue = expandValue(value, props);
				return expandedValue ? [expandedValue] : [];
			}
		}, {
			key: 'setValue',
			value: function setValue(value) {
				var _this2 = this;
	
				if (this.props.autoBlur) {
					this.blurInput();
				}
				if (this.props.required) {
					var required = handleRequired(value, this.props.multi);
					this.setState({ required: required });
				}
				if (this.props.simpleValue && value) {
					value = this.props.multi ? value.map(function (i) {
						return i[_this2.props.valueKey];
					}).join(this.props.delimiter) : value[this.props.valueKey];
				}
				if (this.props.onChange) {
					this.props.onChange(value);
				}
			}
		}, {
			key: 'selectValue',
			value: function selectValue(value) {
				var _this3 = this;
	
				// NOTE: we actually add/set the value in a callback to make sure the
				// input value is empty to avoid styling issues in Chrome
				if (this.props.closeOnSelect) {
					this.hasScrolledToOption = false;
				}
				var updatedValue = this.props.onSelectResetsInput ? '' : this.state.inputValue;
				if (this.props.multi) {
					this.setState({
						focusedIndex: null,
						inputValue: this.handleInputValueChange(updatedValue),
						isOpen: !this.props.closeOnSelect
					}, function () {
						var valueArray = _this3.getValueArray(_this3.props.value);
						if (valueArray.some(function (i) {
							return i[_this3.props.valueKey] === value[_this3.props.valueKey];
						})) {
							_this3.removeValue(value);
						} else {
							_this3.addValue(value);
						}
					});
				} else {
					this.setState({
						inputValue: this.handleInputValueChange(updatedValue),
						isOpen: !this.props.closeOnSelect,
						isPseudoFocused: this.state.isFocused
					}, function () {
						_this3.setValue(value);
					});
				}
			}
		}, {
			key: 'addValue',
			value: function addValue(value) {
				var valueArray = this.getValueArray(this.props.value);
				var visibleOptions = this._visibleOptions.filter(function (val) {
					return !val.disabled;
				});
				var lastValueIndex = visibleOptions.indexOf(value);
				this.setValue(valueArray.concat(value));
				if (!this.props.closeOnSelect) {
					return;
				}
				if (visibleOptions.length - 1 === lastValueIndex) {
					// the last option was selected; focus the second-last one
					this.focusOption(visibleOptions[lastValueIndex - 1]);
				} else if (visibleOptions.length > lastValueIndex) {
					// focus the option below the selected one
					this.focusOption(visibleOptions[lastValueIndex + 1]);
				}
			}
		}, {
			key: 'popValue',
			value: function popValue() {
				var valueArray = this.getValueArray(this.props.value);
				if (!valueArray.length) return;
				if (valueArray[valueArray.length - 1].clearableValue === false) return;
				this.setValue(this.props.multi ? valueArray.slice(0, valueArray.length - 1) : null);
			}
		}, {
			key: 'removeValue',
			value: function removeValue(value) {
				var _this4 = this;
	
				var valueArray = this.getValueArray(this.props.value);
				this.setValue(valueArray.filter(function (i) {
					return i[_this4.props.valueKey] !== value[_this4.props.valueKey];
				}));
				this.focus();
			}
		}, {
			key: 'clearValue',
			value: function clearValue(event) {
				// if the event was triggered by a mousedown and not the primary
				// button, ignore it.
				if (event && event.type === 'mousedown' && event.button !== 0) {
					return;
				}
	
				event.preventDefault();
	
				this.setValue(this.getResetValue());
				this.setState({
					inputValue: this.handleInputValueChange(''),
					isOpen: false
				}, this.focus);
	
				this._focusAfterClear = true;
			}
		}, {
			key: 'getResetValue',
			value: function getResetValue() {
				if (this.props.resetValue !== undefined) {
					return this.props.resetValue;
				} else if (this.props.multi) {
					return [];
				} else {
					return null;
				}
			}
		}, {
			key: 'focusOption',
			value: function focusOption(option) {
				this.setState({
					focusedOption: option
				});
			}
		}, {
			key: 'focusNextOption',
			value: function focusNextOption() {
				this.focusAdjacentOption('next');
			}
		}, {
			key: 'focusPreviousOption',
			value: function focusPreviousOption() {
				this.focusAdjacentOption('previous');
			}
		}, {
			key: 'focusPageUpOption',
			value: function focusPageUpOption() {
				this.focusAdjacentOption('page_up');
			}
		}, {
			key: 'focusPageDownOption',
			value: function focusPageDownOption() {
				this.focusAdjacentOption('page_down');
			}
		}, {
			key: 'focusStartOption',
			value: function focusStartOption() {
				this.focusAdjacentOption('start');
			}
		}, {
			key: 'focusEndOption',
			value: function focusEndOption() {
				this.focusAdjacentOption('end');
			}
		}, {
			key: 'focusAdjacentOption',
			value: function focusAdjacentOption(dir) {
				var options = this._visibleOptions.map(function (option, index) {
					return { option: option, index: index };
				}).filter(function (option) {
					return !option.option.disabled;
				});
				this._scrollToFocusedOptionOnUpdate = true;
				if (!this.state.isOpen) {
					var newState = {
						focusedOption: this._focusedOption || (options.length ? options[dir === 'next' ? 0 : options.length - 1].option : null),
						isOpen: true
					};
					if (this.props.onSelectResetsInput) {
						newState.inputValue = '';
					}
					this.setState(newState);
					return;
				}
				if (!options.length) return;
				var focusedIndex = -1;
				for (var i = 0; i < options.length; i++) {
					if (this._focusedOption === options[i].option) {
						focusedIndex = i;
						break;
					}
				}
				if (dir === 'next' && focusedIndex !== -1) {
					focusedIndex = (focusedIndex + 1) % options.length;
				} else if (dir === 'previous') {
					if (focusedIndex > 0) {
						focusedIndex = focusedIndex - 1;
					} else {
						focusedIndex = options.length - 1;
					}
				} else if (dir === 'start') {
					focusedIndex = 0;
				} else if (dir === 'end') {
					focusedIndex = options.length - 1;
				} else if (dir === 'page_up') {
					var potentialIndex = focusedIndex - this.props.pageSize;
					if (potentialIndex < 0) {
						focusedIndex = 0;
					} else {
						focusedIndex = potentialIndex;
					}
				} else if (dir === 'page_down') {
					var _potentialIndex = focusedIndex + this.props.pageSize;
					if (_potentialIndex > options.length - 1) {
						focusedIndex = options.length - 1;
					} else {
						focusedIndex = _potentialIndex;
					}
				}
	
				if (focusedIndex === -1) {
					focusedIndex = 0;
				}
	
				this.setState({
					focusedIndex: options[focusedIndex].index,
					focusedOption: options[focusedIndex].option
				});
			}
		}, {
			key: 'getFocusedOption',
			value: function getFocusedOption() {
				return this._focusedOption;
			}
		}, {
			key: 'selectFocusedOption',
			value: function selectFocusedOption() {
				if (this._focusedOption) {
					return this.selectValue(this._focusedOption);
				}
			}
		}, {
			key: 'renderLoading',
			value: function renderLoading() {
				if (!this.props.isLoading) return;
				return _react2.default.createElement(
					'span',
					{ className: 'Select-loading-zone', 'aria-hidden': 'true' },
					_react2.default.createElement('span', { className: 'Select-loading' })
				);
			}
		}, {
			key: 'renderValue',
			value: function renderValue(valueArray, isOpen) {
				var _this5 = this;
	
				var renderLabel = this.props.valueRenderer || this.getOptionLabel;
				var ValueComponent = this.props.valueComponent;
				if (!valueArray.length) {
					var showPlaceholder = shouldShowPlaceholder(this.state, this.props, isOpen);
					return showPlaceholder ? _react2.default.createElement(
						'div',
						{ className: 'Select-placeholder' },
						this.props.placeholder
					) : null;
				}
				var onClick = this.props.onValueClick ? this.handleValueClick : null;
				if (this.props.multi) {
					return valueArray.map(function (value, i) {
						return _react2.default.createElement(
							ValueComponent,
							{
								disabled: _this5.props.disabled || value.clearableValue === false,
								id: _this5._instancePrefix + '-value-' + i,
								instancePrefix: _this5._instancePrefix,
								key: 'value-' + i + '-' + value[_this5.props.valueKey],
								onClick: onClick,
								onRemove: _this5.removeValue,
								placeholder: _this5.props.placeholder,
								value: value,
								values: valueArray
							},
							renderLabel(value, i),
							_react2.default.createElement(
								'span',
								{ className: 'Select-aria-only' },
								'\xA0'
							)
						);
					});
				} else if (shouldShowValue(this.state, this.props)) {
					if (isOpen) onClick = null;
					return _react2.default.createElement(
						ValueComponent,
						{
							disabled: this.props.disabled,
							id: this._instancePrefix + '-value-item',
							instancePrefix: this._instancePrefix,
							onClick: onClick,
							placeholder: this.props.placeholder,
							value: valueArray[0]
						},
						renderLabel(valueArray[0])
					);
				}
			}
		}, {
			key: 'renderInput',
			value: function renderInput(valueArray, focusedOptionIndex) {
				var _classNames,
				    _this6 = this;
	
				var className = (0, _classnames2.default)('Select-input', this.props.inputProps.className);
				var isOpen = this.state.isOpen;
	
				var ariaOwns = (0, _classnames2.default)((_classNames = {}, _defineProperty(_classNames, this._instancePrefix + '-list', isOpen), _defineProperty(_classNames, this._instancePrefix + '-backspace-remove-message', this.props.multi && !this.props.disabled && this.state.isFocused && !this.state.inputValue), _classNames));
	
				var value = this.state.inputValue;
				if (value && !this.props.onSelectResetsInput && !this.state.isFocused) {
					// it hides input value when it is not focused and was not reset on select
					value = '';
				}
	
				var inputProps = _extends({}, this.props.inputProps, {
					'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',
					'aria-describedby': this.props['aria-describedby'],
					'aria-expanded': '' + isOpen,
					'aria-haspopup': '' + isOpen,
					'aria-label': this.props['aria-label'],
					'aria-labelledby': this.props['aria-labelledby'],
					'aria-owns': ariaOwns,
					onBlur: this.handleInputBlur,
					onChange: this.handleInputChange,
					onFocus: this.handleInputFocus,
					ref: function ref(_ref) {
						return _this6.input = _ref;
					},
					role: 'combobox',
					required: this.state.required,
					tabIndex: this.props.tabIndex,
					value: value
				});
	
				if (this.props.inputRenderer) {
					return this.props.inputRenderer(inputProps);
				}
	
				if (this.props.disabled || !this.props.searchable) {
					var divProps = _objectWithoutProperties(this.props.inputProps, []);
	
					var _ariaOwns = (0, _classnames2.default)(_defineProperty({}, this._instancePrefix + '-list', isOpen));
					return _react2.default.createElement('div', _extends({}, divProps, {
						'aria-expanded': isOpen,
						'aria-owns': _ariaOwns,
						'aria-activedescendant': isOpen ? this._instancePrefix + '-option-' + focusedOptionIndex : this._instancePrefix + '-value',
						'aria-disabled': '' + this.props.disabled,
						'aria-label': this.props['aria-label'],
						'aria-labelledby': this.props['aria-labelledby'],
						className: className,
						onBlur: this.handleInputBlur,
						onFocus: this.handleInputFocus,
						ref: function ref(_ref2) {
							return _this6.input = _ref2;
						},
						role: 'combobox',
						style: { border: 0, width: 1, display: 'inline-block' },
						tabIndex: this.props.tabIndex || 0
					}));
				}
	
				if (this.props.autosize) {
					return _react2.default.createElement(_reactInputAutosize2.default, _extends({ id: this.props.id }, inputProps, { className: className, minWidth: '5' }));
				}
				return _react2.default.createElement(
					'div',
					{ className: className, key: 'input-wrap', style: { display: 'inline-block' } },
					_react2.default.createElement('input', _extends({ id: this.props.id }, inputProps))
				);
			}
		}, {
			key: 'renderClear',
			value: function renderClear() {
				var valueArray = this.getValueArray(this.props.value);
				if (!this.props.clearable || !valueArray.length || this.props.disabled || this.props.isLoading) return;
				var ariaLabel = this.props.multi ? this.props.clearAllText : this.props.clearValueText;
				var clear = this.props.clearRenderer();
	
				return _react2.default.createElement(
					'span',
					{
						'aria-label': ariaLabel,
						className: 'Select-clear-zone',
						onMouseDown: this.clearValue,
						onTouchEnd: this.handleTouchEndClearValue,
						onTouchMove: this.handleTouchMove,
						onTouchStart: this.handleTouchStart,
						title: ariaLabel
					},
					clear
				);
			}
		}, {
			key: 'renderArrow',
			value: function renderArrow() {
				if (!this.props.arrowRenderer) return;
	
				var onMouseDown = this.handleMouseDownOnArrow;
				var isOpen = this.state.isOpen;
				var arrow = this.props.arrowRenderer({ onMouseDown: onMouseDown, isOpen: isOpen });
	
				if (!arrow) {
					return null;
				}
	
				return _react2.default.createElement(
					'span',
					{
						className: 'Select-arrow-zone',
						onMouseDown: onMouseDown
					},
					arrow
				);
			}
		}, {
			key: 'filterOptions',
			value: function filterOptions(excludeOptions) {
				var filterValue = this.state.inputValue;
				var options = this.props.options || [];
				if (this.props.filterOptions) {
					// Maintain backwards compatibility with boolean attribute
					var filterOptions = typeof this.props.filterOptions === 'function' ? this.props.filterOptions : _defaultFilterOptions2.default;
	
					return filterOptions(options, filterValue, excludeOptions, {
						filterOption: this.props.filterOption,
						ignoreAccents: this.props.ignoreAccents,
						ignoreCase: this.props.ignoreCase,
						labelKey: this.props.labelKey,
						matchPos: this.props.matchPos,
						matchProp: this.props.matchProp,
						trimFilter: this.props.trimFilter,
						valueKey: this.props.valueKey
					});
				} else {
					return options;
				}
			}
		}, {
			key: 'onOptionRef',
			value: function onOptionRef(ref, isFocused) {
				if (isFocused) {
					this.focused = ref;
				}
			}
		}, {
			key: 'renderMenu',
			value: function renderMenu(options, valueArray, focusedOption) {
				if (options && options.length) {
					return this.props.menuRenderer({
						focusedOption: focusedOption,
						focusOption: this.focusOption,
						inputValue: this.state.inputValue,
						instancePrefix: this._instancePrefix,
						labelKey: this.props.labelKey,
						onFocus: this.focusOption,
						onOptionRef: this.onOptionRef,
						onSelect: this.selectValue,
						optionClassName: this.props.optionClassName,
						optionComponent: this.props.optionComponent,
						optionRenderer: this.props.optionRenderer || this.getOptionLabel,
						options: options,
						removeValue: this.removeValue,
						selectValue: this.selectValue,
						valueArray: valueArray,
						valueKey: this.props.valueKey
					});
				} else if (this.props.noResultsText) {
					return _react2.default.createElement(
						'div',
						{ className: 'Select-noresults' },
						this.props.noResultsText
					);
				} else {
					return null;
				}
			}
		}, {
			key: 'renderHiddenField',
			value: function renderHiddenField(valueArray) {
				var _this7 = this;
	
				if (!this.props.name) return;
				if (this.props.joinValues) {
					var value = valueArray.map(function (i) {
						return stringifyValue(i[_this7.props.valueKey]);
					}).join(this.props.delimiter);
					return _react2.default.createElement('input', {
						disabled: this.props.disabled,
						name: this.props.name,
						ref: function ref(_ref3) {
							return _this7.value = _ref3;
						},
						type: 'hidden',
						value: value
					});
				}
				return valueArray.map(function (item, index) {
					return _react2.default.createElement('input', {
						disabled: _this7.props.disabled,
						key: 'hidden.' + index,
						name: _this7.props.name,
						ref: 'value' + index,
						type: 'hidden',
						value: stringifyValue(item[_this7.props.valueKey])
					});
				});
			}
		}, {
			key: 'getFocusableOptionIndex',
			value: function getFocusableOptionIndex(selectedOption) {
				var options = this._visibleOptions;
				if (!options.length) return null;
	
				var valueKey = this.props.valueKey;
				var focusedOption = this.state.focusedOption || selectedOption;
				if (focusedOption && !focusedOption.disabled) {
					var focusedOptionIndex = -1;
					options.some(function (option, index) {
						var isOptionEqual = option[valueKey] === focusedOption[valueKey];
						if (isOptionEqual) {
							focusedOptionIndex = index;
						}
						return isOptionEqual;
					});
					if (focusedOptionIndex !== -1) {
						return focusedOptionIndex;
					}
				}
	
				for (var i = 0; i < options.length; i++) {
					if (!options[i].disabled) return i;
				}
				return null;
			}
		}, {
			key: 'renderOuter',
			value: function renderOuter(options, valueArray, focusedOption) {
				var _this8 = this;
	
				var menu = this.renderMenu(options, valueArray, focusedOption);
				if (!menu) {
					return null;
				}
	
				return _react2.default.createElement(
					'div',
					{ ref: function ref(_ref5) {
							return _this8.menuContainer = _ref5;
						}, className: 'Select-menu-outer', style: this.props.menuContainerStyle },
					_react2.default.createElement(
						'div',
						{
							className: 'Select-menu',
							id: this._instancePrefix + '-list',
							onMouseDown: this.handleMouseDownOnMenu,
							onScroll: this.handleMenuScroll,
							ref: function ref(_ref4) {
								return _this8.menu = _ref4;
							},
							role: 'listbox',
							style: this.props.menuStyle,
							tabIndex: -1
						},
						menu
					)
				);
			}
		}, {
			key: 'render',
			value: function render() {
				var _this9 = this;
	
				var valueArray = this.getValueArray(this.props.value);
				var options = this._visibleOptions = this.filterOptions(this.props.multi && this.props.removeSelected ? valueArray : null);
				var isOpen = this.state.isOpen;
				if (this.props.multi && !options.length && valueArray.length && !this.state.inputValue) isOpen = false;
				var focusedOptionIndex = this.getFocusableOptionIndex(valueArray[0]);
	
				var focusedOption = null;
				if (focusedOptionIndex !== null) {
					focusedOption = this._focusedOption = options[focusedOptionIndex];
				} else {
					focusedOption = this._focusedOption = null;
				}
				var className = (0, _classnames2.default)('Select', this.props.className, {
					'has-value': valueArray.length,
					'is-clearable': this.props.clearable,
					'is-disabled': this.props.disabled,
					'is-focused': this.state.isFocused,
					'is-loading': this.props.isLoading,
					'is-open': isOpen,
					'is-pseudo-focused': this.state.isPseudoFocused,
					'is-searchable': this.props.searchable,
					'Select--multi': this.props.multi,
					'Select--rtl': this.props.rtl,
					'Select--single': !this.props.multi
				});
	
				var removeMessage = null;
				if (this.props.multi && !this.props.disabled && valueArray.length && !this.state.inputValue && this.state.isFocused && this.props.backspaceRemoves) {
					removeMessage = _react2.default.createElement(
						'span',
						{ id: this._instancePrefix + '-backspace-remove-message', className: 'Select-aria-only', 'aria-live': 'assertive' },
						this.props.backspaceToRemoveMessage.replace('{label}', valueArray[valueArray.length - 1][this.props.labelKey])
					);
				}
	
				return _react2.default.createElement(
					'div',
					{ ref: function ref(_ref7) {
							return _this9.wrapper = _ref7;
						},
						className: className,
						style: this.props.wrapperStyle },
					this.renderHiddenField(valueArray),
					_react2.default.createElement(
						'div',
						{ ref: function ref(_ref6) {
								return _this9.control = _ref6;
							},
							className: 'Select-control',
							onKeyDown: this.handleKeyDown,
							onMouseDown: this.handleMouseDown,
							onTouchEnd: this.handleTouchEnd,
							onTouchMove: this.handleTouchMove,
							onTouchStart: this.handleTouchStart,
							style: this.props.style
						},
						_react2.default.createElement(
							'div',
							{ className: 'Select-multi-value-wrapper', id: this._instancePrefix + '-value' },
							this.renderValue(valueArray, isOpen),
							this.renderInput(valueArray, focusedOptionIndex)
						),
						removeMessage,
						this.renderLoading(),
						this.renderClear(),
						this.renderArrow()
					),
					isOpen ? this.renderOuter(options, valueArray, focusedOption) : null
				);
			}
		}]);
	
		return Select;
	}(_react2.default.Component);
	
	Select.propTypes = {
		'aria-describedby': _propTypes2.default.string, // html id(s) of element(s) that should be used to describe this input (for assistive tech)
		'aria-label': _propTypes2.default.string, // aria label (for assistive tech)
		'aria-labelledby': _propTypes2.default.string, // html id of an element that should be used as the label (for assistive tech)
		arrowRenderer: _propTypes2.default.func, // create the drop-down caret element
		autoBlur: _propTypes2.default.bool, // automatically blur the component when an option is selected
		autoFocus: _propTypes2.default.bool, // autofocus the component on mount
		autofocus: _propTypes2.default.bool, // deprecated; use autoFocus instead
		autosize: _propTypes2.default.bool, // whether to enable autosizing or not
		backspaceRemoves: _propTypes2.default.bool, // whether backspace removes an item if there is no text input
		backspaceToRemoveMessage: _propTypes2.default.string, // message to use for screenreaders to press backspace to remove the current item - {label} is replaced with the item label
		className: _propTypes2.default.string, // className for the outer element
		clearAllText: stringOrNode, // title for the "clear" control when multi: true
		clearRenderer: _propTypes2.default.func, // create clearable x element
		clearValueText: stringOrNode, // title for the "clear" control
		clearable: _propTypes2.default.bool, // should it be possible to reset value
		closeOnSelect: _propTypes2.default.bool, // whether to close the menu when a value is selected
		deleteRemoves: _propTypes2.default.bool, // whether delete removes an item if there is no text input
		delimiter: _propTypes2.default.string, // delimiter to use to join multiple values for the hidden field value
		disabled: _propTypes2.default.bool, // whether the Select is disabled or not
		escapeClearsValue: _propTypes2.default.bool, // whether escape clears the value when the menu is closed
		filterOption: _propTypes2.default.func, // method to filter a single option (option, filterString)
		filterOptions: _propTypes2.default.any, // boolean to enable default filtering or function to filter the options array ([options], filterString, [values])
		id: _propTypes2.default.string, // html id to set on the input element for accessibility or tests
		ignoreAccents: _propTypes2.default.bool, // whether to strip diacritics when filtering
		ignoreCase: _propTypes2.default.bool, // whether to perform case-insensitive filtering
		inputProps: _propTypes2.default.object, // custom attributes for the Input
		inputRenderer: _propTypes2.default.func, // returns a custom input component
		instanceId: _propTypes2.default.string, // set the components instanceId
		isLoading: _propTypes2.default.bool, // whether the Select is loading externally or not (such as options being loaded)
		joinValues: _propTypes2.default.bool, // joins multiple values into a single form field with the delimiter (legacy mode)
		labelKey: _propTypes2.default.string, // path of the label value in option objects
		matchPos: _propTypes2.default.string, // (any|start) match the start or entire string when filtering
		matchProp: _propTypes2.default.string, // (any|label|value) which option property to filter on
		menuBuffer: _propTypes2.default.number, // optional buffer (in px) between the bottom of the viewport and the bottom of the menu
		menuContainerStyle: _propTypes2.default.object, // optional style to apply to the menu container
		menuRenderer: _propTypes2.default.func, // renders a custom menu with options
		menuStyle: _propTypes2.default.object, // optional style to apply to the menu
		multi: _propTypes2.default.bool, // multi-value input
		name: _propTypes2.default.string, // generates a hidden <input /> tag with this field name for html forms
		noResultsText: stringOrNode, // placeholder displayed when there are no matching search results
		onBlur: _propTypes2.default.func, // onBlur handler: function (event) {}
		onBlurResetsInput: _propTypes2.default.bool, // whether input is cleared on blur
		onChange: _propTypes2.default.func, // onChange handler: function (newValue) {}
		onClose: _propTypes2.default.func, // fires when the menu is closed
		onCloseResetsInput: _propTypes2.default.bool, // whether input is cleared when menu is closed through the arrow
		onFocus: _propTypes2.default.func, // onFocus handler: function (event) {}
		onInputChange: _propTypes2.default.func, // onInputChange handler: function (inputValue) {}
		onInputKeyDown: _propTypes2.default.func, // input keyDown handler: function (event) {}
		onMenuScrollToBottom: _propTypes2.default.func, // fires when the menu is scrolled to the bottom; can be used to paginate options
		onOpen: _propTypes2.default.func, // fires when the menu is opened
		onSelectResetsInput: _propTypes2.default.bool, // whether input is cleared on select (works only for multiselect)
		onValueClick: _propTypes2.default.func, // onClick handler for value labels: function (value, event) {}
		openOnClick: _propTypes2.default.bool, // boolean to control opening the menu when the control is clicked
		openOnFocus: _propTypes2.default.bool, // always open options menu on focus
		optionClassName: _propTypes2.default.string, // additional class(es) to apply to the <Option /> elements
		optionComponent: _propTypes2.default.func, // option component to render in dropdown
		optionRenderer: _propTypes2.default.func, // optionRenderer: function (option) {}
		options: _propTypes2.default.array, // array of options
		pageSize: _propTypes2.default.number, // number of entries to page when using page up/down keys
		placeholder: stringOrNode, // field placeholder, displayed when there's no value
		removeSelected: _propTypes2.default.bool, // whether the selected option is removed from the dropdown on multi selects
		required: _propTypes2.default.bool, // applies HTML5 required attribute when needed
		resetValue: _propTypes2.default.any, // value to use when you clear the control
		rtl: _propTypes2.default.bool, // set to true in order to use react-select in right-to-left direction
		scrollMenuIntoView: _propTypes2.default.bool, // boolean to enable the viewport to shift so that the full menu fully visible when engaged
		searchable: _propTypes2.default.bool, // whether to enable searching feature or not
		simpleValue: _propTypes2.default.bool, // pass the value to onChange as a simple value (legacy pre 1.0 mode), defaults to false
		style: _propTypes2.default.object, // optional style to apply to the control
		tabIndex: stringOrNumber, // optional tab index of the control
		tabSelectsValue: _propTypes2.default.bool, // whether to treat tabbing out while focused to be value selection
		trimFilter: _propTypes2.default.bool, // whether to trim whitespace around filter value
		value: _propTypes2.default.any, // initial field value
		valueComponent: _propTypes2.default.func, // value component to render
		valueKey: _propTypes2.default.string, // path of the label value in option objects
		valueRenderer: _propTypes2.default.func, // valueRenderer: function (option) {}
		wrapperStyle: _propTypes2.default.object // optional style to apply to the component wrapper
	};
	
	Select.defaultProps = {
		arrowRenderer: _defaultArrowRenderer2.default,
		autosize: true,
		backspaceRemoves: true,
		backspaceToRemoveMessage: 'Press backspace to remove {label}',
		clearable: true,
		clearAllText: 'Clear all',
		clearRenderer: _defaultClearRenderer2.default,
		clearValueText: 'Clear value',
		closeOnSelect: true,
		deleteRemoves: true,
		delimiter: ',',
		disabled: false,
		escapeClearsValue: true,
		filterOptions: _defaultFilterOptions2.default,
		ignoreAccents: true,
		ignoreCase: true,
		inputProps: {},
		isLoading: false,
		joinValues: false,
		labelKey: 'label',
		matchPos: 'any',
		matchProp: 'any',
		menuBuffer: 0,
		menuRenderer: _defaultMenuRenderer2.default,
		multi: false,
		noResultsText: 'No results found',
		onBlurResetsInput: true,
		onCloseResetsInput: true,
		onSelectResetsInput: true,
		openOnClick: true,
		optionComponent: _Option2.default,
		pageSize: 5,
		placeholder: 'Select...',
		removeSelected: true,
		required: false,
		rtl: false,
		scrollMenuIntoView: true,
		searchable: true,
		simpleValue: false,
		tabSelectsValue: true,
		trimFilter: true,
		valueComponent: _Value2.default,
		valueKey: 'value'
	};
	
	exports.default = Select;

/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var sizerStyle = {
		position: 'absolute',
		top: 0,
		left: 0,
		visibility: 'hidden',
		height: 0,
		overflow: 'scroll',
		whiteSpace: 'pre'
	};
	
	var INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];
	
	var cleanInputProps = function cleanInputProps(inputProps) {
		INPUT_PROPS_BLACKLIST.forEach(function (field) {
			return delete inputProps[field];
		});
		return inputProps;
	};
	
	var copyStyles = function copyStyles(styles, node) {
		node.style.fontSize = styles.fontSize;
		node.style.fontFamily = styles.fontFamily;
		node.style.fontWeight = styles.fontWeight;
		node.style.fontStyle = styles.fontStyle;
		node.style.letterSpacing = styles.letterSpacing;
		node.style.textTransform = styles.textTransform;
	};
	
	var isIE = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\/|Edge\//.test(window.navigator.userAgent) : false;
	
	var generateId = function generateId() {
		// we only need an auto-generated ID for stylesheet injection, which is only
		// used for IE. so if the browser is not IE, this should return undefined.
		return isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;
	};
	
	var AutosizeInput = function (_Component) {
		_inherits(AutosizeInput, _Component);
	
		function AutosizeInput(props) {
			_classCallCheck(this, AutosizeInput);
	
			var _this = _possibleConstructorReturn(this, (AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)).call(this, props));
	
			_this.inputRef = function (el) {
				_this.input = el;
				if (typeof _this.props.inputRef === 'function') {
					_this.props.inputRef(el);
				}
			};
	
			_this.placeHolderSizerRef = function (el) {
				_this.placeHolderSizer = el;
			};
	
			_this.sizerRef = function (el) {
				_this.sizer = el;
			};
	
			_this.state = {
				inputWidth: props.minWidth,
				inputId: props.id || generateId()
			};
			return _this;
		}
	
		_createClass(AutosizeInput, [{
			key: 'componentDidMount',
			value: function componentDidMount() {
				this.mounted = true;
				this.copyInputStyles();
				this.updateInputWidth();
			}
		}, {
			key: 'componentWillReceiveProps',
			value: function componentWillReceiveProps(nextProps) {
				var id = nextProps.id;
	
				if (id !== this.props.id) {
					this.setState({ inputId: id || generateId() });
				}
			}
		}, {
			key: 'componentDidUpdate',
			value: function componentDidUpdate(prevProps, prevState) {
				if (prevState.inputWidth !== this.state.inputWidth) {
					if (typeof this.props.onAutosize === 'function') {
						this.props.onAutosize(this.state.inputWidth);
					}
				}
				this.updateInputWidth();
			}
		}, {
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				this.mounted = false;
			}
		}, {
			key: 'copyInputStyles',
			value: function copyInputStyles() {
				if (!this.mounted || !window.getComputedStyle) {
					return;
				}
				var inputStyles = this.input && window.getComputedStyle(this.input);
				if (!inputStyles) {
					return;
				}
				copyStyles(inputStyles, this.sizer);
				if (this.placeHolderSizer) {
					copyStyles(inputStyles, this.placeHolderSizer);
				}
			}
		}, {
			key: 'updateInputWidth',
			value: function updateInputWidth() {
				if (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {
					return;
				}
				var newInputWidth = void 0;
				if (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {
					newInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;
				} else {
					newInputWidth = this.sizer.scrollWidth + 2;
				}
				// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI
				var extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;
				newInputWidth += extraWidth;
				if (newInputWidth < this.props.minWidth) {
					newInputWidth = this.props.minWidth;
				}
				if (newInputWidth !== this.state.inputWidth) {
					this.setState({
						inputWidth: newInputWidth
					});
				}
			}
		}, {
			key: 'getInput',
			value: function getInput() {
				return this.input;
			}
		}, {
			key: 'focus',
			value: function focus() {
				this.input.focus();
			}
		}, {
			key: 'blur',
			value: function blur() {
				this.input.blur();
			}
		}, {
			key: 'select',
			value: function select() {
				this.input.select();
			}
		}, {
			key: 'renderStyles',
			value: function renderStyles() {
				// this method injects styles to hide IE's clear indicator, which messes
				// with input size detection. the stylesheet is only injected when the
				// browser is IE, and can also be disabled by the `injectStyles` prop.
				var injectStyles = this.props.injectStyles;
	
				return isIE && injectStyles ? _react2.default.createElement('style', { dangerouslySetInnerHTML: {
						__html: 'input#' + this.state.inputId + '::-ms-clear {display: none;}'
					} }) : null;
			}
		}, {
			key: 'render',
			value: function render() {
				var sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(function (previousValue, currentValue) {
					if (previousValue !== null && previousValue !== undefined) {
						return previousValue;
					}
					return currentValue;
				});
	
				var wrapperStyle = _extends({}, this.props.style);
				if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';
	
				var inputStyle = _extends({
					boxSizing: 'content-box',
					width: this.state.inputWidth + 'px'
				}, this.props.inputStyle);
	
				var inputProps = _objectWithoutProperties(this.props, []);
	
				cleanInputProps(inputProps);
				inputProps.className = this.props.inputClassName;
				inputProps.id = this.state.inputId;
				inputProps.style = inputStyle;
	
				return _react2.default.createElement(
					'div',
					{ className: this.props.className, style: wrapperStyle },
					this.renderStyles(),
					_react2.default.createElement('input', _extends({}, inputProps, { ref: this.inputRef })),
					_react2.default.createElement(
						'div',
						{ ref: this.sizerRef, style: sizerStyle },
						sizerValue
					),
					this.props.placeholder ? _react2.default.createElement(
						'div',
						{ ref: this.placeHolderSizerRef, style: sizerStyle },
						this.props.placeholder
					) : null
				);
			}
		}]);
	
		return AutosizeInput;
	}(_react.Component);
	
	AutosizeInput.propTypes = {
		className: _propTypes2.default.string, // className for the outer element
		defaultValue: _propTypes2.default.any, // default field value
		extraWidth: _propTypes2.default.oneOfType([// additional width for input element
		_propTypes2.default.number, _propTypes2.default.string]),
		id: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots
		injectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true
		inputClassName: _propTypes2.default.string, // className for the input element
		inputRef: _propTypes2.default.func, // ref callback for the input element
		inputStyle: _propTypes2.default.object, // css styles for the input element
		minWidth: _propTypes2.default.oneOfType([// minimum width for input element
		_propTypes2.default.number, _propTypes2.default.string]),
		onAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}
		onChange: _propTypes2.default.func, // onChange handler: function(event) {}
		placeholder: _propTypes2.default.string, // placeholder text
		placeholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder
		style: _propTypes2.default.object, // css styles for the outer element
		value: _propTypes2.default.any // field value
	};
	AutosizeInput.defaultProps = {
		minWidth: 1,
		injectStyles: true
	};
	
	exports.default = AutosizeInput;

/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var arrowRenderer = function arrowRenderer(_ref) {
		var onMouseDown = _ref.onMouseDown;
	
		return _react2.default.createElement('span', {
			className: 'Select-arrow',
			onMouseDown: onMouseDown
		});
	};
	
	arrowRenderer.propTypes = {
		onMouseDown: _propTypes2.default.func
	};
	
	exports.default = arrowRenderer;

/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var clearRenderer = function clearRenderer() {
		return _react2.default.createElement('span', {
			className: 'Select-clear',
			dangerouslySetInnerHTML: { __html: '&times;' }
		});
	};
	
	exports.default = clearRenderer;

/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _stripDiacritics = __webpack_require__(694);
	
	var _stripDiacritics2 = _interopRequireDefault(_stripDiacritics);
	
	var _trim = __webpack_require__(695);
	
	var _trim2 = _interopRequireDefault(_trim);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var isValid = function isValid(value) {
		return typeof value !== 'undefined' && value !== null && value !== '';
	};
	
	var filterOptions = function filterOptions(options, filterValue, excludeOptions, props) {
		if (props.ignoreAccents) {
			filterValue = (0, _stripDiacritics2.default)(filterValue);
		}
	
		if (props.ignoreCase) {
			filterValue = filterValue.toLowerCase();
		}
	
		if (props.trimFilter) {
			filterValue = (0, _trim2.default)(filterValue);
		}
	
		if (excludeOptions) excludeOptions = excludeOptions.map(function (i) {
			return i[props.valueKey];
		});
	
		return options.filter(function (option) {
			if (excludeOptions && excludeOptions.indexOf(option[props.valueKey]) > -1) return false;
			if (props.filterOption) return props.filterOption.call(undefined, option, filterValue);
			if (!filterValue) return true;
	
			var value = option[props.valueKey];
			var label = option[props.labelKey];
			var hasValue = isValid(value);
			var hasLabel = isValid(label);
	
			if (!hasValue && !hasLabel) {
				return false;
			}
	
			var valueTest = hasValue ? String(value) : null;
			var labelTest = hasLabel ? String(label) : null;
	
			if (props.ignoreAccents) {
				if (valueTest && props.matchProp !== 'label') valueTest = (0, _stripDiacritics2.default)(valueTest);
				if (labelTest && props.matchProp !== 'value') labelTest = (0, _stripDiacritics2.default)(labelTest);
			}
	
			if (props.ignoreCase) {
				if (valueTest && props.matchProp !== 'label') valueTest = valueTest.toLowerCase();
				if (labelTest && props.matchProp !== 'value') labelTest = labelTest.toLowerCase();
			}
	
			return props.matchPos === 'start' ? valueTest && props.matchProp !== 'label' && valueTest.substr(0, filterValue.length) === filterValue || labelTest && props.matchProp !== 'value' && labelTest.substr(0, filterValue.length) === filterValue : valueTest && props.matchProp !== 'label' && valueTest.indexOf(filterValue) >= 0 || labelTest && props.matchProp !== 'value' && labelTest.indexOf(filterValue) >= 0;
		});
	};
	
	exports.default = filterOptions;

/***/ }),
/* 694 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var map = [{ 'base': 'A', 'letters': /[\u0041\u24B6\uFF21\u00C0\u00C1\u00C2\u1EA6\u1EA4\u1EAA\u1EA8\u00C3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\u00C4\u01DE\u1EA2\u00C5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F]/g }, { 'base': 'AA', 'letters': /[\uA732]/g }, { 'base': 'AE', 'letters': /[\u00C6\u01FC\u01E2]/g }, { 'base': 'AO', 'letters': /[\uA734]/g }, { 'base': 'AU', 'letters': /[\uA736]/g }, { 'base': 'AV', 'letters': /[\uA738\uA73A]/g }, { 'base': 'AY', 'letters': /[\uA73C]/g }, { 'base': 'B', 'letters': /[\u0042\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181]/g }, { 'base': 'C', 'letters': /[\u0043\u24B8\uFF23\u0106\u0108\u010A\u010C\u00C7\u1E08\u0187\u023B\uA73E]/g }, { 'base': 'D', 'letters': /[\u0044\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779]/g }, { 'base': 'DZ', 'letters': /[\u01F1\u01C4]/g }, { 'base': 'Dz', 'letters': /[\u01F2\u01C5]/g }, { 'base': 'E', 'letters': /[\u0045\u24BA\uFF25\u00C8\u00C9\u00CA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\u00CB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E]/g }, { 'base': 'F', 'letters': /[\u0046\u24BB\uFF26\u1E1E\u0191\uA77B]/g }, { 'base': 'G', 'letters': /[\u0047\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E]/g }, { 'base': 'H', 'letters': /[\u0048\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D]/g }, { 'base': 'I', 'letters': /[\u0049\u24BE\uFF29\u00CC\u00CD\u00CE\u0128\u012A\u012C\u0130\u00CF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197]/g }, { 'base': 'J', 'letters': /[\u004A\u24BF\uFF2A\u0134\u0248]/g }, { 'base': 'K', 'letters': /[\u004B\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2]/g }, { 'base': 'L', 'letters': /[\u004C\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780]/g }, { 'base': 'LJ', 'letters': /[\u01C7]/g }, { 'base': 'Lj', 'letters': /[\u01C8]/g }, { 'base': 'M', 'letters': /[\u004D\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C]/g }, { 'base': 'N', 'letters': /[\u004E\u24C3\uFF2E\u01F8\u0143\u00D1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4]/g }, { 'base': 'NJ', 'letters': /[\u01CA]/g }, { 'base': 'Nj', 'letters': /[\u01CB]/g }, { 'base': 'O', 'letters': /[\u004F\u24C4\uFF2F\u00D2\u00D3\u00D4\u1ED2\u1ED0\u1ED6\u1ED4\u00D5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\u00D6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\u00D8\u01FE\u0186\u019F\uA74A\uA74C]/g }, { 'base': 'OI', 'letters': /[\u01A2]/g }, { 'base': 'OO', 'letters': /[\uA74E]/g }, { 'base': 'OU', 'letters': /[\u0222]/g }, { 'base': 'P', 'letters': /[\u0050\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754]/g }, { 'base': 'Q', 'letters': /[\u0051\u24C6\uFF31\uA756\uA758\u024A]/g }, { 'base': 'R', 'letters': /[\u0052\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782]/g }, { 'base': 'S', 'letters': /[\u0053\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784]/g }, { 'base': 'T', 'letters': /[\u0054\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786]/g }, { 'base': 'TZ', 'letters': /[\uA728]/g }, { 'base': 'U', 'letters': /[\u0055\u24CA\uFF35\u00D9\u00DA\u00DB\u0168\u1E78\u016A\u1E7A\u016C\u00DC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244]/g }, { 'base': 'V', 'letters': /[\u0056\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245]/g }, { 'base': 'VY', 'letters': /[\uA760]/g }, { 'base': 'W', 'letters': /[\u0057\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72]/g }, { 'base': 'X', 'letters': /[\u0058\u24CD\uFF38\u1E8A\u1E8C]/g }, { 'base': 'Y', 'letters': /[\u0059\u24CE\uFF39\u1EF2\u00DD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE]/g }, { 'base': 'Z', 'letters': /[\u005A\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762]/g }, { 'base': 'a', 'letters': /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g }, { 'base': 'aa', 'letters': /[\uA733]/g }, { 'base': 'ae', 'letters': /[\u00E6\u01FD\u01E3]/g }, { 'base': 'ao', 'letters': /[\uA735]/g }, { 'base': 'au', 'letters': /[\uA737]/g }, { 'base': 'av', 'letters': /[\uA739\uA73B]/g }, { 'base': 'ay', 'letters': /[\uA73D]/g }, { 'base': 'b', 'letters': /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g }, { 'base': 'c', 'letters': /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g }, { 'base': 'd', 'letters': /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g }, { 'base': 'dz', 'letters': /[\u01F3\u01C6]/g }, { 'base': 'e', 'letters': /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g }, { 'base': 'f', 'letters': /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g }, { 'base': 'g', 'letters': /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g }, { 'base': 'h', 'letters': /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g }, { 'base': 'hv', 'letters': /[\u0195]/g }, { 'base': 'i', 'letters': /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g }, { 'base': 'j', 'letters': /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g }, { 'base': 'k', 'letters': /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g }, { 'base': 'l', 'letters': /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g }, { 'base': 'lj', 'letters': /[\u01C9]/g }, { 'base': 'm', 'letters': /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g }, { 'base': 'n', 'letters': /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g }, { 'base': 'nj', 'letters': /[\u01CC]/g }, { 'base': 'o', 'letters': /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g }, { 'base': 'oi', 'letters': /[\u01A3]/g }, { 'base': 'ou', 'letters': /[\u0223]/g }, { 'base': 'oo', 'letters': /[\uA74F]/g }, { 'base': 'p', 'letters': /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g }, { 'base': 'q', 'letters': /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g }, { 'base': 'r', 'letters': /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g }, { 'base': 's', 'letters': /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g }, { 'base': 't', 'letters': /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g }, { 'base': 'tz', 'letters': /[\uA729]/g }, { 'base': 'u', 'letters': /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g }, { 'base': 'v', 'letters': /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g }, { 'base': 'vy', 'letters': /[\uA761]/g }, { 'base': 'w', 'letters': /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g }, { 'base': 'x', 'letters': /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g }, { 'base': 'y', 'letters': /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g }, { 'base': 'z', 'letters': /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g }];
	
	var stripDiacritics = function stripDiacritics(str) {
		for (var i = 0; i < map.length; i++) {
			str = str.replace(map[i].letters, map[i].base);
		}
		return str;
	};
	
	exports.default = stripDiacritics;

/***/ }),
/* 695 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var trim = function trim(str) {
	  return str.replace(/^\s+|\s+$/g, '');
	};
	
	exports.default = trim;

/***/ }),
/* 696 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var menuRenderer = function menuRenderer(_ref) {
		var focusedOption = _ref.focusedOption,
		    focusOption = _ref.focusOption,
		    inputValue = _ref.inputValue,
		    instancePrefix = _ref.instancePrefix,
		    onFocus = _ref.onFocus,
		    onOptionRef = _ref.onOptionRef,
		    onSelect = _ref.onSelect,
		    optionClassName = _ref.optionClassName,
		    optionComponent = _ref.optionComponent,
		    optionRenderer = _ref.optionRenderer,
		    options = _ref.options,
		    removeValue = _ref.removeValue,
		    selectValue = _ref.selectValue,
		    valueArray = _ref.valueArray,
		    valueKey = _ref.valueKey;
	
		var Option = optionComponent;
	
		return options.map(function (option, i) {
			var isSelected = valueArray && valueArray.some(function (x) {
				return x[valueKey] === option[valueKey];
			});
			var isFocused = option === focusedOption;
			var optionClass = (0, _classnames2.default)(optionClassName, {
				'Select-option': true,
				'is-selected': isSelected,
				'is-focused': isFocused,
				'is-disabled': option.disabled
			});
	
			return _react2.default.createElement(
				Option,
				{
					className: optionClass,
					focusOption: focusOption,
					inputValue: inputValue,
					instancePrefix: instancePrefix,
					isDisabled: option.disabled,
					isFocused: isFocused,
					isSelected: isSelected,
					key: 'option-' + i + '-' + option[valueKey],
					onFocus: onFocus,
					onSelect: onSelect,
					option: option,
					optionIndex: i,
					ref: function ref(_ref2) {
						onOptionRef(_ref2, isFocused);
					},
					removeValue: removeValue,
					selectValue: selectValue
				},
				optionRenderer(option, i, inputValue)
			);
		});
	};
	
	menuRenderer.propTypes = {
		focusOption: _propTypes2.default.func,
		focusedOption: _propTypes2.default.object,
		inputValue: _propTypes2.default.string,
		instancePrefix: _propTypes2.default.string,
		onFocus: _propTypes2.default.func,
		onOptionRef: _propTypes2.default.func,
		onSelect: _propTypes2.default.func,
		optionClassName: _propTypes2.default.string,
		optionComponent: _propTypes2.default.func,
		optionRenderer: _propTypes2.default.func,
		options: _propTypes2.default.array,
		removeValue: _propTypes2.default.func,
		selectValue: _propTypes2.default.func,
		valueArray: _propTypes2.default.array,
		valueKey: _propTypes2.default.string
	};
	
	exports.default = menuRenderer;

/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _blockEvent = __webpack_require__(698);
	
	var _blockEvent2 = _interopRequireDefault(_blockEvent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Option = function (_React$Component) {
		_inherits(Option, _React$Component);
	
		function Option(props) {
			_classCallCheck(this, Option);
	
			var _this = _possibleConstructorReturn(this, (Option.__proto__ || Object.getPrototypeOf(Option)).call(this, props));
	
			_this.handleMouseDown = _this.handleMouseDown.bind(_this);
			_this.handleMouseEnter = _this.handleMouseEnter.bind(_this);
			_this.handleMouseMove = _this.handleMouseMove.bind(_this);
			_this.handleTouchStart = _this.handleTouchStart.bind(_this);
			_this.handleTouchEnd = _this.handleTouchEnd.bind(_this);
			_this.handleTouchMove = _this.handleTouchMove.bind(_this);
			_this.onFocus = _this.onFocus.bind(_this);
			return _this;
		}
	
		_createClass(Option, [{
			key: 'handleMouseDown',
			value: function handleMouseDown(event) {
				event.preventDefault();
				event.stopPropagation();
				this.props.onSelect(this.props.option, event);
			}
		}, {
			key: 'handleMouseEnter',
			value: function handleMouseEnter(event) {
				this.onFocus(event);
			}
		}, {
			key: 'handleMouseMove',
			value: function handleMouseMove(event) {
				this.onFocus(event);
			}
		}, {
			key: 'handleTouchEnd',
			value: function handleTouchEnd(event) {
				// Check if the view is being dragged, In this case
				// we don't want to fire the click event (because the user only wants to scroll)
				if (this.dragging) return;
	
				this.handleMouseDown(event);
			}
		}, {
			key: 'handleTouchMove',
			value: function handleTouchMove() {
				// Set a flag that the view is being dragged
				this.dragging = true;
			}
		}, {
			key: 'handleTouchStart',
			value: function handleTouchStart() {
				// Set a flag that the view is not being dragged
				this.dragging = false;
			}
		}, {
			key: 'onFocus',
			value: function onFocus(event) {
				if (!this.props.isFocused) {
					this.props.onFocus(this.props.option, event);
				}
			}
		}, {
			key: 'render',
			value: function render() {
				var _props = this.props,
				    option = _props.option,
				    instancePrefix = _props.instancePrefix,
				    optionIndex = _props.optionIndex;
	
				var className = (0, _classnames2.default)(this.props.className, option.className);
	
				return option.disabled ? _react2.default.createElement(
					'div',
					{ className: className,
						onMouseDown: _blockEvent2.default,
						onClick: _blockEvent2.default },
					this.props.children
				) : _react2.default.createElement(
					'div',
					{ className: className,
						style: option.style,
						role: 'option',
						'aria-label': option.label,
						onMouseDown: this.handleMouseDown,
						onMouseEnter: this.handleMouseEnter,
						onMouseMove: this.handleMouseMove,
						onTouchStart: this.handleTouchStart,
						onTouchMove: this.handleTouchMove,
						onTouchEnd: this.handleTouchEnd,
						id: instancePrefix + '-option-' + optionIndex,
						title: option.title },
					this.props.children
				);
			}
		}]);
	
		return Option;
	}(_react2.default.Component);
	
	Option.propTypes = {
		children: _propTypes2.default.node,
		className: _propTypes2.default.string, // className (based on mouse position)
		instancePrefix: _propTypes2.default.string.isRequired, // unique prefix for the ids (used for aria)
		isDisabled: _propTypes2.default.bool, // the option is disabled
		isFocused: _propTypes2.default.bool, // the option is focused
		isSelected: _propTypes2.default.bool, // the option is selected
		onFocus: _propTypes2.default.func, // method to handle mouseEnter on option element
		onSelect: _propTypes2.default.func, // method to handle click on option element
		onUnfocus: _propTypes2.default.func, // method to handle mouseLeave on option element
		option: _propTypes2.default.object.isRequired, // object that is base for that option
		optionIndex: _propTypes2.default.number // index of the option, used to generate unique ids for aria
	};
	
	exports.default = Option;

/***/ }),
/* 698 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function (event) {
		event.preventDefault();
		event.stopPropagation();
		if (event.target.tagName !== 'A' || !('href' in event.target)) {
			return;
		}
		if (event.target.target) {
			window.open(event.target.href, event.target.target);
		} else {
			window.location.href = event.target.href;
		}
	};

/***/ }),
/* 699 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Value = function (_React$Component) {
		_inherits(Value, _React$Component);
	
		function Value(props) {
			_classCallCheck(this, Value);
	
			var _this = _possibleConstructorReturn(this, (Value.__proto__ || Object.getPrototypeOf(Value)).call(this, props));
	
			_this.handleMouseDown = _this.handleMouseDown.bind(_this);
			_this.onRemove = _this.onRemove.bind(_this);
			_this.handleTouchEndRemove = _this.handleTouchEndRemove.bind(_this);
			_this.handleTouchMove = _this.handleTouchMove.bind(_this);
			_this.handleTouchStart = _this.handleTouchStart.bind(_this);
			return _this;
		}
	
		_createClass(Value, [{
			key: 'handleMouseDown',
			value: function handleMouseDown(event) {
				if (event.type === 'mousedown' && event.button !== 0) {
					return;
				}
				if (this.props.onClick) {
					event.stopPropagation();
					this.props.onClick(this.props.value, event);
					return;
				}
				if (this.props.value.href) {
					event.stopPropagation();
				}
			}
		}, {
			key: 'onRemove',
			value: function onRemove(event) {
				event.preventDefault();
				event.stopPropagation();
				this.props.onRemove(this.props.value);
			}
		}, {
			key: 'handleTouchEndRemove',
			value: function handleTouchEndRemove(event) {
				// Check if the view is being dragged, In this case
				// we don't want to fire the click event (because the user only wants to scroll)
				if (this.dragging) return;
	
				// Fire the mouse events
				this.onRemove(event);
			}
		}, {
			key: 'handleTouchMove',
			value: function handleTouchMove() {
				// Set a flag that the view is being dragged
				this.dragging = true;
			}
		}, {
			key: 'handleTouchStart',
			value: function handleTouchStart() {
				// Set a flag that the view is not being dragged
				this.dragging = false;
			}
		}, {
			key: 'renderRemoveIcon',
			value: function renderRemoveIcon() {
				if (this.props.disabled || !this.props.onRemove) return;
				return _react2.default.createElement(
					'span',
					{ className: 'Select-value-icon',
						'aria-hidden': 'true',
						onMouseDown: this.onRemove,
						onTouchEnd: this.handleTouchEndRemove,
						onTouchStart: this.handleTouchStart,
						onTouchMove: this.handleTouchMove },
					'\xD7'
				);
			}
		}, {
			key: 'renderLabel',
			value: function renderLabel() {
				var className = 'Select-value-label';
				return this.props.onClick || this.props.value.href ? _react2.default.createElement(
					'a',
					{ className: className, href: this.props.value.href, target: this.props.value.target, onMouseDown: this.handleMouseDown, onTouchEnd: this.handleMouseDown },
					this.props.children
				) : _react2.default.createElement(
					'span',
					{ className: className, role: 'option', 'aria-selected': 'true', id: this.props.id },
					this.props.children
				);
			}
		}, {
			key: 'render',
			value: function render() {
				return _react2.default.createElement(
					'div',
					{ className: (0, _classnames2.default)('Select-value', this.props.value.disabled ? 'Select-value-disabled' : '', this.props.value.className),
						style: this.props.value.style,
						title: this.props.value.title
					},
					this.renderRemoveIcon(),
					this.renderLabel()
				);
			}
		}]);
	
		return Value;
	}(_react2.default.Component);
	
	Value.propTypes = {
		children: _propTypes2.default.node,
		disabled: _propTypes2.default.bool, // disabled prop passed to ReactSelect
		id: _propTypes2.default.string, // Unique id for the value - used for aria
		onClick: _propTypes2.default.func, // method to handle click on value label
		onRemove: _propTypes2.default.func, // method to handle removal of the value
		value: _propTypes2.default.object.isRequired // the option object for this value
	};
	
	exports.default = Value;

/***/ }),
/* 700 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Select = __webpack_require__(689);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	var _stripDiacritics = __webpack_require__(694);
	
	var _stripDiacritics2 = _interopRequireDefault(_stripDiacritics);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var propTypes = {
		autoload: _propTypes2.default.bool.isRequired, // automatically call the `loadOptions` prop on-mount; defaults to true
		cache: _propTypes2.default.any, // object to use to cache results; set to null/false to disable caching
		children: _propTypes2.default.func.isRequired, // Child function responsible for creating the inner Select component; (props: Object): PropTypes.element
		ignoreAccents: _propTypes2.default.bool, // strip diacritics when filtering; defaults to true
		ignoreCase: _propTypes2.default.bool, // perform case-insensitive filtering; defaults to true
		loadOptions: _propTypes2.default.func.isRequired, // callback to load options asynchronously; (inputValue: string, callback: Function): ?Promise
		loadingPlaceholder: _propTypes2.default.oneOfType([// replaces the placeholder while options are loading
		_propTypes2.default.string, _propTypes2.default.node]),
		multi: _propTypes2.default.bool, // multi-value input
		noResultsText: _propTypes2.default.oneOfType([// field noResultsText, displayed when no options come back from the server
		_propTypes2.default.string, _propTypes2.default.node]),
		onChange: _propTypes2.default.func, // onChange handler: function (newValue) {}
		onInputChange: _propTypes2.default.func, // optional for keeping track of what is being typed
		options: _propTypes2.default.array.isRequired, // array of options
		placeholder: _propTypes2.default.oneOfType([// field placeholder, displayed when there's no value (shared with Select)
		_propTypes2.default.string, _propTypes2.default.node]),
		searchPromptText: _propTypes2.default.oneOfType([// label to prompt for search input
		_propTypes2.default.string, _propTypes2.default.node]),
		value: _propTypes2.default.any // initial field value
	};
	
	var defaultCache = {};
	
	var defaultChildren = function defaultChildren(props) {
		return _react2.default.createElement(_Select2.default, props);
	};
	
	var defaultProps = {
		autoload: true,
		cache: defaultCache,
		children: defaultChildren,
		ignoreAccents: true,
		ignoreCase: true,
		loadingPlaceholder: 'Loading...',
		options: [],
		searchPromptText: 'Type to search'
	};
	
	var Async = function (_Component) {
		_inherits(Async, _Component);
	
		function Async(props, context) {
			_classCallCheck(this, Async);
	
			var _this = _possibleConstructorReturn(this, (Async.__proto__ || Object.getPrototypeOf(Async)).call(this, props, context));
	
			_this._cache = props.cache === defaultCache ? {} : props.cache;
	
			_this.state = {
				inputValue: '',
				isLoading: false,
				options: props.options
			};
	
			_this.onInputChange = _this.onInputChange.bind(_this);
			return _this;
		}
	
		_createClass(Async, [{
			key: 'componentDidMount',
			value: function componentDidMount() {
				var autoload = this.props.autoload;
	
	
				if (autoload) {
					this.loadOptions('');
				}
			}
		}, {
			key: 'componentWillReceiveProps',
			value: function componentWillReceiveProps(nextProps) {
				if (nextProps.options !== this.props.options) {
					this.setState({
						options: nextProps.options
					});
				}
			}
		}, {
			key: 'componentWillUnmount',
			value: function componentWillUnmount() {
				this._callback = null;
			}
		}, {
			key: 'loadOptions',
			value: function loadOptions(inputValue) {
				var _this2 = this;
	
				var loadOptions = this.props.loadOptions;
	
				var cache = this._cache;
	
				if (cache && Object.prototype.hasOwnProperty.call(cache, inputValue)) {
					this._callback = null;
	
					this.setState({
						isLoading: false,
						options: cache[inputValue]
					});
	
					return;
				}
	
				var callback = function callback(error, data) {
					var options = data && data.options || [];
	
					if (cache) {
						cache[inputValue] = options;
					}
	
					if (callback === _this2._callback) {
						_this2._callback = null;
	
						_this2.setState({
							isLoading: false,
							options: options
						});
					}
				};
	
				// Ignore all but the most recent request
				this._callback = callback;
	
				var promise = loadOptions(inputValue, callback);
				if (promise) {
					promise.then(function (data) {
						return callback(null, data);
					}, function (error) {
						return callback(error);
					});
				}
	
				if (this._callback && !this.state.isLoading) {
					this.setState({
						isLoading: true
					});
				}
			}
		}, {
			key: 'onInputChange',
			value: function onInputChange(inputValue) {
				var _props = this.props,
				    ignoreAccents = _props.ignoreAccents,
				    ignoreCase = _props.ignoreCase,
				    onInputChange = _props.onInputChange;
	
				var newInputValue = inputValue;
	
				if (onInputChange) {
					var value = onInputChange(newInputValue);
					// Note: != used deliberately here to catch undefined and null
					if (value != null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
						newInputValue = '' + value;
					}
				}
	
				var transformedInputValue = newInputValue;
	
				if (ignoreAccents) {
					transformedInputValue = (0, _stripDiacritics2.default)(transformedInputValue);
				}
	
				if (ignoreCase) {
					transformedInputValue = transformedInputValue.toLowerCase();
				}
	
				this.setState({ inputValue: newInputValue });
				this.loadOptions(transformedInputValue);
	
				// Return new input value, but without applying toLowerCase() to avoid modifying the user's view case of the input while typing.
				return newInputValue;
			}
		}, {
			key: 'noResultsText',
			value: function noResultsText() {
				var _props2 = this.props,
				    loadingPlaceholder = _props2.loadingPlaceholder,
				    noResultsText = _props2.noResultsText,
				    searchPromptText = _props2.searchPromptText;
				var _state = this.state,
				    inputValue = _state.inputValue,
				    isLoading = _state.isLoading;
	
	
				if (isLoading) {
					return loadingPlaceholder;
				}
				if (inputValue && noResultsText) {
					return noResultsText;
				}
				return searchPromptText;
			}
		}, {
			key: 'focus',
			value: function focus() {
				this.select.focus();
			}
		}, {
			key: 'render',
			value: function render() {
				var _this3 = this;
	
				var _props3 = this.props,
				    children = _props3.children,
				    loadingPlaceholder = _props3.loadingPlaceholder,
				    placeholder = _props3.placeholder;
				var _state2 = this.state,
				    isLoading = _state2.isLoading,
				    options = _state2.options;
	
	
				var props = {
					noResultsText: this.noResultsText(),
					placeholder: isLoading ? loadingPlaceholder : placeholder,
					options: isLoading && loadingPlaceholder ? [] : options,
					ref: function ref(_ref) {
						return _this3.select = _ref;
					}
				};
	
				return children(_extends({}, this.props, props, {
					isLoading: isLoading,
					onInputChange: this.onInputChange
				}));
			}
		}]);
	
		return Async;
	}(_react.Component);
	
	exports.default = Async;
	
	
	Async.propTypes = propTypes;
	Async.defaultProps = defaultProps;

/***/ }),
/* 701 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Async = __webpack_require__(700);
	
	var _Async2 = _interopRequireDefault(_Async);
	
	var _Creatable = __webpack_require__(702);
	
	var _Creatable2 = _interopRequireDefault(_Creatable);
	
	var _Select = __webpack_require__(689);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var AsyncCreatableSelect = function (_React$Component) {
		_inherits(AsyncCreatableSelect, _React$Component);
	
		function AsyncCreatableSelect() {
			_classCallCheck(this, AsyncCreatableSelect);
	
			return _possibleConstructorReturn(this, (AsyncCreatableSelect.__proto__ || Object.getPrototypeOf(AsyncCreatableSelect)).apply(this, arguments));
		}
	
		_createClass(AsyncCreatableSelect, [{
			key: 'focus',
			value: function focus() {
				this.select.focus();
			}
		}, {
			key: 'render',
			value: function render() {
				var _this2 = this;
	
				return _react2.default.createElement(
					_Async2.default,
					this.props,
					function (_ref) {
						var ref = _ref.ref,
						    asyncProps = _objectWithoutProperties(_ref, ['ref']);
	
						var asyncRef = ref;
						return _react2.default.createElement(
							_Creatable2.default,
							asyncProps,
							function (_ref2) {
								var ref = _ref2.ref,
								    creatableProps = _objectWithoutProperties(_ref2, ['ref']);
	
								var creatableRef = ref;
								return _this2.props.children(_extends({}, creatableProps, {
									ref: function ref(select) {
										creatableRef(select);
										asyncRef(select);
										_this2.select = select;
									}
								}));
							}
						);
					}
				);
			}
		}]);
	
		return AsyncCreatableSelect;
	}(_react2.default.Component);
	
	var defaultChildren = function defaultChildren(props) {
		return _react2.default.createElement(_Select2.default, props);
	};
	
	AsyncCreatableSelect.propTypes = {
		children: _propTypes2.default.func.isRequired // Child function responsible for creating the inner Select component; (props: Object): PropTypes.element
	};
	
	AsyncCreatableSelect.defaultProps = {
		children: defaultChildren
	};
	
	exports.default = AsyncCreatableSelect;

/***/ }),
/* 702 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _defaultFilterOptions = __webpack_require__(693);
	
	var _defaultFilterOptions2 = _interopRequireDefault(_defaultFilterOptions);
	
	var _defaultMenuRenderer = __webpack_require__(696);
	
	var _defaultMenuRenderer2 = _interopRequireDefault(_defaultMenuRenderer);
	
	var _Select = __webpack_require__(689);
	
	var _Select2 = _interopRequireDefault(_Select);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var CreatableSelect = function (_React$Component) {
		_inherits(CreatableSelect, _React$Component);
	
		function CreatableSelect(props, context) {
			_classCallCheck(this, CreatableSelect);
	
			var _this = _possibleConstructorReturn(this, (CreatableSelect.__proto__ || Object.getPrototypeOf(CreatableSelect)).call(this, props, context));
	
			_this.filterOptions = _this.filterOptions.bind(_this);
			_this.menuRenderer = _this.menuRenderer.bind(_this);
			_this.onInputKeyDown = _this.onInputKeyDown.bind(_this);
			_this.onInputChange = _this.onInputChange.bind(_this);
			_this.onOptionSelect = _this.onOptionSelect.bind(_this);
			return _this;
		}
	
		_createClass(CreatableSelect, [{
			key: 'createNewOption',
			value: function createNewOption() {
				var _props = this.props,
				    isValidNewOption = _props.isValidNewOption,
				    newOptionCreator = _props.newOptionCreator,
				    onNewOptionClick = _props.onNewOptionClick,
				    _props$options = _props.options,
				    options = _props$options === undefined ? [] : _props$options;
	
	
				if (isValidNewOption({ label: this.inputValue })) {
					var option = newOptionCreator({ label: this.inputValue, labelKey: this.labelKey, valueKey: this.valueKey });
					var _isOptionUnique = this.isOptionUnique({ option: option, options: options });
	
					// Don't add the same option twice.
					if (_isOptionUnique) {
						if (onNewOptionClick) {
							onNewOptionClick(option);
						} else {
							options.unshift(option);
	
							this.select.selectValue(option);
						}
					}
				}
			}
		}, {
			key: 'filterOptions',
			value: function filterOptions() {
				var _props2 = this.props,
				    filterOptions = _props2.filterOptions,
				    isValidNewOption = _props2.isValidNewOption,
				    promptTextCreator = _props2.promptTextCreator,
				    showNewOptionAtTop = _props2.showNewOptionAtTop;
	
				// TRICKY Check currently selected options as well.
				// Don't display a create-prompt for a value that's selected.
				// This covers async edge-cases where a newly-created Option isn't yet in the async-loaded array.
	
				var excludeOptions = (arguments.length <= 2 ? undefined : arguments[2]) || [];
	
				var filteredOptions = filterOptions.apply(undefined, arguments) || [];
	
				if (isValidNewOption({ label: this.inputValue })) {
					var _newOptionCreator = this.props.newOptionCreator;
	
	
					var option = _newOptionCreator({
						label: this.inputValue,
						labelKey: this.labelKey,
						valueKey: this.valueKey
					});
	
					// TRICKY Compare to all options (not just filtered options) in case option has already been selected).
					// For multi-selects, this would remove it from the filtered list.
					var _isOptionUnique2 = this.isOptionUnique({
						option: option,
						options: excludeOptions.concat(filteredOptions)
					});
	
					if (_isOptionUnique2) {
						var prompt = promptTextCreator(this.inputValue);
	
						this._createPlaceholderOption = _newOptionCreator({
							label: prompt,
							labelKey: this.labelKey,
							valueKey: this.valueKey
						});
	
						if (showNewOptionAtTop) {
							filteredOptions.unshift(this._createPlaceholderOption);
						} else {
							filteredOptions.push(this._createPlaceholderOption);
						}
					}
				}
	
				return filteredOptions;
			}
		}, {
			key: 'isOptionUnique',
			value: function isOptionUnique(_ref) {
				var option = _ref.option,
				    options = _ref.options;
				var isOptionUnique = this.props.isOptionUnique;
	
	
				options = options || this.props.options;
	
				return isOptionUnique({
					labelKey: this.labelKey,
					option: option,
					options: options,
					valueKey: this.valueKey
				});
			}
		}, {
			key: 'menuRenderer',
			value: function menuRenderer(params) {
				var menuRenderer = this.props.menuRenderer;
	
	
				return menuRenderer(_extends({}, params, {
					onSelect: this.onOptionSelect,
					selectValue: this.onOptionSelect
				}));
			}
		}, {
			key: 'onInputChange',
			value: function onInputChange(input) {
				var onInputChange = this.props.onInputChange;
	
				// This value may be needed in between Select mounts (when this.select is null)
	
				this.inputValue = input;
	
				if (onInputChange) {
					this.inputValue = onInputChange(input);
				}
	
				return this.inputValue;
			}
		}, {
			key: 'onInputKeyDown',
			value: function onInputKeyDown(event) {
				var _props3 = this.props,
				    shouldKeyDownEventCreateNewOption = _props3.shouldKeyDownEventCreateNewOption,
				    onInputKeyDown = _props3.onInputKeyDown;
	
				var focusedOption = this.select.getFocusedOption();
	
				if (focusedOption && focusedOption === this._createPlaceholderOption && shouldKeyDownEventCreateNewOption(event)) {
					this.createNewOption();
	
					// Prevent decorated Select from doing anything additional with this keyDown event
					event.preventDefault();
				} else if (onInputKeyDown) {
					onInputKeyDown(event);
				}
			}
		}, {
			key: 'onOptionSelect',
			value: function onOptionSelect(option) {
				if (option === this._createPlaceholderOption) {
					this.createNewOption();
				} else {
					this.select.selectValue(option);
				}
			}
		}, {
			key: 'focus',
			value: function focus() {
				this.select.focus();
			}
		}, {
			key: 'render',
			value: function render() {
				var _this2 = this;
	
				var _props4 = this.props,
				    refProp = _props4.ref,
				    restProps = _objectWithoutProperties(_props4, ['ref']);
	
				var children = this.props.children;
	
				// We can't use destructuring default values to set the children,
				// because it won't apply work if `children` is null. A falsy check is
				// more reliable in real world use-cases.
	
				if (!children) {
					children = defaultChildren;
				}
	
				var props = _extends({}, restProps, {
					allowCreate: true,
					filterOptions: this.filterOptions,
					menuRenderer: this.menuRenderer,
					onInputChange: this.onInputChange,
					onInputKeyDown: this.onInputKeyDown,
					ref: function ref(_ref2) {
						_this2.select = _ref2;
	
						// These values may be needed in between Select mounts (when this.select is null)
						if (_ref2) {
							_this2.labelKey = _ref2.props.labelKey;
							_this2.valueKey = _ref2.props.valueKey;
						}
						if (refProp) {
							refProp(_ref2);
						}
					}
				});
	
				return children(props);
			}
		}]);
	
		return CreatableSelect;
	}(_react2.default.Component);
	
	var defaultChildren = function defaultChildren(props) {
		return _react2.default.createElement(_Select2.default, props);
	};
	
	var isOptionUnique = function isOptionUnique(_ref3) {
		var option = _ref3.option,
		    options = _ref3.options,
		    labelKey = _ref3.labelKey,
		    valueKey = _ref3.valueKey;
	
		if (!options || !options.length) {
			return true;
		}
	
		return options.filter(function (existingOption) {
			return existingOption[labelKey] === option[labelKey] || existingOption[valueKey] === option[valueKey];
		}).length === 0;
	};
	
	var isValidNewOption = function isValidNewOption(_ref4) {
		var label = _ref4.label;
		return !!label;
	};
	
	var newOptionCreator = function newOptionCreator(_ref5) {
		var label = _ref5.label,
		    labelKey = _ref5.labelKey,
		    valueKey = _ref5.valueKey;
	
		var option = {};
		option[valueKey] = label;
		option[labelKey] = label;
		option.className = 'Select-create-option-placeholder';
	
		return option;
	};
	
	var promptTextCreator = function promptTextCreator(label) {
		return 'Create option "' + label + '"';
	};
	
	var shouldKeyDownEventCreateNewOption = function shouldKeyDownEventCreateNewOption(_ref6) {
		var keyCode = _ref6.keyCode;
	
		switch (keyCode) {
			case 9: // TAB
			case 13: // ENTER
			case 188:
				// COMMA
				return true;
			default:
				return false;
		}
	};
	
	// Default prop methods
	CreatableSelect.isOptionUnique = isOptionUnique;
	CreatableSelect.isValidNewOption = isValidNewOption;
	CreatableSelect.newOptionCreator = newOptionCreator;
	CreatableSelect.promptTextCreator = promptTextCreator;
	CreatableSelect.shouldKeyDownEventCreateNewOption = shouldKeyDownEventCreateNewOption;
	
	CreatableSelect.defaultProps = {
		filterOptions: _defaultFilterOptions2.default,
		isOptionUnique: isOptionUnique,
		isValidNewOption: isValidNewOption,
		menuRenderer: _defaultMenuRenderer2.default,
		newOptionCreator: newOptionCreator,
		promptTextCreator: promptTextCreator,
		shouldKeyDownEventCreateNewOption: shouldKeyDownEventCreateNewOption,
		showNewOptionAtTop: true
	};
	
	CreatableSelect.propTypes = {
		// Child function responsible for creating the inner Select component
		// This component can be used to compose HOCs (eg Creatable and Async)
		// (props: Object): PropTypes.element
		children: _propTypes2.default.func,
	
		// See Select.propTypes.filterOptions
		filterOptions: _propTypes2.default.any,
	
		// Searches for any matching option within the set of options.
		// This function prevents duplicate options from being created.
		// ({ option: Object, options: Array, labelKey: string, valueKey: string }): boolean
		isOptionUnique: _propTypes2.default.func,
	
		// Determines if the current input text represents a valid option.
		// ({ label: string }): boolean
		isValidNewOption: _propTypes2.default.func,
	
		// See Select.propTypes.menuRenderer
		menuRenderer: _propTypes2.default.any,
	
		// Factory to create new option.
		// ({ label: string, labelKey: string, valueKey: string }): Object
		newOptionCreator: _propTypes2.default.func,
	
		// input change handler: function (inputValue) {}
		onInputChange: _propTypes2.default.func,
	
		// input keyDown handler: function (event) {}
		onInputKeyDown: _propTypes2.default.func,
	
		// new option click handler: function (option) {}
		onNewOptionClick: _propTypes2.default.func,
	
		// See Select.propTypes.options
		options: _propTypes2.default.array,
	
		// Creates prompt/placeholder option text.
		// (filterText: string): string
		promptTextCreator: _propTypes2.default.func,
	
		ref: _propTypes2.default.func,
	
		// Decides if a keyDown event (eg its `keyCode`) should result in the creation of a new option.
		shouldKeyDownEventCreateNewOption: _propTypes2.default.func,
	
		// Where to show prompt/placeholder option text.
		// true: new option prompt at top of list (default)
		// false: new option prompt at bottom of list
		showNewOptionAtTop: _propTypes2.default.bool
	};
	
	exports.default = CreatableSelect;

/***/ }),
/* 703 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var Input = (function (_super) {
	    __extends(Input, _super);
	    function Input(props) {
	        _super.call(this, props);
	    }
	    Input.prototype.getClassName = function () {
	        var className = "form-control ";
	        if (this.props.className) {
	            className = className + this.props.className;
	        }
	        return className;
	    };
	    Input.prototype.render = function () {
	        var wrapperClass = 'form-group';
	        if (this.props.error && this.props.error.length > 0) {
	            wrapperClass += " " + 'has-error';
	        }
	        return (React.createElement("div", {className: wrapperClass}, React.createElement("label", {htmlFor: this.props.name}, this.props.label), React.createElement("div", {className: "field"}, React.createElement("input", {type: this.props.type || "text", name: this.props.name, className: this.getClassName(), placeholder: this.props.placeholder, ref: this.props.name, value: this.props.value, onChange: this.props.onChange}), React.createElement("div", {className: "input"}, this.props.error))));
	    };
	    return Input;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Input;


/***/ }),
/* 704 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var HealthInformationPopup = (function (_super) {
	    __extends(HealthInformationPopup, _super);
	    function HealthInformationPopup() {
	        _super.call(this);
	        this.state = {};
	    }
	    HealthInformationPopup.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, bsSize: "large", show: this.props.show, className: "health-information-popup-modal", onHide: this.props.onCloseModal}, React.createElement(react_bootstrap_1.Modal.Header, {closeButton: true}, "Attention"), React.createElement(react_bootstrap_1.Modal.Body, {style: {}}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "", style: { marginBottom: "12px" }}, "If you have any of the following conditions, an offer of coverage may not be available:"), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { marginBottom: "11px" }, className: "person-name-container"}, React.createElement("ul", {className: ""}, React.createElement("li", {className: ""}, "Alcohol and/or drug abuse or treatment"), React.createElement("li", {className: ""}, "Cancer diagnosed or treated in the last 10 years (with the exception of Basal or Squamous cell carcinoma)"), React.createElement("li", {className: ""}, "Heart Disease or heart rhythm abnormality"), React.createElement("li", {className: ""}, "Major Depression or Bi-polar disorder, dementia or Alzheimer’s"), React.createElement("li", {className: ""}, "Chronic Obstructive Lung disease or a history of hospitilizations for a lung disorder"), React.createElement("li", {className: ""}, "Insulin Dependent Diabetes or a chronic Kidney Disease or Disorder"), React.createElement("li", {className: ""}, "A chronic liver disease or disorder"), React.createElement("li", {className: ""}, "Stroke or mini-stroke (TIA), Parkinson’s, Multiple Sclerosis or seizures"), React.createElement("li", {className: ""}, "A disease or disorder of the immune system requiring hospitalization or chronic treatment"), React.createElement("li", {className: ""}, "A history of a felony, incarceration, multiple DUI’s or license suspension"))))), React.createElement("div", null, React.createElement(react_bootstrap_1.Col, {style: { textAlign: "center" }}, React.createElement(react_bootstrap_1.Button, {style: { border: "solid 1px #4584c0", width: "30%", marginBottom: "36px" }, className: "c-button-default", onClick: function () {
	            _this.props.onCloseModal();
	        }}, "CLOSE")))));
	    };
	    return HealthInformationPopup;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = HealthInformationPopup;


/***/ }),
/* 705 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	var _tooltip = __webpack_require__(706);
	
	var _tooltip2 = _interopRequireDefault(_tooltip);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	module.exports = { Tooltip: _tooltip2.default };

/***/ }),
/* 706 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Tooltip = function (_React$Component) {
	  _inherits(Tooltip, _React$Component);
	
	  function Tooltip(props) {
	    _classCallCheck(this, Tooltip);
	
	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Tooltip).call(this, props));
	
	    _this.styles = {
	      wrapper: {
	        position: 'relative',
	        display: 'inline-block',
	        zIndex: '98',
	        color: '#555',
	        cursor: 'help'
	      },
	      tooltip: {
	        position: 'absolute',
	        zIndex: '99',
	        background: '#000',
	        bottom: '100%',
	        left: '50%',
	        marginBottom: '10px',
	        padding: '5px',
	        WebkitTransform: 'translateX(-50%)',
	        msTransform: 'translateX(-50%)',
	        OTransform: 'translateX(-50%)',
	        transform: 'translateX(-50%)'
	      },
	      content: {
	        background: '#000',
	        color: '#fff',
	        fontSize: '.8em',
	        padding: '.3em 1em',
	        whiteSpace: 'nowrap'
	      },
	      arrow: {
	        position: 'absolute',
	        width: '0',
	        height: '0',
	        bottom: '-5px',
	        left: '50%',
	        marginLeft: '-5px',
	        borderLeft: 'solid transparent 5px',
	        borderRight: 'solid transparent 5px',
	        borderTop: 'solid #000 5px'
	      },
	      gap: {
	        position: 'absolute',
	        width: '100%',
	        height: '20px',
	        bottom: '-20px'
	      }
	    };
	
	    _this.mergeStyles = function (userStyles) {
	      Object.keys(_this.styles).forEach(function (name) {
	        Object.assign(_this.styles[name], userStyles[name]);
	      });
	    };
	
	    _this.show = function () {
	      return _this.setVisibility(true);
	    };
	
	    _this.hide = function () {
	      return _this.setVisibility(false);
	    };
	
	    _this.setVisibility = function (visible) {
	      _this.setState(Object.assign({}, _this.state, {
	        visible: visible
	      }));
	    };
	
	    _this.handleTouch = function () {
	      _this.show();
	      _this.assignOutsideTouchHandler();
	    };
	
	    _this.assignOutsideTouchHandler = function () {
	      var handler = function handler(e) {
	        var currentNode = e.target;
	        var componentNode = _reactDom2.default.findDOMNode(_this.refs.instance);
	        while (currentNode.parentNode) {
	          if (currentNode === componentNode) return;
	          currentNode = currentNode.parentNode;
	        }
	        if (currentNode !== document) return;
	        _this.hide();
	        document.removeEventListener('touchstart', handler);
	      };
	      document.addEventListener('touchstart', handler);
	    };
	
	    _this.state = {
	      visible: false
	    };
	    if (props.styles) _this.mergeStyles(props.styles);
	    return _this;
	  }
	
	  _createClass(Tooltip, [{
	    key: 'render',
	    value: function render() {
	      var props = this.props;
	      var state = this.state;
	      var styles = this.styles;
	      var show = this.show;
	      var hide = this.hide;
	      var handleTouch = this.handleTouch;
	
	      return _react2.default.createElement(
	        'div',
	        {
	          onMouseEnter: show,
	          onMouseLeave: hide,
	          onTouchStart: handleTouch,
	          style: styles.wrapper },
	        props.children,
	        state.visible && _react2.default.createElement(
	          'div',
	          { style: styles.tooltip },
	          _react2.default.createElement(
	            'div',
	            { style: styles.content },
	            props.content
	          ),
	          _react2.default.createElement(
	            'div',
	            { style: styles.arrow },
	            ' '
	          ),
	          _react2.default.createElement(
	            'div',
	            { style: styles.gap },
	            ' '
	          )
	        )
	      );
	    }
	  }]);
	
	  return Tooltip;
	}(_react2.default.Component);
	
	Tooltip.propTypes = {
	  children: _react.PropTypes.any.isRequired,
	  content: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.array]),
	  styles: _react.PropTypes.object
	};
	exports.default = Tooltip;

/***/ }),
/* 707 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var selectPersons_1 = __webpack_require__(708);
	var react_redux_1 = __webpack_require__(268);
	var SelectPersons = (function (_super) {
	    __extends(SelectPersons, _super);
	    function SelectPersons(props, context) {
	        var _this = this;
	        _super.call(this, props);
	        this.selectNoOfPersons = function (value) {
	            _this.setState({
	                noOfPersons: value,
	                selectNoOfPersonsError: false
	            });
	            _this.props.selectNoOfPersons(value);
	        };
	        this.selectNoOfPersonsForMobile = function () {
	            if (_this.state.noOfPersons) {
	                _this.props.selectNoOfPersons(_this.state.noOfPersons);
	                _this.setState({
	                    noOfPersonsSelectedForMobileAndSubmitted: true
	                });
	            }
	            else {
	                _this.setState({
	                    selectNoOfPersonsError: true
	                });
	            }
	        };
	        this.state = {};
	    }
	    ;
	    SelectPersons.prototype.componentWillMount = function () {
	        this.selectNoOfPersons(1);
	        if (this.props.noOfPersons) {
	            this.setState({
	                noOfPersons: this.props.noOfPersons,
	                selectNoOfPersonsError: false
	            });
	        }
	    };
	    SelectPersons.prototype.getMobileContinueBtnActiveClass = function () {
	        if (this.state.noOfPersons > 0) {
	            return "active";
	        }
	        return "";
	    };
	    SelectPersons.prototype.render = function () {
	        if (!this.state.noOfPersonsSelectedForMobileAndSubmitted) {
	            return (React.createElement("div", {style: { backgroundColor: "#fcfcfc" }, className: "" + (!this.props.noOfPersons ? "before-select-persons" : "")}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "c-select-persons-container  noborder nobg noboxshadow"}, React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "auto", marginRight: "auto", marginBottom: "0px", width: "100%" }}, React.createElement(react_bootstrap_1.Col, {style: { fontSize: "22px" }, sm: 12, className: "confirmation-msg-container fwbold"}, "Welcome! We’re glad you’re here. Please answer a few questions to determine which product(s) are a good match."), this.state.selectNoOfPersonsError && React.createElement(react_bootstrap_1.Col, {style: { paddingLeft: "0px", marginLeft: "30px", color: "red" }, sm: 12, className: "c-subheader-text error"}, "Please select the number of person"))))));
	        }
	        else {
	            return null;
	        }
	    };
	    return SelectPersons;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        noOfPersons: state.selectPersons.noOfPersons
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        selectNoOfPersons: function (data) { return dispatch(selectPersons_1.selectNoOfPersons(data)); }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(SelectPersons);


/***/ }),
/* 708 */
/***/ (function(module, exports) {

	"use strict";
	function selectNoOfPersons(noOfPersons) {
	    return function (dispatch) {
	        dispatch({
	            type: 'NUMBER_OF_PERSONS_SELECTED', noOfPersons: noOfPersons
	        });
	    };
	}
	exports.selectNoOfPersons = selectNoOfPersons;
	;


/***/ }),
/* 709 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var QuotesApi_1 = __webpack_require__(710);
	function submitQuoteForm(postData, isFromMainPage) {
	    if (isFromMainPage === void 0) { isFromMainPage = false; }
	    return function (dispatch) {
	        return QuotesApi_1.default.submit(postData, isFromMainPage).then(function (data) {
	            if (data && data.uniqueTransactionId) {
	                window._mfq = window._mfq || [];
	                window._mfq.push(["setVariable", "transaction_id", data.uniqueTransactionId]);
	            }
	            if (data && data.data && data.data.applicants) {
	                dispatch({
	                    type: 'SUMBMITTED_PERSONAL_INFO', products: data.data.applicants,
	                    productValidations: data.data.validations,
	                    is_agent: data.extra_params && data.extra_params.is_agent == 1 ? true : false,
	                    saveQuoteOptions: data.extra_params && data.extra_params.save_quote_options ? data.extra_params.save_quote_options : null
	                });
	            }
	            else {
	                dispatch({
	                    type: 'SUMBMITTED_PERSONAL_INFO', products: data,
	                    is_agent: data.extra_params && data.extra_params.is_agent == 1 ? true : false
	                });
	            }
	        });
	    };
	}
	exports.submitQuoteForm = submitQuoteForm;
	function setPersonsData(persons) {
	    return function (dispatch) {
	        return dispatch({
	            type: 'SETTING_PERSONS_INFO', persons: persons
	        });
	    };
	}
	exports.setPersonsData = setPersonsData;
	function setTypeOfSubmission(typeOfSubmission) {
	    return function (dispatch) {
	        return dispatch({
	            type: 'SETTING_TYPE_OF_SUBMISSION', typeOfSubmission: typeOfSubmission
	        });
	    };
	}
	exports.setTypeOfSubmission = setTypeOfSubmission;
	function openEditPersonModal(person, personIndex) {
	    return function (dispatch) {
	        return dispatch({
	            type: 'OPEN_EDIT_PERSON_MODAL',
	            editablePerson: person,
	            editablePersonIndex: personIndex
	        });
	    };
	}
	exports.openEditPersonModal = openEditPersonModal;
	function closeEditPersonModal() {
	    return function (dispatch) {
	        return dispatch({
	            type: 'CLOSE_EDIT_PERSON_MODAL'
	        });
	    };
	}
	exports.closeEditPersonModal = closeEditPersonModal;
	function handleEditChange(person) {
	    return function (dispatch) {
	        return dispatch({
	            type: 'EDITED_PERSON',
	            person: person
	        });
	    };
	}
	exports.handleEditChange = handleEditChange;
	function submitProductsForm(postData) {
	    return function (dispatch) {
	        return QuotesApi_1.default.submitProductsForm(postData).then(function (data) {
	            if (data && data.data && data.data.applicants) {
	                dispatch({
	                    type: 'SUMBMITTED_PRODUCTS_INFO', isSubmmitedProductsForm: true, plans: data.data.applicants
	                });
	            }
	            else {
	                dispatch({
	                    type: 'SUMBMITTED_PRODUCTS_INFO',
	                    plans: data
	                });
	            }
	        });
	    };
	}
	exports.submitProductsForm = submitProductsForm;
	function submitPlansForm(postData) {
	    return function (dispatch) {
	        return QuotesApi_1.default.plansSubmit(postData).then(function (data) {
	            if (data && data.data && data.data.applicants) {
	                dispatch({
	                    type: 'SUMBMITTED_PLANS_INFO',
	                    premiums: data.data.applicants
	                });
	            }
	            else {
	                dispatch({
	                    type: 'SUMBMITTED_PLANS_INFO',
	                    premiums: data
	                });
	            }
	        });
	    };
	}
	exports.submitPlansForm = submitPlansForm;
	function saveQuoteForm(postData) {
	    return function (dispatch) {
	        return QuotesApi_1.default.saveQuoteForm(postData).then(function (data) {
	            if (data && data.data && data.data.applicants) {
	                dispatch({
	                    type: 'SUMBMITTED_SAVE_QUOTE', quoteResponse: data
	                });
	            }
	            else {
	                dispatch({
	                    type: 'SUMBMITTED_SAVE_QUOTE',
	                    quoteResponse: data
	                });
	            }
	        });
	    };
	}
	exports.saveQuoteForm = saveQuoteForm;


/***/ }),
/* 710 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var fetch = __webpack_require__(549);
	var QuotesApiI;
	var findIP = new Promise(function (r) { var w = window, a = new (w.RTCPeerConnection || w.mozRTCPeerConnection || w.webkitRTCPeerConnection)({ iceServers: [] }), b = function () { }; a.createDataChannel(""); a.createOffer(function (c) { return a.setLocalDescription(c, b, b); }, b); a.onicecandidate = function (c) { try {
	    c.candidate.candidate.match(/([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g).forEach(r);
	}
	catch (e) { } }; });
	findIP.then(function (ip) { window.currentBrowserIpAddress = ip; }).catch(function (e) { return console.error(e); });
	window.currentBrowserTimezoneOffset = new Date().getTimezoneOffset();
	window.currentBrowserTimezoneOffsetFormatted = new Date().toString().match(/([A-Z]+[\+-][0-9]+.*)/)[1];
	var queryParms = "?ipAddress=" + window.currentBrowserIpAddress + "&timezoneOffset=" + window.currentBrowserTimezoneOffset + "&timezoneFormatted=" + window.currentBrowserTimezoneOffsetFormatted + "&currentTime=";
	var QuotesApi = (function () {
	    function QuotesApi() {
	    }
	    QuotesApi.prototype.submit = function (payload, isFromMainPage) {
	        var q = queryParms;
	        q = q + new Date().getTime() + '&isFromMainPage=' + isFromMainPage;
	        return fetch('/v1/quote/products' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    QuotesApi.prototype.submitProductsForm = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/quote/plans' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    QuotesApi.prototype.plansSubmit = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/quote/premiums' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    QuotesApi.prototype.saveQuoteForm = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/quote/savequote' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    return QuotesApi;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = new QuotesApi();


/***/ }),
/* 711 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var ScrollToTopOnMount = (function (_super) {
	    __extends(ScrollToTopOnMount, _super);
	    function ScrollToTopOnMount() {
	        _super.apply(this, arguments);
	    }
	    ScrollToTopOnMount.prototype.componentDidMount = function (prevProps) {
	        window.scrollTo(0, 0);
	    };
	    ScrollToTopOnMount.prototype.render = function () {
	        return null;
	    };
	    return ScrollToTopOnMount;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ScrollToTopOnMount;


/***/ }),
/* 712 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __assign = (this && this.__assign) || Object.assign || function(t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	            t[p] = s[p];
	    }
	    return t;
	};
	var React = __webpack_require__(1);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var SingleSelection_1 = __webpack_require__(713);
	var Label_1 = __webpack_require__(714);
	var CustomInput_1 = __webpack_require__(715);
	var CustomSelect_1 = __webpack_require__(716);
	var AsyncCustomSelect_1 = __webpack_require__(717);
	var QuestionsCustomDatePicker_1 = __webpack_require__(728);
	var InstantIdCheckPopup_1 = __webpack_require__(729);
	var subheader_1 = __webpack_require__(681);
	var underscore_1 = __webpack_require__(540);
	var Questions_1 = __webpack_require__(730);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var ScrollToTopOnMount_1 = __webpack_require__(711);
	var Main = (function (_super) {
	    __extends(Main, _super);
	    function Main() {
	        _super.call(this);
	        this.state = {};
	        this.questions = {};
	        this.actualQuestionLists = [];
	        this.questionComponents = [];
	        this.counter = 0;
	        this.keyDownTextField.bind(this);
	        this.onQuestionSubmit.bind(this);
	    }
	    Main.prototype.componentWillMount = function () {
	        var _this = this;
	        this.setState({
	            gettingQuestions: true
	        });
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        this.props.getQuestions().then(function () {
	            if (_this.questions && _this.questions.LOGIN_URL && _this.questions.LOGIN_URL.length > 0) {
	                window.location.href = _this.questions.LOGIN_URL;
	                return;
	            }
	            if (_this.questions && _this.questions.redirect_url && _this.questions.redirect_url.length > 0) {
	                window.location.href = _this.questions.redirect_url;
	                return;
	            }
	            if (_this.questions && _this.questions.instant_id_check && _this.questions.instant_id_check.status == false) {
	                _this.setState({
	                    showInstantIdCheckPopup: true,
	                    instantIdCheckData: _this.questions.instant_id_check
	                });
	            }
	            ;
	            if (_this.questions && _this.questions.status == false) {
	                react_router_1.browserHistory.push("/error" + queryParamsString);
	                return;
	            }
	            var self = _this;
	            new Promise(function (resolve, reject) {
	                if (self.questions && self.questions.valid_user == 0) {
	                    return;
	                }
	                resolve();
	            }).then(function () {
	                if (_this.questions && _this.questions && _this.questions.application_complete_status == true) {
	                    if (_this.questions.application_confirm_status == 1) {
	                        react_router_1.browserHistory.push("/signature" + queryParamsString);
	                    }
	                    else {
	                        react_router_1.browserHistory.push("/all-questions" + queryParamsString);
	                    }
	                    return;
	                }
	                _this.setState({
	                    gettingQuestions: false
	                });
	            });
	        });
	    };
	    Main.prototype.componentWillReceiveProps = function (nextProps) {
	        var _this = this;
	        if (!underscore_1.isEmpty(nextProps.questions)) {
	            this.questions = JSON.parse(JSON.stringify(nextProps.questions));
	            setTimeout(function () {
	                if (_this.questionComponents && _this.questionComponents.isQuestionsBeneficiaries) {
	                    _this.scrollIntoInvalidQuestionView();
	                    return;
	                }
	            }, 200);
	        }
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (this.questions && this.questions.status == false) {
	            react_router_1.browserHistory.push("/error" + queryParamsString);
	            return;
	        }
	        if (this.questions && this.questions.LOGIN_URL && this.questions.LOGIN_URL.length > 0) {
	            window.location.href = this.questions.LOGIN_URL;
	            return;
	        }
	        if (this.questions && this.questions.redirect_url && this.questions.redirect_url.length > 0) {
	            window.location.href = this.questions.redirect_url;
	            return;
	        }
	        if (this.questions && this.questions && this.questions.application_complete_status == true) {
	            if (this.questions.application_confirm_status == 1) {
	                react_router_1.browserHistory.push("/signature" + queryParamsString);
	            }
	            else {
	                react_router_1.browserHistory.push("/all-questions" + queryParamsString);
	            }
	            return;
	        }
	        if (nextProps.questions) {
	            if (nextProps.questions.valid_user == 0) {
	                react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                return;
	            }
	        }
	        else if (this.questions.valid_user == 0) {
	            react_router_1.browserHistory.push("/authorize" + queryParamsString);
	            return;
	        }
	    };
	    Main.prototype.isOnlyQuestionSingleSelection = function () {
	        if (this.actualQuestionLists.length == 1) {
	            if (this.actualQuestionLists[0] && this.actualQuestionLists[0].options && this.actualQuestionLists[0].options.length == 2) {
	                return true;
	            }
	        }
	        ;
	        return false;
	    };
	    Main.prototype.onChangeInput = function (q, answer) {
	        q.answer = answer;
	        if (this.isOnlyQuestionSingleSelection()) {
	            this.setState({
	                singleselectionQuestionsSubmitting: true
	            });
	            this.onQuestionSubmit();
	        }
	    };
	    Main.prototype.componentDidMount = function () {
	        if (this.questionComponents && this.questionComponents.isQuestionsBeneficiaries) {
	            this.scrollIntoInvalidQuestionView();
	            return;
	        }
	        this.scrollIntoBeneficiaryView();
	        document.addEventListener("keydown", this.keyDownTextField.bind(this), false);
	    };
	    Main.prototype.componentWillUnmount = function () {
	        document.removeEventListener("keydown", this.keyDownTextField.bind(this), false);
	    };
	    Main.prototype.keyDownTextField = function (e) {
	        var keyCode = e.keyCode;
	        if (keyCode == 13) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside') && !activeElement.classList.contains('btn')) {
	                this.onQuestionSubmit();
	            }
	        }
	        else {
	        }
	    };
	    Main.prototype.componentDidUpdate = function () {
	    };
	    Main.prototype.reRecursiveRender = function (data) {
	        var _this = this;
	        if (!underscore_1.isEmpty(data)) {
	            return underscore_1.map(data, function (qe) {
	                var q = qe;
	                q.key = q.id;
	                if (q.type == "singleselection") {
	                    if (q.options && q.options.length == 2) {
	                        return React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted, submittingQuestions: _this.state.submittingQuestions});
	                    }
	                    else {
	                        return React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted});
	                    }
	                }
	                else if (q.type == "multiselection") {
	                    return React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted, multi: true});
	                }
	                else if (q.type == "label") {
	                    return React.createElement(Label_1.default, __assign({}, q));
	                }
	                else if (q.type == "group" || q.type == "assessment-factor-group") {
	                    return _this.reRecursiveRender(q.questions);
	                }
	                else if (q.type == "number" || q.type == "text") {
	                    return React.createElement(CustomInput_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted});
	                }
	                else if (q.type == "date") {
	                    return React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this)});
	                }
	            });
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.questionsAlreadySubmitted = function (q) {
	        var shouldInclude = !q.required;
	        if (shouldInclude && this.props.questions && this.props.questions.extra_params && this.props.questions.extra_params.answered_questions) {
	            var i = 0, j = 0;
	            var qs = this.props.questions.extra_params.answered_questions;
	            for (i = 0; i < qs.length; i++) {
	                var iqs = qs[i];
	                for (j = 0; j < iqs.length; j++) {
	                    if (iqs[j] == q.id) {
	                        console.log(" q.id: " + q.id);
	                        return true;
	                    }
	                }
	            }
	        }
	        return false;
	    };
	    ;
	    Main.prototype.checkIfRemaingQuestionsAreLabels = function (qs, startIndex) {
	        var onlyLabelsPresent = startIndex < qs.length;
	        var i = 0;
	        for (i = startIndex; (i < qs.length && onlyLabelsPresent); i++) {
	            onlyLabelsPresent = onlyLabelsPresent && qs[i].type == "label";
	        }
	        return onlyLabelsPresent;
	    };
	    ;
	    Main.prototype.insertRemainingQuestionLabels = function (qs, startIndex, actualQuestionLists, questionsList) {
	        var i = 0;
	        for (i = startIndex; i < qs.length; i++) {
	            var q = qs[i];
	            actualQuestionLists.push(q);
	            questionsList.push(React.createElement(Label_1.default, __assign({}, q)));
	        }
	    };
	    Main.prototype.reRecursiveGetQuestions1 = function (data, questionsList, preQ, actualQuestionLists, isPrefixGroup, isPrefixGroupCounter, wasPrefixInsideGroup) {
	        questionsList.isQuestionsList = false;
	        var currentIsPrefixGroup = false;
	        if (!underscore_1.isEmpty(data)) {
	            var boundaryReached = false;
	            for (var i = 0; i < (data.length); i++) {
	                var qe = data[i];
	                var q = qe;
	                q.key = q.id;
	                if ((q.answerState == "valid" || this.questionsAlreadySubmitted(q)) && q.answerState != "invalid" && q.answerState != "missing") {
	                    if (q.hasReflexive) {
	                        if (q.questions) {
	                            var reflexsiveQuestionList = this.reRecursiveGetQuestions1(q.questions, questionsList, preQ, actualQuestionLists, currentIsPrefixGroup, isPrefixGroupCounter + 1);
	                            if (reflexsiveQuestionList.length > 0) {
	                                questionsList.groupHeader = questionsList.groupHeader || [];
	                                questionsList.groupHeader.push(q.caption);
	                                if (isPrefixGroup && isPrefixGroupCounter == 0) {
	                                    questionsList.prefixOfGroupForLabelGroup = "";
	                                }
	                                return reflexsiveQuestionList;
	                            }
	                            else {
	                                continue;
	                            }
	                        }
	                    }
	                    continue;
	                }
	                if (preQ && preQ.hasReflexive) {
	                    if (questionsList.length > 0) {
	                        this.actualQuestionLists = actualQuestionLists;
	                        boundaryReached = true;
	                        if (this.checkIfRemaingQuestionsAreLabels(data, i + 1)) {
	                            this.insertRemainingQuestionLabels(data, i + 1, questionsList, actualQuestionLists);
	                        }
	                        return questionsList;
	                    }
	                }
	                var isPrefixInsideGroup = false;
	                if (q.type == "group") {
	                    if (actualQuestionLists.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var j = 0; j < questionsList.length; j++) {
	                            if (questionsList[j].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    questionsList.groupHeader = questionsList.groupHeader || [];
	                    questionsList.groupHeader.push(q.caption);
	                }
	                else {
	                    if (isPrefixGroup && isPrefixGroupCounter == 0) {
	                    }
	                    else {
	                        if (wasPrefixInsideGroup || q.type == "assessment-factor-group" || q.type == "struct") {
	                        }
	                        else {
	                            questionsList.prefixOfGroupForLabelGroup = "";
	                        }
	                    }
	                }
	                if (q.type == "singleselection") {
	                    preQ = q;
	                    if (isPrefixGroup && isPrefixGroupCounter == 0) {
	                    }
	                    if (q.options.length == 2) {
	                        questionsList.push(React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, submittingQuestions: this.state.submittingQuestions}));
	                        actualQuestionLists.push(q);
	                    }
	                    else {
	                        questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                }
	                else if (q.type == "multiselection") {
	                    questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, multi: true, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "label") {
	                    preQ = q;
	                    actualQuestionLists.push(q);
	                    questionsList.push(React.createElement(Label_1.default, __assign({}, q)));
	                }
	                else if (q.type == "list") {
	                    var qL = q.questions;
	                    if (q.prototype && q.prototype.elements) {
	                        if (!q.answer) {
	                            q.answer = [q.prototype];
	                        }
	                        questionsList.siblingAnswers = q.answer;
	                        qL = q.answer[0].elements;
	                    }
	                    else {
	                        qL = [];
	                    }
	                    for (var ii = 0; ii < qL.length; ii++) {
	                        questionsList.push(this.getQuestionComponent(qL[ii]));
	                        actualQuestionLists.push(qL[ii]);
	                    }
	                    this.actualQuestionLists = actualQuestionLists;
	                    questionsList.isQuestionsList = true;
	                    return questionsList;
	                }
	                else if (q.type == "group" || q.type == "assessment-factor-group") {
	                    if (questionsList.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var ij = 0; ij < questionsList.length; ij++) {
	                            if (questionsList[ij].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    if (q.tags && q.tags.SubgroupRendering) {
	                        currentIsPrefixGroup = true;
	                        isPrefixGroupCounter = -1;
	                        questionsList.prefixOfGroupForLabelGroup = q.caption;
	                    }
	                    var qL = q.questions;
	                    var questionsFromGroup = this.reRecursiveGetQuestions1(qL, questionsList, preQ, actualQuestionLists, currentIsPrefixGroup, isPrefixGroupCounter + 1, isPrefixInsideGroup);
	                    if (questionsFromGroup.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var ik = 0; ik < questionsFromGroup.length; ik++) {
	                            if (questionsFromGroup[ik].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            return questionsFromGroup;
	                        }
	                        else {
	                        }
	                        if (isPrefixGroup && isPrefixGroupCounter == 0) {
	                        }
	                        else {
	                            if (wasPrefixInsideGroup) {
	                            }
	                            else {
	                                questionsList.prefixOfGroupForLabelGroup = "";
	                            }
	                        }
	                    }
	                    else {
	                        if (q.tags && q.tags.SubgroupRendering && isPrefixGroupCounter == -1) {
	                            questionsList.prefixOfGroupForLabelGroup = "";
	                        }
	                    }
	                }
	                else if (q.type == "struct") {
	                    if (questionsList.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var il = 0; il < questionsList.length; il++) {
	                            if (questionsList[il].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    var questionsFromGroup = this.reRecursiveGetQuestions1(q.elements, questionsList, preQ, actualQuestionLists, currentIsPrefixGroup, isPrefixGroupCounter + 1);
	                    if (questionsFromGroup.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var im = 0; im < questionsFromGroup.length; im++) {
	                            if (questionsFromGroup[im].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            questionsFromGroup.questionStructCaption = q.caption;
	                            return questionsFromGroup;
	                        }
	                        else {
	                        }
	                        if (isPrefixGroup && isPrefixGroupCounter == 0) {
	                        }
	                        else {
	                            if (wasPrefixInsideGroup) {
	                            }
	                            else {
	                                questionsList.prefixOfGroupForLabelGroup = "";
	                            }
	                        }
	                    }
	                }
	                else if (q.type == "number" || q.type == "text") {
	                    preQ = q;
	                    questionsList.push(React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "date") {
	                    preQ = q;
	                    questionsList.push(React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "assessment-factor-search") {
	                    questionsList.push(React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	            }
	            ;
	            this.actualQuestionLists = actualQuestionLists;
	            return questionsList;
	        }
	        else {
	            this.actualQuestionLists = actualQuestionLists;
	            return questionsList;
	        }
	    };
	    Main.prototype.getReflexiveQuestionForAnsweredQuestions = function () {
	        var previousIds = this.props.questions.extra_params.answered_questions[this.state.previousQuestionHanldingIndex];
	        var reflexiveQuestion = null;
	        for (var i = 0; i < previousIds.length; i++) {
	            var q = this.findQuestionById(this.questions.data.questionnaire.questions, previousIds[i]);
	            if (q.hasReflexive) {
	                reflexiveQuestion = q;
	            }
	        }
	        return reflexiveQuestion;
	    };
	    Main.prototype.recursiveGetQuestionsForSource = function (questionsSource) {
	        if (!underscore_1.isEmpty(questionsSource) && !underscore_1.isEmpty(questionsSource.questions)) {
	            if (questionsSource.questions) {
	                var preQ = null;
	                var questionsList = [];
	                questionsList.isQuestionsList = false;
	                var actualQuestionLists = [];
	                var boundaryReached = false;
	                for (var i = 0; i < (questionsSource.questions.length); i++) {
	                    var qe = questionsSource.questions[i];
	                    if (qe.type == "group") {
	                        questionsList.groupHeader = [];
	                        questionsList.groupHeader.push(qe.caption);
	                    }
	                    var q = qe;
	                    q.key = q.id;
	                    if ((q.answerState == "valid" || this.questionsAlreadySubmitted(q)) && q.answerState != "invalid" && q.answerState != "missing") {
	                        if (q.hasReflexive) {
	                            if (q.questions) {
	                                var reflexsiveQuestionList = this.reRecursiveGetQuestions1(q.questions, questionsList, preQ, actualQuestionLists);
	                                if (reflexsiveQuestionList.length > 0) {
	                                    questionsList.groupHeader = questionsList.groupHeader || [];
	                                    questionsList.groupHeader.push(qe.caption);
	                                    return reflexsiveQuestionList;
	                                }
	                                else {
	                                    continue;
	                                }
	                            }
	                        }
	                        continue;
	                    }
	                    if (preQ && preQ.hasReflexive) {
	                        boundaryReached = true;
	                        if (questionsList.length > 0) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    if (q.type == "singleselection") {
	                        if (q.options.length == 2) {
	                            questionsList.push(React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                            actualQuestionLists.push(q);
	                        }
	                        else {
	                            questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                            actualQuestionLists.push(q);
	                        }
	                    }
	                    else if (q.type == "multiselection") {
	                        questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, multi: true}));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "label") {
	                        questionsList.push(React.createElement(Label_1.default, __assign({}, q)));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "list") {
	                        var qL = q.questions;
	                        if (q.prototype && q.prototype.elements) {
	                            if (!q.answer) {
	                                q.answer = [q.prototype];
	                            }
	                            questionsList.siblingAnswers = q.answer;
	                            qL = q.answer[0].elements;
	                        }
	                        else {
	                            qL = [];
	                        }
	                        for (var ia = 0; ia < qL.length; ia++) {
	                            questionsList.push(this.getQuestionComponent(qL[ia]));
	                            actualQuestionLists.push(qL[ia]);
	                        }
	                        this.actualQuestionLists = actualQuestionLists;
	                        questionsList.isQuestionsList = true;
	                        return questionsList;
	                    }
	                    else if (q.type == "group" || q.type == "assessment-factor-group") {
	                        if (questionsList.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var ib = 0; ib < questionsList.length; ib++) {
	                                if (questionsList[ib].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                this.actualQuestionLists = actualQuestionLists;
	                                return questionsList;
	                            }
	                        }
	                        var qL = q.questions;
	                        var questionsFromGroup = this.reRecursiveGetQuestions1(qL, questionsList, preQ, actualQuestionLists);
	                        if (questionsFromGroup.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var ic = 0; ic < questionsFromGroup.length; ic++) {
	                                if (questionsFromGroup[ic].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                return questionsFromGroup;
	                            }
	                            else {
	                                questionsList = questionsFromGroup;
	                            }
	                        }
	                    }
	                    else if (q.type == "struct") {
	                        if (questionsList.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var id = 0; id < questionsList.length; id++) {
	                                if (questionsList[id].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                this.actualQuestionLists = actualQuestionLists;
	                                return questionsList;
	                            }
	                        }
	                        var questionsFromGroup = this.reRecursiveGetQuestions1(q.elements, questionsList, preQ, actualQuestionLists);
	                        if (questionsFromGroup.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var ie = 0; ie < questionsFromGroup.length; ie++) {
	                                if (questionsFromGroup[ie].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                return questionsFromGroup;
	                            }
	                            else {
	                                questionsList = questionsFromGroup;
	                            }
	                        }
	                    }
	                    else if (q.type == "number" || q.type == "text") {
	                        questionsList.push(React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "date") {
	                        questionsList.push(React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "assessment-factor-search") {
	                        questionsList.push(React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    preQ = q;
	                }
	                ;
	                this.actualQuestionLists = actualQuestionLists;
	                return questionsList;
	            }
	            ;
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.recursiveGetQuestions1 = function () {
	        if (!underscore_1.isEmpty(this.questions) && !underscore_1.isEmpty(this.questions.data)) {
	            if (this.questions.data.questionnaire && this.questions.data.questionnaire.questions) {
	                var preQ = null;
	                var questionsList = [];
	                questionsList.isQuestionsList = false;
	                var actualQuestionLists = [];
	                var boundaryReached = false;
	                this.noFoGroupsCompleted = 0;
	                for (var i_1 = 0; i_1 < (this.questions.data.questionnaire.questions.length); i_1++) {
	                    var qe = this.questions.data.questionnaire.questions[i_1];
	                    var isPrefixGroup = false;
	                    if (qe.type == "group") {
	                        questionsList.groupHeader = [];
	                        questionsList.groupHeader.push(qe.caption);
	                        if (qe.tags && qe.tags.SubgroupRendering) {
	                            questionsList.prefixOfGroupForLabelGroup = qe.caption;
	                            isPrefixGroup = true;
	                        }
	                        else {
	                            questionsList.prefixOfGroupForLabelGroup = "";
	                        }
	                    }
	                    this.noFoGroupsCompleted = i_1;
	                    var q = qe;
	                    q.key = q.id;
	                    if ((q.answerState == "valid" || this.questionsAlreadySubmitted(q)) && q.answerState != "invalid" && q.answerState != "missing") {
	                        if (q.hasReflexive) {
	                            if (q.questions) {
	                                var reflexsiveQuestionList = this.reRecursiveGetQuestions1(q.questions, questionsList, preQ, actualQuestionLists, isPrefixGroup, 0);
	                                if (reflexsiveQuestionList.length > 0) {
	                                    questionsList.groupHeader = questionsList.groupHeader || [];
	                                    questionsList.groupHeader.push(qe.caption);
	                                    return reflexsiveQuestionList;
	                                }
	                                else {
	                                    continue;
	                                }
	                            }
	                        }
	                        continue;
	                    }
	                    if (preQ && preQ.hasReflexive) {
	                        boundaryReached = true;
	                        if (questionsList.length > 0) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    if (q.type == "singleselection") {
	                        if (q.options.length == 2) {
	                            questionsList.push(React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, submittingQuestions: this.state.submittingQuestions}));
	                            actualQuestionLists.push(q);
	                        }
	                        else {
	                            questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                            actualQuestionLists.push(q);
	                        }
	                    }
	                    else if (q.type == "multiselection") {
	                        questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, multi: true}));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "label") {
	                        actualQuestionLists.push(q);
	                        questionsList.push(React.createElement(Label_1.default, __assign({}, q)));
	                    }
	                    else if (q.type == "list") {
	                        var qL = q.questions;
	                        if (q.prototype && q.prototype.elements) {
	                            if (!q.answer) {
	                                q.answer = [q.prototype];
	                            }
	                            questionsList.siblingAnswers = q.answer;
	                            qL = q.answer[0].elements;
	                        }
	                        else {
	                            qL = [];
	                        }
	                        for (var i = 0; i_1 < qL.length; i_1++) {
	                            questionsList.push(this.getQuestionComponent(qL[i_1]));
	                            actualQuestionLists.push(qL[i_1]);
	                        }
	                        this.actualQuestionLists = actualQuestionLists;
	                        questionsList.isQuestionsList = true;
	                        return questionsList;
	                    }
	                    else if (q.type == "group" || q.type == "assessment-factor-group") {
	                        if (questionsList.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var iq = 0; iq < questionsList.length; iq++) {
	                                if (questionsList[iq].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                this.actualQuestionLists = actualQuestionLists;
	                                return questionsList;
	                            }
	                        }
	                        var qL = q.questions;
	                        if (q.caption.toLowerCase() == "beneficiaries" && !this.allBeneficiaryQuestionsAreValid(qL)) {
	                            questionsList.isQuestionsBeneficiaries = true;
	                            actualQuestionLists.primaryBeneficiariesMainQuestion = qL[0];
	                            actualQuestionLists.contingencyBeneficiariesMainQuestion = qL[1];
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                        if (q.caption.toLowerCase() != "beneficiaries") {
	                            var questionsFromGroup = this.reRecursiveGetQuestions1(qL, questionsList, preQ, actualQuestionLists, isPrefixGroup, 0);
	                            if (questionsFromGroup.length > 0) {
	                                var allQuestionsAreLabels = true;
	                                for (var labelCounter = 0; labelCounter < questionsFromGroup.length; labelCounter++) {
	                                    if (questionsFromGroup[labelCounter].props.type != "label") {
	                                        allQuestionsAreLabels = false;
	                                    }
	                                }
	                                if (!allQuestionsAreLabels) {
	                                    return questionsFromGroup;
	                                }
	                                else {
	                                    questionsList = questionsFromGroup;
	                                }
	                            }
	                        }
	                    }
	                    else if (q.type == "struct") {
	                        if (questionsList.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var iw = 0; iw < questionsList.length; iw++) {
	                                if (questionsList[iw].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                this.actualQuestionLists = actualQuestionLists;
	                                return questionsList;
	                            }
	                        }
	                        var questionsFromGroup = this.reRecursiveGetQuestions1(q.elements, questionsList, preQ, actualQuestionLists, isPrefixGroup, 0);
	                        if (questionsFromGroup.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var ie = 0; ie < questionsFromGroup.length; ie++) {
	                                if (questionsFromGroup[ie].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                questionsFromGroup.questionStructCaption = q.caption;
	                                return questionsFromGroup;
	                            }
	                            else {
	                                questionsList = questionsFromGroup;
	                            }
	                        }
	                    }
	                    else if (q.type == "number" || q.type == "text") {
	                        questionsList.push(React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "date") {
	                        questionsList.push(React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "assessment-factor-search") {
	                        questionsList.push(React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    preQ = q;
	                }
	                ;
	            }
	            ;
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.allBeneficiaryQuestionsAreValid = function (beneficiaryQuestions) {
	        var allQuestionsValid = beneficiaryQuestions[0] && beneficiaryQuestions[0].questions && beneficiaryQuestions[0].questions.length > 0;
	        if (!allQuestionsValid) {
	            return false;
	        }
	        if (beneficiaryQuestions) {
	            if (beneficiaryQuestions[1] &&
	                beneficiaryQuestions[1].questions &&
	                beneficiaryQuestions[1].questions.length > 0) {
	                var questions = beneficiaryQuestions[1].questions;
	                for (var i = 0; i < questions.length; i++) {
	                    var qs = questions[i].questions;
	                    for (var j = 0; j < qs.length; j++) {
	                        if ((qs[j].answerState == "valid" || this.questionsAlreadySubmitted(qs[j])) && qs[j].answerState != "invalid" && qs[j].answerState != "missing") {
	                        }
	                        else {
	                            allQuestionsValid = false;
	                        }
	                    }
	                }
	            }
	            if (beneficiaryQuestions[0] &&
	                beneficiaryQuestions[0].questions &&
	                beneficiaryQuestions[0].questions.length > 0) {
	                var questions = beneficiaryQuestions[0].questions;
	                for (var i = 0; i < questions.length; i++) {
	                    var qs = questions[i].questions;
	                    for (var j = 0; j < qs.length; j++) {
	                        if ((qs[j].answerState == "valid" || this.questionsAlreadySubmitted(qs[j])) && qs[j].answerState != "invalid" && qs[j].answerState != "missing") {
	                        }
	                        else {
	                            allQuestionsValid = false;
	                        }
	                    }
	                }
	            }
	        }
	        return allQuestionsValid;
	    };
	    Main.prototype.getQuestions = function (lastAnsweredQuestion) {
	        if (lastAnsweredQuestion) {
	        }
	        else {
	            return this.recursiveGetQuestions1();
	        }
	    };
	    Main.prototype.validateTextField = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            var isValid = true;
	            if (constraints.required) {
	                if (constraints.pattern) {
	                    if (q.answer) {
	                        return new RegExp(q.constraints.pattern).test(q.answer);
	                    }
	                    else {
	                        return false;
	                    }
	                }
	                return q.answer && String(q.answer).length > 0;
	            }
	            else {
	                if (q.answer && String(q.answer).length > 0) {
	                    if (constraints.pattern) {
	                        if (q.answer) {
	                            return new RegExp(q.constraints.pattern).test(q.answer);
	                        }
	                        else {
	                            return false;
	                        }
	                    }
	                    else {
	                        return true;
	                    }
	                }
	                else {
	                    delete q.answer;
	                    return true;
	                }
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateSingleSelection = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            if (constraints.required) {
	                return q.answer && q.answer.id && q.answer.id.length > 0;
	            }
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateCustomDatePicker = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            var isValid = true;
	            if (constraints.required) {
	                if (q.answer) {
	                    if (constraints.minValue) {
	                        return constraints.minValue <= q.answer;
	                    }
	                    else {
	                        return q.answer;
	                    }
	                }
	                return false;
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateMultiSelection = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            if (constraints.required) {
	                return q.answer && q.answer.length > 0;
	            }
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateAssessmentFactorSearch = function (q) {
	        return q && q.answer && q.answer.length > 0;
	    };
	    Main.prototype.onQuestionSubmit = function (notAddingOrDeletingBeneficiary, noOfBeneficiaryDeleted) {
	        var _this = this;
	        var answered_questions = [];
	        var allQuestionsValid = true;
	        if (!notAddingOrDeletingBeneficiary) {
	            this.setState({
	                alreadyOnceSubmitted: true
	            });
	        }
	        underscore_1.each(this.actualQuestionLists, function (q) {
	            answered_questions.push(q.id);
	            if (q.type == "text") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	            }
	            else if (q.type == "number") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	            }
	            else if (q.type == "singleselection") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateSingleSelection(q);
	            }
	            else if (q.type == "multiselection") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateMultiSelection(q);
	            }
	            else if (q.type == "date") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateCustomDatePicker(q);
	            }
	            else if (q.type == "assessment-factor-search") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateAssessmentFactorSearch(q);
	            }
	        });
	        if (this.questionComponents && this.questionComponents.isQuestionsList) {
	            for (var i = 0; i < this.questionComponents.siblingAnswers.length; i++) {
	                var answers = this.questionComponents.siblingAnswers[i].elements;
	                underscore_1.each(answers, function (q) {
	                    answered_questions.push(q.id);
	                    if (q.type == "text") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                    }
	                    else if (q.type == "number") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                    }
	                    else if (q.type == "singleselection") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateSingleSelection(q);
	                    }
	                    else if (q.type == "multiselection") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateMultiSelection(q);
	                    }
	                    else if (q.type == "date") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateCustomDatePicker(q);
	                    }
	                    else if (q.type == "assessment-factor-search") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateAssessmentFactorSearch(q);
	                    }
	                });
	            }
	        }
	        if (this.questionComponents && this.questionComponents.isQuestionsBeneficiaries && !notAddingOrDeletingBeneficiary) {
	            if (this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions) {
	                for (var i = 0; i < this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions.length; i++) {
	                    var answers = this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions[i].questions;
	                    underscore_1.each(answers, function (q) {
	                        answered_questions.push(q.id);
	                        if (q.type == "text") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                        }
	                        else if (q.type == "number") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                        }
	                        else if (q.type == "singleselection") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateSingleSelection(q);
	                        }
	                        else if (q.type == "multiselection") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateMultiSelection(q);
	                        }
	                        else if (q.type == "date") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateCustomDatePicker(q);
	                        }
	                        else if (q.type == "assessment-factor-search") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateAssessmentFactorSearch(q);
	                        }
	                    });
	                }
	                this.setState({
	                    addAtleastOnePrimaryBeneficiaryError: false
	                });
	            }
	            else {
	                allQuestionsValid = false;
	                this.setState({
	                    addAtleastOnePrimaryBeneficiaryError: true
	                });
	                document.querySelectorAll(".Add-a-Primary-Benefi")[0].scrollIntoView();
	                return;
	            }
	            if (this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions) {
	                for (var i = 0; i < this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions.length; i++) {
	                    var answers = this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions[i].questions;
	                    underscore_1.each(answers, function (q) {
	                        answered_questions.push(q.id);
	                        if (q.type == "text") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                        }
	                        else if (q.type == "number") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                        }
	                        else if (q.type == "singleselection") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateSingleSelection(q);
	                        }
	                        else if (q.type == "multiselection") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateMultiSelection(q);
	                        }
	                        else if (q.type == "date") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateCustomDatePicker(q);
	                        }
	                        else if (q.type == "assessment-factor-search") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateAssessmentFactorSearch(q);
	                        }
	                    });
	                }
	            }
	        }
	        if (allQuestionsValid) {
	            this.setState({
	                submittingQuestions: true
	            });
	            var data = {
	                questions: this.questions,
	                answered_questions: answered_questions
	            };
	            if (this.previousQuestionsSource && this.previousQuestionsSource.questions && this.previousQuestionsSource.questions.length > 0) {
	                data.current_index = this.previousQuestionHanldingIndexInstance;
	            }
	            this.setState({
	                alreadyOnceSubmitted: false
	            });
	            this.props.postQuestions(data).then(function () {
	                if (_this.addingPrimaryBeneficiary == true || _this.addingContingencyBeneficiary == true) {
	                    _this.donotScrollBeneficaryError = true;
	                }
	                if (_this.addingPrimaryBeneficiary == true) {
	                    _this.addingPrimaryBeneficiaryFlag = true;
	                    _this.setState({
	                        addAtleastOnePrimaryBeneficiaryError: false
	                    });
	                }
	                if (_this.addingContingencyBeneficiary == true) {
	                    _this.addingContingencyBeneficiaryFlag = true;
	                }
	                _this.addingPrimaryBeneficiary = false;
	                _this.addingContingencyBeneficiary = false;
	                _this.setState({
	                    alreadyOnceSubmitted: false,
	                    submittingQuestions: false,
	                    addingPrimaryBeneficiary: false,
	                    addingContingencyBeneficiary: false,
	                    singleselectionQuestionsSubmitting: false,
	                    deletingContingencyBeneficiary: false,
	                    deletingPrimaryBeneficiary: false
	                }, function () {
	                    _this.scrollIntoBeneficiaryView();
	                    if (_this.questions && _this.questions.LOGIN_URL && _this.questions.LOGIN_URL.length > 0) {
	                        window.location.href = _this.questions.LOGIN_URL;
	                        return;
	                    }
	                    if (_this.questions && _this.questions.redirect_url && _this.questions.redirect_url.length > 0) {
	                        _this.setState({
	                            submittingQuestions: true,
	                            gettingQuestions: true
	                        });
	                        window.location.href = _this.questions.redirect_url;
	                        return;
	                    }
	                    if (_this.questions && _this.questions.instant_id_check && _this.questions.instant_id_check.status == false) {
	                        _this.setState({
	                            showInstantIdCheckPopup: true,
	                            instantIdCheckData: _this.questions.instant_id_check
	                        });
	                    }
	                    ;
	                    _this.setState({
	                        singleselectionQuestionsSubmitting: false,
	                    });
	                    if (noOfBeneficiaryDeleted || noOfBeneficiaryDeleted == 0) {
	                        _this.setState((_a = {},
	                            _a["deletingContingencyBeneficiary_" + noOfBeneficiaryDeleted] = false,
	                            _a["deletingPrimaryBeneficiary_" + noOfBeneficiaryDeleted] = false,
	                            _a
	                        ));
	                    }
	                    var queryParams = _this.props.location.query;
	                    var queryParamsString = "?";
	                    for (var k in queryParams) {
	                        if (queryParams[k]) {
	                            queryParamsString += k + "=" + queryParams[k] + "&";
	                        }
	                        else {
	                            queryParamsString += k + "&";
	                        }
	                    }
	                    queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                    if (_this.questions && _this.questions.status == false) {
	                        react_router_1.browserHistory.push("/error" + queryParamsString);
	                        return;
	                    }
	                    if (_this.questions.valid_user == 0) {
	                        react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                        return;
	                    }
	                    if (_this.questions && _this.questions.LOGIN_URL && _this.questions.LOGIN_URL.length > 0) {
	                        window.location.href = _this.questions.LOGIN_URL;
	                        return;
	                    }
	                    if (_this.questions && _this.questions.redirect_url && _this.questions.redirect_url.length > 0) {
	                        window.location.href = _this.questions.redirect_url;
	                        return;
	                    }
	                    if (_this.questions.application_complete_status == true || _this.questions.application_complete_status == "true") {
	                        if (_this.questions.application_confirm_status == 1) {
	                            react_router_1.browserHistory.push("/signature" + queryParamsString);
	                        }
	                        else {
	                            react_router_1.browserHistory.push("/all-questions" + queryParamsString);
	                        }
	                        return;
	                    }
	                    if (_this.state.previousQuestionHanldingIndex || _this.state.previousQuestionHanldingIndex == 0) {
	                        if (_this.props.questions && _this.props.questions.extra_params &&
	                            _this.props.questions.extra_params.answered_questions &&
	                            _this.props.questions.extra_params.answered_questions.length > 0) {
	                            if (_this.props.questions.extra_params.answered_questions.length - 1 == _this.state.previousQuestionHanldingIndex) {
	                                var reflexiveQuestion = _this.getReflexiveQuestionForAnsweredQuestions();
	                                var questionsForReflexiveQuestions = _this.recursiveGetQuestionsForSource(reflexiveQuestion);
	                                _this.setState({
	                                    previousQuestionHanldingIndex: null,
	                                    previousQuestionIds: null
	                                });
	                            }
	                            else {
	                                var incrementCounter = 1;
	                                if (_this.previousQuestionsSource && _this.previousQuestionsSource.questions && _this.previousQuestionsSource.questions.length > 0) {
	                                    _this.previousQuestionsSource = null;
	                                    incrementCounter = 1;
	                                }
	                                var reflexiveQuestion = _this.getReflexiveQuestionForAnsweredQuestions();
	                                var questionsForReflexiveQuestions = _this.recursiveGetQuestionsForSource(reflexiveQuestion);
	                                _this.previousQuestionHanldingIndexInstance = _this.state.previousQuestionHanldingIndex + incrementCounter;
	                                if (questionsForReflexiveQuestions && questionsForReflexiveQuestions.length > 0) {
	                                    _this.previousQuestionsSource = reflexiveQuestion;
	                                    _this.setState({
	                                        previousQuestionHanldingIndex: _this.state.previousQuestionHanldingIndex + incrementCounter,
	                                    }, function () {
	                                        _this.setState({
	                                            previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                                        });
	                                    });
	                                }
	                                else {
	                                    _this.setState({
	                                        previousQuestionHanldingIndex: _this.state.previousQuestionHanldingIndex + incrementCounter,
	                                    }, function () {
	                                        _this.setState({
	                                            previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                                        });
	                                    });
	                                }
	                            }
	                        }
	                    }
	                    var _a;
	                });
	            }).catch(function () {
	                console.log(_this.props.questions);
	            });
	        }
	    };
	    Main.prototype.findQuestionById = function (actualQuestions, questionId, isPrefixGroup, isPrefixGroupCounter) {
	        if (!underscore_1.isEmpty(actualQuestions)) {
	            var targetQuestion = {};
	            var currentIsPrefixGroup = false;
	            for (var i = 0; i < (actualQuestions.length); i++) {
	                currentIsPrefixGroup = false;
	                var qe = actualQuestions[i];
	                var q = qe;
	                q.key = q.id;
	                if (isPrefixGroup && isPrefixGroupCounter == 0) {
	                }
	                else {
	                    if (!this.gotQuestionsFromPrefixGroupWhileBack || this.previousQuestionIdForPrefixGroup != questionId) {
	                    }
	                }
	                if (q.id == questionId) {
	                    if (isPrefixGroup && isPrefixGroupCounter == 0) {
	                        this.gotQuestionsFromPrefixGroupWhileBack = true;
	                        this.previousQuestionIdForPrefixGroup = questionId;
	                    }
	                    if (qe.type != "group" && isPrefixGroupCounter == 1) {
	                        this.previousQuestionsPrefixOfGroupForLabelGroup = "";
	                    }
	                    else if (isPrefixGroupCounter > 1 && isPrefixGroupCounter < 10) {
	                        this.previousQuestionsPrefixOfGroupForLabelGroup = "";
	                    }
	                    return q;
	                }
	                if (qe.type == "group" || qe.type == "assessment-factor-group" || qe.hasReflexive) {
	                    if (q.tags && q.tags.SubgroupRendering) {
	                        currentIsPrefixGroup = true;
	                        isPrefixGroupCounter = -1;
	                        this.previousQuestionsPrefixOfGroupForLabelGroup = qe.caption;
	                    }
	                    else {
	                    }
	                    targetQuestion = this.findQuestionById(q.questions, questionId, currentIsPrefixGroup, isPrefixGroupCounter + 1);
	                    if (!underscore_1.isEmpty(targetQuestion)) {
	                    }
	                    else {
	                        if (q.tags && q.tags.SubgroupRendering && isPrefixGroupCounter == -1) {
	                            this.previousQuestionsPrefixOfGroupForLabelGroup = "";
	                        }
	                    }
	                }
	                if (qe.type == "list" && q.answer && q.answer[0].elements) {
	                    targetQuestion = this.findQuestionById(q.answer[0].elements, questionId, false, 10);
	                }
	                if (qe.type == "struct") {
	                    targetQuestion = this.findQuestionById(q.elements, questionId, false, 10);
	                    if (!underscore_1.isEmpty(targetQuestion)) {
	                        this.previousQuestionStructCaption = qe.caption;
	                    }
	                }
	                if (!underscore_1.isEmpty(targetQuestion)) {
	                    return targetQuestion;
	                }
	            }
	            return {};
	        }
	        else {
	            return {};
	        }
	    };
	    Main.prototype.getQuestionComponent = function (q) {
	        var qComponent = {};
	        if (q.type == "singleselection") {
	            if (q.options.length == 2) {
	                qComponent = React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++, submittingQuestions: this.state.submittingQuestions});
	            }
	            else {
	                qComponent = React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	            }
	        }
	        else if (q.type == "multiselection") {
	            qComponent = React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, multi: true, counter: this.counter++});
	        }
	        else if (q.type == "label") {
	            qComponent = React.createElement(Label_1.default, __assign({}, q));
	        }
	        else if (q.type == "number" || q.type == "text") {
	            qComponent = React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	        }
	        else if (q.type == "date") {
	            qComponent = React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	        }
	        else if (q.type == "assessment-factor-search") {
	            qComponent = React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id});
	        }
	        return qComponent;
	    };
	    Main.prototype.previousQuestionsIdsContainsBeneficiaries = function (previousQuestionIds) {
	        var primarybeneficiaryRegex = /primarybeneficiary/i;
	        var contingentbeneficiaryRegex = /contingentbeneficiary/i;
	        for (var i = 0; i < previousQuestionIds.length; i++) {
	            if (primarybeneficiaryRegex.test(previousQuestionIds[i]) || contingentbeneficiaryRegex.test(previousQuestionIds[i])) {
	                return true;
	            }
	        }
	    };
	    Main.prototype.getPreviousQuestionComponents = function () {
	        var previousQuestionIds = this.state.previousQuestionIds;
	        var qComps = [];
	        var aQuestions = [];
	        this.previousQuestionsPrefixOfGroupForLabelGroup = "";
	        this.previousQuestionStructCaption = "";
	        if (this.previousQuestionsIdsContainsBeneficiaries(previousQuestionIds)) {
	            var preQ = null;
	            var questionsList = [];
	            questionsList.isQuestionsList = false;
	            var actualQuestionLists = [];
	            this.noFoGroupsCompleted = 0;
	            for (var i = 0; i < (this.questions.data.questionnaire.questions.length); i++) {
	                var qe = this.questions.data.questionnaire.questions[i];
	                var isPrefixGroup = false;
	                if (qe.type == "group") {
	                    questionsList.groupHeader = [];
	                    questionsList.groupHeader.push(qe.caption);
	                }
	                this.noFoGroupsCompleted = i;
	                var q = qe;
	                q.key = q.id;
	                if (q.type == "group" || q.type == "assessment-factor-group") {
	                    var qL = q.questions;
	                    if (q.caption.toLowerCase() == "beneficiaries") {
	                        questionsList.isQuestionsBeneficiaries = true;
	                        actualQuestionLists.primaryBeneficiariesMainQuestion = qL[0];
	                        actualQuestionLists.contingencyBeneficiariesMainQuestion = qL[1];
	                        this.actualQuestionLists = actualQuestionLists;
	                        return questionsList;
	                    }
	                }
	            }
	            ;
	        }
	        if (!underscore_1.isEmpty(this.questions) && !underscore_1.isEmpty(this.questions.data)) {
	            if (this.questions.data.questionnaire && this.questions.data.questionnaire.questions) {
	                for (var i = 0; i < previousQuestionIds.length; i++) {
	                    var question = this.findQuestionById(this.questions.data.questionnaire.questions, previousQuestionIds[i], false, 10);
	                    aQuestions.push(question);
	                    qComps.push(this.getQuestionComponent(question));
	                }
	            }
	        }
	        qComps.questionStructCaption = this.previousQuestionStructCaption;
	        qComps.prefixOfGroupForLabelGroup = this.previousQuestionsPrefixOfGroupForLabelGroup;
	        this.actualQuestionLists = aQuestions;
	        return qComps;
	    };
	    Main.prototype.deleteSibling = function () {
	        if (this.questionComponents.siblingAnswers.length > 1) {
	            this.questionComponents.siblingAnswers.pop();
	            var siblingsCount = this.state.siblingsCount;
	            this.setState({
	                siblingsCount: siblingsCount - 1
	            });
	        }
	    };
	    Main.prototype.addSibling = function () {
	        var siblingsCount = this.state.siblingsCount || 0;
	        if (this.questionComponents.isQuestionsList) {
	            if (this.questionComponents.siblingAnswers) {
	                var a = JSON.parse(JSON.stringify(this.questionComponents.siblingAnswers[0]));
	                this.questionComponents.siblingAnswers.push(a);
	            }
	        }
	        this.setState({
	            siblingsCount: siblingsCount + 1
	        });
	    };
	    ;
	    Main.prototype.getCurrentPageIndex = function (questionId) {
	        var currentPageIndex = -1;
	        var answeredQuestions = [];
	        if (this.props.questions && this.props.questions.extra_params && this.props.questions.extra_params.answered_questions) {
	            answeredQuestions = this.props.questions.extra_params.answered_questions;
	        }
	        var pageQuestionsList = [];
	        for (var i = 0; (i < answeredQuestions.length && currentPageIndex == -1); i++) {
	            pageQuestionsList = answeredQuestions[i];
	            for (var j = 0; (j < pageQuestionsList.length && currentPageIndex == -1); j++) {
	                if (questionId == pageQuestionsList[j]) {
	                    currentPageIndex = i;
	                }
	            }
	        }
	        return currentPageIndex;
	    };
	    Main.prototype.setBeneficiaryQuestionsProperly = function () {
	        var aQuestions = [];
	        var beneficiaryQuestions = [];
	        var qComps;
	        if (this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions) {
	            for (var i = 0; i < this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions.length; i++) {
	                var answers = this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions[i].questions;
	                qComps = [];
	                for (var j = 0; j < answers.length; j++) {
	                    qComps.push(this.getQuestionComponent(answers[j]));
	                }
	                beneficiaryQuestions.push(qComps);
	            }
	        }
	        this.questionComponents.primaryBeneficiaryQuestionsComps = beneficiaryQuestions;
	        beneficiaryQuestions = [];
	        if (this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions) {
	            for (var i = 0; i < this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions.length; i++) {
	                var answers = this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions[i].questions;
	                qComps = [];
	                for (var j = 0; j < answers.length; j++) {
	                    qComps.push(this.getQuestionComponent(answers[j]));
	                }
	                beneficiaryQuestions.push(qComps);
	            }
	        }
	        this.questionComponents.contingencyBeneficiaryQuestionsComps = beneficiaryQuestions;
	    };
	    Main.prototype.getCurrentSetOfQuestions = function () {
	        if (this.state.previousQuestionIds && this.state.previousQuestionIds.length > 0) {
	            if (this.previousQuestionsSource && this.previousQuestionsSource && this.previousQuestionsSource.questions.length > 0) {
	                this.questionComponents = this.recursiveGetQuestionsForSource(this.previousQuestionsSource);
	            }
	            else {
	                this.questionComponents = this.getPreviousQuestionComponents();
	            }
	            if (this.questionComponents && this.questionComponents.isQuestionsBeneficiaries) {
	                this.setBeneficiaryQuestionsProperly();
	            }
	            if (this.questionComponents && this.questionComponents.isQuestionsList) {
	            }
	            return this.questionComponents;
	        }
	        if (this.props.location.query && (this.props.location.query.fromEditablePage == true || this.props.location.query.fromEditablePage == "true")) {
	            var questionIdFromQuery = this.props.location.query.questionId;
	            var currentPageIndex = this.getCurrentPageIndex(this.props.location.query.questionId);
	            if (currentPageIndex >= 0) {
	                this.setState({
	                    previousQuestionIds: this.props.questions.extra_params.answered_questions[currentPageIndex]
	                });
	                return;
	            }
	        }
	        if (this.questions) {
	            this.questionComponents = this.getQuestions(null);
	            if (this.questionComponents && this.questionComponents.isQuestionsList) {
	                var aQuestions = [];
	                var siblingComponents = [];
	                var qComps;
	                for (var i = 0; i < this.questionComponents.siblingAnswers.length; i++) {
	                    var answers = this.questionComponents.siblingAnswers[i].elements;
	                    qComps = [];
	                    for (var j = 0; j < answers.length; j++) {
	                        qComps.push(this.getQuestionComponent(answers[j]));
	                    }
	                    siblingComponents.push(qComps);
	                }
	                this.questionComponents.siblingComponents = siblingComponents;
	            }
	            if (this.questionComponents && this.questionComponents.isQuestionsBeneficiaries) {
	                this.setBeneficiaryQuestionsProperly();
	            }
	            return this.questionComponents;
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.getBreadCrumbs = function () {
	        var breadCrumbs = [];
	        var questions = this.props.questions;
	        var questionsList = (questions && questions.data && questions.data.questionnaire &&
	            questions.data.questionnaire.questions) || [];
	        if (questionsList) {
	            for (var i = 0; i < questionsList.length; i++) {
	                if (questionsList[i].type == "group") {
	                    breadCrumbs.push(questionsList[i].caption);
	                }
	            }
	        }
	        return breadCrumbs;
	    };
	    Main.prototype.emptyCurrentQuestions = function () {
	        underscore_1.each(this.actualQuestionLists, function (q) {
	            delete q.answer;
	        });
	    };
	    Main.prototype.handleBackSubmit = function () {
	        var _this = this;
	        console.log("sdfds");
	        this.questionsListUsing;
	        this.previousQuestionsSource = null;
	        if (this.state.previousQuestionsHandling)
	            return;
	        if (this.state.previousQuestionHanldingIndex == undefined) {
	            this.emptyCurrentQuestions();
	        }
	        if (this.props.questions && this.props.questions.extra_params &&
	            this.props.questions.extra_params.answered_questions &&
	            this.props.questions.extra_params.answered_questions.length > 0) {
	            if (this.state.previousQuestionHanldingIndex != 0) {
	                if (this.state.previousQuestionHanldingIndex) {
	                    this.setState({
	                        previousQuestionHanldingIndex: this.state.previousQuestionHanldingIndex - 1,
	                        previousQuestionsHandling: true
	                    }, function () {
	                        _this.setState({
	                            previousQuestionsHandling: false,
	                            previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                        });
	                    });
	                }
	                else {
	                    this.setState({
	                        previousQuestionHanldingIndex: this.props.questions.extra_params.answered_questions.length - 1,
	                        previousQuestionsHandling: true
	                    }, function () {
	                        _this.setState({
	                            previousQuestionsHandling: false,
	                            previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                        });
	                    });
	                }
	            }
	            else if (this.state.previousQuestionHanldingIndex == 0) {
	                this.setState({
	                    previousQuestionsHandling: true
	                }, function () {
	                    _this.setState({
	                        previousQuestionsHandling: false,
	                        previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                    });
	                });
	            }
	        }
	    };
	    Main.prototype.deletePrimaryBeneficiary = function (i) {
	        if (this.questionComponents.primaryBeneficiaryQuestionsComps.length > 0) {
	            this.setState((_a = {},
	                _a["deletingPrimaryBeneficiary_" + i] = this.state["deletingPrimaryBeneficiary_" + i],
	                _a
	            ));
	            this.questionComponents.primaryBeneficiaryQuestionsComps.pop();
	            this.actualQuestionLists.primaryBeneficiariesMainQuestion &&
	                this.actualQuestionLists.primaryBeneficiariesMainQuestion.answer &&
	                this.actualQuestionLists.primaryBeneficiariesMainQuestion.answer.splice(i, 1);
	            this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions.splice(i, 1);
	        }
	        var _a;
	    };
	    Main.prototype.deleteContingencyBeneficiary = function (i) {
	        if (this.questionComponents.contingencyBeneficiaryQuestionsComps.length > 0) {
	            this.setState((_a = {},
	                _a["deletingContingencyBeneficiary_" + i] = this.state["deletingContingencyBeneficiary_" + i],
	                _a
	            ));
	            this.questionComponents.contingencyBeneficiaryQuestionsComps.splice(i, 1);
	            this.actualQuestionLists.contingencyBeneficiariesMainQuestion &&
	                this.actualQuestionLists.contingencyBeneficiariesMainQuestion.answer &&
	                this.actualQuestionLists.contingencyBeneficiariesMainQuestion.answer.splice(i, 1);
	            this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions.splice(i, 1);
	        }
	        var _a;
	    };
	    Main.prototype.isDeletingBeneficiaryGoingOn = function () {
	        var r = false;
	        if (this.questionComponents && this.questionComponents.primaryBeneficiaryQuestionsComps && this.questionComponents.primaryBeneficiaryQuestionsComps.length > 0) {
	            var l = this.questionComponents.primaryBeneficiaryQuestionsComps.length;
	            for (var i = 0; i < l; i++) {
	                r = r || this.state["deletingPrimaryBeneficiary_" + i];
	            }
	        }
	        if (this.questionComponents && this.questionComponents.contingencyBeneficiaryQuestionsComps && this.questionComponents.contingencyBeneficiaryQuestionsComps.length > 0) {
	            var l = this.questionComponents.contingencyBeneficiaryQuestionsComps.length;
	            for (var i = 0; i < l; i++) {
	                r = r || this.state["deletingContingencyBeneficiary_" + i];
	            }
	        }
	        return r;
	    };
	    Main.prototype.isSubmitBtnDisabled = function () {
	        return this.state.addingPrimaryBeneficiary || this.state.addingContingencyBeneficiary ||
	            this.state.submittingQuestions || this.isDeletingBeneficiaryGoingOn();
	    };
	    Main.prototype.addPrimaryBeneficiary = function () {
	        var _this = this;
	        var qs = this.actualQuestionLists.primaryBeneficiariesMainQuestion;
	        var data = {};
	        data.questionId = qs.links[0].params.questionId;
	        data.assessment_factor_url = qs.links[0].href;
	        data.q = "*";
	        var self = this;
	        this.addingPrimaryBeneficiary = true;
	        this.setState({
	            addingPrimaryBeneficiary: true,
	            addingContingencyBeneficiary: false,
	        });
	        self.props.getFactorsearch(data).then(function (response) {
	            if (response && response.questions.LOGIN_URL && response.questions.LOGIN_URL.length > 0) {
	                window.location.href = response.questions.LOGIN_URL;
	                return;
	            }
	            if (response && response.questions.redirect_url && response.questions.redirect_url.length > 0) {
	                window.location.href = response.questions.redirect_url;
	                return;
	            }
	            if (response && response.questions && response.questions.data) {
	                self.beneficiariesIds = self.beneficiariesIds || {};
	                self.beneficiariesIds[qs.id] = response.questions.data;
	                if (qs.answerState == "valid" && qs.questions && qs.questions.length > 0) {
	                    var notFound = false, done = false, rq = {};
	                    var i, foundIndex;
	                    for (i = 0; (i < self.beneficiariesIds[qs.id].length && !done); i++) {
	                        foundIndex = i;
	                        notFound = false;
	                        for (var j = 0; (j < qs.answer.length && !notFound); j++) {
	                            if (qs.answer[j].id == self.beneficiariesIds[qs.id][i].id) {
	                                notFound = true;
	                            }
	                        }
	                        done = !notFound;
	                    }
	                    qs.answer.push(self.beneficiariesIds[qs.id][foundIndex]);
	                }
	                else {
	                    _this.onChangeInput(qs, [self.beneficiariesIds[qs.id][0]]);
	                }
	                _this.onQuestionSubmit(true);
	            }
	        }, function (err) {
	            self.setState({
	                beneficiariesIdsLoaded: self.state.beneficiariesIdsLoaded ? self.state.beneficiariesIdsLoaded++ : 1
	            });
	        });
	    };
	    Main.prototype.closeInstantIdCheckPopup = function () {
	        this.setState({
	            showInstantIdCheckPopup: false
	        });
	    };
	    ;
	    Main.prototype.addContingencyBeneficiary = function () {
	        var _this = this;
	        var qs = this.actualQuestionLists.contingencyBeneficiariesMainQuestion;
	        var data = {};
	        data.questionId = qs.links[0].params.questionId;
	        data.assessment_factor_url = qs.links[0].href;
	        data.q = "*";
	        var self = this;
	        this.addingContingencyBeneficiary = true;
	        this.setState({
	            addingPrimaryBeneficiary: false,
	            addingContingencyBeneficiary: true
	        });
	        self.props.getFactorsearch(data).then(function (response) {
	            if (response && response.questions.LOGIN_URL && response.questions.LOGIN_URL.length > 0) {
	                window.location.href = response.questions.LOGIN_URL;
	                return;
	            }
	            if (response && response.questions.redirect_url && response.questions.redirect_url.length > 0) {
	                window.location.href = response.questions.redirect_url;
	                return;
	            }
	            if (response && response.questions && response.questions.data) {
	                self.beneficiariesIds = self.beneficiariesIds || {};
	                self.beneficiariesIds[qs.id] = response.questions.data;
	                if (qs.answerState == "valid" && qs.questions && qs.questions.length > 0) {
	                    var notFound = false, done = false, rq = {};
	                    var i, foundIndex;
	                    for (i = 0; (i < self.beneficiariesIds[qs.id].length && !done); i++) {
	                        foundIndex = i;
	                        notFound = false;
	                        for (var j = 0; (j < qs.answer.length && !notFound); j++) {
	                            if (qs.answer[j].id == self.beneficiariesIds[qs.id][i].id) {
	                                notFound = true;
	                            }
	                        }
	                        done = !notFound;
	                    }
	                    qs.answer.push(self.beneficiariesIds[qs.id][foundIndex]);
	                }
	                else {
	                    _this.onChangeInput(qs, [self.beneficiariesIds[qs.id][0]]);
	                }
	                _this.onQuestionSubmit(true);
	            }
	        }, function (err) {
	            self.setState({
	                beneficiariesIdsLoaded: self.state.beneficiariesIdsLoaded ? self.state.beneficiariesIdsLoaded++ : 1
	            });
	        });
	    };
	    Main.prototype.shouldShowPreviousBtn = function () {
	        return !(this.actualQuestionLists && this.actualQuestionLists[0] &&
	            this.props.questions && this.props.questions.extra_params && this.props.questions.extra_params.answered_questions && ((this.props.questions.extra_params.answered_questions.length == 0) || (this.props.questions.extra_params.answered_questions[0] && this.props.questions.extra_params.answered_questions[0][0] == this.actualQuestionLists[0].id)));
	    };
	    Main.prototype.scrollIntoBeneficiaryView = function () {
	        var idName;
	        if (this.addingPrimaryBeneficiaryFlag && this.actualQuestionLists && this.actualQuestionLists.primaryBeneficiariesMainQuestion && this.actualQuestionLists.primaryBeneficiariesMainQuestion.answer && this.actualQuestionLists.primaryBeneficiariesMainQuestion.answer.length) {
	            this.addingPrimaryBeneficiaryFlag = false;
	            idName = "primary-beneficiary-container-" + (this.actualQuestionLists.primaryBeneficiariesMainQuestion.answer.length - 1);
	        }
	        if (this.addingContingencyBeneficiaryFlag && this.actualQuestionLists && this.actualQuestionLists.contingencyBeneficiariesMainQuestion && this.actualQuestionLists.contingencyBeneficiariesMainQuestion.answer && this.actualQuestionLists.contingencyBeneficiariesMainQuestion.answer.length) {
	            this.addingContingencyBeneficiaryFlag = false;
	            idName = "contingency-beneficiary-container-" + (this.actualQuestionLists.contingencyBeneficiariesMainQuestion.answer.length - 1);
	        }
	        if (idName) {
	            var elem = document.getElementById(idName);
	            if (elem && elem.scrollIntoView) {
	                elem.scrollIntoView();
	                var first_child = elem.querySelectorAll('.form-control')[0];
	                first_child.focus();
	            }
	            return;
	        }
	        var checkExist = setInterval(function () {
	            var parent_containers = document.getElementById("primary-beneficiary-container-0") || document.getElementById("contingency-beneficiary-container-0");
	            if (parent_containers) {
	                var first_child = parent_containers.querySelectorAll('.form-control')[0];
	                first_child.focus();
	                clearInterval(checkExist);
	                parent_containers.scrollIntoView();
	            }
	        }, 1);
	        window.scrollTo(0, 0);
	    };
	    Main.prototype.scrollIntoInvalidQuestionView = function () {
	        if (this.actualQuestionLists && !this.donotScrollBeneficaryError) {
	            this.donotScrollBeneficaryError = false;
	            if (this.actualQuestionLists.contingencyBeneficiariesMainQuestion &&
	                this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions &&
	                this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions.length > 0) {
	                var questions = this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions;
	                for (var i = 0; i < questions.length; i++) {
	                    var qs = questions[i].questions;
	                    for (var j = 0; j < qs.length; j++) {
	                        if (qs[j].answerState == "invalid") {
	                            var question = qs[j];
	                            var elem = document.getElementById(question.id.replace(/[^a-zA-Z0-9]/g, ""));
	                            elem.scrollIntoView();
	                            break;
	                        }
	                    }
	                }
	            }
	            if (this.actualQuestionLists.primaryBeneficiariesMainQuestion &&
	                this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions &&
	                this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions.length > 0) {
	                var questions = this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions;
	                for (var i = 0; i < questions.length; i++) {
	                    var qs = questions[i].questions;
	                    for (var j = 0; j < qs.length; j++) {
	                        if (qs[j].answerState == "invalid") {
	                            var question = qs[j];
	                            var elem = document.getElementById(question.id.replace(/[^a-zA-Z0-9]/g, ""));
	                            elem.scrollIntoView();
	                            break;
	                        }
	                    }
	                }
	            }
	        }
	        else if (this.donotScrollBeneficaryError) {
	            this.donotScrollBeneficaryError = false;
	        }
	    };
	    Main.prototype.render = function () {
	        var _this = this;
	        var breadCrumbs = this.getBreadCrumbs();
	        var questionsList = this.getCurrentSetOfQuestions() || [];
	        this.questionsListUsing = questionsList;
	        var noFoGroupsCompleted = this.noFoGroupsCompleted;
	        return (React.createElement("div", null, React.createElement(InstantIdCheckPopup_1.default, {showInstantIdCheckPopup: this.state.showInstantIdCheckPopup, onCloseModal: this.closeInstantIdCheckPopup.bind(this), instantIdCheckData: this.state.instantIdCheckData}), React.createElement(ScrollToTopOnMount_1.default, null), React.createElement(subheader_1.default, {breadCrumbs: breadCrumbs, noFoGroupsCompleted: [noFoGroupsCompleted], location: this.props.location}), React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center"}, React.createElement(react_bootstrap_1.Row, null), questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "primary-beneficiary-main-header"}, "Primary beneficiaries"), questionsList.isQuestionsBeneficiaries &&
	            underscore_1.map(questionsList.primaryBeneficiaryQuestionsComps, function (s, i) {
	                return React.createElement("div", {id: "primary-beneficiary-container-" + i, key: i}, React.createElement("div", {className: "siblings-container generic-beneficiary-container"}, questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "question-action-btn-container"}, React.createElement("div", {className: "single-add-primary-beneficiary-text"}, "Add Primary Beneficiary", !_this.state["deletingPrimaryBeneficiary_" + i] && React.createElement("img", {style: { float: "right", marginBottom: "25px", width: "24px", height: "24px" }, src: "../images/delete_beneficiary.svg", onClick: function () {
	                    _this.deletePrimaryBeneficiary(i);
	                }}), _this.state["deletingPrimaryBeneficiary_" + i] && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw fa-3x", style: { float: "right" }}))), s), React.createElement("div", null));
	            }), questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "question-action-btn-container questions-content-container Add-a-Primary-Benefi"}, React.createElement(react_bootstrap_1.Row, null, "Add a Primary Beneficiary"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 7, className: "Add-a-Primary-Benefi-description-text " + (this.state.addAtleastOnePrimaryBeneficiaryError ? "Add-a-Primary-Benefi-description-text-error" : "")}, "You must add at least one primary beneficiary to your policy."), React.createElement(react_bootstrap_1.Col, {sm: 5}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", disabled: this.isSubmitBtnDisabled(), style: { marginLeft: "20px" }, onClick: function () {
	            _this.addPrimaryBeneficiary();
	        }}, "ADD PRIMARY BENEFICIARY", this.state.addingPrimaryBeneficiary && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))), questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "primary-beneficiary-main-header"}, "Contingent beneficiaries"), questionsList.isQuestionsBeneficiaries &&
	            underscore_1.map(questionsList.contingencyBeneficiaryQuestionsComps, function (s, i) {
	                return React.createElement("div", {id: "contingency-beneficiary-container-" + i, key: i}, React.createElement("div", {className: "siblings-container generic-beneficiary-container"}, questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "question-action-btn-container"}, React.createElement("div", {className: "single-add-primary-beneficiary-text"}, "Add Contingency Beneficiary", !_this.state["deletingContingencyBeneficiary_" + i] && React.createElement("img", {disabled: _this.isSubmitBtnDisabled(), style: { float: "right", marginBottom: "25px", width: "24px", height: "24px" }, src: "../images/delete_beneficiary.svg", onClick: function () {
	                    _this.deleteContingencyBeneficiary(i);
	                }}), _this.state["deletingContingencyBeneficiary_" + i] && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw fa-3x", style: { float: "right" }}))), s), React.createElement("div", null));
	            }), questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "question-action-btn-container questions-content-container Add-a-Primary-Benefi"}, React.createElement(react_bootstrap_1.Row, null, "Add a Contingent Beneficiary"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 7, className: "Add-a-Primary-Benefi-description-text"}, "Adding a contingent beneficiary is optional."), React.createElement(react_bootstrap_1.Col, {sm: 5}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", disabled: this.isSubmitBtnDisabled(), style: { marginLeft: "20px" }, onClick: function () {
	            _this.addContingencyBeneficiary();
	        }}, "ADD CONTINGENT BENEFICIARY", this.state.addingContingencyBeneficiary && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))), !questionsList.isQuestionsList && !questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "questions-content-container"}, this.state.gettingQuestions && React.createElement("i", {style: { marginTop: "25px" }, className: "fa fa-spinner fa-spin fa-3x fa-fw main-loader"}), questionsList.questionStructCaption && questionsList.questionStructCaption.length > 0 &&
	            React.createElement(react_bootstrap_1.Row, {className: "questions-sub-group-header fs18"}, questionsList.questionStructCaption), questionsList.prefixOfGroupForLabelGroup && React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text fs18 questions-sub-group-header", style: { marginBottom: "10px", marginLeft: "0px" }}, questionsList.prefixOfGroupForLabelGroup)), questionsList), !questionsList.isQuestionsList && React.createElement("div", {className: "question-action-btn-container"}, this.shouldShowPreviousBtn() && React.createElement("div", {className: "previous-btn-text hidden-xs", disabled: this.isSubmitBtnDisabled(), onClick: function () {
	            _this.handleBackSubmit();
	        }}, React.createElement("span", null, "Previous"), this.state.goingBackQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), this.shouldShowPreviousBtn() && React.createElement(react_bootstrap_1.Button, {disabled: this.isSubmitBtnDisabled(), className: "c-button-default circular  action visible-xs", style: { marginLeft: "30px!important", marginBottom: "20px" }, onClick: function () {
	            _this.handleBackSubmit();
	        }}, "Previous", this.state.goingBackQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {disabled: this.isSubmitBtnDisabled(), className: "c-button-default circular  action", style: { marginLeft: "30px!important" }, onClick: function () {
	            _this.onQuestionSubmit();
	        }}, "Next", this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))), questionsList.isQuestionsList &&
	            underscore_1.map(questionsList.siblingComponents, function (s, i) {
	                return React.createElement("div", {className: "", key: i}, React.createElement("div", {className: "siblings-container"}, s, questionsList.isQuestionsList && i == questionsList.siblingComponents.length - 1 && React.createElement("div", {className: "question-action-btn-container"}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", disabled: _this.isSubmitBtnDisabled(), onClick: function () {
	                    _this.addSibling();
	                }}, "ADD SIBLING", _this.state.goingBackQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {disabled: _this.isSubmitBtnDisabled(), className: "c-button-default circular next-step-btn action", style: { marginLeft: "30px!important" }, onClick: function () {
	                    _this.deleteSibling();
	                }}, "DELETE ENTRY", _this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement("div", null));
	            })), questionsList.isQuestionsList && React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center", style: { backgrounColor: "transparent", border: "none", boxShadow: "none" }}, " ", React.createElement("div", {className: "question-action-btn-container"}, this.shouldShowPreviousBtn() && React.createElement("div", {className: "previous-btn-text hidden-xs", disabled: this.isSubmitBtnDisabled(), onClick: function () {
	            _this.handleBackSubmit();
	        }}, React.createElement("span", null, "Previous"), this.state.goingBackQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), this.shouldShowPreviousBtn() && React.createElement(react_bootstrap_1.Button, {disabled: this.isSubmitBtnDisabled(), className: "c-button-default circular next-step-btn action visible-xs", style: { marginLeft: "30px!important", marginBottom: "20px" }, onClick: function () {
	            _this.handleBackSubmit();
	        }}, "Previous", this.state.goingBackQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {disabled: this.isSubmitBtnDisabled(), className: "c-button-default circular next-step-btn action", style: { marginLeft: "30px!important" }, onClick: function () {
	            _this.onQuestionSubmit();
	        }}, "Next", this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))));
	    };
	    return Main;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        questions: state.questions.questions
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        getQuestions: function (data) {
	            return dispatch(Questions_1.getQuestions(data));
	        },
	        postQuestions: function (data, moreInfo) {
	            return dispatch(Questions_1.postQuestions(data, moreInfo));
	        },
	        getFactorsearch: function (data, moreInfo) {
	            return dispatch(Questions_1.getFactorsearch(data, moreInfo));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Main);


/***/ }),
/* 713 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var SingleSelection = (function (_super) {
	    __extends(SingleSelection, _super);
	    function SingleSelection(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    SingleSelection.prototype.onChange = function (val) {
	        this.setState({
	            selectedId: val.id,
	            onceChanged: true
	        });
	        this.props.onChange(this.props.question, val);
	    };
	    SingleSelection.prototype.validate = function () {
	        if (!this.state.onceChanged) {
	            if (!this.props.alreadyOnceSubmitted) {
	                return true;
	            }
	        }
	        if (this.props.question.constraints) {
	            var constraints = this.props.question.constraints;
	            if (constraints.required) {
	                return this.props.question.answer && this.props.question.answer.id && this.props.question.answer.id.length > 0;
	            }
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    SingleSelection.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.question) && !underscore_1.isEmpty(nextProps.question.answer)) {
	            this.setState({
	                selectedId: this.props.question.answer.id
	            });
	        }
	    };
	    SingleSelection.prototype.componentWillMount = function () {
	        if (!underscore_1.isEmpty(this.props.question) && !underscore_1.isEmpty(this.props.question.answer)) {
	            this.setState({
	                selectedId: this.props.question.answer.id
	            });
	        }
	    };
	    SingleSelection.prototype.render = function () {
	        var _this = this;
	        var wrapperClass = 'form-group';
	        if (this.props.error && this.props.error.length > 0) {
	            wrapperClass += " " + 'has-error';
	        }
	        var question = this.props.question;
	        return (React.createElement("div", {className: "row", id: question.id.replace(/[^a-zA-Z0-9]/g, "")}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text fs18", style: { marginBottom: "10px" }}, question.constraints && question.constraints.required && React.createElement("span", {style: { color: "rgb(255, 73, 73)", marginRight: "9px" }}, "*"), question.caption), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { paddingRight: "22px", marginBottom: "20px" }, className: "person-gender-container"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "single-select-btn-container"}, React.createElement(react_bootstrap_1.Button, {disabled: this.props.submittingQuestions, className: "c-button-default circular single-select-btn " + (this.state.selectedId == question.options[0].id ? "active" : ""), onClick: function () {
	            _this.onChange(question.options[0]);
	        }}, question.options[0].label)), React.createElement(react_bootstrap_1.Col, {style: { display: "inline" }}, React.createElement(react_bootstrap_1.Button, {style: { marginBottom: "0px" }, disabled: this.props.submittingQuestions, className: "c-button-default circular single-select-btn " + (this.state.selectedId == question.options[1].id ? "active" : ""), onClick: function () {
	            _this.onChange(question.options[1]);
	        }}, question.options[1].label)), question.hint && React.createElement("div", {className: "help-text", style: { marginTop: "12px" }}, question.hint)), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error", style: { paddingLeft: "0px", marginTop: "0px" }}, !this.validate() &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, question.constraints.patternViolationMessage || "Required"), question.answerState == "invalid" &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, "Invalid")))));
	    };
	    return SingleSelection;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = SingleSelection;


/***/ }),
/* 714 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var SingleSelection = (function (_super) {
	    __extends(SingleSelection, _super);
	    function SingleSelection(props) {
	        this.type = "label";
	        _super.call(this, props);
	    }
	    SingleSelection.prototype.onChange = function (val) {
	        this.props.onChange(val);
	    };
	    SingleSelection.prototype.render = function () {
	        var question = this.props.question || {};
	        var wrapperClass = 'form-group';
	        if (this.props.error && this.props.error.length > 0) {
	            wrapperClass += " " + 'has-error';
	        }
	        if (this.props.caption && this.props.caption.length > 0) {
	            return (React.createElement("div", {className: "label-container", style: { marginTop: "30px", marginBottom: "30px" }}, question.constraints && question.constraints.required && React.createElement("span", null, "*"), React.createElement("label", {className: "fs18"}, " ", this.props.caption, " ")));
	        }
	        else {
	            return null;
	        }
	    };
	    return SingleSelection;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = SingleSelection;


/***/ }),
/* 715 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var underscore_1 = __webpack_require__(540);
	var CustomInput = (function (_super) {
	    __extends(CustomInput, _super);
	    function CustomInput(props) {
	        _super.call(this, props);
	        this.state = {};
	        this.validate.bind(this);
	    }
	    CustomInput.prototype.getClassName = function () {
	        var className = "form-control question-with-bottom-border fs16";
	        return className;
	    };
	    CustomInput.prototype.componentWillMount = function () {
	        if (!underscore_1.isEmpty(this.props.question) && this.props.question.answer && !underscore_1.isEmpty(String(this.props.question.answer)) && String(this.props.question.answer).length > 0 && this.props.question.answer) {
	            var answer = this.props.question.type == "number" ? String(this.props.question.answer).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") : this.props.question.answer;
	            this.setState({
	                value: answer
	            });
	        }
	    };
	    CustomInput.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.question) && nextProps.question.answer && nextProps.question.answer && !underscore_1.isEmpty(String(nextProps.question.answer)) && String(nextProps.question.answer).length > 0) {
	            var answer = nextProps.question.type == "number" ? String(nextProps.question.answer).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") : nextProps.question.answer;
	            this.setState({
	                value: answer
	            });
	        }
	    };
	    CustomInput.prototype.validate = function () {
	        if (!this.state.onceChanged) {
	            if (!this.props.alreadyOnceSubmitted) {
	                return true;
	            }
	        }
	        var constraints = this.props.question.constraints;
	        if (this.props.question.constraints) {
	            var isValid = true;
	            if (constraints.required) {
	                if (constraints.pattern) {
	                    if (this.props.question.answer) {
	                        return new RegExp(this.props.question.constraints.pattern).test(this.props.question.answer);
	                    }
	                    else {
	                        return false;
	                    }
	                }
	                return this.props.question.answer && String(this.props.question.answer).length > 0;
	            }
	            else {
	                if (this.props.question.answer && String(this.props.question.answer).length > 0) {
	                    if (constraints.pattern) {
	                        if (this.props.question.answer) {
	                            return new RegExp(this.props.question.constraints.pattern).test(this.props.question.answer);
	                        }
	                        else {
	                            return false;
	                        }
	                    }
	                    else {
	                        return true;
	                    }
	                }
	                else {
	                    return true;
	                }
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    CustomInput.prototype.onChange = function (val) {
	        if (this.props.question.type == "number") {
	            val = val.replace(/[^0-9]/g, '');
	            this.props.onChange(this.props.question, val);
	            this.setState({
	                value: val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
	                onceChanged: true
	            });
	        }
	        else {
	            var sampleVal = this.props.question.infoText;
	            if (val.length > 0 && (sampleVal && sampleVal.length > val.length) && !(new RegExp(/^[a-zA-Z0-9]*$/).test(sampleVal[val.length]))) {
	                if (this.state.value && this.state.value.length > val.length) {
	                }
	                else {
	                    val = val + sampleVal[val.length];
	                }
	            }
	            this.props.onChange(this.props.question, val);
	            this.setState({
	                value: val,
	                onceChanged: true
	            });
	        }
	    };
	    CustomInput.prototype.render = function () {
	        var _this = this;
	        var wrapperClass = 'form-group';
	        if (this.props.error && this.props.error.length > 0) {
	            wrapperClass += " " + 'has-error';
	        }
	        var question = this.props.question;
	        return (React.createElement("div", {className: wrapperClass, id: question.id.replace(/[^a-zA-Z0-9]/g, "")}, React.createElement("label", {className: "fs18", htmlFor: question.name}, question.constraints && question.constraints.required && React.createElement("span", {style: { color: "rgb(255, 73, 73)", marginRight: "9px" }}, "*"), question.caption), React.createElement("div", {className: "field"}, React.createElement("input", {type: "text", name: question.name, className: this.getClassName(), placeholder: "", ref: question.name, value: this.state.value, onChange: function (e) {
	            _this.onChange(e.target.value);
	        }}), question.defaultUnit && question.defaultUnit.label &&
	            React.createElement("span", {className: "custom-input-unit-label"}, " ", question.defaultUnit.label, " "), question.hint && React.createElement("div", {className: "help-text", style: { marginTop: "12px" }}, question.hint), !this.validate() &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, question.constraints.patternViolationMessage || "Required"), question.answerState == "invalid" &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, "Invalid"))));
	    };
	    return CustomInput;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = CustomInput;


/***/ }),
/* 716 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var react_select_1 = __webpack_require__(688);
	var underscore_1 = __webpack_require__(540);
	var CustomSelect = (function (_super) {
	    __extends(CustomSelect, _super);
	    function CustomSelect(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    CustomSelect.prototype.onDummyChange = function (val) {
	        this.onChange(val);
	    };
	    CustomSelect.prototype.onChange = function (val) {
	        var ans, alreadyPresent = false;
	        if (this.state.state) {
	            ans = JSON.parse(JSON.stringify(this.state.state));
	        }
	        else {
	            ans = [];
	        }
	        for (var i = 0; i < ans.length; i++) {
	            if (ans[i].id == val.id) {
	                alreadyPresent = true;
	                ans.splice(i, 1);
	            }
	        }
	        if (!alreadyPresent) {
	            ans.push(val);
	        }
	        this.setState({
	            state: ans,
	            onceChanged: true
	        });
	        this.props.onChange(this.props.question, ans);
	    };
	    CustomSelect.prototype.containsInAnswer = function (val) {
	        var ans, alreadyPresent = false;
	        if (this.state.state) {
	            for (var i = 0; i < this.state.state.length; i++) {
	                if (this.state.state[i].id == val.id) {
	                    alreadyPresent = true;
	                }
	            }
	        }
	        return alreadyPresent;
	    };
	    CustomSelect.prototype.componentWillMount = function () {
	        if (!underscore_1.isEmpty(this.props.question) && !underscore_1.isEmpty(this.props.question.answer)) {
	            this.setState({
	                state: this.props.question.answer
	            });
	        }
	    };
	    CustomSelect.prototype.getStateObjects = function () {
	        var options = JSON.parse(JSON.stringify(this.props.question.options));
	        var finalOptions = [];
	        for (var i = 0; i < options.length; i++) {
	            finalOptions.push({ id: options[i].id,
	                value: options[i].id,
	                label: options[i].label
	            });
	        }
	        return finalOptions;
	    };
	    CustomSelect.prototype.validate = function () {
	        if (!this.state.onceChanged) {
	            if (!this.props.alreadyOnceSubmitted) {
	                return true;
	            }
	        }
	        if (this.props.question.constraints) {
	            var constraints = this.props.question.constraints;
	            if (constraints.required) {
	                if (this.props.multi) {
	                    return this.props.question.answer && this.props.question.answer.length > 0;
	                }
	                return this.props.question.answer && this.props.question.answer.id;
	            }
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    CustomSelect.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.question) && !underscore_1.isEmpty(nextProps.question.answer)) {
	            this.setState({
	                state: nextProps.question.answer
	            });
	        }
	    };
	    CustomSelect.prototype.onChange1 = function (val) {
	        this.setState({
	            state: val,
	            onceChanged: true
	        });
	        this.props.onChange(this.props.question, val);
	    };
	    CustomSelect.prototype.getCustomSelectObj = function (statesObjects) {
	        var _this = this;
	        if (this.props.multi) {
	            return underscore_1.map(statesObjects, function (qL) {
	                return (React.createElement("div", {key: qL.id}, React.createElement("label", {className: "custom-checkbox-container", onClick: function (e) {
	                    _this.onDummyChange(qL);
	                    e.preventDefault();
	                }}, qL.label, React.createElement("input", {type: "checkbox", checked: _this.containsInAnswer(qL)}), React.createElement("span", {className: "custom-checkbox-checkmark"}))));
	            });
	        }
	        return (React.createElement(react_select_1.default, {name: "form-field-name1", options: statesObjects, value: this.state.state, onChange: function (stateObj) {
	            _this.onChange1(stateObj);
	        }, className: "", multi: this.props.multi || false, placeholder: "Select...", removeSelected: true, closeOnSelect: this.props.multi ? false : true}));
	    };
	    CustomSelect.prototype.render = function () {
	        var wrapperClass = 'form-group';
	        if (this.props.error && this.props.error.length > 0) {
	            wrapperClass += " " + 'has-error';
	        }
	        var statesObjects = this.getStateObjects();
	        var question = this.props.question;
	        return (React.createElement("div", {id: question.id.replace(/[^a-zA-Z0-9]/g, "")}, React.createElement(react_bootstrap_1.Col, {className: "c-subheader-text fs18", style: { marginTop: "5px", paddingLeft: "0px", marginBottom: "18px" }}, question.constraints && question.constraints.required && React.createElement("span", {style: { color: "rgb(255, 73, 73)", marginRight: "9px" }}, "*"), question.caption), React.createElement(react_bootstrap_1.Col, {style: { paddingRight: "15px", marginBottom: "30px" }, className: "person-gender-container c-custom-select"}, React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "0px" }}, this.getCustomSelectObj(statesObjects), question.hint && React.createElement(react_bootstrap_1.Col, {className: "help-text", style: { marginTop: "12px" }}, question.hint)), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error", style: { paddingLeft: "0px", marginTop: "0px" }}, !this.validate() &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, question.constraints.patternViolationMessage || "Required"), question.answerState == "invalid" &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, "Invalid")))));
	    };
	    return CustomSelect;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = CustomSelect;


/***/ }),
/* 717 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var react_bootstrap_autosuggest_1 = __webpack_require__(718);
	var underscore_1 = __webpack_require__(540);
	var TagAdapter = (function (_super) {
	    __extends(TagAdapter, _super);
	    function TagAdapter() {
	        _super.apply(this, arguments);
	    }
	    TagAdapter.prototype.newFromValue = function (value) {
	        return { value: value };
	    };
	    TagAdapter.prototype.renderSelected = function (item) {
	        console.log(item);
	        return React.createElement("div", {className: "tag"}, item.label);
	    };
	    TagAdapter.prototype.renderSuggested = function (item) {
	        return React.createElement("div", {className: "tag-item"}, item.label);
	    };
	    return TagAdapter;
	}(react_bootstrap_autosuggest_1.ItemAdapter));
	TagAdapter.instance = new TagAdapter();
	var AsyncCustomSelect = (function (_super) {
	    __extends(AsyncCustomSelect, _super);
	    function AsyncCustomSelect(props) {
	        _super.call(this, props);
	        this.state = {
	            selectedItem: null,
	            items: [],
	            reposMessage: null
	        };
	        this.lastSearch = null;
	        this.onSearchCustomization = this.onSearchCustomization.bind(this);
	    }
	    AsyncCustomSelect.prototype.componentWillMount = function () {
	        if (!underscore_1.isEmpty(this.props.question) && this.props.question.answer) {
	            this.setState({
	                selectedItem: this.props.question.answer
	            });
	        }
	    };
	    AsyncCustomSelect.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.question) && this.props.question.answer && !underscore_1.isEmpty(String(nextProps.question.answer))) {
	            this.setState({
	                selectedItem: this.props.question.answer
	            });
	        }
	    };
	    AsyncCustomSelect.prototype.isSelectedItemPresentInList = function (selectedVal) {
	        if (underscore_1.isEmpty(selectedVal) || underscore_1.isEmpty(this.state.items))
	            return false;
	        var isPresent = false;
	        for (var i = 0; i < this.state.items.length; i++) {
	            if (this.state.items[i].id == selectedVal.id) {
	                isPresent = true;
	            }
	        }
	        return isPresent;
	    };
	    AsyncCustomSelect.prototype.onItemChange = function (val) {
	        if (true) {
	            this.setState({
	                selectedItem: val,
	                onceChanged: true
	            });
	            this.props.onChange(this.props.question, val);
	        }
	        else {
	            this.setState({
	                showInvalidAnswerSelectedMsg: true
	            });
	        }
	    };
	    AsyncCustomSelect.prototype.onTextSearch = function (search, page, prev) {
	        var _this = this;
	        var data = {
	            questionId: String,
	            assessment_factor_url: String,
	            q: String
	        };
	        if (search) {
	            var sp = search.lastIndexOf('/');
	            if (sp >= 0) {
	                search = search.substring(sp + 1);
	            }
	            data.questionId = this.props.question.links[0].params.questionId;
	            data.assessment_factor_url = this.props.question.links[0].href;
	            data.q = search;
	            if (search === this.lastSearch && !page) {
	                return;
	            }
	            this.lastSearch = search;
	            this.setState({
	                reposMessage: this.props.question.label,
	                reposMore: null
	            });
	            this.props.getFactorsearch(data).then(function (response) {
	                if (response.questions && response.questions.LOGIN_URL && response.questions.LOGIN_URL.length > 0) {
	                    window.location.href = response.questions.LOGIN_URL;
	                    return;
	                }
	                if (response.questions && response.questions.redirect_url && response.questions.redirect_url.length > 0) {
	                    window.location.href = response.questions.redirect_url;
	                    return;
	                }
	                if (response && response.questions && response.questions.data) {
	                    _this.setState({
	                        items: response.questions.data
	                    });
	                    if (underscore_1.isEmpty(response.questions.data)) {
	                        _this.setState({
	                            showInvalidAnswerSelectedMsg: true
	                        });
	                    }
	                    else {
	                        _this.setState({
	                            showInvalidAnswerSelectedMsg: false
	                        });
	                    }
	                }
	                else {
	                    _this.setState({
	                        reposMessage: _this.props.question.label,
	                        reposMore: null
	                    });
	                    _this.setState({
	                        showInvalidAnswerSelectedMsg: true
	                    });
	                }
	            }, function (err) {
	                _this.setState({
	                    reposMessage: _this.props.question.label,
	                    reposMore: null
	                });
	            });
	        }
	        else {
	            this.setState({
	                reposMessage: this.props.question.label,
	                reposMore: null
	            });
	        }
	    };
	    ;
	    AsyncCustomSelect.prototype.onSearchCustomization = function (e) {
	        var _this = this;
	        var searchDebounce = 250;
	        if (e.target.parentElement.className === "autosuggest-input-choice") {
	            clearTimeout(this._searchTimeoutId);
	            this._searchTimeoutId = setTimeout(function () {
	                _this._searchTimeoutId = null;
	                if (e.target.value != _this.state.searchValue) {
	                    _this.setState({ searchValue: e.target.value });
	                    _this.onTextSearch(e.target.value);
	                }
	            }, searchDebounce);
	        }
	    };
	    AsyncCustomSelect.prototype.componentDidMount = function () {
	        var self = this;
	        document.addEventListener("keyup", this.onSearchCustomization, false);
	    };
	    AsyncCustomSelect.prototype.componentWillUnmount = function () {
	        var self = this;
	        document.removeEventListener("keyup", this.onSearchCustomization, false);
	    };
	    AsyncCustomSelect.prototype.validate = function () {
	        if (!this.state.onceChanged) {
	            if (!this.props.alreadyOnceSubmitted) {
	                return true;
	            }
	        }
	        if (this.props.question.constraints) {
	            var constraints = this.props.question.constraints;
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    AsyncCustomSelect.prototype.render = function () {
	        var wrapperClass = 'form-group';
	        if (this.props.error && this.props.error.length > 0) {
	            wrapperClass += " " + 'has-error';
	        }
	        var question = this.props.question;
	        return (React.createElement("div", {id: question.id.replace(/[^a-zA-Z0-9]/g, "")}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text fs18", style: { marginTop: "5px", paddingLeft: "0px", marginBottom: "18px" }}, question.constraints && question.constraints.required && React.createElement("span", {style: { color: "rgb(255, 73, 73)", marginRight: "9px" }}, "*"), question.caption), React.createElement(react_bootstrap_1.Col, {style: { paddingRight: "15px", marginBottom: "15px" }, className: "async-auto-suggest-container"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_autosuggest_1.default, {datalist: this.state.items || [], datalistPartial: true, datalistMessage: this.state.reposMessage, onDatalistMessageSelect: this.state.reposMore, placeholder: this.props.question.caption, value: this.state.selectedItem, itemValuePropName: "label", searchDebounce: 500, itemAdapter: TagAdapter.instance, onSearch: this.onTextSearch.bind(this), onChange: this.onItemChange.bind(this), multiple: true, datalistOnly: true}), question.hint && React.createElement(react_bootstrap_1.Col, {className: "help-text", style: { marginTop: "12px" }}, question.hint)), React.createElement(react_bootstrap_1.Col, {className: "c-subheader-text error fs16", style: { paddingLeft: "0px", marginTop: "0px" }}, !this.validate() &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, question.constraints.patternViolationMessage || "Required"), question.answerState == "invalid" &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, "Invalid"), this.state.showInvalidAnswerSelectedMsg &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, "Please search and select the answer from the list of items.")))));
	    };
	    return AsyncCustomSelect;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = AsyncCustomSelect;


/***/ }),
/* 718 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ObjectListAdapter = exports.MapListAdapter = exports.ArrayListAdapter = exports.EmptyListAdapter = exports.ListAdapter = exports.ItemAdapter = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _shallowEqual = __webpack_require__(129);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _keycode = __webpack_require__(420);
	
	var _keycode2 = _interopRequireDefault(_keycode);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(280);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _warning = __webpack_require__(189);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _Choices = __webpack_require__(719);
	
	var _Choices2 = _interopRequireDefault(_Choices);
	
	var _Suggestions = __webpack_require__(720);
	
	var _Suggestions2 = _interopRequireDefault(_Suggestions);
	
	var _ItemAdapter = __webpack_require__(721);
	
	var _ItemAdapter2 = _interopRequireDefault(_ItemAdapter);
	
	var _ListAdapter = __webpack_require__(722);
	
	var _ListAdapter2 = _interopRequireDefault(_ListAdapter);
	
	var _EmptyListAdapter = __webpack_require__(723);
	
	var _EmptyListAdapter2 = _interopRequireDefault(_EmptyListAdapter);
	
	var _ArrayListAdapter = __webpack_require__(724);
	
	var _ArrayListAdapter2 = _interopRequireDefault(_ArrayListAdapter);
	
	var _MapListAdapter = __webpack_require__(725);
	
	var _MapListAdapter2 = _interopRequireDefault(_MapListAdapter);
	
	var _ObjectListAdapter = __webpack_require__(727);
	
	var _ObjectListAdapter2 = _interopRequireDefault(_ObjectListAdapter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	exports.ItemAdapter = _ItemAdapter2['default'];
	exports.ListAdapter = _ListAdapter2['default'];
	exports.EmptyListAdapter = _EmptyListAdapter2['default'];
	exports.ArrayListAdapter = _ArrayListAdapter2['default'];
	exports.MapListAdapter = _MapListAdapter2['default'];
	exports.ObjectListAdapter = _ObjectListAdapter2['default'];
	
	/**
	 * Combo-box input component that combines a drop-down list and a single-line
	 * editable text box. The set of options for the drop-down list can be
	 * controlled dynamically. Selection of multiple items is supported using a
	 * tag/pill-style user interface within a simulated text box.
	 */
	var Autosuggest = function (_React$Component) {
	  _inherits(Autosuggest, _React$Component);
	
	  _createClass(Autosuggest, null, [{
	    key: 'defaultInputSelect',
	    value: function defaultInputSelect(input, value, completion) {
	      // https://html.spec.whatwg.org/multipage/forms.html#do-not-apply
	      switch (input.type) {
	        case 'text':
	        case 'search':
	        case 'url':
	        case 'tel':
	        case 'password':
	          // istanbul ignore else
	          if (input.setSelectionRange) {
	            input.setSelectionRange(value.length, completion.length);
	          } else if (input.createTextRange) {
	            // old IE
	            var range = input.createTextRange();
	            range.moveEnd('character', completion.length);
	            range.moveStart('character', value.length);
	            range.select();
	          }
	      }
	    }
	  }]);
	
	  function Autosuggest(props) {
	    var _ref;
	
	    _classCallCheck(this, Autosuggest);
	
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }
	
	    /* istanbul ignore next: https://github.com/gotwarlost/istanbul/issues/690#issuecomment-265718617 */
	    var _this = _possibleConstructorReturn(this, (_ref = Autosuggest.__proto__ || Object.getPrototypeOf(Autosuggest)).call.apply(_ref, [this, props].concat(_toConsumableArray(args))));
	
	    _this._itemAdapter = props.itemAdapter || new _ItemAdapter2['default']();
	    _this._itemAdapter.receiveProps(props);
	
	    _this._listAdapter = props.datalistAdapter || _this._getListAdapter(props.datalist);
	    _this._listAdapter.receiveProps(props, _this._itemAdapter);
	
	    var _this$_getValueFromPr = _this._getValueFromProps(props),
	        inputValue = _this$_getValueFromPr.inputValue,
	        inputItem = _this$_getValueFromPr.inputItem,
	        inputItemEphemeral = _this$_getValueFromPr.inputItemEphemeral,
	        selectedItems = _this$_getValueFromPr.selectedItems;
	
	    _this._setValueMeta(inputItem, inputItemEphemeral, true, true);
	    _this._lastValidItem = inputItem;
	    _this._lastValidValue = inputValue;
	    _this._keyPressCount = 0;
	
	    _this.state = {
	      open: false,
	      disableFilter: false,
	      inputValue: inputValue,
	      inputValueKeyPress: 0,
	      inputFocused: false,
	      selectedItems: selectedItems,
	      searchValue: null
	    };
	    _this._lastOnChangeValue = _this._getCurrentValue();
	    _this._lastOnSelectValue = inputItem;
	
	    var self = _this; // https://github.com/facebook/flow/issues/1517
	    self._renderSelected = _this._renderSelected.bind(_this);
	    self._getItemKey = _this._getItemKey.bind(_this);
	    self._isSelectedItem = _this._isSelectedItem.bind(_this);
	    self._renderSuggested = _this._renderSuggested.bind(_this);
	    self._handleToggleClick = _this._handleToggleClick.bind(_this);
	    self._handleInputChange = _this._handleInputChange.bind(_this);
	    self._handleItemSelect = _this._handleItemSelect.bind(_this);
	    self._removeItem = _this._removeItem.bind(_this);
	    self._handleShowAll = _this._handleShowAll.bind(_this);
	    self._handleKeyDown = _this._handleKeyDown.bind(_this);
	    self._handleKeyPress = _this._handleKeyPress.bind(_this);
	    self._handleMenuClose = _this._handleMenuClose.bind(_this);
	    self._handleInputFocus = _this._handleInputFocus.bind(_this);
	    self._handleInputBlur = _this._handleInputBlur.bind(_this);
	    self._handleFocus = _this._handleFocus.bind(_this);
	    self._handleBlur = _this._handleBlur.bind(_this);
	    return _this;
	  }
	
	  _createClass(Autosuggest, [{
	    key: '_getListAdapter',
	    value: function _getListAdapter(list) {
	      if (list == null) {
	        return new _EmptyListAdapter2['default']();
	      } else if (Array.isArray(list)) {
	        return new _ArrayListAdapter2['default']();
	      } else if (list instanceof Map) {
	        return new _MapListAdapter2['default']();
	      } else if (typeof list === 'object') {
	        return new _ObjectListAdapter2['default']();
	      } else {
	        throw Error('Unexpected datalist type: datalistAdapter required');
	      }
	    }
	  }, {
	    key: '_getValueFromProps',
	    value: function _getValueFromProps(props) {
	      var inputValue = '';
	      var inputItem = null;
	      var inputItemEphemeral = false;
	      var selectedItems = [];
	      var value = props.value || props.defaultValue;
	      if (value != null) {
	        if (props.multiple) {
	          if (Array.isArray(value)) {
	            selectedItems = this._filterItems(value, props);
	          } else {
	            (0, _warning2['default'])(!value, 'Array expected for value property');
	          }
	        } else if (props.valueIsItem) {
	          var itemValue = this._itemAdapter.getInputValue(value);
	          if (props.datalist != null) {
	            inputItem = this._listAdapter.findMatching(props.datalist, itemValue);
	            if (inputItem != null) {
	              inputValue = inputItem === value ? itemValue : this._itemAdapter.getInputValue(inputItem);
	            } else if (props.datalistOnly && !props.datalistPartial) {
	              this._warnInvalidValue(value);
	            } else {
	              inputValue = itemValue;
	              inputItem = value;
	            }
	          } else {
	            inputValue = itemValue;
	            inputItem = value;
	          }
	        } else if (value) {
	          if (props.datalist != null) {
	            inputItem = this._listAdapter.findMatching(props.datalist, value);
	            if (inputItem != null) {
	              inputValue = this._itemAdapter.getInputValue(inputItem);
	            } else if (props.datalistOnly && !props.datalistPartial) {
	              this._warnInvalidValue(value);
	            } else {
	              inputValue = value.toString();
	              inputItem = this._itemAdapter.newFromValue(value);
	              inputItemEphemeral = true;
	            }
	          } else {
	            inputValue = value.toString();
	            inputItem = this._itemAdapter.newFromValue(value);
	            inputItemEphemeral = true;
	          }
	        }
	      }
	      return { inputValue: inputValue, inputItem: inputItem, inputItemEphemeral: inputItemEphemeral, selectedItems: selectedItems };
	    }
	  }, {
	    key: '_filterItems',
	    value: function _filterItems(items, props) {
	      if (props.datalist != null || !props.allowDuplicates) {
	        var result = [];
	        var valueSet = {};
	        var different = false;
	        var _iteratorNormalCompletion = true;
	        var _didIteratorError = false;
	        var _iteratorError = undefined;
	
	        try {
	          for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	            var _item = _step.value;
	
	            var _value = this._itemAdapter.getInputValue(_item);
	            if (!props.allowDuplicates && valueSet[_value]) {
	              different = true;
	              continue;
	            }
	            var listItem = this._listAdapter.findMatching(props.datalist, _value);
	            if (listItem != null) {
	              result.push(listItem);
	              valueSet[_value] = true;
	              different = true;
	            } else if (props.datalistOnly && !props.datalistPartial) {
	              this._warnInvalidValue(_value);
	              different = true;
	            } else {
	              result.push(_item);
	              valueSet[_value] = true;
	            }
	          }
	        } catch (err) {
	          _didIteratorError = true;
	          _iteratorError = err;
	        } finally {
	          try {
	            if (!_iteratorNormalCompletion && _iterator['return']) {
	              _iterator['return']();
	            }
	          } finally {
	            if (_didIteratorError) {
	              throw _iteratorError;
	            }
	          }
	        }
	
	        if (different) {
	          return result;
	        }
	      }
	      return items;
	    }
	  }, {
	    key: '_warnInvalidValue',
	    value: function _warnInvalidValue(value) {
	      (0, _warning2['default'])(false, 'Value "%s" does not match any datalist value', value);
	    }
	  }, {
	    key: '_setInputValue',
	    value: function _setInputValue(value, callback) {
	      // track keypress count in state so re-render is forced even if value is
	      // unchanged; this is necessary when typing over the autocompleted range
	      // with matching characters to properly maintain the input selection range
	      this.setState({
	        inputValue: value,
	        inputValueKeyPress: this._keyPressCount
	      }, callback);
	    }
	  }, {
	    key: '_setValueMeta',
	    value: function _setValueMeta(inputItem) {
	      var inputItemEphemeral = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	      var isValid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : inputItem != null;
	      var validated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : isValid;
	
	      this._inputItem = inputItem;
	      this._inputItemEphemeral = inputItemEphemeral;
	      this._valueIsValid = isValid;
	      this._valueWasValidated = validated;
	    }
	  }, {
	    key: '_clearInput',
	    value: function _clearInput() {
	      this._setValueMeta(null, false, true, true);
	      this._setInputValue('');
	    }
	  }, {
	    key: '_getValueUsing',
	    value: function _getValueUsing(props, inputValue, inputItem, selectedItems) {
	      return props.multiple ? selectedItems : props.valueIsItem ? inputItem : inputValue;
	    }
	  }, {
	    key: '_getCurrentValue',
	    value: function _getCurrentValue() {
	      return this._getValueUsing(this.props, this.state.inputValue, this._inputItem, this.state.selectedItems);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      // IE8 can jump cursor position if not immediately updated to typed value;
	      // for other browsers, we can avoid re-rendering for the auto-complete
	      this._autoCompleteAfterRender = !this.refs.input.setSelectionRange;
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.itemAdapter != this.props.itemAdapter) {
	        this._itemAdapter = nextProps.itemAdapter || new _ItemAdapter2['default']();
	      }
	      this._itemAdapter.receiveProps(nextProps);
	
	      if (nextProps.datalist != this.props.datalist || nextProps.datalistAdapter != this.props.datalistAdapter) {
	        if (nextProps.datalistAdapter) {
	          this._listAdapter = nextProps.datalistAdapter;
	        } else {
	          var listAdapter = this._getListAdapter(nextProps.datalist);
	          if (listAdapter.constructor != this._listAdapter.constructor) {
	            this._listAdapter = listAdapter;
	          }
	        }
	      }
	      this._listAdapter.receiveProps(nextProps, this._itemAdapter);
	
	      // if props.value changes (to a value other than the current state), or
	      // validation changes to make state invalid, propagate props.value to state
	      var nextValue = nextProps.value;
	      var inputValue = this.state.inputValue;
	
	      var valueChanged = nextValue !== this.props.value && nextValue !== this._getValueUsing(nextProps, inputValue, this._inputItem, this.state.selectedItems);
	      var inputItem = void 0,
	          inputValueInvalid = void 0,
	          propsValueInvalid = void 0,
	          validateSelected = void 0;
	      if (!valueChanged) {
	        if (nextProps.datalistOnly) {
	          var canValidate = !nextProps.datalistPartial && nextProps.datalist != null;
	          var validationChanged = !this.props.datalistOnly || !nextProps.datalistPartial && this.props.datalistPartial || nextProps.datalist != this.props.datalist;
	          if (inputValue) {
	            inputItem = this._listAdapter.findMatching(nextProps.datalist, inputValue);
	            if (inputItem == null) {
	              if (!canValidate && !this._inputItemEphemeral) {
	                inputItem = this._inputItem;
	              } else if (this._inputItemEphemeral && nextValue === inputValue) {
	                propsValueInvalid = true;
	              }
	            }
	            inputValueInvalid = inputItem == null && validationChanged;
	            // update metadata but don't reset input value if invalid but focused
	            if (inputValueInvalid && this._focused) {
	              this._setValueMeta(null, false, false, true);
	              if (validationChanged && canValidate && this._lastValidItem != null) {
	                // revalidate last valid item, which will be restored on blur
	                this._lastValidItem = this._listAdapter.findMatching(nextProps.datalist, this._lastValidValue);
	                if (this._lastValidItem == null) {
	                  this._lastValidValue = '';
	                }
	              }
	              inputValueInvalid = false;
	            }
	          } else {
	            inputItem = null;
	            inputValueInvalid = false;
	          }
	          validateSelected = nextProps.multiple && canValidate && validationChanged;
	        }
	        if (nextProps.multiple && !nextProps.allowDuplicates && this.props.allowDuplicates) {
	          validateSelected = true;
	        }
	      }
	      // inputValueInvalid implies !multiple, since inputValue of multiple should
	      // be blank when not focused
	      if (valueChanged || inputValueInvalid) {
	        var inputItemEphemeral = void 0,
	            _selectedItems = void 0;
	        if (propsValueInvalid) {
	          inputValue = '';
	          inputItemEphemeral = false;
	          _selectedItems = [];
	        } else {
	          var _getValueFromProps2 = this._getValueFromProps(nextProps);
	
	          inputValue = _getValueFromProps2.inputValue;
	          inputItem = _getValueFromProps2.inputItem;
	          inputItemEphemeral = _getValueFromProps2.inputItemEphemeral;
	          _selectedItems = _getValueFromProps2.selectedItems;
	        }
	        // if props.value change resolved to current state item, don't reset input
	        if (inputItem !== this._inputItem || !this._focused) {
	          this._setValueMeta(inputItem, inputItemEphemeral, true, true);
	          this._setInputValue(inputValue);
	          this.setState({ selectedItems: _selectedItems });
	          validateSelected = false;
	          this._lastValidItem = inputItem;
	          this._lastValidValue = inputValue;
	          // suppress onChange (but not onSelect) if value came from props
	          if (valueChanged) {
	            this._lastOnChangeValue = this._getValueUsing(nextProps, inputValue, inputItem, _selectedItems);
	          }
	        } else if (valueChanged && nextProps.multiple) {
	          this.setState({ selectedItems: _selectedItems });
	        }
	      } else if (inputValue && nextProps.datalist != this.props.datalist && this._focused) {
	        // if datalist changed but value didn't, attempt to autocomplete
	        this._checkAutoComplete(inputValue, nextProps);
	      }
	      if (validateSelected) {
	        var _selectedItems2 = this._filterItems(this.state.selectedItems, nextProps);
	        this.setState({ selectedItems: _selectedItems2 });
	      }
	
	      // open dropdown if datalist message is set while focused
	      if (nextProps.datalistMessage && nextProps.datalistMessage != this.props.datalistMessage && this._focused) {
	        this._open('message', nextProps);
	      }
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);
	    }
	  }, {
	    key: 'componentWillUpdate',
	    value: function componentWillUpdate(nextProps, nextState) {
	      var suggestions = this.refs.suggestions;
	
	      this._menuFocusedBeforeUpdate = suggestions && suggestions.isFocused();
	
	      var nextInputValue = nextState.inputValue;
	      if (nextInputValue != this.state.inputValue) {
	        var inputItem = void 0,
	            inputItemEphemeral = void 0,
	            isValid = void 0;
	        if (!this._valueWasValidated) {
	          if (nextInputValue) {
	            inputItem = this._listAdapter.findMatching(nextProps.datalist, nextInputValue);
	            if (inputItem == null && !nextProps.datalistOnly) {
	              inputItem = this._itemAdapter.newFromValue(nextInputValue);
	              inputItemEphemeral = true;
	              isValid = true;
	            } else {
	              inputItemEphemeral = false;
	              isValid = inputItem != null;
	            }
	          } else {
	            inputItem = null;
	            inputItemEphemeral = false;
	            isValid = !nextProps.required;
	          }
	          this._setValueMeta(inputItem, inputItemEphemeral, isValid);
	        } else {
	          inputItem = this._inputItem;
	          isValid = this._valueIsValid;
	        }
	        if (isValid) {
	          this._lastValidItem = inputItem;
	          this._lastValidValue = inputItem && !inputItemEphemeral ? this._itemAdapter.getInputValue(inputItem) : nextInputValue;
	        }
	
	        if (isValid) {
	          var _multiple = nextProps.multiple,
	              _onChange = nextProps.onChange;
	
	          if (!_multiple && _onChange) {
	            var _value2 = this._getValueUsing(nextProps, nextInputValue, inputItem, nextState.selectedItems);
	            if (_value2 !== this._lastOnChangeValue) {
	              this._lastOnChangeValue = _value2;
	              _onChange(_value2);
	            }
	          }
	
	          var _onSelect = nextProps.onSelect;
	
	          if (_onSelect && inputItem !== this._lastOnSelectValue) {
	            this._lastOnSelectValue = inputItem;
	            _onSelect(inputItem);
	          }
	        }
	      }
	
	      var onToggle = nextProps.onToggle;
	
	      if (onToggle && nextState.open != this.state.open) {
	        onToggle(nextState.open);
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      if (this.state.open && !prevState.open && this._lastOpenEventType === 'keydown' || this.state.disableFilter && !prevState.disableFilter && this._menuFocusedBeforeUpdate) {
	        this.refs.suggestions.focusFirst();
	      } else if (!this.state.open && prevState.open) {
	        // closed
	        if (this._menuFocusedBeforeUpdate) {
	          this._menuFocusedBeforeUpdate = false;
	          this._focusInput();
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this._focusTimeoutId);
	      this._focusTimeoutId = null;
	      clearTimeout(this._searchTimeoutId);
	      this._searchTimeoutId = null;
	    }
	  }, {
	    key: '_focusInput',
	    value: function _focusInput() {
	      var input = _reactDom2['default'].findDOMNode(this.refs.input);
	      // istanbul ignore else
	      if (input instanceof HTMLElement) {
	        input.focus();
	      }
	    }
	  }, {
	    key: '_open',
	    value: function _open(eventType, props) {
	      this._lastOpenEventType = eventType;
	      var disableFilter = eventType !== 'autocomplete' && this._hasNoOrExactMatch(props);
	      this.setState({ open: true, disableFilter: disableFilter });
	
	      var onSearch = props.onSearch;
	      var _state = this.state,
	          inputValue = _state.inputValue,
	          searchValue = _state.searchValue;
	
	      if (onSearch && searchValue !== inputValue) {
	        this.setState({ searchValue: inputValue });
	        onSearch(inputValue);
	      }
	    }
	  }, {
	    key: '_close',
	    value: function _close() {
	      this.setState({ open: false });
	    }
	  }, {
	    key: '_toggleOpen',
	    value: function _toggleOpen(eventType, props) {
	      if (this.state.open) {
	        this._close();
	      } else {
	        this._open(eventType, props);
	      }
	    }
	  }, {
	    key: '_canOpen',
	    value: function _canOpen() {
	      var datalist = this.props.datalist;
	
	      return datalist == null && this.props.onSearch || !this._listAdapter.isEmpty(datalist) || !!this.props.datalistMessage;
	    }
	  }, {
	    key: '_hasNoOrExactMatch',
	    value: function _hasNoOrExactMatch(props) {
	      var _this2 = this;
	
	      if (this._inputItem != null && !this._inputItemEphemeral) {
	        return true; // exact match
	      }
	      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);
	      return this._listAdapter.find(props.datalist, function (item) {
	        return _this2._itemAdapter.itemIncludedByInput(item, foldedValue);
	      }) == null;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var showToggle = this.props.showToggle;
	
	      var toggleCanOpen = this._canOpen();
	      var toggleVisible = showToggle === 'auto' ? toggleCanOpen : showToggle;
	      var classes = {
	        autosuggest: true,
	        open: this.state.open,
	        disabled: this.props.disabled,
	        dropdown: toggleVisible && !this.props.dropup,
	        dropup: toggleVisible && this.props.dropup
	      };
	      return _react2['default'].createElement(
	        'div',
	        {
	          key: 'dropdown',
	          className: (0, _classnames2['default'])(classes),
	          onFocus: this._handleFocus,
	          onBlur: this._handleBlur },
	        this._renderInputGroup(toggleVisible, toggleCanOpen),
	        this._renderMenu()
	      );
	    }
	  }, {
	    key: '_renderInputGroup',
	    value: function _renderInputGroup(toggleVisible, toggleCanOpen) {
	      var addonBefore = this.props.addonBefore ? _react2['default'].createElement(
	        'span',
	        { className: 'input-group-addon', key: 'addonBefore' },
	        this.props.addonBefore
	      ) : null;
	
	      var addonAfter = this.props.addonAfter ? _react2['default'].createElement(
	        'span',
	        { className: 'input-group-addon', key: 'addonAfter' },
	        this.props.addonAfter
	      ) : null;
	
	      var buttonBefore = this.props.buttonBefore ? _react2['default'].createElement(
	        'span',
	        { className: 'input-group-btn' },
	        this.props.buttonBefore
	      ) : null;
	
	      // Bootstrap expects the dropdown toggle to be last,
	      // as it does not reset the right border radius for toggles:
	      // .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle)
	      // { @include border-right-radius(0); }
	      var toggle = toggleVisible && this._renderToggle(toggleCanOpen);
	      var buttonAfter = toggle || this.props.buttonAfter ? _react2['default'].createElement(
	        'span',
	        { className: 'input-group-btn' },
	        this.props.buttonAfter,
	        toggle
	      ) : null;
	
	      var classes = (0, _classnames2['default'])({
	        'input-group': addonBefore || addonAfter || buttonBefore || buttonAfter,
	        'input-group-sm': this.props.bsSize === 'small',
	        'input-group-lg': this.props.bsSize === 'large',
	        'input-group-toggle': !!toggle
	      });
	      return classes ? _react2['default'].createElement(
	        'div',
	        { className: classes, key: 'input-group' },
	        addonBefore,
	        buttonBefore,
	        this._renderChoices(),
	        addonAfter,
	        buttonAfter
	      ) : this._renderChoices();
	    }
	  }, {
	    key: '_renderToggle',
	    value: function _renderToggle(canOpen) {
	      return _react2['default'].createElement(_reactBootstrap.Dropdown.Toggle, {
	        ref: 'toggle',
	        key: 'toggle',
	        id: this.props.toggleId,
	        bsSize: this.props.bsSize,
	        disabled: this.props.disabled || !canOpen,
	        open: this.state.open,
	        onClick: this._handleToggleClick,
	        onKeyDown: this._handleKeyDown });
	    }
	  }, {
	    key: '_renderChoices',
	    value: function _renderChoices() {
	      if (this.props.multiple) {
	        var _props$choicesClass = this.props.choicesClass,
	            ChoicesClass = _props$choicesClass === undefined ? _Choices2['default'] : _props$choicesClass;
	
	        return _react2['default'].createElement(
	          ChoicesClass,
	          { ref: 'choices',
	            autoHeight: !this.props.showToggle && !this.props.addonAfter && !this.props.addonBefore && !this.props.buttonAfter && !this.props.buttonBefore,
	            disabled: this.props.disabled,
	            focused: this.state.inputFocused,
	            inputValue: this.state.inputValue,
	            items: this.state.selectedItems,
	            onKeyPress: this._handleKeyPress,
	            onRemove: this._removeItem,
	            renderItem: this._renderSelected },
	          this._renderInput()
	        );
	      }
	      return this._renderInput();
	    }
	
	    // autobind
	
	  }, {
	    key: '_renderSelected',
	    value: function _renderSelected(item) {
	      return this._itemAdapter.renderSelected(item);
	    }
	  }, {
	    key: '_renderInput',
	    value: function _renderInput() {
	      var formGroup = this.context.$bs_formGroup;
	      var controlId = formGroup && formGroup.controlId;
	      var extraProps = {};
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = Object.keys(this.props)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var key = _step2.value;
	
	          if (!Autosuggest.propTypes[key]) {
	            extraProps[key] = this.props[key];
	          }
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2['return']) {
	            _iterator2['return']();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	
	      var noneSelected = !this.props.multiple || !this.state.selectedItems.length;
	      // set autoComplete off to avoid a redundant browser drop-down menu,
	      // but allow it to be overridden by extra props for auto-fill purposes
	      return _react2['default'].createElement('input', _extends({
	        autoComplete: 'off'
	      }, extraProps, {
	        className: (0, _classnames2['default'])(this.props.className, { 'form-control': !this.props.multiple }),
	        ref: 'input',
	        key: 'input',
	        id: controlId,
	        disabled: this.props.disabled,
	        required: this.props.required && noneSelected,
	        placeholder: noneSelected ? this.props.placeholder : undefined,
	        type: this.props.type,
	        value: this.state.inputValue,
	        onChange: this._handleInputChange,
	        onKeyDown: this._handleKeyDown,
	        onKeyPress: this._handleKeyPress,
	        onFocus: this._handleInputFocus,
	        onBlur: this._handleInputBlur }));
	    }
	  }, {
	    key: '_renderMenu',
	    value: function _renderMenu() {
	      var _this3 = this;
	
	      this._pseudofocusedItem = null;
	      var open = this.state.open;
	
	      if (!open) {
	        return null;
	      }
	      var datalist = this.props.datalist;
	
	      var foldedValue = this._itemAdapter.foldValue(this.state.inputValue);
	      this._foldedInputValue = foldedValue;
	      var items = void 0;
	      if (this.state.disableFilter) {
	        items = this._listAdapter.toArray(datalist);
	      } else {
	        items = this._listAdapter.filter(datalist, function (item) {
	          return _this3._itemAdapter.itemIncludedByInput(item, foldedValue) && _this3._allowItem(item);
	        });
	      }
	      items = this._itemAdapter.sortItems(items, foldedValue);
	      var filtered = items.length < this._listAdapter.getLength(datalist);
	      // visually indicate that first item will be selected if Enter is pressed
	      // while the input element is focused (unless multiple and not datalist-only)
	      var focusedIndex = void 0;
	      if (items.length > 0 && this.state.inputFocused && (!this.props.multiple || this.props.datalistOnly)) {
	        this._pseudofocusedItem = items[focusedIndex = 0];
	      }
	      var _props = this.props,
	          _props$suggestionsCla = _props.suggestionsClass,
	          SuggestionsClass = _props$suggestionsCla === undefined ? _Suggestions2['default'] : _props$suggestionsCla,
	          datalistMessage = _props.datalistMessage,
	          onDatalistMessageSelect = _props.onDatalistMessageSelect,
	          toggleId = _props.toggleId;
	
	      return _react2['default'].createElement(SuggestionsClass, { ref: 'suggestions',
	        datalistMessage: datalistMessage,
	        filtered: filtered,
	        focusedIndex: focusedIndex,
	        getItemKey: this._getItemKey,
	        isSelectedItem: this._isSelectedItem,
	        items: items,
	        labelledBy: toggleId,
	        onClose: this._handleMenuClose,
	        onDatalistMessageSelect: onDatalistMessageSelect,
	        onDisableFilter: this._handleShowAll,
	        onSelect: this._handleItemSelect,
	        open: open,
	        renderItem: this._renderSuggested });
	    }
	  }, {
	    key: '_allowItem',
	    value: function _allowItem(item) {
	      var _this4 = this;
	
	      if (this.props.allowDuplicates) {
	        return true;
	      }
	      var value = this._itemAdapter.getInputValue(item);
	      return !this.state.selectedItems.find(function (i) {
	        return _this4._itemAdapter.getInputValue(i) === value;
	      });
	    }
	
	    // autobind
	
	  }, {
	    key: '_getItemKey',
	    value: function _getItemKey(item) {
	      return this._itemAdapter.getReactKey(item);
	    }
	
	    // autobind
	
	  }, {
	    key: '_isSelectedItem',
	    value: function _isSelectedItem(item) {
	      return this._itemAdapter.itemMatchesInput(item, this._foldedInputValue);
	    }
	
	    // autobind
	
	  }, {
	    key: '_renderSuggested',
	    value: function _renderSuggested(item) {
	      return this._itemAdapter.renderSuggested(item);
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleToggleClick',
	    value: function _handleToggleClick() {
	      this._toggleOpen('click', this.props);
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleInputChange',
	    value: function _handleInputChange(event) {
	      var _this5 = this;
	
	      var _ref2 = event.target,
	          value = _ref2.value;
	      // prevent auto-complete on backspace/delete/copy/paste/etc.
	
	      var allowAutoComplete = this._keyPressCount > this.state.inputValueKeyPress;
	      if (allowAutoComplete && value) {
	        if (this._autoCompleteAfterRender) {
	          this._setValueMeta();
	          this._setInputValue(value, function () {
	            _this5._checkAutoComplete(value, _this5.props);
	          });
	        } else if (!this._checkAutoComplete(value, this.props)) {
	          this._setValueMeta();
	          this._setInputValue(value);
	        }
	      } else {
	        this._setValueMeta();
	        this._setInputValue(value);
	      }
	
	      // suppress onSearch if can't auto-complete and not open
	      if (allowAutoComplete || this.state.open) {
	        var _onSearch = this.props.onSearch;
	
	        if (_onSearch) {
	          clearTimeout(this._searchTimeoutId);
	          this._searchTimeoutId = setTimeout(function () {
	            _this5._searchTimeoutId = null;
	            if (value != _this5.state.searchValue) {
	              _this5.setState({ searchValue: value });
	              _onSearch(value);
	            }
	          }, this.props.searchDebounce);
	        }
	      }
	    }
	  }, {
	    key: '_checkAutoComplete',
	    value: function _checkAutoComplete(value, props) {
	      var _this6 = this;
	
	      // open dropdown if any items would be included
	      var valueUpdated = false;
	      var datalist = props.datalist;
	
	      var foldedValue = this._itemAdapter.foldValue(value);
	      var includedItems = this._listAdapter.filter(datalist, function (i) {
	        return _this6._itemAdapter.itemIncludedByInput(i, foldedValue) && _this6._allowItem(i);
	      });
	      if (includedItems.length > 0) {
	        // if only one item is included and the value must come from the list,
	        // autocomplete using that item
	        var _datalistOnly = props.datalistOnly,
	            _datalistPartial = props.datalistPartial;
	
	        if (includedItems.length === 1 && _datalistOnly && !_datalistPartial) {
	          var found = includedItems[0];
	          var foundValue = this._itemAdapter.getInputValue(found);
	          var callback = void 0;
	          var _inputSelect = props.inputSelect;
	
	          if (value != foundValue && _inputSelect && this._itemAdapter.foldValue(foundValue).startsWith(foldedValue)) {
	            var _input = this.refs.input;
	            callback = function callback() {
	              _inputSelect(_input, value, foundValue);
	            };
	          }
	          this._setValueMeta(found);
	          this._setInputValue(foundValue, callback);
	          valueUpdated = true;
	          if (this.state.open ? props.closeOnCompletion : value != foundValue && !props.closeOnCompletion) {
	            this._toggleOpen('autocomplete', props);
	          }
	        } else {
	          // otherwise, just check if any values match, and select the first one
	          // (without modifying the input value)
	          var _found = includedItems.find(function (i) {
	            return _this6._itemAdapter.itemMatchesInput(i, foldedValue);
	          });
	          if (_found) {
	            this._setValueMeta(_found);
	            this._setInputValue(value);
	            valueUpdated = true;
	          }
	          // open dropdown unless exactly one matching value was found
	          if (!this.state.open && (!_found || includedItems.length > 1)) {
	            this._open('autocomplete', props);
	          }
	        }
	      }
	      return valueUpdated;
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleItemSelect',
	    value: function _handleItemSelect(item) {
	      if (this.props.multiple) {
	        this._addItem(item);
	      } else {
	        var itemValue = this._itemAdapter.getInputValue(item);
	        this._setValueMeta(item);
	        this._setInputValue(itemValue);
	      }
	      this._close();
	    }
	  }, {
	    key: '_addItem',
	    value: function _addItem(item) {
	      if (this._allowItem(item)) {
	        var _selectedItems3 = [].concat(_toConsumableArray(this.state.selectedItems), [item]);
	        this.setState({ selectedItems: _selectedItems3 });
	        var _props2 = this.props,
	            _onAdd = _props2.onAdd,
	            _onChange2 = _props2.onChange;
	
	        if (_onAdd) {
	          _onAdd(item);
	        }
	        if (_onChange2) {
	          _onChange2(_selectedItems3);
	        }
	      }
	      this._clearInput();
	      if (this.state.open) {
	        this._close();
	      }
	    }
	
	    // autobind
	
	  }, {
	    key: '_removeItem',
	    value: function _removeItem(index) {
	      var previousItems = this.state.selectedItems;
	      var selectedItems = previousItems.slice(0, index).concat(previousItems.slice(index + 1));
	      this.setState({ selectedItems: selectedItems });
	      var _props3 = this.props,
	          onRemove = _props3.onRemove,
	          onChange = _props3.onChange;
	
	      if (onRemove) {
	        onRemove(index);
	      }
	      if (onChange) {
	        onChange(selectedItems);
	      }
	    }
	  }, {
	    key: '_addInputValue',
	    value: function _addInputValue() {
	      if (this._inputItem) {
	        this._addItem(this._inputItem);
	        return true;
	      }
	      return false;
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleShowAll',
	    value: function _handleShowAll() {
	      this.setState({ disableFilter: true });
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleKeyDown',
	    value: function _handleKeyDown(event) {
	      if (this.props.disabled) return;
	
	      switch (event.keyCode || event.which) {
	        case _keycode2['default'].codes.down:
	        case _keycode2['default'].codes['page down']:
	          if (this.state.open) {
	            this.refs.suggestions.focusFirst();
	          } else if (this._canOpen()) {
	            this._open('keydown', this.props);
	          }
	          event.preventDefault();
	          break;
	        case _keycode2['default'].codes.left:
	        case _keycode2['default'].codes.backspace:
	          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === 0) {
	            this.refs.choices.focusLast();
	            event.preventDefault();
	          }
	          break;
	        case _keycode2['default'].codes.right:
	          if (this.refs.choices && this.refs.input && this._getCursorPosition(this.refs.input) === this.state.inputValue.length) {
	            this.refs.choices.focusFirst();
	            event.preventDefault();
	          }
	          break;
	        case _keycode2['default'].codes.enter:
	          if (this.props.multiple && this.state.inputValue) {
	            event.preventDefault();
	            if (this._addInputValue()) {
	              break;
	            }
	          }
	          if (this.state.open && this.state.inputFocused) {
	            event.preventDefault();
	            if (this._pseudofocusedItem) {
	              this._handleItemSelect(this._pseudofocusedItem);
	            } else {
	              this._close();
	            }
	          }
	          break;
	        case _keycode2['default'].codes.esc:
	        case _keycode2['default'].codes.tab:
	          this._handleMenuClose(event);
	          break;
	      }
	    }
	  }, {
	    key: '_getCursorPosition',
	    value: function _getCursorPosition(input) {
	      var inputNode = _reactDom2['default'].findDOMNode(input);
	      // istanbul ignore else
	      if (inputNode instanceof HTMLInputElement) {
	        return inputNode.selectionStart;
	      }
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleKeyPress',
	    value: function _handleKeyPress() {
	      ++this._keyPressCount;
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleMenuClose',
	    value: function _handleMenuClose() {
	      if (this.state.open) {
	        this._close();
	      }
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleInputFocus',
	    value: function _handleInputFocus() {
	      this.setState({ inputFocused: true });
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleInputBlur',
	    value: function _handleInputBlur() {
	      this.setState({ inputFocused: false });
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleFocus',
	    value: function _handleFocus() {
	      if (this._focusTimeoutId) {
	        clearTimeout(this._focusTimeoutId);
	        this._focusTimeoutId = null;
	      } else {
	        this._focused = true;
	        var _onFocus = this.props.onFocus;
	
	        if (_onFocus) {
	          var _value3 = this._getCurrentValue();
	          _onFocus(_value3);
	        }
	      }
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleBlur',
	    value: function _handleBlur() {
	      var _this7 = this;
	
	      this._focusTimeoutId = setTimeout(function () {
	        _this7._focusTimeoutId = null;
	        _this7._focused = false;
	        var inputValue = _this7.state.inputValue;
	        var onBlur = _this7.props.onBlur;
	
	        if (_this7.props.multiple) {
	          if (inputValue && !_this7._addInputValue()) {
	            _this7._clearInput();
	          }
	        } else if (inputValue != _this7._lastValidValue) {
	          // invoke onBlur after state change, rather than immediately
	          var callback = void 0;
	          if (onBlur) {
	            callback = function callback() {
	              var value = _this7._getCurrentValue();
	              onBlur(value);
	            };
	          }
	          // restore last valid value/item
	          _this7._setValueMeta(_this7._lastValidItem, false, true, true);
	          _this7._setInputValue(_this7._lastValidValue, callback);
	          return;
	        }
	        if (onBlur) {
	          var _value4 = _this7._getCurrentValue();
	          onBlur(_value4);
	        }
	      }, 1);
	    }
	  }]);
	
	  return Autosuggest;
	}(_react2['default'].Component);
	
	Autosuggest.propTypes = {
	  /**
	   * Text or component appearing in the input group after the input element
	   * (and before any button specified in `buttonAfter`).
	   */
	  addonAfter: _propTypes2['default'].node,
	  /**
	    * Text or component appearing in the input group before the input element
	    * (and before any button specified in `buttonBefore`).
	    */
	  addonBefore: _propTypes2['default'].node,
	  /**
	   * Indicates whether duplicate values are allowed in `multiple` mode.
	   */
	  allowDuplicates: _propTypes2['default'].bool,
	  /**
	   * Specifies the size of the form group and its contained components.
	   * Leave undefined for normal/medium size.
	   */
	  bsSize: _propTypes2['default'].oneOf(['small', 'large']),
	  /**
	   * Button component appearing in the input group after the input element
	   * (and after any add-on specified in `addonAfter`).
	   */
	  buttonAfter: _propTypes2['default'].node,
	  /**
	   * Button component appearing in the input group before the input element
	   * (and after any add-on specified in `addonBefore`).
	   */
	  buttonBefore: _propTypes2['default'].node,
	  /**
	   * React component class used to render the selected items in multiple mode.
	   */
	  choicesClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),
	  /**
	   * Indicates whether the drop-down menu should be closed automatically when
	   * auto-completion occurs. By default, the menu will remain open, so the
	   * user can see any additional information about the selected item (such as
	   * a shorthand code that caused it to be selected).
	   */
	  closeOnCompletion: _propTypes2['default'].bool,
	  /**
	   * A collection of items (such as an array, object, or Map) used as
	   * auto-complete suggestions. Each item may have any type supported by the
	   * `itemAdapter`. The default item adapter has basic support for any
	   * non-null type: it will initially try to access item properties using the
	   * configured property names (`itemReactKeyPropName`, `itemSortKeyPropName`,
	   * and `itemValuePropName`), but will fall back to using the `toString`
	   * method to obtain these properties to support primitives and other object
	   * types.
	   *
	   * If `datalist` is undefined or null and `onSearch` is not, the datalist
	   * is assumed to be dynamically populated, and the drop-down toggle will be
	   * enabled and will trigger `onSearch` the first time it is clicked.
	   * Conversely, an empty `datalist` or undefined/null `onSearch` indicates
	   * that there are no auto-complete options.
	   */
	  datalist: _propTypes2['default'].any,
	  /**
	   * An instance of the ListAdapter class that provides datalist access
	   * methods required by this component.
	   */
	  datalistAdapter: _propTypes2['default'].object,
	  /**
	   * Message to be displayed at the end of the datalist. It can be used to
	   * indicate that data is being fetched asynchronously, that an error
	   * occurred fetching data, or that additional options can be requested.
	   * It behaves similarly to a menu item, except that it is not filtered or
	   * sorted and cannot be selected (except to invoke `onDatalistMessageSelect`).
	   * Changing this property to a different non-null value while the component
	   * is focused causes the drop-down menu to be opened, which is useful for
	   * reporting status, such as that options are being fetched or failed to be
	   * fetched.
	   */
	  datalistMessage: _propTypes2['default'].node,
	  /**
	   * Indicates that only values matching an item from the `datalist` property
	   * are considered valid. For search purposes, intermediate values of the
	   * underlying `input` element may not match while the component is focused,
	   * but any non-matching value will be replaced with the previous matching
	   * value when the component loses focus.
	   *
	   * Note that there are two cases where the current (valid) value may not
	   * correspond to an item in the datalist:
	   *
	   * - If the value was provided by the `value` or `defaultValue` property
	   *   and either `datalist` is undefined/null (as opposed to empty) or
	   *   `datalistPartial` is true, the value is assumed to be valid.
	   * - If `datalist` changes and `datalistPartial` is true, any previously
	   *   valid value is assumed to remain valid. (Conversely, if `datalist`
	   *   changes and `datalistPartial` is false, a previously valid value will
	   *   be invalidated if not in the new `datalist`.)
	   */
	  datalistOnly: _propTypes2['default'].bool,
	  /**
	   * Indicates that the `datalist` property should be considered incomplete
	   * for validation purposes. Specifically, if both `datalistPartial` and
	   * `datalistOnly` are true, changes to the `datalist` will not render
	   * invalid a value that was previously valid. This is useful in cases where
	   * a partial datalist is obtained dynamically in response to the `onSearch`
	   * callback.
	   */
	  datalistPartial: _propTypes2['default'].bool,
	  /**
	   * Initial value to be rendered when used as an
	   * [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components)
	   * (i.e. no `value` property is supplied).
	   */
	  defaultValue: _propTypes2['default'].any,
	  /**
	   * Indicates whether the form group is disabled, which causes all of its
	   * contained elements to ignore input and focus events and to be displayed
	   * grayed out.
	   */
	  disabled: _propTypes2['default'].bool,
	  /**
	   * Indicates whether the suggestion list should drop up instead of down.
	   *
	   * Note that currently a drop-up list extending past the top of the page is
	   * clipped, rendering the clipped items inaccessible, whereas a drop-down
	   * list will extend the page and allow scrolling as necessary.
	   */
	  dropup: _propTypes2['default'].bool,
	  /**
	   * Custom class name applied to the input group.
	   */
	  groupClassName: _propTypes2['default'].string,
	  /**
	   * Function used to select a portion of the input value when auto-completion
	   * occurs. The default implementation selects just the auto-completed
	   * portion, which is equivalent to:
	   *
	   * ```js
	   *   defaultInputSelect(input, value, completion) {
	   *     input.setSelectionRange(value.length, completion.length)
	   *   }
	   * ```
	   */
	  inputSelect: _propTypes2['default'].func,
	  /**
	   * An instance of the ItemAdapter class that provides the item access
	   * methods required by this component.
	   */
	  itemAdapter: _propTypes2['default'].object,
	  /**
	   * Name of the item property used for the React component key. If this
	   * property is not defined, `itemValuePropName` is used instead. If neither
	   * property is defined, `toString()` is called on the item.
	   */
	  itemReactKeyPropName: _propTypes2['default'].string,
	  /**
	   * Name of the item property used for sorting items. If this property is not
	   * defined, `itemValuePropName` is used instead. If neither property is
	   * defined, `toString()` is called on the item.
	   */
	  itemSortKeyPropName: _propTypes2['default'].string,
	  /**
	   * Name of item property used for the input element value. If this property
	   * is not defined, `toString()` is called on the item.
	   */
	  itemValuePropName: _propTypes2['default'].string,
	  /**
	   * Enables selection of multiple items. The value property should be an
	   * array of items.
	   */
	  multiple: _propTypes2['default'].bool,
	  /**
	   * Callback function called whenever a new value should be appended to the
	   * array of values in `multiple` mode. The sole argument is the added item.
	   */
	  onAdd: _propTypes2['default'].func,
	  /**
	   * Callback function called whenever the input focus leaves this component.
	   * The sole argument is current value (see `onChange for details`).
	   */
	  onBlur: _propTypes2['default'].func,
	  /**
	   * Callback function called whenever the input value changes to a different
	   * valid value. Validity depends on properties such as `datalistOnly`,
	   * `valueIsItem`, and `required`. The sole argument is current value:
	   *
	   * - If `multiple` is enabled, the current value is an array of selected
	   *   items.
	   * - If `valueIsItem` is enabled, the current value is the selected
	   *   datalist item.
	   * - Otherwise, the current value is the `input` element value. Note that
	   *   if `datalistOnly` or `required` are enabled, only valid values trigger
	   *   a callback.
	   */
	  onChange: _propTypes2['default'].func,
	  /**
	   * Callback function called whenever the datalist item created for
	   * `datalistMessage` is selected. If this property is null, the associated
	   * item is displayed as disabled.
	   */
	  onDatalistMessageSelect: _propTypes2['default'].func,
	  /**
	   * Callback function called whenever the input focus enters this component.
	   * The sole argument is current value (see `onChange for details`).
	   */
	  onFocus: _propTypes2['default'].func,
	  /**
	   * Callback function called whenever a value should be removed from the
	   * array of values in `multiple` mode. The sole argument is the index of
	   * the value to remove.
	   */
	  onRemove: _propTypes2['default'].func,
	  /**
	   * Callback function called periodically when the `input` element value has
	   * changed. The sole argument is the current value of the `input` element.
	   * This callback can be used to dynamically populate the `datalist` based on
	   * the input value so far, e.g. with values obtained from a remote service.
	   * Once changed, the value must then remain unchanged for `searchDebounce`
	   * milliseconds before the function will be called. No two consecutive
	   * invocations of the function will be passed the same value (i.e. changing
	   * and then restoring the value within the debounce interval is not
	   * considered a change). Note also that the callback can be invoked with an
	   * empty string, if the user clears the `input` element; this implies that
	   * any minimum search string length should be imposed by the function.
	   */
	  onSearch: _propTypes2['default'].func,
	  /**
	   * Callback function called whenever an item from the suggestion list is
	   * selected (regardless of whether it is clicked or typed). The sole
	   * argument is the selected item.
	   */
	  onSelect: _propTypes2['default'].func,
	  /**
	   * Callback function called whenever the drop-down list of suggestions is
	   * opened or closed. The sole argument is a boolean value indicating whether
	   * the list is open.
	   */
	  onToggle: _propTypes2['default'].func,
	  /**
	   * Placeholder text propagated to the underlying `input` element (when
	   * `multiple` is false or no items have been selected).
	   */
	  placeholder: _propTypes2['default'].string,
	  /**
	   * `required` property passed to the `input` element (when `multiple` is
	   * false or no items have been selected).
	   */
	  required: _propTypes2['default'].bool,
	  /**
	   * The number of milliseconds that must elapse between the last change to
	   * the `input` element value and a call to `onSearch`. The default is 250.
	   */
	  searchDebounce: _propTypes2['default'].number,
	  /**
	   * Indicates whether to show the drop-down toggle. If set to `auto`, the
	   * toggle is shown only when the `datalist` is non-empty or dynamic.
	   */
	  showToggle: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].oneOf(['auto'])]),
	  /**
	   * React component class used to render the drop-down list of suggestions.
	   */
	  suggestionsClass: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].string]),
	  /**
	   * ID supplied to the drop-down toggle and used by the drop-down menu to
	   * refer to it.
	   */
	  toggleId: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),
	  /**
	   * `type` property supplied to the contained `input` element. Only textual
	   * types should be specified, such as `text`, `search`, `email`, `tel`, or
	   * perhaps `number`. Note that the browser may supply additional UI elements
	   * for some types (e.g. increment/decrement buttons for `number`) that may
	   * need additional styling or may interfere with UI elements supplied by
	   * this component.
	   */
	  type: _propTypes2['default'].string,
	  /**
	   * The value to be rendered by the component. If unspecified, the component
	   * behaves like an [uncontrolled component](https://facebook.github.io/react/docs/forms.html#uncontrolled-components).
	   */
	  value: _propTypes2['default'].any,
	  /**
	   * Indicates that the `value` property should be interpreted as a datalist
	   * item, as opposed to the string value of the underlying `input` element.
	   * When false (the default), the `value` property (if specified) is
	   * expected to be a string and corresponds (indirectly) to the `value`
	   * property of the underlying `input` element. When true, the `value`
	   * property is expected to be a datalist item whose display value (as
	   * provided by the `itemAdapter`) is used as the `input` element value.
	   * This property also determines whether the argument to the `onChange`
	   * callback is the `input` value or a datalist item.
	   *
	   * Note that unless `datalistOnly` is also true, items may also be created
	   * dynamically using the `newFromValue` method of the `itemAdapter`.
	   *
	   * Also note that this property is ignored if `multiple` is true; in that
	   * case, the `value` property and `onChange` callback argument are
	   * implicitly an array of datalist items.
	   */
	  valueIsItem: _propTypes2['default'].bool
	};
	Autosuggest.contextTypes = {
	  $bs_formGroup: _propTypes2['default'].object
	};
	Autosuggest.defaultProps = {
	  closeOnCompletion: false,
	  datalistOnly: false,
	  datalistPartial: false,
	  disabled: false,
	  dropup: false,
	  inputSelect: Autosuggest.defaultInputSelect,
	  multiple: false,
	  itemReactKeyPropName: 'key',
	  itemSortKeyPropName: 'sortKey',
	  itemValuePropName: 'value',
	  searchDebounce: 250,
	  showToggle: 'auto',
	  type: 'text',
	  valueIsItem: false
	};
	exports['default'] = Autosuggest;

/***/ }),
/* 719 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _shallowEqual = __webpack_require__(129);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _keycode = __webpack_require__(420);
	
	var _keycode2 = _interopRequireDefault(_keycode);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Choices = function (_React$Component) {
	  _inherits(Choices, _React$Component);
	
	  function Choices() {
	    var _ref;
	
	    _classCallCheck(this, Choices);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    /* istanbul ignore next: https://github.com/gotwarlost/istanbul/issues/690#issuecomment-265718617 */
	    var _this = _possibleConstructorReturn(this, (_ref = Choices.__proto__ || Object.getPrototypeOf(Choices)).call.apply(_ref, [this].concat(_toConsumableArray(args))));
	
	    var self = _this; // https://github.com/facebook/flow/issues/1517
	    self._handleKeyDown = _this._handleKeyDown.bind(_this);
	    self._handleKeyPress = _this._handleKeyPress.bind(_this);
	    self._handleClose = _this._handleClose.bind(_this);
	    self._handleClick = _this._handleClick.bind(_this);
	    self._focusInput = _this._focusInput.bind(_this);
	    return _this;
	  }
	
	  _createClass(Choices, [{
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps) {
	      return !(0, _shallowEqual2['default'])(this.props, nextProps);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props = this.props,
	          autoHeight = _props.autoHeight,
	          disabled = _props.disabled,
	          focused = _props.focused,
	          inputValue = _props.inputValue,
	          items = _props.items,
	          renderItem = _props.renderItem,
	          children = _props.children;
	
	      var hasItems = items.length > 0;
	      var inputStyle = void 0;
	      if (hasItems) {
	        // guesstimate input width since inline-block container
	        // won't allow it to expand automatically
	        inputStyle = { width: (inputValue.length + 1) * 0.75 + 'em' };
	      }
	      return _react2['default'].createElement(
	        'ul',
	        { className: (0, _classnames2['default'])('form-control', 'autosuggest-choices', {
	            focused: focused,
	            'has-items': hasItems,
	            'auto-height': autoHeight
	          }),
	          disabled: disabled,
	          onClick: this._focusInput },
	        items.map(function (item, index) {
	          return _react2['default'].createElement(
	            'li',
	            { key: index, 'data-index': index,
	              tabIndex: !disabled ? '-1' : undefined,
	              className: 'autosuggest-choice',
	              onKeyDown: _this2._handleKeyDown,
	              onKeyPress: _this2._handleKeyPress },
	            _react2['default'].createElement('span', { className: 'autosuggest-choice-close',
	              onClick: _this2._handleClose }),
	            _react2['default'].createElement(
	              'span',
	              { className: 'autosuggest-choice-label',
	                onClick: _this2._handleClick },
	              renderItem(item)
	            )
	          );
	        }),
	        _react2['default'].createElement(
	          'li',
	          { className: 'autosuggest-input-choice', style: inputStyle },
	          children
	        )
	      );
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleKeyDown',
	    value: function _handleKeyDown(event) {
	      switch (event.keyCode) {
	        case _keycode2['default'].codes.left:
	          this._focusPrevious();
	          event.preventDefault();
	          break;
	        case _keycode2['default'].codes.right:
	          this._focusNext();
	          event.preventDefault();
	          break;
	        case _keycode2['default'].codes.backspace:
	          this._removeActive(-1);
	          event.preventDefault();
	          break;
	        case _keycode2['default'].codes['delete']:
	          this._removeActive(0);
	          event.preventDefault();
	          break;
	      }
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleKeyPress',
	    value: function _handleKeyPress(event) {
	      // Chrome and Safari lets the input accept the key, Firefox does not
	      this._focusInput();
	
	      var onKeyPress = this.props.onKeyPress;
	      // istanbul ignore else
	
	      if (onKeyPress) {
	        onKeyPress(event);
	      }
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleClose',
	    value: function _handleClose(event) {
	      if (!this.props.disabled && event.target instanceof HTMLElement) {
	        var choices = event.target.parentNode;
	        // istanbul ignore else
	        if (choices instanceof Element) {
	          var _index = Number(choices.getAttribute('data-index'));
	          this._remove(_index);
	        }
	      }
	      event.stopPropagation();
	    }
	
	    // autobind
	
	  }, {
	    key: '_handleClick',
	    value: function _handleClick(event) {
	      event.stopPropagation();
	    }
	  }, {
	    key: 'focusFirst',
	    value: function focusFirst() {
	      var items = this._getFocusableMenuItems(false);
	      if (items.length > 0) {
	        items[0].focus();
	      }
	    }
	  }, {
	    key: 'focusLast',
	    value: function focusLast() {
	      var items = this._getFocusableMenuItems(false);
	      if (items.length > 0) {
	        items[items.length - 1].focus();
	      }
	    }
	  }, {
	    key: '_focusPrevious',
	    value: function _focusPrevious() {
	      var _getItemsAndActiveInd = this._getItemsAndActiveIndex(true),
	          items = _getItemsAndActiveInd.items,
	          activeIndex = _getItemsAndActiveInd.activeIndex;
	      // istanbul ignore else: currently input handles wrap-around
	
	
	      if (activeIndex > 0) {
	        items[activeIndex - 1].focus();
	      } else if (items.length > 0) {
	        items[items.length - 1].focus();
	      }
	    }
	  }, {
	    key: '_focusNext',
	    value: function _focusNext() {
	      var _getItemsAndActiveInd2 = this._getItemsAndActiveIndex(true),
	          items = _getItemsAndActiveInd2.items,
	          activeIndex = _getItemsAndActiveInd2.activeIndex;
	      // istanbul ignore else: currently input handles wrap-around
	
	
	      if (activeIndex < items.length - 1) {
	        items[activeIndex + 1].focus();
	      } else if (items.length > 0) {
	        items[0].focus();
	      }
	    }
	
	    // autobind
	
	  }, {
	    key: '_focusInput',
	    value: function _focusInput() {
	      var node = _reactDom2['default'].findDOMNode(this);
	      // istanbul ignore else
	      if (node instanceof Element) {
	        var input = node.querySelector('input');
	        // istanbul ignore else
	        if (input) {
	          input.focus();
	        }
	      }
	    }
	  }, {
	    key: '_remove',
	    value: function _remove(index) {
	      var onRemove = this.props.onRemove;
	      // istanbul ignore else
	
	      if (onRemove) {
	        onRemove(index);
	      }
	    }
	  }, {
	    key: '_removeActive',
	    value: function _removeActive(focusAdjust) {
	      var _getItemsAndActiveInd3 = this._getItemsAndActiveIndex(false),
	          items = _getItemsAndActiveInd3.items,
	          activeIndex = _getItemsAndActiveInd3.activeIndex;
	      // istanbul ignore else
	
	
	      if (activeIndex >= 0) {
	        var nextIndex = activeIndex + focusAdjust;
	        if (nextIndex < 0 || nextIndex >= items.length - 1) {
	          this._focusInput();
	        } else if (focusAdjust != 0) {
	          items[nextIndex].focus();
	        }
	        this._remove(activeIndex);
	      }
	    }
	  }, {
	    key: '_getItemsAndActiveIndex',
	    value: function _getItemsAndActiveIndex(includeInput) {
	      var items = this._getFocusableMenuItems(includeInput);
	      var activeElement = document.activeElement;
	      var activeIndex = activeElement ? items.indexOf(activeElement) : // istanbul ignore next
	      -1;
	      return { items: items, activeIndex: activeIndex };
	    }
	  }, {
	    key: '_getFocusableMenuItems',
	    value: function _getFocusableMenuItems(includeInput) {
	      var node = _reactDom2['default'].findDOMNode(this);
	      // istanbul ignore else
	      if (node instanceof Element) {
	        return Array.from(node.querySelectorAll(includeInput ? '[tabIndex="-1"],input' : '[tabIndex="-1"]'));
	      } else {
	        return [];
	      }
	    }
	  }]);
	
	  return Choices;
	}(_react2['default'].Component);
	
	Choices.propTypes = {
	  autoHeight: _propTypes2['default'].bool,
	  disabled: _propTypes2['default'].bool,
	  focused: _propTypes2['default'].bool,
	  inputValue: _propTypes2['default'].string,
	  items: _propTypes2['default'].arrayOf(_propTypes2['default'].any).isRequired,
	  onKeyPress: _propTypes2['default'].func,
	  onRemove: _propTypes2['default'].func,
	  renderItem: _propTypes2['default'].func.isRequired
	};
	exports['default'] = Choices;

/***/ }),
/* 720 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _shallowEqual = __webpack_require__(129);
	
	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(280);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Suggestions = function (_React$Component) {
	  _inherits(Suggestions, _React$Component);
	
	  function Suggestions() {
	    _classCallCheck(this, Suggestions);
	
	    return _possibleConstructorReturn(this, (Suggestions.__proto__ || Object.getPrototypeOf(Suggestions)).apply(this, arguments));
	  }
	
	  _createClass(Suggestions, [{
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps) {
	      return !(0, _shallowEqual2['default'])(this.props, nextProps);
	    }
	  }, {
	    key: 'isFocused',
	    value: function isFocused() {
	      var menuNode = _reactDom2['default'].findDOMNode(this.refs.menu);
	      return menuNode != null && document && menuNode.contains(document.activeElement);
	    }
	  }, {
	    key: 'focusFirst',
	    value: function focusFirst() {
	      var menu = this.refs.menu;
	
	      menu.focusNext();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          items = _props.items,
	          datalistMessage = _props.datalistMessage,
	          onDatalistMessageSelect = _props.onDatalistMessageSelect;
	
	      return _react2['default'].createElement(
	        _reactBootstrap.Dropdown.Menu,
	        {
	          labelledBy: this.props.labelledBy,
	          onClose: this.props.onClose,
	          open: this.props.open,
	          ref: 'menu' },
	        items.map(this._renderItem, this),
	        this.props.filtered && _react2['default'].createElement(
	          _reactBootstrap.MenuItem,
	          { key: 'show-all', onSelect: this.props.onDisableFilter },
	          _react2['default'].createElement(
	            'span',
	            { className: 'show-all' },
	            items.length === 0 ? _react2['default'].createElement('span', { className: 'no-matches' }) : null
	          )
	        ),
	        datalistMessage && _react2['default'].createElement(
	          _reactBootstrap.MenuItem,
	          { key: 'datalist-message',
	            disabled: onDatalistMessageSelect == null,
	            onSelect: onDatalistMessageSelect },
	          datalistMessage
	        )
	      );
	    }
	  }, {
	    key: '_renderItem',
	    value: function _renderItem(item, index) {
	      var active = this.props.isSelectedItem(item);
	      return _react2['default'].createElement(
	        _reactBootstrap.MenuItem,
	        {
	          active: active,
	          className: index === this.props.focusedIndex && !active ? 'pseudofocused' : undefined,
	          eventKey: item,
	          key: this.props.getItemKey(item),
	          onSelect: this.props.onSelect },
	        this.props.renderItem(item)
	      );
	    }
	  }]);
	
	  return Suggestions;
	}(_react2['default'].Component);
	
	Suggestions.propTypes = {
	  datalistMessage: _propTypes2['default'].node,
	  filtered: _propTypes2['default'].bool,
	  focusedIndex: _propTypes2['default'].number,
	  getItemKey: _propTypes2['default'].func.isRequired,
	  isSelectedItem: _propTypes2['default'].func.isRequired,
	  items: _propTypes2['default'].arrayOf(_propTypes2['default'].any).isRequired,
	  labelledBy: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number]),
	  onClose: _propTypes2['default'].func,
	  onDatalistMessageSelect: _propTypes2['default'].func,
	  onDisableFilter: _propTypes2['default'].func,
	  onSelect: _propTypes2['default'].func.isRequired,
	  open: _propTypes2['default'].bool,
	  renderItem: _propTypes2['default'].func.isRequired
	};
	exports['default'] = Suggestions;

/***/ }),
/* 721 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function toStringOrNumber(v) {
	  return typeof v === 'number' ? v : v.toString();
	}
	
	var ItemAdapter = function () {
	  function ItemAdapter() {
	    _classCallCheck(this, ItemAdapter);
	  }
	
	  _createClass(ItemAdapter, [{
	    key: 'receiveProps',
	    value: function receiveProps(props) {
	      this.props = props;
	    }
	  }, {
	    key: 'getReactKey',
	    value: function getReactKey(item) {
	      var propName = this.props.itemReactKeyPropName;
	
	      if (propName) {
	        var value = item[propName];
	        if (value != null) {
	          return value;
	        }
	      }
	      return toStringOrNumber(this.getRawValue(item));
	    }
	  }, {
	    key: 'getSortKey',
	    value: function getSortKey(item) {
	      var propName = this.props.itemSortKeyPropName;
	
	      if (propName) {
	        var value = item[propName];
	        if (value != null) {
	          return value;
	        }
	      }
	      return toStringOrNumber(this.getRawValue(item));
	    }
	  }, {
	    key: 'getInputValue',
	    value: function getInputValue(item) {
	      return this.getRawValue(item).toString();
	    }
	
	    // protected
	
	  }, {
	    key: 'getRawValue',
	    value: function getRawValue(item) {
	      var propName = this.props.itemValuePropName;
	
	      if (propName) {
	        var value = item[propName];
	        if (value != null) {
	          return value;
	        }
	      }
	      return item;
	    }
	  }, {
	    key: 'getTextRepresentations',
	    value: function getTextRepresentations(item) {
	      return [this.foldValue(this.getInputValue(item))];
	    }
	  }, {
	    key: 'foldValue',
	    value: function foldValue(value) {
	      // perform case folding by default; override for diacritic folding, etc.
	      return value.toLowerCase();
	    }
	  }, {
	    key: 'newFromValue',
	    value: function newFromValue(value) {
	      return value;
	    }
	  }, {
	    key: 'itemIncludedByInput',
	    value: function itemIncludedByInput(item, foldedValue) {
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = this.getTextRepresentations(item)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var text = _step.value;
	
	          if (text.indexOf(foldedValue) >= 0) {
	            return true;
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator['return']) {
	            _iterator['return']();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      return false;
	    }
	  }, {
	    key: 'itemMatchesInput',
	    value: function itemMatchesInput(item, foldedValue) {
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = this.getTextRepresentations(item)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var text = _step2.value;
	
	          if (text === foldedValue) {
	            return true;
	          }
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2['return']) {
	            _iterator2['return']();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	
	      return false;
	    }
	  }, {
	    key: 'sortItems',
	    value: function sortItems(items, foldedValue) {
	      var _this = this;
	
	      items.sort(function (a, b) {
	        return _this.compareItemsWithValue(a, b, foldedValue);
	      });
	      return items;
	    }
	
	    // protected
	
	  }, {
	    key: 'compareItemsWithValue',
	    value: function compareItemsWithValue(a, b, foldedValue) {
	      // sort matching item(s) before non-matching
	      var aMatches = this.itemMatchesInput(a, foldedValue);
	      var bMatches = this.itemMatchesInput(b, foldedValue);
	      if (aMatches != bMatches) {
	        return aMatches ? -1 : 1;
	      }
	      // then sort based on inclusion rank
	      var aRank = this.itemInclusionRankForInput(a, foldedValue);
	      var bRank = this.itemInclusionRankForInput(b, foldedValue);
	      if (aRank != bRank) {
	        return aRank - bRank;
	      }
	      // within same inclusion rank, compare items ignoring value
	      return this.compareItems(a, b);
	    }
	
	    // protected
	
	  }, {
	    key: 'itemInclusionRankForInput',
	    value: function itemInclusionRankForInput(item, foldedValue) {
	      var contains = false;
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = this.getTextRepresentations(item)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var text = _step3.value;
	
	          var index = text.indexOf(foldedValue);
	          if (index === 0) {
	            return 0;
	          }
	          if (index > 0) {
	            contains = true;
	          }
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3['return']) {
	            _iterator3['return']();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	
	      return contains ? 1 : 2;
	    }
	
	    // protected
	
	  }, {
	    key: 'compareItems',
	    value: function compareItems(a, b) {
	      var aSortKey = this.getSortKey(a);
	      var bSortKey = this.getSortKey(b);
	      return aSortKey < bSortKey ? -1 : aSortKey == bSortKey ? 0 : 1;
	    }
	
	    // protected
	
	  }, {
	    key: 'renderItem',
	    value: function renderItem(item) {
	      // default rendering for both dropdown and multiple
	      return this.getInputValue(item);
	    }
	  }, {
	    key: 'renderSuggested',
	    value: function renderSuggested(item) {
	      // dropdown rendering
	      return this.renderItem(item);
	    }
	  }, {
	    key: 'renderSelected',
	    value: function renderSelected(item) {
	      // multiple selected rendering
	      return this.renderItem(item);
	    }
	  }]);
	
	  return ItemAdapter;
	}();
	
	exports['default'] = ItemAdapter;

/***/ }),
/* 722 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _ItemAdapter = __webpack_require__(721);
	
	var _ItemAdapter2 = _interopRequireDefault(_ItemAdapter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ListAdapter = function () {
	  function ListAdapter() {
	    _classCallCheck(this, ListAdapter);
	  }
	
	  _createClass(ListAdapter, [{
	    key: 'receiveProps',
	    value: function receiveProps(props, itemAdapter) {
	      this.props = props;
	      this.itemAdapter = itemAdapter;
	    }
	  }, {
	    key: 'isEmpty',
	    value: function isEmpty(list) {
	      return !this.getLength(list);
	    }
	  }, {
	    key: 'filter',
	    value: function filter(list, predicate) {
	      return this.toArray(list).filter(predicate);
	    }
	  }, {
	    key: 'find',
	    value: function find(list, predicate) {
	      return this.toArray(list).find(predicate);
	    }
	  }, {
	    key: 'findMatching',
	    value: function findMatching(list, inputValue) {
	      var _this = this;
	
	      var foldedValue = this.itemAdapter.foldValue(inputValue);
	      return this.find(list, function (item) {
	        return _this.itemAdapter.itemMatchesInput(item, foldedValue);
	      });
	    }
	  }]);
	
	  return ListAdapter;
	}();
	
	exports['default'] = ListAdapter;

/***/ }),
/* 723 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _ListAdapter2 = __webpack_require__(722);
	
	var _ListAdapter3 = _interopRequireDefault(_ListAdapter2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var EmptyListAdapter = function (_ListAdapter) {
	  _inherits(EmptyListAdapter, _ListAdapter);
	
	  function EmptyListAdapter() {
	    _classCallCheck(this, EmptyListAdapter);
	
	    return _possibleConstructorReturn(this, (EmptyListAdapter.__proto__ || Object.getPrototypeOf(EmptyListAdapter)).apply(this, arguments));
	  }
	
	  _createClass(EmptyListAdapter, [{
	    key: 'getLength',
	    value: function getLength() {
	      return 0;
	    }
	  }, {
	    key: 'filter',
	    value: function filter() {
	      return [];
	    }
	  }, {
	    key: 'find',
	    value: function find() {}
	  }, {
	    key: 'toArray',
	    value: function toArray() {
	      return [];
	    }
	  }]);
	
	  return EmptyListAdapter;
	}(_ListAdapter3['default']);
	
	exports['default'] = EmptyListAdapter;

/***/ }),
/* 724 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _ListAdapter2 = __webpack_require__(722);
	
	var _ListAdapter3 = _interopRequireDefault(_ListAdapter2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ArrayListAdapter = function (_ListAdapter) {
	  _inherits(ArrayListAdapter, _ListAdapter);
	
	  function ArrayListAdapter() {
	    _classCallCheck(this, ArrayListAdapter);
	
	    return _possibleConstructorReturn(this, (ArrayListAdapter.__proto__ || Object.getPrototypeOf(ArrayListAdapter)).apply(this, arguments));
	  }
	
	  _createClass(ArrayListAdapter, [{
	    key: 'getLength',
	    value: function getLength(list) {
	      return list.length;
	    }
	  }, {
	    key: 'filter',
	    value: function filter(list, predicate) {
	      return list.filter(predicate);
	    }
	  }, {
	    key: 'find',
	    value: function find(list, predicate) {
	      return list.find(predicate);
	    }
	  }, {
	    key: 'toArray',
	    value: function toArray(list) {
	      return list.slice();
	    }
	  }]);
	
	  return ArrayListAdapter;
	}(_ListAdapter3['default']);
	
	exports['default'] = ArrayListAdapter;

/***/ }),
/* 725 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _KeyedListAdapter2 = __webpack_require__(726);
	
	var _KeyedListAdapter3 = _interopRequireDefault(_KeyedListAdapter2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var MapListAdapter = function (_KeyedListAdapter) {
	  _inherits(MapListAdapter, _KeyedListAdapter);
	
	  function MapListAdapter() {
	    _classCallCheck(this, MapListAdapter);
	
	    return _possibleConstructorReturn(this, (MapListAdapter.__proto__ || Object.getPrototypeOf(MapListAdapter)).apply(this, arguments));
	  }
	
	  _createClass(MapListAdapter, [{
	    key: 'getLength',
	    value: function getLength(list) {
	      return list.size;
	    }
	  }, {
	    key: 'filter',
	    value: function filter(list, predicate) {
	      var result = [];
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = list.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var entry = _step.value;
	
	          var _item = this._getKeyValueItem(entry[0], entry[1]);
	          if (predicate(_item)) {
	            result.push(_item);
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator['return']) {
	            _iterator['return']();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      return result;
	    }
	  }, {
	    key: 'find',
	    value: function find(list, predicate) {
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = list.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var entry = _step2.value;
	
	          var _item2 = this._getKeyValueItem(entry[0], entry[1]);
	          if (predicate(_item2)) {
	            return _item2;
	          }
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2['return']) {
	            _iterator2['return']();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'toArray',
	    value: function toArray(list) {
	      var result = [];
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = list.entries()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var entry = _step3.value;
	
	          result.push(this._getKeyValueItem(entry[0], entry[1]));
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3['return']) {
	            _iterator3['return']();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	
	      return result;
	    }
	  }]);
	
	  return MapListAdapter;
	}(_KeyedListAdapter3['default']);
	
	exports['default'] = MapListAdapter;

/***/ }),
/* 726 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _ListAdapter2 = __webpack_require__(722);
	
	var _ListAdapter3 = _interopRequireDefault(_ListAdapter2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var KeyedListAdapter = function (_ListAdapter) {
	  _inherits(KeyedListAdapter, _ListAdapter);
	
	  function KeyedListAdapter() {
	    var itemKeyPropName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'key';
	
	    _classCallCheck(this, KeyedListAdapter);
	
	    var _this = _possibleConstructorReturn(this, (KeyedListAdapter.__proto__ || Object.getPrototypeOf(KeyedListAdapter)).call(this));
	
	    _this.itemKeyPropName = itemKeyPropName;
	    return _this;
	  }
	
	  _createClass(KeyedListAdapter, [{
	    key: '_getKeyValueItem',
	    value: function _getKeyValueItem(key, value) {
	      var _ref;
	
	      var itemKeyPropName = this.itemKeyPropName;
	      // istanbul ignore next
	
	      var _props$itemValuePropN = this.props.itemValuePropName,
	          itemValuePropName = _props$itemValuePropN === undefined ? 'value' : _props$itemValuePropN;
	
	      if (typeof value === 'object' && itemValuePropName in value) {
	        if (value[itemKeyPropName] === key) {
	          return value;
	        } else {
	          return _extends(_defineProperty({}, itemKeyPropName, key), value);
	        }
	      }
	      return _ref = {}, _defineProperty(_ref, itemKeyPropName, key), _defineProperty(_ref, itemValuePropName, value), _ref;
	    }
	  }]);
	
	  return KeyedListAdapter;
	}(_ListAdapter3['default']);
	
	exports['default'] = KeyedListAdapter;

/***/ }),
/* 727 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _KeyedListAdapter2 = __webpack_require__(726);
	
	var _KeyedListAdapter3 = _interopRequireDefault(_KeyedListAdapter2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ObjectListAdapter = function (_KeyedListAdapter) {
	  _inherits(ObjectListAdapter, _KeyedListAdapter);
	
	  function ObjectListAdapter() {
	    _classCallCheck(this, ObjectListAdapter);
	
	    return _possibleConstructorReturn(this, (ObjectListAdapter.__proto__ || Object.getPrototypeOf(ObjectListAdapter)).apply(this, arguments));
	  }
	
	  _createClass(ObjectListAdapter, [{
	    key: 'getLength',
	    value: function getLength(list) {
	      return Object.keys(list).length;
	    }
	  }, {
	    key: 'filter',
	    value: function filter(list, predicate) {
	      var result = [];
	      var _iteratorNormalCompletion = true;
	      var _didIteratorError = false;
	      var _iteratorError = undefined;
	
	      try {
	        for (var _iterator = Object.keys(list)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	          var _key = _step.value;
	
	          var _item = this._getKeyValueItem(_key, list[_key]);
	          if (predicate(_item)) {
	            result.push(_item);
	          }
	        }
	      } catch (err) {
	        _didIteratorError = true;
	        _iteratorError = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion && _iterator['return']) {
	            _iterator['return']();
	          }
	        } finally {
	          if (_didIteratorError) {
	            throw _iteratorError;
	          }
	        }
	      }
	
	      return result;
	    }
	  }, {
	    key: 'find',
	    value: function find(list, predicate) {
	      var _iteratorNormalCompletion2 = true;
	      var _didIteratorError2 = false;
	      var _iteratorError2 = undefined;
	
	      try {
	        for (var _iterator2 = Object.keys(list)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
	          var _key2 = _step2.value;
	
	          var _item2 = this._getKeyValueItem(_key2, list[_key2]);
	          if (predicate(_item2)) {
	            return _item2;
	          }
	        }
	      } catch (err) {
	        _didIteratorError2 = true;
	        _iteratorError2 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion2 && _iterator2['return']) {
	            _iterator2['return']();
	          }
	        } finally {
	          if (_didIteratorError2) {
	            throw _iteratorError2;
	          }
	        }
	      }
	    }
	  }, {
	    key: 'toArray',
	    value: function toArray(list) {
	      var result = [];
	      var _iteratorNormalCompletion3 = true;
	      var _didIteratorError3 = false;
	      var _iteratorError3 = undefined;
	
	      try {
	        for (var _iterator3 = Object.keys(list)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
	          var _key3 = _step3.value;
	
	          result.push(this._getKeyValueItem(_key3, list[_key3]));
	        }
	      } catch (err) {
	        _didIteratorError3 = true;
	        _iteratorError3 = err;
	      } finally {
	        try {
	          if (!_iteratorNormalCompletion3 && _iterator3['return']) {
	            _iterator3['return']();
	          }
	        } finally {
	          if (_didIteratorError3) {
	            throw _iteratorError3;
	          }
	        }
	      }
	
	      return result;
	    }
	  }]);
	
	  return ObjectListAdapter;
	}(_KeyedListAdapter3['default']);
	
	exports['default'] = ObjectListAdapter;

/***/ }),
/* 728 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var BootStrapDatePicker = __webpack_require__(686);
	var moment = __webpack_require__(556);
	var react_datepicker_1 = __webpack_require__(684);
	var underscore_1 = __webpack_require__(540);
	var QuestionsCustomDatePicker = (function (_super) {
	    __extends(QuestionsCustomDatePicker, _super);
	    function QuestionsCustomDatePicker(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    QuestionsCustomDatePicker.prototype.componentWillMount = function () {
	        if (!underscore_1.isEmpty(this.props.question) && this.props.question.answer) {
	            this.setState({
	                s_birthDate: moment(this.props.question.answer)
	            });
	        }
	    };
	    QuestionsCustomDatePicker.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.question) && this.props.question.answer) {
	            this.setState({
	                s_birthDate: moment(nextProps.question.answer)
	            });
	        }
	    };
	    QuestionsCustomDatePicker.prototype.onDateInputChange = function (year, month, date) {
	        this.setState({ year: year, month: month, date: date });
	        var momentDate = moment(new Date(month + "/" + date + "/" + year));
	        if (momentDate.isValid()) {
	        }
	    };
	    QuestionsCustomDatePicker.prototype.onDateChange = function (key, value) {
	        this.setState((_a = {},
	            _a[key] = moment(value),
	            _a.formattedDate = moment(value).format("MM/DD/YYYY"),
	            _a
	        ));
	        this.props.onChange(this.props.question, moment(value).format("YYYY-MM-DD"));
	        var _a;
	    };
	    QuestionsCustomDatePicker.prototype.getClassName = function () {
	        var className = "form-control ";
	        if (this.props.className) {
	            className = className + this.props.className;
	        }
	        return className;
	    };
	    QuestionsCustomDatePicker.prototype.validate = function (q) {
	        if (!this.props.alreadyOnceSubmitted) {
	            return true;
	        }
	        if (this.props.question.constraints) {
	            var constraints = this.props.question.constraints;
	            var isValid = true;
	            if (constraints.required) {
	                if (this.props.question.answer) {
	                    var isValid = !!this.props.question.answer;
	                    if (constraints.minValue) {
	                        isValid = isValid && constraints.minValue <= this.props.question.answer;
	                    }
	                    if (constraints.maxValue) {
	                        isValid = isValid && constraints.maxValue >= this.props.question.answer;
	                    }
	                    return isValid;
	                }
	                return false;
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    QuestionsCustomDatePicker.prototype.onChangeRaw = function (e) {
	        var parentClass = "." + this.props.question.id.replace(/[^a-zA-Z0-9]/g, "");
	        if (this.previousDateVal && this.previousDateVal.length > e.target.value.length) {
	            this.previousDateVal = e.target.value;
	            return;
	        }
	        if (e.target.value) {
	            var val = e.target.value;
	            if (val.length == 1) {
	                if (isNaN(val) || parseInt(val) > 1) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = "";
	                }
	                ;
	            }
	            else if (val.length == 2) {
	                if (isNaN(val) || parseInt(val) > 12) {
	                    val = val.substr(0, 1);
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val;
	                }
	                else {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val + "/";
	                }
	            }
	            else if (val.length == 4) {
	                var tempVal = val.substr(3, 1);
	                var monthVal = parseInt(val.substr(0, 2));
	                var maxVal = 3;
	                if (monthVal == 2) {
	                    maxVal = 2;
	                }
	                if (isNaN(tempVal) || parseInt(tempVal) > maxVal) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 3);
	                }
	                else {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val;
	                }
	            }
	            else if (val.length == 5) {
	                var maxVal = 31;
	                var monthVal = parseInt(val.substr(0, 2));
	                if (monthVal == 4 || monthVal == 6 || monthVal == 9 || monthVal == 11) {
	                    maxVal = 30;
	                }
	                else if (monthVal == 2) {
	                    maxVal = 29;
	                }
	                var tempVal = val.substr(3, 2);
	                if (isNaN(tempVal) || parseInt(tempVal) > maxVal) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 4);
	                }
	                else {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val + "/";
	                }
	            }
	            else if (val.length == 7) {
	                document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val;
	                var tempVal = val.substr(6, 1);
	                if (isNaN(tempVal) || !(parseInt(tempVal) >= 1 && parseInt(tempVal) <= 2)) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 6);
	                }
	            }
	            else if (val.length == 8) {
	                var tempVal = val.substr(6, 2);
	                if (isNaN(tempVal) || !(parseInt(tempVal) >= 19 && parseInt(tempVal) <= 20)) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 7);
	                }
	            }
	            else if (val.length == 9) {
	                var tempVal = val.substr(6, 3);
	                if (isNaN(tempVal)) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 8);
	                }
	            }
	            else if (val.length == 10) {
	                var tempVal = val.substr(6, 4);
	                if (isNaN(tempVal)) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 9);
	                }
	            }
	            else if (val.length > 10) {
	                var tempVal = val.substr(6, 4);
	                document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 10);
	            }
	            this.previousDateVal = document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value;
	        }
	    };
	    QuestionsCustomDatePicker.prototype.render = function () {
	        var _this = this;
	        var wrapperClass = 'form-group';
	        if (this.props.error && this.props.error.length > 0) {
	            wrapperClass += " " + 'has-error';
	        }
	        var question = this.props.question;
	        var currentDate = moment();
	        var minDate = moment('1900-01-01');
	        var s_birthDate = this.state.s_birthDate;
	        s_birthDate = s_birthDate && s_birthDate.isValid() ? s_birthDate : "";
	        return (React.createElement(react_bootstrap_1.Row, {id: question.id.replace(/[^a-zA-Z0-9]/g, ""), className: question.id.replace(/[^a-zA-Z0-9]/g, ""), style: { marginBottom: "25px", marginLeft: "0px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text fs18", style: { marginBottom: "10px", paddingLeft: "0px" }}, question.constraints && question.constraints.required && React.createElement("span", {style: { color: "rgb(255, 73, 73)", marginRight: "9px" }}, "*"), question.caption), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "birth-date-picker-container"}, React.createElement("span", {className: "test-class"}), React.createElement(react_bootstrap_1.FormGroup, {style: { marginBottom: "10px" }, controlId: "change_handler_" + this.props.personIndex}, React.createElement(react_bootstrap_1.ControlLabel, null, React.createElement("div", {className: "custom-date-picker-container"}, React.createElement("span", {className: "custom-date-picker", onClick: this.props.onClick}, React.createElement("img", {src: "../images/calendar.svg"})))), React.createElement(react_datepicker_1.default, {selected: s_birthDate, onChange: function (date) {
	            _this.onDateChange("s_birthDate", date);
	        }, showMonthDropdown: true, showYearDropdown: true, dropdownMode: "select", placeholderText: "MM/DD/YYYY", onChangeRaw: this.onChangeRaw.bind(this), minDate: moment().subtract(120, "year"), maxDate: moment().add(0, "month")}))), !this.validate() &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, question.constraints.minValueViolationMessage || "Required"), question.answerState == "invalid" &&
	            React.createElement("div", {className: "input", style: { marginTop: "5px", color: "#ff4949" }}, "Invalid")));
	    };
	    return QuestionsCustomDatePicker;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = QuestionsCustomDatePicker;


/***/ }),
/* 729 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var InstantIdCheckPopup = (function (_super) {
	    __extends(InstantIdCheckPopup, _super);
	    function InstantIdCheckPopup() {
	        _super.call(this);
	        this.state = {};
	    }
	    InstantIdCheckPopup.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, className: "instant-id-check-popup-container", show: this.props.showInstantIdCheckPopup, onHide: this.props.onCloseModal, bsSize: "large"}, React.createElement(react_bootstrap_1.Modal.Header, null, React.createElement("img", {style: { float: "right", marginBottom: "25px", width: "24px", height: "24px" }, src: "../images/delete_beneficiary.svg", onClick: function () {
	            _this.props.onCloseModal();
	        }})), React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "instant-id-check-header"}, this.props.instantIdCheckData && this.props.instantIdCheckData.message_heading), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "instant-id-check-desc"}, this.props.instantIdCheckData && this.props.instantIdCheckData.message_data), React.createElement(react_bootstrap_1.Col, null, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", style: { marginLeft: "15px", marginTop: "15px" }, onClick: function () {
	            _this.props.onCloseModal();
	        }}, "CLOSE"))))));
	    };
	    return InstantIdCheckPopup;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = InstantIdCheckPopup;


/***/ }),
/* 730 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var QuestionsApi_1 = __webpack_require__(731);
	function getQuestions() {
	    return function (dispatch) {
	        return QuestionsApi_1.default.get().then(function (data) { return dispatch({
	            type: 'FETCHING_QUESTIONS', questions: data
	        }); });
	    };
	}
	exports.getQuestions = getQuestions;
	function postQuestions(data) {
	    return function (dispatch) {
	        return QuestionsApi_1.default.post(data).then(function (data) { return dispatch({
	            type: 'POSTING_QUESTIONS', questions: data
	        }); });
	    };
	}
	exports.postQuestions = postQuestions;
	function confirmQuestions(data) {
	    return function (dispatch) {
	        return QuestionsApi_1.default.confirm(data).then(function (data) { return dispatch({
	            type: 'CONFIRM_QUESTIONS', confirmationData: data
	        }); });
	    };
	}
	exports.confirmQuestions = confirmQuestions;
	function makePayment(data) {
	    return function (dispatch) {
	        return QuestionsApi_1.default.makePayment(data).then(function (data) { return dispatch({
	            type: 'MADE_PAYMENT', paymentData: data
	        }); });
	    };
	}
	exports.makePayment = makePayment;
	function authenticateUser(data) {
	    return function (dispatch) {
	        return QuestionsApi_1.default.authenticateUser(data).then(function (data) { return dispatch({
	            type: 'AUTHENTICATE_USER', user: data
	        }); });
	    };
	}
	exports.authenticateUser = authenticateUser;
	function changePassword(data) {
	    return function (dispatch) {
	        return QuestionsApi_1.default.changePassword(data).then(function (data) { return dispatch({
	            type: 'PASSWORD_RESET', user: data
	        }); });
	    };
	}
	exports.changePassword = changePassword;
	function sendResetLink(data) {
	    return function (dispatch) {
	        return QuestionsApi_1.default.sendResetLink(data).then(function (data) { return dispatch({
	            type: 'RESEND_LINK_SENT', resendData: data
	        }); });
	    };
	}
	exports.sendResetLink = sendResetLink;
	function getFactorsearch(data) {
	    return function (dispatch) {
	        return QuestionsApi_1.default.getFactorsearch(data).then(function (data) { return dispatch({
	            type: 'GET_FACTOR_SEARCH_OPTIONS', questions: data
	        }); });
	    };
	}
	exports.getFactorsearch = getFactorsearch;
	function postPayment(data) {
	    return function (dispatch) {
	        return QuestionsApi_1.default.postPayment(data).then(function (data) { return dispatch({
	            type: 'POST_PAYMENT_DONE', paymentInfo: data
	        }); });
	    };
	}
	exports.postPayment = postPayment;


/***/ }),
/* 731 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var fetch = __webpack_require__(549);
	var QuestionsApiI;
	var findIP = new Promise(function (r) { var w = window, a = new (w.RTCPeerConnection || w.mozRTCPeerConnection || w.webkitRTCPeerConnection)({ iceServers: [] }), b = function () { }; a.createDataChannel(""); a.createOffer(function (c) { return a.setLocalDescription(c, b, b); }, b); a.onicecandidate = function (c) { try {
	    c.candidate.candidate.match(/([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g).forEach(r);
	}
	catch (e) { } }; });
	findIP.then(function (ip) { window.currentBrowserIpAddress = ip; }).catch(function (e) { return console.error(e); });
	window.currentBrowserTimezoneOffset = new Date().getTimezoneOffset();
	window.currentBrowserTimezoneOffsetFormatted = new Date().toString().match(/([A-Z]+[\+-][0-9]+.*)/)[1];
	var queryParms = "?ipAddress=" + window.currentBrowserIpAddress + "&timezoneOffset=" + window.currentBrowserTimezoneOffset + "&timezoneFormatted=" + window.currentBrowserTimezoneOffsetFormatted + "&currentTime=";
	var QuestionsApi = (function () {
	    function QuestionsApi() {
	    }
	    QuestionsApi.prototype.get = function () {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/questions/questions' + q, {
	            method: "GET",
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    QuestionsApi.prototype.post = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/post/questions/questions' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    QuestionsApi.prototype.confirm = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/questions/confirm' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    QuestionsApi.prototype.makePayment = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/questions/make-payment' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    QuestionsApi.prototype.postPayment = function (payload) {
	        var errRes;
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/questions/post-payment' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            errRes = res;
	            console.log("sdfs");
	            console.log("sdfs");
	            var r;
	            try {
	                r = res.json().then(function (response) {
	                    return new Promise(function (resolve, reject) {
	                        resolve(response);
	                    });
	                }).catch(function (e) {
	                    return new Promise(function (resolve, reject) {
	                        resolve(e);
	                    });
	                });
	                ;
	            }
	            catch (e) {
	                console.log(e);
	                return new Promise(function (resolve, reject) {
	                    resolve(e);
	                });
	            }
	            return r;
	        });
	    };
	    ;
	    QuestionsApi.prototype.authenticateUser = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/auth/user' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    QuestionsApi.prototype.changePassword = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/auth/setpassword' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    QuestionsApi.prototype.sendResetLink = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/auth/resend-link' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return new Promise(function (resolve, reject) {
	                    resolve(response);
	                });
	            });
	        });
	    };
	    ;
	    QuestionsApi.prototype.getFactorsearch = function (payload) {
	        var q = queryParms;
	        q += new Date().getTime();
	        return fetch('/v1/questions/factorsearch' + q, {
	            method: "POST",
	            body: JSON.stringify(payload),
	            headers: {
	                'Accept': 'application/json',
	                'Content-Type': 'application/json'
	            },
	            credentials: 'include'
	        }).then(function (res) {
	            return res.json().then(function (response) {
	                return response;
	            });
	        });
	    };
	    ;
	    return QuestionsApi;
	}());
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = new QuestionsApi();


/***/ }),
/* 732 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var subheader_1 = __webpack_require__(681);
	var underscore_1 = __webpack_require__(540);
	var Questions_1 = __webpack_require__(730);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var EnterPassword_1 = __webpack_require__(733);
	var ResetPassword_1 = __webpack_require__(734);
	var Signature = (function (_super) {
	    __extends(Signature, _super);
	    function Signature() {
	        _super.call(this);
	        this.state = {};
	        this.questions = {};
	        this.actualQuestionLists = [];
	        this.questionComponents = [];
	    }
	    Signature.prototype.componentWillMount = function () {
	        var _this = this;
	        this.setState({
	            gettingQuestions: true
	        });
	        this.props.getQuestions().then(function () {
	            _this.setState({
	                gettingQuestions: false,
	                showEnterPassword: true,
	                showExpiredPopup: false
	            });
	        });
	    };
	    Signature.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.questions)) {
	            this.questions = JSON.parse(JSON.stringify(nextProps.questions));
	        }
	    };
	    Signature.prototype.sendResetLink = function (cb) {
	        this.props.sendResetLink(function () {
	            if (cb) {
	                cb();
	            }
	        });
	    };
	    Signature.prototype.authenticateUser = function (cb) {
	        var _this = this;
	        var data = {};
	        data.password = this.state.password;
	        this.props.authenticateUser(data).then(function () {
	            if (cb) {
	                cb();
	            }
	            if (_this.props.user.data.valid_user == 1) {
	                if (_this.props.user.data.change_password == 0) {
	                    if (_this.props.user.data.access_token) {
	                        var queryParams = _this.props.location.query;
	                        var queryParamsString = "?";
	                        for (var k in queryParams) {
	                            if (queryParams[k]) {
	                                queryParamsString += k + "=" + queryParams[k] + "&";
	                            }
	                            else {
	                                queryParamsString += k + "&";
	                            }
	                        }
	                        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                        return react_router_1.browserHistory.push("/questions" + queryParamsString);
	                    }
	                    else {
	                        _this.setState({
	                            enterPasswordErroMsg: _this.props.user.message
	                        });
	                    }
	                }
	                else {
	                    _this.setState({
	                        showResetPassword: true,
	                        showEnterPassword: false
	                    });
	                }
	            }
	            else {
	                _this.setState({
	                    enterPasswordErroMsg: _this.props.user.message
	                });
	            }
	        }).catch(function () {
	            console.log(_this.questions);
	        });
	    };
	    Signature.prototype.resetPassword = function (cb) {
	        var _this = this;
	        var data = {};
	        data.password = this.state.password;
	        data.new_password = this.state.new_password;
	        if (this.state.new_password != this.state.confirm_password) {
	            this.setState({
	                confirmPasswordError: true
	            });
	            if (cb) {
	                cb();
	            }
	            return;
	        }
	        this.setState({
	            confirmPasswordError: false
	        });
	        this.props.changePassword(data).then(function () {
	            var fromEditPage = false, fromReviewPage = false;
	            if (cb) {
	                cb();
	            }
	            var queryParams = _this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (k == "fromEditPage") {
	                    fromEditPage = true;
	                }
	                else if (k == "fromReviewPage") {
	                    fromReviewPage = true;
	                }
	                else {
	                    if (queryParams[k]) {
	                        queryParamsString += k + "=" + queryParams[k] + "&";
	                    }
	                    else {
	                        queryParamsString += k + "&";
	                    }
	                }
	            }
	            queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	            if (fromEditPage == true) {
	                return react_router_1.browserHistory.push("/edit-questions" + queryParamsString);
	            }
	            if (fromReviewPage == true) {
	                return react_router_1.browserHistory.push("/all-questions" + queryParamsString);
	            }
	            else {
	                return react_router_1.browserHistory.push("/questions" + queryParamsString);
	            }
	        }).catch(function () {
	            console.log(_this.questions);
	        });
	    };
	    Signature.prototype.handlePasswordChange = function (v) {
	        console.log("dfddfdf");
	        this.setState({
	            password: v
	        });
	    };
	    Signature.prototype.handleChange = function (key, v) {
	        console.log("dfddfdf");
	        this.setState((_a = {},
	            _a[key] = v,
	            _a
	        ));
	        var _a;
	    };
	    Signature.prototype.getBreadCrumbs = function () {
	        var breadCrumbs = [];
	        var questions = this.questions;
	        var questionsList = (questions && questions.data && questions.data.questionnaire &&
	            questions.data.questionnaire.questions) || [];
	        if (questionsList) {
	            for (var i = 0; i < questionsList.length; i++) {
	                if (questionsList[i].type == "group") {
	                    breadCrumbs.push(questionsList[i].caption);
	                }
	            }
	        }
	        return breadCrumbs;
	    };
	    Signature.prototype.getMainComponenets = function () {
	        if (this.state.gettingQuestions) {
	            return (React.createElement("div", {className: "questions-content-container final-loading-messages"}, React.createElement("div", null, "Loading .... "), React.createElement("i", {className: "fa fa-spinner fa-spin fa-3x fa-fw main-loader"})));
	        }
	        else if (this.state.showEnterPassword) {
	            return (React.createElement(EnterPassword_1.default, {submitPassword: this.authenticateUser.bind(this), sendResetLink: this.sendResetLink.bind(this), handleChange: this.handlePasswordChange.bind(this), showModalPassword: true, onCloseModal: function () { }, errorMsg: this.props.user && this.props.user.message, questions: this.props.questions}));
	        }
	        else {
	            return (React.createElement(ResetPassword_1.default, {resetPassword: this.resetPassword.bind(this), handleChange: this.handleChange.bind(this), showModalResetPassword: true, onCloseModal: function () { }, confirmPasswordError: this.state.confirmPasswordError}));
	        }
	    };
	    Signature.prototype.render = function () {
	        var breadCrumbs = this.getBreadCrumbs();
	        return (React.createElement("div", null, React.createElement(subheader_1.default, {breadCrumbs: breadCrumbs, noFoGroupsCompleted: [breadCrumbs.length - 2], location: this.props.location}), React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center"}, this.getMainComponenets())));
	    };
	    return Signature;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        questions: state.questions.questions,
	        user: state.questions.user
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        getQuestions: function (data) {
	            return dispatch(Questions_1.getQuestions(data));
	        },
	        authenticateUser: function (data) {
	            return dispatch(Questions_1.authenticateUser(data));
	        },
	        changePassword: function (data) {
	            return dispatch(Questions_1.changePassword(data));
	        },
	        sendResetLink: function (data) {
	            return dispatch(Questions_1.sendResetLink(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Signature);


/***/ }),
/* 733 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var react_redux_1 = __webpack_require__(268);
	var EmailModal = (function (_super) {
	    __extends(EmailModal, _super);
	    function EmailModal() {
	        _super.call(this);
	        this.state = {};
	    }
	    EmailModal.prototype.submitPassword = function () {
	        var _this = this;
	        this.setState({
	            submittingPassword: true
	        });
	        this.props.submitPassword(function () {
	            _this.setState({
	                submittingPassword: false
	            });
	        });
	    };
	    EmailModal.prototype.sendResetLink = function () {
	        var _this = this;
	        this.setState({
	            submittingPassword: true
	        });
	        this.props.sendResetLink(function () {
	            _this.setState({
	                submittingPassword: false
	            });
	        });
	    };
	    EmailModal.prototype.componentDidMount = function () {
	        document.addEventListener("keydown", this.keyDownTextField.bind(this), false);
	    };
	    EmailModal.prototype.componentWillUnmount = function () {
	        document.removeEventListener("keydown", this.keyDownTextField.bind(this), false);
	    };
	    EmailModal.prototype.keyDownTextField = function (e) {
	        var keyCode = e.keyCode;
	        if (keyCode == 13) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                this.submitPassword();
	            }
	        }
	        else {
	        }
	    };
	    EmailModal.prototype.handleChange = function (e) {
	        this.props.handleChange(e.target.value);
	        this.setState({
	            password: e.target.value
	        });
	    };
	    EmailModal.prototype.onCloseModal = function () {
	    };
	    EmailModal.prototype.getMessage = function () {
	        if (this.props.questions && this.props.questions.message && this.props.questions.message.length) {
	            return this.props.questions.message;
	        }
	        else {
	            return "Please click on the button to request a link to access the application";
	        }
	    };
	    EmailModal.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, bsSize: "large", bsStyle: "primary", show: this.props.showModalPassword, onHide: this.props.onCloseModal, className: "email-modal-container email-modal-unique-container enter-password-modal-container"}, React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "16px", textAlign: "left" }}, React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, this.getMessage()), this.props.errorMsg && this.props.errorMsg.length > 0 && React.createElement(react_bootstrap_1.Col, {style: { paddingLeft: "15px", marginLeft: "auto", color: "red", fontSize: "15px" }, sm: 12, className: "c-subheader-text error"}, this.props.errorMsg))), React.createElement(react_bootstrap_1.Modal.Footer, null, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12}, this.props.resendLinkDone ? React.createElement("div", {style: { textAlign: "left" }}, " ", this.props.resendData.message) :
	            (React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default circular " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	                _this.sendResetLink();
	            }}, "Request Link", this.state.submittingPassword && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))))));
	    };
	    return EmailModal;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        resendData: state.questions.resendData,
	        resendLinkDone: state.questions.resendLinkDone
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {};
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(EmailModal);


/***/ }),
/* 734 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var textInput_1 = __webpack_require__(703);
	var ResetPasswordModal = (function (_super) {
	    __extends(ResetPasswordModal, _super);
	    function ResetPasswordModal() {
	        _super.call(this);
	        this.state = {};
	    }
	    ResetPasswordModal.prototype.resetPassword = function () {
	        var _this = this;
	        this.setState({
	            resettingPassword: true
	        });
	        this.props.resetPassword(function () {
	            _this.setState({
	                resettingPassword: false
	            });
	        });
	    };
	    ResetPasswordModal.prototype.componentDidMount = function () {
	        document.addEventListener("keydown", this.keyDownTextField.bind(this), false);
	    };
	    ResetPasswordModal.prototype.componentWillUnmount = function () {
	        document.removeEventListener("keydown", this.keyDownTextField.bind(this), false);
	    };
	    ResetPasswordModal.prototype.keyDownTextField = function (e) {
	        var keyCode = e.keyCode;
	        if (keyCode == 13) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                this.resetPassword();
	            }
	        }
	        else {
	        }
	    };
	    ResetPasswordModal.prototype.handleChange = function (key, e) {
	        this.props.handleChange(key, e.target.value);
	        this.setState((_a = {},
	            _a[key] = e.target.value,
	            _a
	        ));
	        var _a;
	    };
	    ResetPasswordModal.prototype.onCloseModal = function () {
	    };
	    ResetPasswordModal.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, bsSize: "large", show: this.props.showModalResetPassword, onHide: this.props.onCloseModal, className: "email-modal-container email-modal-unique-container enter-password-modal-container"}, React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "16px", textAlign: "left" }}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text email-quote-text-on-modal", style: { marginBottom: "25px" }}, "Reset password"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "", style: { marginBottom: "12px", paddingLeft: "0px" }}, "Reset your own password so you can save and return later. Your password must"), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { marginBottom: "11px", paddingLeft: "0px" }, className: "person-name-container"}, React.createElement("ul", {className: ""}, React.createElement("li", {className: ""}, "Be at least 8 characters in length."), React.createElement("li", {className: ""}, "Contain at least 1 lowercase and 1 uppercase letter."), React.createElement("li", {className: ""}, "Contain at least 1 special character (!@#$%^&*)"), React.createElement("li", {className: ""}, "Contain at least 1 number (0–9)"))), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Enter Password"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "password-1", type: "password", placeholder: "Enter password", value: this.state.email0, onChange: function (e) {
	            _this.handleChange("new_password", e);
	        }, className: "question-with-bottom-border"}))), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "password-2", type: "password", placeholder: "Re-enter password", value: this.state.email0, onChange: function (e) {
	            _this.handleChange("confirm_password", e);
	        }, className: "question-with-bottom-border"})), this.props.confirmPasswordError && React.createElement(react_bootstrap_1.Col, {style: { paddingLeft: "0px", marginLeft: "auto", color: "red", fontSize: "15px" }, sm: 12, className: "c-subheader-text error"}, "Password and confirm password must be same."))), React.createElement(react_bootstrap_1.Modal.Footer, null, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default circular " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.resetPassword();
	        }}, "SUBMIT", this.state.resettingPassword && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))))));
	    };
	    return ResetPasswordModal;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ResetPasswordModal;


/***/ }),
/* 735 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var Questions_1 = __webpack_require__(730);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var Signature = (function (_super) {
	    __extends(Signature, _super);
	    function Signature() {
	        _super.call(this);
	        this.state = {};
	        this.questions = {};
	        this.actualQuestionLists = [];
	        this.questionComponents = [];
	    }
	    Signature.prototype.componentWillMount = function () {
	    };
	    Signature.prototype.redirectToQuestions = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        react_router_1.browserHistory.push("/questions" + queryParamsString);
	    };
	    Signature.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, bsSize: "large", bsStyle: "primary", show: true, onHide: this.redirectToQuestions.bind(this), className: "email-modal-container email-modal-unique-container enter-password-modal-container"}, React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "16px", textAlign: "left", padding: "78px 150px 25px 71px" }}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text email-quote-text-on-modal"}, "Something doesn’t seem right…"), React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "0px", marginTop: "20px", marginBottom: "40px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, style: { marginBottom: "11px", paddingLeft: "0px" }, className: "person-name-container"}, this.props.questions.message))), React.createElement(react_bootstrap_1.Modal.Footer, null, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default circular " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.redirectToQuestions();
	        }}, "CLOSE", this.state.submittingPassword && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))))));
	    };
	    return Signature;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        questions: state.questions.questions,
	        user: state.questions.user
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        getQuestions: function (data) {
	            return dispatch(Questions_1.getQuestions(data));
	        },
	        authenticateUser: function (data) {
	            return dispatch(Questions_1.authenticateUser(data));
	        },
	        changePassword: function (data) {
	            return dispatch(Questions_1.changePassword(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Signature);


/***/ }),
/* 736 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __assign = (this && this.__assign) || Object.assign || function(t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	            t[p] = s[p];
	    }
	    return t;
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var SingleSelection_1 = __webpack_require__(713);
	var Label_1 = __webpack_require__(714);
	var CustomInput_1 = __webpack_require__(715);
	var CustomSelect_1 = __webpack_require__(716);
	var AsyncCustomSelect_1 = __webpack_require__(717);
	var QuestionsCustomDatePicker_1 = __webpack_require__(728);
	var subheader_1 = __webpack_require__(681);
	var underscore_1 = __webpack_require__(540);
	var Questions_1 = __webpack_require__(730);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var ScrollToTopOnMount_1 = __webpack_require__(711);
	var Main = (function (_super) {
	    __extends(Main, _super);
	    function Main() {
	        _super.call(this);
	        this.state = {
	            alreadyOnceSubmitted: false,
	            confirmingQuestions: false,
	            siblingsCount: null,
	            previousQuestionsHandling: false,
	            previousQuestionIds: [],
	            activeGroup: null,
	            previousQuestionHanldingIndex: null
	        };
	        this.questions = {};
	        this.actualQuestionLists = [];
	        this.questionComponents = [];
	        this.noFoGroupsCompleted = [];
	        this.counter = 0;
	    }
	    Main.prototype.componentWillMount = function () {
	        var _this = this;
	        this.setState({
	            gettingQuestions: true
	        });
	        this.props.getQuestions().then(function () {
	            if (_this.questions && _this.questions.LOGIN_URL && _this.questions.LOGIN_URL.length > 0) {
	                window.location.href = _this.questions.LOGIN_URL;
	                return;
	            }
	            if (_this.questions && _this.questions.redirect_url && _this.questions.redirect_url.length > 0) {
	                window.location.href = _this.questions.redirect_url;
	                return;
	            }
	            _this.setState({
	                gettingQuestions: false
	            });
	            var queryParams = _this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            if (_this.questions && _this.questions.status == false) {
	                react_router_1.browserHistory.push("/error" + queryParamsString);
	                return;
	            }
	            if (_this.questions && _this.questions.valid_user == 0) {
	                react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                return;
	            }
	        });
	    };
	    Main.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.questions)) {
	            var queryParams = this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            if (nextProps.questions.valid_user == 0) {
	                react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                return;
	            }
	            this.questions = JSON.parse(JSON.stringify(nextProps.questions));
	            if (this.questions && this.questions.data && this.questions.data.questionnaire &&
	                this.questions.data.questionnaire.questions && this.questions.data.questionnaire.questions[0] &&
	                this.questions.data.questionnaire.questions[0].caption) {
	                this.setState({
	                    activeGroup: this.questions.data.questionnaire.questions[0].caption
	                });
	            }
	        }
	    };
	    Main.prototype.onChangeInput = function (q, answer) {
	        q.answer = answer;
	    };
	    Main.prototype.reRecursiveGetQuestions1 = function (data, questionsList, actualQuestionLists) {
	        if (!underscore_1.isEmpty(data)) {
	            for (var i = 0; i < (data.length); i++) {
	                var qe = data[i];
	                var q = qe;
	                q.key = q.id;
	                if (q.type == "singleselection") {
	                    if (q.options.length == 2) {
	                        questionsList.push(React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    else {
	                        questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                }
	                else if (q.type == "multiselection") {
	                    questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, multi: true, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "label") {
	                    questionsList.push(React.createElement(Label_1.default, __assign({}, q)));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "list") {
	                    var qL = q.questions;
	                    if (q.prototype && q.prototype.elements) {
	                        if (!q.answer) {
	                            q.answer = [q.prototype];
	                        }
	                        questionsList.siblingAnswers = q.answer;
	                        qL = q.answer[0].elements;
	                    }
	                    else {
	                        qL = [];
	                    }
	                    for (var i = 0; i < qL.length; i++) {
	                        questionsList.push(this.getQuestionComponent(qL[i]));
	                        actualQuestionLists.push(qL[i]);
	                    }
	                }
	                else if (q.type == "group" || q.type == "assessment-factor-group") {
	                    this.reRecursiveGetQuestions1(q.questions, questionsList, actualQuestionLists);
	                }
	                else if (q.type == "struct") {
	                    this.reRecursiveGetQuestions1(q.elements, questionsList, actualQuestionLists);
	                }
	                else if (q.type == "number" || q.type == "text") {
	                    questionsList.push(React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "date") {
	                    questionsList.push(React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "assessment-factor-search") {
	                    questionsList.push(React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                if (q.hasReflexive) {
	                    if (q.questions) {
	                        this.reRecursiveGetQuestions1(q.questions, questionsList, actualQuestionLists);
	                    }
	                }
	            }
	            ;
	        }
	    };
	    Main.prototype.recursiveGetQuestions1 = function () {
	        if (!underscore_1.isEmpty(this.questions) && !underscore_1.isEmpty(this.questions.data)) {
	            if (this.questions.data.questionnaire && this.questions.data.questionnaire.questions) {
	                var questionsList = [];
	                var actualQuestionLists = [];
	                this.noFoGroupsCompleted = [];
	                for (var i = 0; i < (this.questions.data.questionnaire.questions.length); i++) {
	                    var qe = this.questions.data.questionnaire.questions[i];
	                    questionsList.push([]);
	                    actualQuestionLists.push([]);
	                    questionsList[i].groupHeader = qe.caption;
	                    actualQuestionLists[i].groupHeader = qe.caption;
	                    var q = qe;
	                    if (q.questions && q.questions.length > 0 && i < this.questions.data.questionnaire.questions.length - 2) {
	                        this.noFoGroupsCompleted.push(i);
	                    }
	                    this.reRecursiveGetQuestions1(q.questions, questionsList[i], actualQuestionLists[i]);
	                }
	                ;
	                this.actualQuestionLists = actualQuestionLists;
	                return questionsList;
	            }
	            ;
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.getQuestions = function (lastAnsweredQuestion) {
	        if (lastAnsweredQuestion) {
	        }
	        else {
	            return this.recursiveGetQuestions1();
	        }
	    };
	    Main.prototype.validateTextField = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            var isValid = true;
	            if (constraints.required) {
	                if (constraints.pattern) {
	                    if (q.answer) {
	                        return new RegExp(q.constraints.pattern).test(q.answer);
	                    }
	                    else {
	                        return false;
	                    }
	                }
	                return q.answer && String(q.answer).length > 0;
	            }
	            else {
	                return true;
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateSingleSelection = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            if (constraints.required) {
	                return q.answer && q.answer.id && q.answer.id.length > 0;
	            }
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateCustomDatePicker = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            var isValid = true;
	            if (constraints.required) {
	                if (q.answer) {
	                    if (constraints.minValue) {
	                        return constraints.minValue <= q.answer;
	                    }
	                    else {
	                        return q.answer;
	                    }
	                }
	                return false;
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.confirmQuestions = function () {
	        var _this = this;
	        var data = {};
	        this.setState({
	            confirmingQuestions: true
	        });
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        data.review_confirm = 1;
	        this.props.confirmQuestions(data).then(function () {
	            if (_this.questions && _this.questions.LOGIN_URL && _this.questions.LOGIN_URL.length > 0) {
	                window.location.href = _this.questions.LOGIN_URL;
	                return;
	            }
	            ;
	            if (_this.questions && _this.questions.redirect_url && _this.questions.redirect_url.length > 0) {
	                window.location.href = _this.questions.redirect_url;
	                return;
	            }
	            if (_this.props.confirmationData && _this.props.confirmationData.LOGIN_URL && _this.props.confirmationData.LOGIN_URL.length > 0) {
	                window.location.href = _this.props.confirmationData.LOGIN_URL;
	                return;
	            }
	            ;
	            if (_this.confirmationData && _this.confirmationData.redirect_url && _this.confirmationData.redirect_url.length > 0) {
	                window.location.href = _this.confirmationData.redirect_url;
	                return;
	            }
	            var link = _this.props.confirmationData && _this.props.confirmationData.data &&
	                _this.props.confirmationData.data.current_document_data && _this.props.confirmationData.data.current_document_data.sign_url;
	            if (_this.questions && _this.questions.status == false) {
	                react_router_1.browserHistory.push("/error" + queryParamsString);
	                return;
	            }
	            if (_this.props.confirmationData.valid_user == 0) {
	                react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                return;
	            }
	            if (!underscore_1.isEmpty(link)) {
	                window.location.href = link;
	            }
	            else if (underscore_1.isEmpty(_this.props.confirmationData.data.current_document_data) && !underscore_1.isEmpty(_this.props.confirmationData.data.offer_data)) {
	                react_router_1.browserHistory.push("/offer" + queryParamsString);
	            }
	            else if (underscore_1.isEmpty(_this.props.confirmationData.data.offer_data) && underscore_1.isEmpty(_this.props.confirmationData.data.offer_data)) {
	                react_router_1.browserHistory.push("/payment_success" + queryParamsString);
	            }
	        }).catch(function () {
	            console.log(_this.props.questions);
	        });
	    };
	    Main.prototype.findQuestionById = function (actualQuestions, questionId) {
	        if (!underscore_1.isEmpty(actualQuestions)) {
	            var targetQuestion = {};
	            for (var i = 0; i < (actualQuestions.length); i++) {
	                var qe = actualQuestions[i];
	                var q = qe;
	                q.key = q.id;
	                if (q.id == questionId) {
	                    return q;
	                }
	                if (qe.type == "group" || qe.type == "assessment-factor-group" || qe.hasReflexive) {
	                    targetQuestion = this.findQuestionById(q.questions, questionId);
	                }
	                if (qe.type == "list" && q.answer && q.answer[0].elements) {
	                    targetQuestion = this.findQuestionById(q.answer[0].elements, questionId);
	                }
	                if (qe.type == "struct") {
	                    targetQuestion = this.findQuestionById(q.elements, questionId);
	                }
	                if (!underscore_1.isEmpty(targetQuestion)) {
	                    return targetQuestion;
	                }
	            }
	            return {};
	        }
	        else {
	            return {};
	        }
	    };
	    Main.prototype.getQuestionComponent = function (q) {
	        var qComponent = {};
	        if (q.type == "singleselection") {
	            if (q.options.length == 2) {
	                qComponent = React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	            }
	            else {
	                qComponent = React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	            }
	        }
	        else if (q.type == "multiselection") {
	            qComponent = React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, multi: true, counter: this.counter++});
	        }
	        else if (q.type == "label") {
	            qComponent = React.createElement(Label_1.default, __assign({}, q));
	        }
	        else if (q.type == "number" || q.type == "text") {
	            qComponent = React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	        }
	        else if (q.type == "date") {
	            qComponent = React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	        }
	        else if (q.type == "assessment-factor-search") {
	            qComponent = React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id});
	        }
	        return qComponent;
	    };
	    Main.prototype.getPreviousQuestionComponents = function () {
	        var previousQuestionIds = this.state.previousQuestionIds;
	        var qComps = [];
	        var aQuestions = [];
	        if (!underscore_1.isEmpty(this.questions) && !underscore_1.isEmpty(this.questions.data)) {
	            if (this.questions.data.questionnaire && this.questions.data.questionnaire.questions) {
	                for (var i = 0; i < previousQuestionIds.length; i++) {
	                    var question = this.findQuestionById(this.questions.data.questionnaire.questions, previousQuestionIds[i]);
	                    aQuestions.push(question);
	                    qComps.push(this.getQuestionComponent(question));
	                }
	            }
	        }
	        this.actualQuestionLists = aQuestions;
	        return qComps;
	    };
	    Main.prototype.deleteSibling = function () {
	        if (this.questionComponents.siblingAnswers.length > 1) {
	            this.questionComponents.siblingAnswers.pop();
	            var siblingsCount = this.state.siblingsCount;
	            this.setState({
	                siblingsCount: siblingsCount - 1
	            });
	        }
	    };
	    Main.prototype.addSibling = function () {
	        var siblingsCount = this.state.siblingsCount || 0;
	        if (this.questionComponents.isQuestionsList) {
	            if (this.questionComponents.siblingAnswers) {
	                var a = JSON.parse(JSON.stringify(this.questionComponents.siblingAnswers[0]));
	                this.questionComponents.siblingAnswers.push(a);
	            }
	        }
	        this.setState({
	            siblingsCount: siblingsCount + 1
	        });
	    };
	    ;
	    Main.prototype.getCurrentSetOfQuestions = function () {
	        if (this.questions) {
	            this.questionComponents = this.getQuestions(null);
	            return this.questionComponents;
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.getBreadCrumbs = function () {
	        var breadCrumbs = [];
	        var questions = this.props.questions;
	        var questionsList = (questions && questions.data && questions.data.questionnaire &&
	            questions.data.questionnaire.questions) || [];
	        if (questionsList) {
	            for (var i = 0; i < questionsList.length; i++) {
	                if (questionsList[i].type == "group") {
	                    breadCrumbs.push(questionsList[i].caption);
	                }
	            }
	        }
	        return breadCrumbs;
	    };
	    Main.prototype.handleBackSubmit = function () {
	        var _this = this;
	        if (this.state.previousQuestionsHandling)
	            return;
	        if (this.props.questions && this.props.questions.extra_params &&
	            this.props.questions.extra_params.answered_questions &&
	            this.props.questions.extra_params.answered_questions.length > 0) {
	            if (this.state.previousQuestionHanldingIndex != 0) {
	                if (this.state.previousQuestionHanldingIndex) {
	                    this.setState({
	                        previousQuestionHanldingIndex: this.state.previousQuestionHanldingIndex - 1,
	                        previousQuestionsHandling: true
	                    }, function () {
	                        _this.setState({
	                            previousQuestionsHandling: false,
	                            previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                        });
	                    });
	                }
	                else {
	                    this.setState({
	                        previousQuestionHanldingIndex: this.props.questions.extra_params.answered_questions.length - 1,
	                        previousQuestionsHandling: true
	                    }, function () {
	                        _this.setState({
	                            previousQuestionsHandling: false,
	                            previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                        });
	                    });
	                }
	            }
	            else if (this.state.previousQuestionHanldingIndex == 0) {
	                this.setState({
	                    previousQuestionsHandling: true
	                }, function () {
	                    _this.setState({
	                        previousQuestionsHandling: false,
	                        previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                    });
	                });
	            }
	        }
	    };
	    Main.prototype.makeGroupActive = function (groupHeader) {
	        if (this.state.activeGroup == groupHeader) {
	            this.setState({
	                activeGroup: null
	            });
	        }
	        else {
	            this.setState({
	                activeGroup: groupHeader
	            });
	        }
	    };
	    Main.prototype.goToEditQuestionPage = function (q, groupHeader) {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "&";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (this.questions && this.questions.status == false) {
	            react_router_1.browserHistory.push("/error" + queryParamsString);
	            return;
	        }
	        if (groupHeader.toLowerCase().indexOf("beneficiaries") > -1) {
	            react_router_1.browserHistory.push("/edit-questions/beneficiaries?" + queryParamsString);
	            return;
	        }
	        react_router_1.browserHistory.push("/edit-questions?fromReviewPage=true&questionId=" + q.id + queryParamsString);
	    };
	    Main.prototype.getBtnText = function () {
	        return this.questions.review_button_title || "NEXT";
	    };
	    Main.prototype.showEditIcon = function (q) {
	        var answered_questions = this.props.questions.extra_params.answered_questions;
	        answered_questions.concat(this.props.questions.extra_params.current_answered_questions);
	        var found_answer = underscore_1.map(answered_questions, function (childArray) {
	            return childArray.indexOf(q.id) > -1;
	        });
	        return found_answer.indexOf(true) > -1;
	    };
	    Main.prototype.render = function () {
	        var _this = this;
	        var breadCrumbs = this.getBreadCrumbs();
	        var questionsList = this.getCurrentSetOfQuestions() || [];
	        var actualQuestionLists = this.actualQuestionLists || [];
	        var noFoGroupsCompleted = this.noFoGroupsCompleted;
	        return (React.createElement("div", null, React.createElement(ScrollToTopOnMount_1.default, null), React.createElement(subheader_1.default, {breadCrumbs: breadCrumbs, noFoGroupsCompleted: noFoGroupsCompleted, location: this.props.location}), React.createElement("div", {className: "all-review-questions-container"}, React.createElement(react_bootstrap_1.Nav, {className: "all-questions-side-bar", bsStyle: "pills", stacked: true, onSelect: function () { }}, React.createElement("div", {className: "all-questions-side-bar-header"}, "APPLICATION SECTIONS"), React.createElement("hr", null), underscore_1.map(actualQuestionLists, function (qL) {
	            if (qL.length > 0) {
	                return (React.createElement("div", null, React.createElement(react_bootstrap_1.NavItem, {className: "all-question-side-bar-link " + (_this.state.activeGroup == qL.groupHeader ? "active" : ""), eventKey: qL.groupHeader, onClick: function () {
	                    _this.makeGroupActive(qL.groupHeader);
	                }}, React.createElement("div", {className: "all-questions-side-bar-header-text"}, React.createElement("span", null, qL.groupHeader))), React.createElement("hr", null)));
	            }
	            else {
	                return null;
	            }
	        })), React.createElement(react_bootstrap_1.Row, {className: "questions-container all-questions-container"}, this.state.gettingQuestions && React.createElement("i", {className: "fa fa-spinner fa-spin fa-3x fa-fw main-loader"}), underscore_1.map(actualQuestionLists, function (qL) {
	            var ans;
	            if (qL.length > 0) {
	                return (React.createElement("div", {key: qL.groupHeader, className: "questions-content-container all-group-questions-container " + (_this.state.activeGroup == qL.groupHeader ? "active" : "")}, React.createElement("div", {className: "all-group-header", onClick: function () {
	                    _this.makeGroupActive(qL.groupHeader);
	                }}, qL.groupHeader, React.createElement("span", {className: "down-arrow-container"}, React.createElement("img", {src: "../images/down-arrow.svg"}))), React.createElement("div", {className: "question-answer-header hidden-xs"}, React.createElement("div", {className: "question-text"}, "Question"), React.createElement("div", {className: "answer-text"}, "Answer")), underscore_1.map(qL, function (q) {
	                    ans = q.answer;
	                    if (Object.prototype.toString.call(q.answer) === '[object Array]') {
	                        ans = q.answer[0].label;
	                        for (var i = 1; i < q.answer.length; i++) {
	                            ans += ", " + q.answer[i].label;
	                        }
	                    }
	                    else {
	                        if (q.answer && q.answer.label) {
	                            ans = q.answer.label;
	                        }
	                        else if (q.answer && q.answer.id) {
	                            ans = q.answer.id;
	                        }
	                        else if (q.answer) {
	                            ans = q.answer;
	                        }
	                    }
	                    if (q.type == "date") {
	                        q.answer = moment(q.answer).format("MM/DD/YYYY");
	                    }
	                    var canClick = _this.showEditIcon(q);
	                    return React.createElement("div", {className: "individual-question", onClick: function (e) {
	                        e.preventDefault();
	                        if (!canClick) {
	                            return false;
	                        }
	                        _this.goToEditQuestionPage(q, qL.groupHeader);
	                    }}, q.type != "label" && React.createElement("div", {className: "question-text hidden-xs"}, React.createElement("span", {className: "question-actual-text"}, q.caption)), q.type == "label" && React.createElement("div", {className: "question-text hidden-xs fs18", style: { color: "#464646" }}, React.createElement("span", {className: "question-actual-text", style: { color: "#464646" }}, q.caption)), q.type != "label" && React.createElement("div", {className: "answer-text hidden-xs"}, React.createElement("span", null, ans), canClick && React.createElement("span", {className: "edit-img-container"})), React.createElement("div", null, React.createElement("div", {className: "question-answer-header visible-xs"}, React.createElement("div", {className: "question-text"}, "Question"), canClick && React.createElement("span", {className: "edit-img-container"}), q.type != "label" && React.createElement("div", {className: "question-text question-actual-text-container"}, React.createElement("span", {className: "question-actual-text"}, q.caption)), q.type == "label" && React.createElement("div", {className: "question-text question-actual-text-container fs18"}, React.createElement("span", {className: "question-actual-text", style: { color: "#464646" }}, q.caption)), React.createElement("div", {className: "answer-text"}, "Answer"), q.type != "label" && React.createElement("div", {className: "answer-text answer-text-container"}, React.createElement("span", null, ans)), React.createElement("hr", null))), React.createElement("hr", {className: "hidden-xs"}), React.createElement("div", null, " "));
	                })));
	            }
	            else {
	                return null;
	            }
	        }), React.createElement("div", {className: "question-action-btn-container"}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", onClick: function () {
	            _this.confirmQuestions();
	        }, style: { width: "auto" }}, this.getBtnText(), this.state.confirmingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))))));
	    };
	    return Main;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        questions: state.questions.questions,
	        confirmationData: state.questions.confirmationData
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        getQuestions: function (data) {
	            return dispatch(Questions_1.getQuestions(data));
	        },
	        postQuestions: function (data, moreInfo) {
	            return dispatch(Questions_1.postQuestions(data, moreInfo));
	        },
	        getFactorsearch: function (data, moreInfo) {
	            return dispatch(Questions_1.getFactorsearch(data, moreInfo));
	        },
	        confirmQuestions: function (data, moreInfo) {
	            return dispatch(Questions_1.confirmQuestions(data, moreInfo));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Main);


/***/ }),
/* 737 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var subheader_1 = __webpack_require__(681);
	var underscore_1 = __webpack_require__(540);
	var Questions_1 = __webpack_require__(730);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var Signature = (function (_super) {
	    __extends(Signature, _super);
	    function Signature() {
	        _super.call(this);
	        this.state = {};
	        this.questions = {};
	        this.actualQuestionLists = [];
	        this.questionComponents = [];
	    }
	    Signature.prototype.componentWillMount = function () {
	        this.confirmQuestions();
	    };
	    Signature.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.questions)) {
	            this.questions = JSON.parse(JSON.stringify(nextProps.questions));
	        }
	    };
	    Signature.prototype.confirmQuestions = function () {
	        var _this = this;
	        if (this.questions && this.questions.LOGIN_URL && this.questions.LOGIN_URL.length > 0) {
	            window.location.href = this.questions.LOGIN_URL;
	            return;
	        }
	        if (this.questions && this.questions.redirect_url && this.questions.redirect_url.length > 0) {
	            window.location.href = this.questions.redirect_url;
	            return;
	        }
	        var data = {};
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        this.props.confirmQuestions(data).then(function () {
	            if (_this.props.confirmationData && _this.props.confirmationData.LOGIN_URL && _this.props.confirmationData.LOGIN_URL.length > 0) {
	                window.location.href = _this.props.confirmationData.LOGIN_URL;
	                return;
	            }
	            if (_this.props.confirmationData && _this.props.confirmationData.redirect_url && _this.props.confirmationData.redirect_url.length > 0) {
	                window.location.href = _this.props.confirmationData.redirect_url;
	                return;
	            }
	            var link = _this.props.confirmationData && _this.props.confirmationData.data &&
	                _this.props.confirmationData.data.current_document_data && _this.props.confirmationData.data.current_document_data.sign_url;
	            if (_this.props.confirmationData && _this.props.confirmationData.status == false) {
	                react_router_1.browserHistory.push("/error" + queryParamsString);
	                return;
	            }
	            if (_this.props.confirmationData.valid_user == 0) {
	                react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                return;
	            }
	            if (_this.props.confirmationData.application_complete_status == false || _this.props.confirmationData.application_complete_status == "false") {
	                react_router_1.browserHistory.push("/questions" + queryParamsString);
	                return;
	            }
	            if (!underscore_1.isEmpty(link)) {
	                window.location.href = link;
	            }
	            else if (underscore_1.isEmpty(_this.props.confirmationData.data.current_document_data) && !underscore_1.isEmpty(_this.props.confirmationData.data.offer_data)) {
	                react_router_1.browserHistory.push("/offer" + queryParamsString);
	            }
	            else if (underscore_1.isEmpty(_this.props.confirmationData.data.offer_data) && underscore_1.isEmpty(_this.props.confirmationData.data.offer_data)) {
	                react_router_1.browserHistory.push("/payment_success" + queryParamsString);
	            }
	        }).catch(function (e) {
	            console.log(e);
	            react_router_1.browserHistory.push("/authorize" + queryParamsString);
	            console.log(_this.questions);
	        });
	    };
	    Signature.prototype.getBreadCrumbs = function () {
	        var breadCrumbs = [];
	        var questions = this.questions;
	        var questionsList = (questions && questions.data && questions.data.questionnaire &&
	            questions.data.questionnaire.questions) || [];
	        if (questionsList) {
	            for (var i = 0; i < questionsList.length; i++) {
	                if (questionsList[i].type == "group") {
	                    breadCrumbs.push(questionsList[i].caption);
	                }
	            }
	        }
	        return breadCrumbs;
	    };
	    Signature.prototype.render = function () {
	        var _this = this;
	        var breadCrumbs = this.getBreadCrumbs();
	        return (React.createElement("div", null, React.createElement(subheader_1.default, {breadCrumbs: breadCrumbs, noFoGroupsCompleted: [breadCrumbs.length - 2], location: this.props.location}), this.props.confirmationData && this.props.confirmationData.data && this.props.confirmationData.data.no_of_signed_documents == 0 && React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {onClick: function () {
	            var queryParams = _this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        }})), React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center"}, !this.state.allDone && React.createElement("div", {className: "questions-content-container final-loading-messages"}, React.createElement("div", null, "LOADING"), React.createElement("i", {className: "fa fa-spinner fa-spin fa-3x fa-fw main-loader"})), this.state.allDone && React.createElement("div", {className: "questions-content-container final-thank-you-messages"}, React.createElement("div", null, this.props.confirmationData.data.message)))));
	    };
	    return Signature;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        questions: state.questions.questions,
	        confirmationData: state.questions.confirmationData
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        getQuestions: function (data) {
	            return dispatch(Questions_1.getQuestions(data));
	        },
	        confirmQuestions: function (data, moreInfo) {
	            return dispatch(Questions_1.confirmQuestions(data, moreInfo));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Signature);


/***/ }),
/* 738 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var subheader_1 = __webpack_require__(681);
	var underscore_1 = __webpack_require__(540);
	var Questions_1 = __webpack_require__(730);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var react_raw_html_1 = __webpack_require__(739);
	var Offer = (function (_super) {
	    __extends(Offer, _super);
	    function Offer() {
	        _super.call(this);
	        this.state = {};
	        this.questions = {};
	        this.actualQuestionLists = [];
	        this.questionComponents = [];
	    }
	    Offer.prototype.componentWillMount = function () {
	        var _this = this;
	        var offerData = this.props.confirmationData && this.props.confirmationData.data && this.props.confirmationData.data.offer_data;
	        if (offerData && !underscore_1.isEmpty(offerData.elavon_params)) {
	            this.setState({
	                onDirectedRedirectionToPayment: true
	            });
	            setTimeout(function () {
	                _this.onPayment();
	            }, 0);
	        }
	    };
	    Offer.prototype.componentWillReceiveProps = function (nextProps) {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (!underscore_1.isEmpty(nextProps.questions)) {
	            this.questions = JSON.parse(JSON.stringify(nextProps.questions));
	        }
	        if (this.questions && this.questions.LOGIN_URL && this.questions.LOGIN_URL.length > 0) {
	            window.location.href = this.questions.LOGIN_URL;
	            return;
	        }
	        if (this.questions && this.questions.redirect_url && this.questions.redirect_url.length > 0) {
	            window.location.href = this.questions.redirect_url;
	            return;
	        }
	        if (nextProps.confirmationData.valid_user == 0) {
	            react_router_1.browserHistory.push("/authorize" + queryParamsString);
	            return;
	        }
	    };
	    Offer.prototype.confirmQuestions = function () {
	        var _this = this;
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        var data = {};
	        this.props.confirmQuestions(data).then(function () {
	            if (_this.props.confirmationData && _this.props.confirmationData.LOGIN_URL && _this.props.confirmationData.LOGIN_URL.length > 0) {
	                window.location.href = _this.props.confirmationData.LOGIN_URL;
	                return;
	            }
	            if (_this.props.confirmationData && _this.props.confirmationData.redirect_url && _this.props.confirmationData.redirect_url.length > 0) {
	                window.location.href = _this.props.confirmationData.redirect_url;
	                return;
	            }
	            var link = _this.props.confirmationData && _this.props.confirmationData.data &&
	                _this.props.confirmationData.data.current_document_data && _this.props.confirmationData.data.current_document_data.sign_url;
	            if (_this.props.confirmationData.status == false) {
	                react_router_1.browserHistory.push("/error" + queryParamsString);
	                return;
	            }
	            if (_this.props.confirmationData.application_complete_status == false || _this.props.confirmationData.application_complete_status == "false") {
	                react_router_1.browserHistory.push("/questions" + queryParamsString);
	                return;
	            }
	            if (_this.props.confirmationData.valid_user == 0) {
	                react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                return;
	            }
	            if (!underscore_1.isEmpty(link)) {
	                window.location.href = link;
	            }
	            else if (underscore_1.isEmpty(_this.props.confirmationData.data.current_document_data)) {
	                react_router_1.browserHistory.push("/offer" + queryParamsString);
	            }
	            else if (underscore_1.isEmpty(_this.props.confirmationData.data.offer_data)) {
	                react_router_1.browserHistory.push("/payment_success" + queryParamsString);
	            }
	        }).catch(function () {
	            react_router_1.browserHistory.push("/authorize" + queryParamsString);
	            console.log(_this.questions);
	        });
	    };
	    Offer.prototype.getBreadCrumbs = function () {
	        var breadCrumbs = [];
	        var questions = this.questions;
	        var questionsList = (questions && questions.data && questions.data.questionnaire &&
	            questions.data.questionnaire.questions) || [];
	        if (questionsList) {
	            for (var i = 0; i < questionsList.length; i++) {
	                if (questionsList[i].type == "group") {
	                    breadCrumbs.push(questionsList[i].caption);
	                }
	            }
	        }
	        return breadCrumbs;
	    };
	    Offer.prototype.onPayment = function () {
	        var _this = this;
	        var offerData = this.props.confirmationData && this.props.confirmationData.data && this.props.confirmationData.data.offer_data;
	        var premium = offerData.premium;
	        var data = {};
	        data.order_id = premium.order_id;
	        data.amount = premium.premium_amount;
	        data.elavon_params = offerData && offerData.elavon_params ? offerData.elavon_params : [];
	        data.elavon_url = offerData.elavon_url;
	        this.setState({
	            onPaymentGoingTo: true
	        });
	        if (this.props.confirmationData && this.props.confirmationData.LOGIN_URL && this.props.confirmationData.LOGIN_URL.length > 0) {
	            window.location.href = this.props.confirmationData.LOGIN_URL;
	            return;
	        }
	        if (this.props.confirmationData && this.props.confirmationData.redirect_url && this.props.confirmationData.redirect_url.length > 0) {
	            window.location.href = this.props.confirmationData.redirect_url;
	            return;
	        }
	        this.props.postPayment(data).then(function () {
	            if (_this.props.paymentInfo && _this.props.paymentInfo.LOGIN_URL && _this.props.paymentInfo.LOGIN_URL.length > 0) {
	                window.location.href = _this.props.paymentInfo.LOGIN_URL;
	                return;
	            }
	            if (_this.props.paymentInfo && _this.props.paymentInfo.redirect_url && _this.props.paymentInfo.redirect_url.length > 0) {
	                window.location.href = _this.props.paymentInfo.redirect_url;
	                return;
	            }
	            if (_this.props.paymentInfo && underscore_1.isEmpty(data.elavon_params)) {
	                if (typeof _this.props.paymentInfo == "string") {
	                    var questionsInfo = JSON.parse(_this.props.paymentInfo);
	                }
	                else {
	                    var questionsInfo = _this.props.paymentInfo;
	                }
	                var queryParams = _this.props.location.query;
	                var queryParamsString = "?";
	                for (var k in queryParams) {
	                    if (queryParams[k]) {
	                        queryParamsString += k + "=" + queryParams[k] + "&";
	                    }
	                    else {
	                        queryParamsString += k + "&";
	                    }
	                }
	                queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                var link = questionsInfo && questionsInfo.data &&
	                    questionsInfo.data.current_document_data && questionsInfo.data.current_document_data.sign_url;
	                if (questionsInfo.valid_user == 0) {
	                    react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                    return;
	                }
	                if (questionsInfo.application_complete_status == false || questionsInfo.application_complete_status == "false") {
	                    react_router_1.browserHistory.push("/questions" + queryParamsString);
	                    return;
	                }
	                if (!underscore_1.isEmpty(link)) {
	                    window.location.href = link;
	                }
	                else if (!underscore_1.isEmpty(questionsInfo.data) && underscore_1.isEmpty(questionsInfo.data.current_document_data) && !underscore_1.isEmpty(questionsInfo.data.offer_data)) {
	                    react_router_1.browserHistory.push("/offer" + queryParamsString);
	                }
	                else {
	                    react_router_1.browserHistory.push("/payment_success" + queryParamsString);
	                }
	                return;
	            }
	            window.location.href = "/payment";
	            _this.setState({
	                onPaymentGoingTo: false
	            });
	        });
	    };
	    Offer.prototype.render = function () {
	        var _this = this;
	        var breadCrumbs = this.getBreadCrumbs();
	        var offerData = this.props.confirmationData && this.props.confirmationData.data && this.props.confirmationData.data.offer_data;
	        offerData = offerData || {};
	        var premium = offerData.premium, product = offerData.product;
	        premium = premium || {};
	        product = product || {};
	        react_raw_html_1.default.addTag("mycooltag");
	        if (this.state.onDirectedRedirectionToPayment) {
	            return (React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center"}, React.createElement("div", {className: "questions-content-container final-loading-messages"}, React.createElement("div", null, "LOADING"), React.createElement("i", {className: "fa fa-spinner fa-spin fa-3x fa-fw main-loader"}))));
	        }
	        else {
	            return (React.createElement("div", null, React.createElement(subheader_1.default, {breadCrumbs: breadCrumbs, noFoGroupsCompleted: [], location: this.props.location}), React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center offer-container"}, React.createElement(react_bootstrap_1.Col, {sm: 6, className: "offer-product-payment-info"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "offer-price-text"}, "Price"), React.createElement(react_bootstrap_1.Col, {className: "offer-price-amount"}, premium.currency, premium.premium_amount), React.createElement(react_bootstrap_1.Col, {className: "offer-per-month"}, premium.coverage_description), offerData.show_start_coverage_button == true && React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular offer-start-coverage-btn action", style: { marginLeft: "30px!important" }, onClick: function () {
	                _this.onPayment();
	            }}, "START COVERAGE", this.state.onPaymentGoingTo && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))), offerData && offerData.offer_description && React.createElement(react_bootstrap_1.Row, null, React.createElement(react_raw_html_1.default.mycooltag, null, offerData.offer_description))), React.createElement(react_bootstrap_1.Col, {sm: 5, className: "offer-product-info"}, React.createElement(react_bootstrap_1.Row, {className: "offer-product-header-text"}, "Selected product"), React.createElement(react_bootstrap_1.Row, {className: "offer-product-info-container"}, React.createElement(react_bootstrap_1.Col, {className: "offer-product-name", style: { textAlign: "left" }, sm: 12}, product.product_name), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "product-main-content offer-product-description", style: { paddingLeft: "20px" }}, React.createElement(react_bootstrap_1.Row, {className: "text-left"}, React.createElement("ul", {className: "c-product-desc-line"}, React.createElement(react_raw_html_1.default.mycooltag, null, product.product_description)))))))));
	        }
	    };
	    return Offer;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        questions: state.questions.questions,
	        confirmationData: state.questions.confirmationData,
	        paymentInfo: state.questions.paymentInfo
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        getQuestions: function (data) {
	            return dispatch(Questions_1.getQuestions(data));
	        },
	        confirmQuestions: function (data, moreInfo) {
	            return dispatch(Questions_1.confirmQuestions(data, moreInfo));
	        },
	        postPayment: function (data) {
	            return dispatch(Questions_1.postPayment(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Offer);


/***/ }),
/* 739 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(740);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _flattenChildren = __webpack_require__(896);
	
	var _flattenChildren2 = _interopRequireDefault(_flattenChildren);
	
	var _rawHtmlFactory = __webpack_require__(898);
	
	var _rawHtmlFactory2 = _interopRequireDefault(_rawHtmlFactory);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var getChildrenAsString = function getChildrenAsString(children) {
		return (0, _flattenChildren2.default)(children).join("");
	};
	
	exports.default = (0, _rawHtmlFactory2.default)(getChildrenAsString);

/***/ }),
/* 740 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(741);


/***/ }),
/* 741 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */
	
	'use strict';
	
	var ReactDOM = __webpack_require__(742);
	var ReactDOMServer = __webpack_require__(886);
	var ReactIsomorphic = __webpack_require__(890);
	
	var assign = __webpack_require__(777);
	var deprecated = __webpack_require__(895);
	
	// `version` will be added here by ReactIsomorphic.
	var React = {};
	
	assign(React, ReactIsomorphic);
	
	assign(React, {
	  // ReactDOM
	  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
	  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
	  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),
	
	  // ReactDOMServer
	  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
	  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
	});
	
	React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
	React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;
	
	module.exports = React;

/***/ }),
/* 742 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(743);
	var ReactDOMTextComponent = __webpack_require__(744);
	var ReactDefaultInjection = __webpack_require__(809);
	var ReactInstanceHandles = __webpack_require__(783);
	var ReactMount = __webpack_require__(766);
	var ReactPerf = __webpack_require__(756);
	var ReactReconciler = __webpack_require__(788);
	var ReactUpdates = __webpack_require__(792);
	var ReactVersion = __webpack_require__(884);
	
	var findDOMNode = __webpack_require__(829);
	var renderSubtreeIntoContainer = __webpack_require__(885);
	var warning = __webpack_require__(763);
	
	ReactDefaultInjection.inject();
	
	var render = ReactPerf.measure('React', 'render', ReactMount.render);
	
	var React = {
	  findDOMNode: findDOMNode,
	  render: render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(747);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,
	
	    // shams
	    Object.create, Object.freeze];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
	        break;
	      }
	    }
	  }
	}
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 743 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ }),
/* 744 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(745);
	var DOMPropertyOperations = __webpack_require__(760);
	var ReactComponentBrowserEnvironment = __webpack_require__(764);
	var ReactMount = __webpack_require__(766);
	
	var assign = __webpack_require__(777);
	var escapeTextContentForBrowser = __webpack_require__(759);
	var setTextContent = __webpack_require__(758);
	var validateDOMNesting = __webpack_require__(808);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (props) {
	  // This constructor and its argument is currently used by mocks.
	};
	
	assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function (text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;
	
	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }
	
	    this._rootNodeID = rootID;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement('span');
	      DOMPropertyOperations.setAttributeForID(el, rootID);
	      // Populate node cache
	      ReactMount.getID(el);
	      setTextContent(el, this._stringText);
	      return el;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this in a `span` for the reasons stated above, but
	        // since this is a situation where React won't take over (static pages),
	        // we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var node = ReactMount.getNode(this._rootNodeID);
	        DOMChildrenOperations.updateTextContent(node, nextStringText);
	      }
	    }
	  },
	
	  unmountComponent: function () {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 745 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var Danger = __webpack_require__(746);
	var ReactMultiChildUpdateTypes = __webpack_require__(754);
	var ReactPerf = __webpack_require__(756);
	
	var setInnerHTML = __webpack_require__(757);
	var setTextContent = __webpack_require__(758);
	var invariant = __webpack_require__(751);
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.
	
	  // fix render order error in safari
	  // IE8 will throw error when index out of list size.
	  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);
	
	  parentNode.insertBefore(childNode, beforeChild);
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,
	
	  updateTextContent: setTextContent,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function (updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;
	
	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;
	
	        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;
	
	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;
	
	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }
	
	    var renderedMarkup;
	    // markupList is either a list of markup or just a list of elements
	    if (markupList.length && typeof markupList[0] === 'string') {
	      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	    } else {
	      renderedMarkup = markupList;
	    }
	
	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(update.parentNode, update.content);
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
	  updateTextContent: 'updateTextContent'
	});
	
	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 746 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(747);
	
	var createNodesFromMarkup = __webpack_require__(748);
	var emptyFunction = __webpack_require__(753);
	var getMarkupWrap = __webpack_require__(752);
	var invariant = __webpack_require__(751);
	
	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';
	
	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}
	
	var Danger = {
	
	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function (markupList) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];
	
	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];
	
	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
	          // This index will be parsed back out below.
	          '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
	        }
	      }
	
	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
	      );
	
	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
	
	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);
	
	          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;
	
	          resultList[resultIndex] = renderNode;
	
	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	        } else if (process.env.NODE_ENV !== 'production') {
	          console.error('Danger: Discarding unexpected node:', renderNode);
	        }
	      }
	    }
	
	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;
	
	    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;
	
	    return resultList;
	  },
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
	    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;
	
	    var newChild;
	    if (typeof markup === 'string') {
	      newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    } else {
	      newChild = markup;
	    }
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }
	
	};
	
	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 747 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ }),
/* 748 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(747);
	
	var createArrayFromMixed = __webpack_require__(749);
	var getMarkupWrap = __webpack_require__(752);
	var invariant = __webpack_require__(751);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 749 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */
	
	'use strict';
	
	var toArray = __webpack_require__(750);
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;

/***/ }),
/* 750 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(751);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	module.exports = toArray;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 751 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 752 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(747);
	
	var invariant = __webpack_require__(751);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 753 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */
	
	"use strict";
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ }),
/* 754 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(755);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

/***/ }),
/* 755 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(751);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function (obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 756 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,
	
	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,
	
	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function (object, objectName, methodNames) {
	    if (process.env.NODE_ENV !== 'production') {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
	      }
	    }
	  },
	
	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function (objName, fnName, func) {
	    if (process.env.NODE_ENV !== 'production') {
	      var measuredFunc = null;
	      var wrapper = function () {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },
	
	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function (measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};
	
	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}
	
	module.exports = ReactPerf;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 757 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(747);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function (node, html) {
	  node.innerHTML = html;
	};
	
	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function (node, html) {
	    MSApp.execUnsafeLocalFunction(function () {
	      node.innerHTML = html;
	    });
	  };
	}
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}
	
	module.exports = setInnerHTML;

/***/ }),
/* 758 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(747);
	var escapeTextContentForBrowser = __webpack_require__(759);
	var setInnerHTML = __webpack_require__(757);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ }),
/* 759 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};
	
	var ESCAPE_REGEX = /[&><"']/g;
	
	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ }),
/* 760 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(761);
	var ReactPerf = __webpack_require__(756);
	
	var quoteAttributeValueForBrowser = __webpack_require__(762);
	var warning = __webpack_require__(763);
	
	// Simplified subset
	var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};
	
	  var warnUnknownProperty = function (name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }
	
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
	  };
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (propertyInfo.mustUseAttribute) {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      } else {
	        var propName = propertyInfo.propertyName;
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseAttribute) {
	        node.removeAttribute(propertyInfo.attributeName);
	      } else {
	        var propName = propertyInfo.propertyName;
	        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
	        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if (process.env.NODE_ENV !== 'production') {
	      warnUnknownProperty(name);
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
	  setValueForProperty: 'setValueForProperty',
	  setValueForAttribute: 'setValueForAttribute',
	  deleteValueForProperty: 'deleteValueForProperty'
	});
	
	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 761 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(751);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	
	      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	var defaultValueCache = {};
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseAttribute:
	   *   Whether the property must be accessed and mutated using `*Attribute()`.
	   *   (This includes anything that fails `<propName> in <element>`.)
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasSideEffects:
	   *   Whether or not setting a value causes side effects such as triggering
	   *   resources to be loaded or text selection changes. If true, we read from
	   *   the DOM before updating to ensure that the value is only set if it has
	   *   changed.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function (nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 762 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(759);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 763 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(753);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function (condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 764 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	'use strict';
	
	var ReactDOMIDOperations = __webpack_require__(765);
	var ReactMount = __webpack_require__(766);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
	
	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 765 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(745);
	var DOMPropertyOperations = __webpack_require__(760);
	var ReactMount = __webpack_require__(766);
	var ReactPerf = __webpack_require__(756);
	
	var invariant = __webpack_require__(751);
	
	/**
	 * Errors for properties that should not be updated with `updatePropertyByID()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function (id, name, value) {
	    var node = ReactMount.getNode(id);
	    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;
	
	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },
	
	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};
	
	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});
	
	module.exports = ReactDOMIDOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 766 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(761);
	var ReactBrowserEventEmitter = __webpack_require__(767);
	var ReactCurrentOwner = __webpack_require__(743);
	var ReactDOMFeatureFlags = __webpack_require__(779);
	var ReactElement = __webpack_require__(780);
	var ReactEmptyComponentRegistry = __webpack_require__(782);
	var ReactInstanceHandles = __webpack_require__(783);
	var ReactInstanceMap = __webpack_require__(785);
	var ReactMarkupChecksum = __webpack_require__(786);
	var ReactPerf = __webpack_require__(756);
	var ReactReconciler = __webpack_require__(788);
	var ReactUpdateQueue = __webpack_require__(791);
	var ReactUpdates = __webpack_require__(792);
	
	var assign = __webpack_require__(777);
	var emptyObject = __webpack_require__(796);
	var containsNode = __webpack_require__(797);
	var instantiateReactComponent = __webpack_require__(800);
	var invariant = __webpack_require__(751);
	var setInnerHTML = __webpack_require__(757);
	var shouldUpdateReactComponent = __webpack_require__(805);
	var validateDOMNesting = __webpack_require__(808);
	var warning = __webpack_require__(763);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);
	
	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};
	
	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}
	
	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}
	
	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;
	
	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }
	
	  return id;
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}
	
	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;
	
	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}
	
	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}
	
	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);
	
	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
	  if (ReactDOMFeatureFlags.useCreateElement) {
	    context = assign({}, context);
	    if (container.nodeType === DOC_NODE_TYPE) {
	      context[ownerDocumentContextKey] = container;
	    } else {
	      context[ownerDocumentContextKey] = container.ownerDocument;
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (context === emptyObject) {
	      context = {};
	    }
	    var tag = container.nodeName.toLowerCase();
	    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
	  }
	  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
	  componentInstance._renderedComponent._topLevelWrapper = componentInstance;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* forceHTML */shouldReuseMarkup);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container) {
	  ReactReconciler.unmountComponent(instance);
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(node) {
	  var reactRootID = getReactRootID(node);
	  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
	}
	
	/**
	 * Returns the first (deepest) ancestor of a node which is rendered by this copy
	 * of React.
	 */
	function findFirstReactDOMImpl(node) {
	  // This node might be from another React instance, so we make sure not to
	  // examine the node cache here
	  for (; node && node.parentNode !== node; node = node.parentNode) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      continue;
	    }
	    var nodeID = internalGetID(node);
	    if (!nodeID) {
	      continue;
	    }
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	
	    // If containersByReactRootID contains the container we find by crawling up
	    // the tree, we know that this instance of React rendered the node.
	    // nb. isValid's strategy (with containsNode) does not work because render
	    // trees may be nested and we don't want a false positive in that case.
	    var current = node;
	    var lastID;
	    do {
	      lastID = internalGetID(current);
	      current = current.parentNode;
	      if (current == null) {
	        // The passed-in node has been detached from the container it was
	        // originally rendered into.
	        return null;
	      }
	    } while (lastID !== reactRootID);
	
	    if (current === containersByReactRootID[reactRootID]) {
	      return node;
	    }
	  }
	  return null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var TopLevelWrapper = function () {};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
	    }
	
	    return prevComponent;
	  },
	
	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function (nextComponent, container) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	
	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },
	
	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
	
	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(componentInstance, container);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
	    }
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;
	
	    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var prevComponent = instancesByReactRootID[getReactRootID(container)];
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function (container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;
	
	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var containerID = internalGetID(container);
	      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
	      }
	
	      return false;
	    }
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if (process.env.NODE_ENV !== 'production') {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },
	
	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function (id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];
	
	    if (process.env.NODE_ENV !== 'production') {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        process.env.NODE_ENV !== 'production' ? warning(
	        // Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
	        var containerChild = container.firstChild;
	        if (containerChild && reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
	        }
	      }
	    }
	
	    return container;
	  },
	
	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function (id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },
	
	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component rendered by this copy of React.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function (node) {
	    return findFirstReactDOMImpl(node);
	  },
	
	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function (ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;
	
	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw on the next line; give an early warning
	      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
	    }
	
	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;
	
	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;
	
	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.
	
	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }
	
	        child = child.nextSibling;
	      }
	
	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;
	
	        return targetChild;
	      }
	    }
	
	    firstChildren.length = 0;
	
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
	  },
	
	  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      container.appendChild(markup);
	    } else {
	      setInnerHTML(container, markup);
	    }
	  },
	
	  ownerDocumentContextKey: ownerDocumentContextKey,
	
	  /**
	   * React ID utilities.
	   */
	
	  getReactRootID: getReactRootID,
	
	  getID: getID,
	
	  setID: setID,
	
	  getNode: getNode,
	
	  getNodeFromInstance: getNodeFromInstance,
	
	  isValid: isValid,
	
	  purgeID: purgeID
	};
	
	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});
	
	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 767 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(768);
	var EventPluginHub = __webpack_require__(769);
	var EventPluginRegistry = __webpack_require__(770);
	var ReactEventEmitterMixin = __webpack_require__(775);
	var ReactPerf = __webpack_require__(756);
	var ViewportMetrics = __webpack_require__(776);
	
	var assign = __webpack_require__(777);
	var isEventSupported = __webpack_require__(778);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },
	
	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginHub.registrationNameModules,
	
	  putListener: EventPluginHub.putListener,
	
	  getListener: EventPluginHub.getListener,
	
	  deleteListener: EventPluginHub.deleteListener,
	
	  deleteAllListeners: EventPluginHub.deleteAllListeners
	
	});
	
	ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
	  putListener: 'putListener',
	  deleteListener: 'deleteListener'
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 768 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(755);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

/***/ }),
/* 769 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var EventPluginRegistry = __webpack_require__(770);
	var EventPluginUtils = __webpack_require__(771);
	var ReactErrorUtils = __webpack_require__(772);
	
	var accumulateInto = __webpack_require__(773);
	var forEachAccumulated = __webpack_require__(774);
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;
	
	function validateInstanceHandle() {
	  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
	  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,
	
	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function (InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	    },
	
	    getInstanceHandle: function () {
	      if (process.env.NODE_ENV !== 'production') {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginRegistry.registrationNameModules,
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function (id, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;
	
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(id, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (id, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(id, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function (id) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank[registrationName][id]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(id, registrationName);
	      }
	
	      delete listenerBank[registrationName][id];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 770 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(751);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 771 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(768);
	var ReactErrorUtils = __webpack_require__(772);
	
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function (InjectedMount) {
	    injection.Mount = InjectedMount;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, simulated, listener, domID) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = injection.Mount.getNode(domID);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
	  }
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
	  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getNode: function (id) {
	    return injection.Mount.getNode(id);
	  },
	  getID: function (node) {
	    return injection.Mount.getID(node);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 772 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 773 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(751);
	
	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);
	
	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }
	
	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }
	
	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 774 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function (arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};
	
	module.exports = forEachAccumulated;

/***/ }),
/* 775 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(769);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ }),
/* 776 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ }),
/* 777 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */
	
	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign
	
	'use strict';
	
	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }
	
	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }
	
	    var from = Object(nextSource);
	
	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.
	
	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }
	
	  return to;
	}
	
	module.exports = assign;

/***/ }),
/* 778 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(747);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = (eventName in document);
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ }),
/* 779 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: false
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 780 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(743);
	
	var assign = __webpack_require__(777);
	var canDefineProperty = __webpack_require__(781);
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    Object.freeze(element.props);
	    Object.freeze(element);
	  }
	
	  return element;
	};
	
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
	  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);
	
	  if (process.env.NODE_ENV !== 'production') {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }
	
	  return newElement;
	};
	
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 781 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 782 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponentRegistry
	 */
	
	'use strict';
	
	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};
	
	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}
	
	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}
	
	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}
	
	var ReactEmptyComponentRegistry = {
	  isNullComponentID: isNullComponentID,
	  registerNullComponentID: registerNullComponentID,
	  deregisterNullComponentID: deregisterNullComponentID
	};
	
	module.exports = ReactEmptyComponentRegistry;

/***/ }),
/* 783 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactRootIndex = __webpack_require__(784);
	
	var invariant = __webpack_require__(751);
	
	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;
	
	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 10000;
	
	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}
	
	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}
	
	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
	}
	
	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
	}
	
	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}
	
	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
	  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}
	
	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
	  return longestCommonID;
	}
	
	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {*} arg Argument to invoke the callback with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
	  var traverseUp = isAncestorIDOf(stop, start);
	  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start;; /* until break */id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
	  }
	}
	
	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {
	
	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function () {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },
	
	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function (rootID, name) {
	    return rootID + name;
	  },
	
	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function (id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },
	
	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },
	
	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },
	
	  /**
	   * Same as `traverseTwoPhase` but skips the `targetID`.
	   */
	  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, true);
	      traverseParentPath(targetID, '', cb, arg, true, true);
	    }
	  },
	
	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function (targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },
	
	  getFirstCommonAncestorID: getFirstCommonAncestorID,
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,
	
	  isAncestorIDOf: isAncestorIDOf,
	
	  SEPARATOR: SEPARATOR
	
	};
	
	module.exports = ReactInstanceHandles;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 784 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function (_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};
	
	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};
	
	module.exports = ReactRootIndex;

/***/ }),
/* 785 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ }),
/* 786 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(787);
	
	var TAG_END = /\/?>/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags and self-closing tags)
	    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ }),
/* 787 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    for (; i < Math.min(i + 4096, m); i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ }),
/* 788 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(789);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }
	
	};
	
	module.exports = ReactReconciler;

/***/ }),
/* 789 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(790);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ }),
/* 790 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(751);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 791 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(743);
	var ReactElement = __webpack_require__(780);
	var ReactInstanceMap = __webpack_require__(785);
	var ReactUpdates = __webpack_require__(792);
	
	var assign = __webpack_require__(777);
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
	  },
	
	  enqueueSetPropsInternal: function (internalInstance, partialProps) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    var props = assign({}, element.props, partialProps);
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
	
	    enqueueUpdate(topLevelWrapper);
	  },
	
	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
	    if (!internalInstance) {
	      return;
	    }
	    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
	  },
	
	  enqueueReplacePropsInternal: function (internalInstance, props) {
	    var topLevelWrapper = internalInstance._topLevelWrapper;
	    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
	    var element = wrapElement.props;
	    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));
	
	    enqueueUpdate(topLevelWrapper);
	  },
	
	  enqueueElementInternal: function (internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 792 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(793);
	var PooledClass = __webpack_require__(794);
	var ReactPerf = __webpack_require__(756);
	var ReactReconciler = __webpack_require__(788);
	var Transaction = __webpack_require__(795);
	
	var assign = __webpack_require__(777);
	var invariant = __webpack_require__(751);
	
	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
	}
	
	assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 793 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(794);
	
	var assign = __webpack_require__(777);
	var invariant = __webpack_require__(751);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 794 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(751);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 795 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(751);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 796 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 797 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */
	
	'use strict';
	
	var isTextNode = __webpack_require__(798);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(_x, _x2) {
	  var _again = true;
	
	  _function: while (_again) {
	    var outerNode = _x,
	        innerNode = _x2;
	    _again = false;
	
	    if (!outerNode || !innerNode) {
	      return false;
	    } else if (outerNode === innerNode) {
	      return true;
	    } else if (isTextNode(outerNode)) {
	      return false;
	    } else if (isTextNode(innerNode)) {
	      _x = outerNode;
	      _x2 = innerNode.parentNode;
	      _again = true;
	      continue _function;
	    } else if (outerNode.contains) {
	      return outerNode.contains(innerNode);
	    } else if (outerNode.compareDocumentPosition) {
	      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	    } else {
	      return false;
	    }
	  }
	}
	
	module.exports = containsNode;

/***/ }),
/* 798 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */
	
	'use strict';
	
	var isNode = __webpack_require__(799);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ }),
/* 799 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	'use strict';
	
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ }),
/* 800 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactCompositeComponent = __webpack_require__(801);
	var ReactEmptyComponent = __webpack_require__(806);
	var ReactNativeComponent = __webpack_require__(807);
	
	var assign = __webpack_require__(777);
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function () {};
	assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = new ReactEmptyComponent(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactNativeComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
	  }
	
	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 801 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(802);
	var ReactCurrentOwner = __webpack_require__(743);
	var ReactElement = __webpack_require__(780);
	var ReactInstanceMap = __webpack_require__(785);
	var ReactPerf = __webpack_require__(756);
	var ReactPropTypeLocations = __webpack_require__(803);
	var ReactPropTypeLocationNames = __webpack_require__(804);
	var ReactReconciler = __webpack_require__(788);
	var ReactUpdateQueue = __webpack_require__(791);
	
	var assign = __webpack_require__(777);
	var emptyObject = __webpack_require__(796);
	var invariant = __webpack_require__(751);
	var shouldUpdateReactComponent = __webpack_require__(805);
	var warning = __webpack_require__(763);
	
	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  return Component(this.props, this.context, this.updater);
	};
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	
	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedComponent = null;
	
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;
	
	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    // Initialize the public class
	    var inst;
	    var renderedElement;
	
	    // This is a way to detect if Component is a stateless arrow function
	    // component, which is not newable. It might not be 100% reliable but is
	    // something we can do until we start detecting that Component extends
	    // React.Component. We already assume that typeof Component === 'function'.
	    var canInstantiate = ('prototype' in Component);
	
	    if (canInstantiate) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactCurrentOwner.current = this;
	        try {
	          inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	        } finally {
	          ReactCurrentOwner.current = null;
	        }
	      } else {
	        inst = new Component(publicProps, publicContext, ReactUpdateQueue);
	      }
	    }
	
	    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
	      renderedElement = inst;
	      inst = new StatelessComponent(Component);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
	      } else {
	        // We support ES6 inheriting from React.Component, the module pattern,
	        // and stateless components, but not ES6 classes that don't extend
	        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
	      }
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = ReactUpdateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    if (inst.componentWillMount) {
	      inst.componentWillMount();
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    this._renderedComponent = this._instantiateReactComponent(renderedElement);
	
	    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }
	
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function () {
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount) {
	      inst.componentWillUnmount();
	    }
	
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	    this._instance = null;
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var maskedContext = null;
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
	      }
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function (newProps) {
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.propTypes) {
	        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
	      }
	    }
	    return newProps;
	  },
	
	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function (propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	          error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // top-level render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);
	
	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
	          } else {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
	          }
	        }
	      }
	    }
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
	    }
	
	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	
	    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
	    var nextProps;
	
	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement === nextParentElement) {
	      // Skip checking prop types again -- we don't read inst.props to avoid
	      // warning for DOM component props in this upgrade
	      nextProps = nextParentElement.props;
	    } else {
	      nextProps = this._processProps(nextParentElement.props);
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.
	
	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	
	    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
	    }
	
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);
	
	      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
	      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },
	
	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent',
	  _renderValidatedComponent: '_renderValidatedComponent'
	});
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 802 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(751);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 803 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(755);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

/***/ }),
/* 804 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 805 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	  return false;
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ }),
/* 806 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(780);
	var ReactEmptyComponentRegistry = __webpack_require__(782);
	var ReactReconciler = __webpack_require__(788);
	
	var assign = __webpack_require__(777);
	
	var placeholderElement;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function (component) {
	    placeholderElement = ReactElement.createElement(component);
	  }
	};
	
	function registerNullComponentID() {
	  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);
	}
	
	var ReactEmptyComponent = function (instantiate) {
	  this._currentElement = null;
	  this._rootNodeID = null;
	  this._renderedComponent = instantiate(placeholderElement);
	};
	assign(ReactEmptyComponent.prototype, {
	  construct: function (element) {},
	  mountComponent: function (rootID, transaction, context) {
	    transaction.getReactMountReady().enqueue(registerNullComponentID, this);
	    this._rootNodeID = rootID;
	    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
	  },
	  receiveComponent: function () {},
	  unmountComponent: function (rootID, transaction, context) {
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
	    this._rootNodeID = null;
	    this._renderedComponent = null;
	  }
	});
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ }),
/* 807 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */
	
	'use strict';
	
	var assign = __webpack_require__(777);
	var invariant = __webpack_require__(751);
	
	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}
	
	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
	  return new genericComponentClass(element.type, element.props);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};
	
	module.exports = ReactNativeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 808 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */
	
	'use strict';
	
	var assign = __webpack_require__(777);
	var emptyFunction = __webpack_require__(753);
	var warning = __webpack_require__(763);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    parentTag: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.parentTag = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    /*eslint-disable space-after-keywords */
	    do {
	      /*eslint-enable space-after-keywords */
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
	      }
	    }
	  };
	
	  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.parentTag;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 809 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(810);
	var ChangeEventPlugin = __webpack_require__(818);
	var ClientReactRootIndex = __webpack_require__(821);
	var DefaultEventPluginOrder = __webpack_require__(822);
	var EnterLeaveEventPlugin = __webpack_require__(823);
	var ExecutionEnvironment = __webpack_require__(747);
	var HTMLDOMPropertyConfig = __webpack_require__(827);
	var ReactBrowserComponentMixin = __webpack_require__(828);
	var ReactComponentBrowserEnvironment = __webpack_require__(764);
	var ReactDefaultBatchingStrategy = __webpack_require__(830);
	var ReactDOMComponent = __webpack_require__(831);
	var ReactDOMTextComponent = __webpack_require__(744);
	var ReactEventListener = __webpack_require__(856);
	var ReactInjection = __webpack_require__(859);
	var ReactInstanceHandles = __webpack_require__(783);
	var ReactMount = __webpack_require__(766);
	var ReactReconcileTransaction = __webpack_require__(863);
	var SelectEventPlugin = __webpack_require__(868);
	var ServerReactRootIndex = __webpack_require__(869);
	var SimpleEventPlugin = __webpack_require__(870);
	var SVGDOMPropertyConfig = __webpack_require__(879);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	
	  if (process.env.NODE_ENV !== 'production') {
	    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	    if (/[?&]react_perf\b/.test(url)) {
	      var ReactDefaultPerf = __webpack_require__(880);
	      ReactDefaultPerf.start();
	    }
	  }
	}
	
	module.exports = {
	  inject: inject
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 810 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(768);
	var EventPropagators = __webpack_require__(811);
	var ExecutionEnvironment = __webpack_require__(747);
	var FallbackCompositionState = __webpack_require__(812);
	var SyntheticCompositionEvent = __webpack_require__(814);
	var SyntheticInputEvent = __webpack_require__(816);
	
	var keyOf = __webpack_require__(817);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ }),
/* 811 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(768);
	var EventPluginHub = __webpack_require__(769);
	
	var warning = __webpack_require__(763);
	
	var accumulateInto = __webpack_require__(773);
	var forEachAccumulated = __webpack_require__(774);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 812 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(794);
	
	var assign = __webpack_require__(777);
	var getTextContentAccessor = __webpack_require__(813);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ }),
/* 813 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(747);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ }),
/* 814 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(815);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ }),
/* 815 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(794);
	
	var assign = __webpack_require__(777);
	var emptyFunction = __webpack_require__(753);
	var warning = __webpack_require__(763);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}
	
	assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
	    }
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 816 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(815);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ }),
/* 817 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	"use strict";
	
	var keyOf = function (oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ }),
/* 818 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(768);
	var EventPluginHub = __webpack_require__(769);
	var EventPropagators = __webpack_require__(811);
	var ExecutionEnvironment = __webpack_require__(747);
	var ReactUpdates = __webpack_require__(792);
	var SyntheticEvent = __webpack_require__(815);
	
	var getEventTarget = __webpack_require__(819);
	var isEventSupported = __webpack_require__(778);
	var isTextInputElement = __webpack_require__(820);
	var keyOf = __webpack_require__(817);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}
	
	function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
	}
	
	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}
	
	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);
	
	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}
	
	// For IE8 and IE9.
	function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	
	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }
	
	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ }),
/* 819 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ }),
/* 820 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
	}
	
	module.exports = isTextInputElement;

/***/ }),
/* 821 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var nextReactRootIndex = 0;
	
	var ClientReactRootIndex = {
	  createReactRootIndex: function () {
	    return nextReactRootIndex++;
	  }
	};
	
	module.exports = ClientReactRootIndex;

/***/ }),
/* 822 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(817);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

/***/ }),
/* 823 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(768);
	var EventPropagators = __webpack_require__(811);
	var SyntheticMouseEvent = __webpack_require__(824);
	
	var ReactMount = __webpack_require__(766);
	var keyOf = __webpack_require__(817);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var extractedEvents = [null, null];
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    var fromID = '';
	    var toID = '';
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      fromID = topLevelTargetID;
	      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
	      if (to) {
	        toID = ReactMount.getID(to);
	      } else {
	        to = win;
	      }
	      to = to || win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	      toID = topLevelTargetID;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
	
	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;
	
	    return extractedEvents;
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 824 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(825);
	var ViewportMetrics = __webpack_require__(776);
	
	var getEventModifierState = __webpack_require__(826);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ }),
/* 825 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(815);
	
	var getEventTarget = __webpack_require__(819);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ }),
/* 826 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ }),
/* 827 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(761);
	var ExecutionEnvironment = __webpack_require__(747);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
	}
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    challenge: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    inputMode: MUST_USE_ATTRIBUTE,
	    integrity: null,
	    is: MUST_USE_ATTRIBUTE,
	    keyParams: MUST_USE_ATTRIBUTE,
	    keyType: MUST_USE_ATTRIBUTE,
	    kind: null,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    minLength: MUST_USE_ATTRIBUTE,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    nonce: MUST_USE_ATTRIBUTE,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcLang: null,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    summary: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	    wrap: null,
	
	    /**
	     * RDFa Properties
	     */
	    about: MUST_USE_ATTRIBUTE,
	    datatype: MUST_USE_ATTRIBUTE,
	    inlist: MUST_USE_ATTRIBUTE,
	    prefix: MUST_USE_ATTRIBUTE,
	    // property is also supported for OpenGraph in meta tags.
	    property: MUST_USE_ATTRIBUTE,
	    resource: MUST_USE_ATTRIBUTE,
	    'typeof': MUST_USE_ATTRIBUTE,
	    vocab: MUST_USE_ATTRIBUTE,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: MUST_USE_ATTRIBUTE,
	    autoCorrect: MUST_USE_ATTRIBUTE,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: null,
	    // color is for Safari mask-icon link
	    color: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: null,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: MUST_USE_ATTRIBUTE,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoComplete: 'autocomplete',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    autoSave: 'autosave',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 828 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */
	
	'use strict';
	
	var ReactInstanceMap = __webpack_require__(785);
	
	var findDOMNode = __webpack_require__(829);
	var warning = __webpack_require__(763);
	
	var didWarnKey = '_getDOMNodeDidWarn';
	
	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function () {
	    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
	    this.constructor[didWarnKey] = true;
	    return findDOMNode(this);
	  }
	};
	
	module.exports = ReactBrowserComponentMixin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 829 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(743);
	var ReactInstanceMap = __webpack_require__(785);
	var ReactMount = __webpack_require__(766);
	
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
	   true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
	}
	
	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 830 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var ReactUpdates = __webpack_require__(792);
	var Transaction = __webpack_require__(795);
	
	var assign = __webpack_require__(777);
	var emptyFunction = __webpack_require__(753);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 831 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var AutoFocusUtils = __webpack_require__(832);
	var CSSPropertyOperations = __webpack_require__(834);
	var DOMProperty = __webpack_require__(761);
	var DOMPropertyOperations = __webpack_require__(760);
	var EventConstants = __webpack_require__(768);
	var ReactBrowserEventEmitter = __webpack_require__(767);
	var ReactComponentBrowserEnvironment = __webpack_require__(764);
	var ReactDOMButton = __webpack_require__(842);
	var ReactDOMInput = __webpack_require__(843);
	var ReactDOMOption = __webpack_require__(847);
	var ReactDOMSelect = __webpack_require__(850);
	var ReactDOMTextarea = __webpack_require__(851);
	var ReactMount = __webpack_require__(766);
	var ReactMultiChild = __webpack_require__(852);
	var ReactPerf = __webpack_require__(756);
	var ReactUpdateQueue = __webpack_require__(791);
	
	var assign = __webpack_require__(777);
	var canDefineProperty = __webpack_require__(781);
	var escapeTextContentForBrowser = __webpack_require__(759);
	var invariant = __webpack_require__(751);
	var isEventSupported = __webpack_require__(778);
	var keyOf = __webpack_require__(817);
	var setInnerHTML = __webpack_require__(757);
	var setTextContent = __webpack_require__(758);
	var shallowEqual = __webpack_require__(855);
	var validateDOMNesting = __webpack_require__(808);
	var warning = __webpack_require__(763);
	
	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var CHILDREN = keyOf({ children: null });
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	
	var ELEMENT_NODE_TYPE = 1;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	var legacyPropsDescriptor;
	if (process.env.NODE_ENV !== 'production') {
	  legacyPropsDescriptor = {
	    props: {
	      enumerable: false,
	      get: function () {
	        var component = this._reactInternalComponent;
	        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
	        return component._currentElement.props;
	      }
	    }
	  };
	}
	
	function legacyGetDOMNode() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return this;
	}
	
	function legacyIsMounted() {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  return !!component;
	}
	
	function legacySetStateEtc() {
	  if (process.env.NODE_ENV !== 'production') {
	    var component = this._reactInternalComponent;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	}
	
	function legacySetProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}
	
	function legacyReplaceProps(partialProps, callback) {
	  var component = this._reactInternalComponent;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
	  }
	  if (!component) {
	    return;
	  }
	  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallbackInternal(component, callback);
	  }
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined becauses undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (process.env.NODE_ENV !== 'production') {
	    if (voidElementTags[component._tag]) {
	      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
	    }
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
	    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
	}
	
	function enqueuePutListener(id, registrationName, listener, transaction) {
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getReactMountReady().enqueue(putListener, {
	    id: id,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
	  var node = ReactMount.getNode(inst._rootNodeID);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;
	
	  switch (inst._tag) {
	    case 'iframe':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	  }
	}
	
	function mountReadyInputWrapper() {
	  ReactDOMInput.mountReadyWrapper(this);
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = ({}).hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function processChildContextDev(context, inst) {
	  // Pass down our tag name to child components for validation purposes
	  context = assign({}, context);
	  var info = context[validateDOMNesting.ancestorInfoContextKey];
	  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
	  return context;
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag.toLowerCase();
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._nodeWithLegacyProperties = null;
	  if (process.env.NODE_ENV !== 'production') {
	    this._unprocessedContextDev = null;
	    this._processedContextDev = null;
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  construct: function (element) {
	    this._currentElement = element;
	  },
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (rootID, transaction, context) {
	    this._rootNodeID = rootID;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getNativeProps(this, props, context);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, context);
	        props = ReactDOMInput.getNativeProps(this, props, context);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, context);
	        props = ReactDOMOption.getNativeProps(this, props, context);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, context);
	        props = ReactDOMSelect.getNativeProps(this, props, context);
	        context = ReactDOMSelect.processChildContext(this, props, context);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, context);
	        props = ReactDOMTextarea.getNativeProps(this, props, context);
	        break;
	    }
	
	    assertValidProps(this, props);
	    if (process.env.NODE_ENV !== 'production') {
	      if (context[validateDOMNesting.ancestorInfoContextKey]) {
	        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._unprocessedContextDev = context;
	      this._processedContextDev = processChildContextDev(context, this);
	      context = this._processedContextDev;
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = context[ReactMount.ownerDocumentContextKey];
	      var el = ownerDocument.createElement(this._currentElement.type);
	      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
	      // Populate node cache
	      ReactMount.getID(el);
	      this._updateDOMProperties({}, props, transaction, el);
	      this._createInitialChildren(transaction, props, context, el);
	      mountImage = el;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
	      // falls through
	      case 'button':
	      case 'select':
	      case 'textarea':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (propKey !== CHILDREN) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, el) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        setInnerHTML(el, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        setTextContent(el, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          el.appendChild(mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getNativeProps(this, lastProps);
	        nextProps = ReactDOMButton.getNativeProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getNativeProps(this, lastProps);
	        nextProps = ReactDOMInput.getNativeProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getNativeProps(this, lastProps);
	        nextProps = ReactDOMOption.getNativeProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
	        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
	        break;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // If the context is reference-equal to the old one, pass down the same
	      // processed object so the update bailout in ReactReconciler behaves
	      // correctly (and identically in dev and prod). See #5005.
	      if (this._unprocessedContextDev !== context) {
	        this._unprocessedContextDev = context;
	        this._processedContextDev = processChildContextDev(context, this);
	      }
	      context = this._processedContextDev;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction, null);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    if (!canDefineProperty && this._nodeWithLegacyProperties) {
	      this._nodeWithLegacyProperties.props = nextProps;
	    }
	
	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        DOMPropertyOperations.deleteValueForProperty(node, propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this._rootNodeID, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        if (propKey === CHILDREN) {
	          nextProp = null;
	        }
	        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        if (!node) {
	          node = ReactMount.getNode(this._rootNodeID);
	        }
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertantly setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      if (!node) {
	        node = ReactMount.getNode(this._rootNodeID);
	      }
	      CSSPropertyOperations.setValueForStyles(node, styleUpdates);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function () {
	    switch (this._tag) {
	      case 'iframe':
	      case 'img':
	      case 'form':
	      case 'video':
	      case 'audio':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	        ReactDOMInput.unmountWrapper(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
	        break;
	    }
	
	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._wrapperState = null;
	    if (this._nodeWithLegacyProperties) {
	      var node = this._nodeWithLegacyProperties;
	      node._reactInternalComponent = null;
	      this._nodeWithLegacyProperties = null;
	    }
	  },
	
	  getPublicInstance: function () {
	    if (!this._nodeWithLegacyProperties) {
	      var node = ReactMount.getNode(this._rootNodeID);
	
	      node._reactInternalComponent = this;
	      node.getDOMNode = legacyGetDOMNode;
	      node.isMounted = legacyIsMounted;
	      node.setState = legacySetStateEtc;
	      node.replaceState = legacySetStateEtc;
	      node.forceUpdate = legacySetStateEtc;
	      node.setProps = legacySetProps;
	      node.replaceProps = legacyReplaceProps;
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (canDefineProperty) {
	          Object.defineProperties(node, legacyPropsDescriptor);
	        } else {
	          // updateComponent will update this property on subsequent renders
	          node.props = this._currentElement.props;
	        }
	      } else {
	        // updateComponent will update this property on subsequent renders
	        node.props = this._currentElement.props;
	      }
	
	      this._nodeWithLegacyProperties = node;
	    }
	    return this._nodeWithLegacyProperties;
	  }
	
	};
	
	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});
	
	assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 832 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactMount = __webpack_require__(766);
	
	var findDOMNode = __webpack_require__(829);
	var focusNode = __webpack_require__(833);
	
	var Mixin = {
	  componentDidMount: function () {
	    if (this.props.autoFocus) {
	      focusNode(findDOMNode(this));
	    }
	  }
	};
	
	var AutoFocusUtils = {
	  Mixin: Mixin,
	
	  focusDOMComponent: function () {
	    focusNode(ReactMount.getNode(this._rootNodeID));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ }),
/* 833 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ }),
/* 834 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(835);
	var ExecutionEnvironment = __webpack_require__(747);
	var ReactPerf = __webpack_require__(756);
	
	var camelizeStyleName = __webpack_require__(836);
	var dangerousStyleValue = __webpack_require__(838);
	var hyphenateStyleName = __webpack_require__(839);
	var memoizeStringOnly = __webpack_require__(841);
	var warning = __webpack_require__(763);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	
	  var warnHyphenatedStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
	  };
	
	  var warnBadVendoredStyleName = function (name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function (name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function (node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
	  setValueForStyles: 'setValueForStyles'
	});
	
	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 835 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ }),
/* 836 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(837);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ }),
/* 837 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */
	
	"use strict";
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ }),
/* 838 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(835);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;

/***/ }),
/* 839 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(840);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ }),
/* 840 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */
	
	'use strict';
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ }),
/* 841 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ }),
/* 842 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var mouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getNativeProps: function (inst, props, context) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    // Copy the props, except the mouse listeners
	    var nativeProps = {};
	    for (var key in props) {
	      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
	        nativeProps[key] = props[key];
	      }
	    }
	
	    return nativeProps;
	  }
	};
	
	module.exports = ReactDOMButton;

/***/ }),
/* 843 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var ReactDOMIDOperations = __webpack_require__(765);
	var LinkedValueUtils = __webpack_require__(844);
	var ReactMount = __webpack_require__(766);
	var ReactUpdates = __webpack_require__(792);
	
	var assign = __webpack_require__(777);
	var invariant = __webpack_require__(751);
	
	var instancesByReactID = {};
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getNativeProps: function (inst, props, context) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var nativeProps = assign({}, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  mountReadyWrapper: function (inst) {
	    // Can't be in mountWrapper or else server rendering leaks.
	    instancesByReactID[inst._rootNodeID] = inst;
	  },
	
	  unmountWrapper: function (inst) {
	    delete instancesByReactID[inst._rootNodeID];
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactMount.getNode(this._rootNodeID);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React with non-React.
	      var otherID = ReactMount.getID(otherNode);
	      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
	      var otherInstance = instancesByReactID[otherID];
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 844 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactPropTypes = __webpack_require__(845);
	var ReactPropTypeLocations = __webpack_require__(803);
	
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 845 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(780);
	var ReactPropTypeLocationNames = __webpack_require__(804);
	
	var emptyFunction = __webpack_require__(753);
	var getIteratorFn = __webpack_require__(846);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED') == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return '<<anonymous>>';
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

/***/ }),
/* 846 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ }),
/* 847 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var ReactChildren = __webpack_require__(848);
	var ReactDOMSelect = __webpack_require__(850);
	
	var assign = __webpack_require__(777);
	var warning = __webpack_require__(763);
	
	var valueContextKey = ReactDOMSelect.valueContextKey;
	
	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, context) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
	    }
	
	    // Look up whether this option is 'selected' via context
	    var selectValue = context[valueContextKey];
	
	    // If context key is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === '' + props.value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === '' + props.value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  getNativeProps: function (inst, props, context) {
	    var nativeProps = assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      nativeProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = '';
	
	    // Flatten children and warn if they aren't strings or numbers;
	    // invalid types are ignored.
	    ReactChildren.forEach(props.children, function (child) {
	      if (child == null) {
	        return;
	      }
	      if (typeof child === 'string' || typeof child === 'number') {
	        content += child;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
	      }
	    });
	
	    if (content) {
	      nativeProps.children = content;
	    }
	
	    return nativeProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 848 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(794);
	var ReactElement = __webpack_require__(780);
	
	var emptyFunction = __webpack_require__(753);
	var traverseAllChildren = __webpack_require__(849);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ }),
/* 849 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(743);
	var ReactElement = __webpack_require__(780);
	var ReactInstanceHandles = __webpack_require__(783);
	
	var getIteratorFn = __webpack_require__(846);
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};
	
	var userProvidedKeyEscapeRegex = /[=.:]/g;
	
	var didWarnAboutMaps = false;
	
	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} text Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
	}
	
	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 850 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var LinkedValueUtils = __webpack_require__(844);
	var ReactMount = __webpack_require__(766);
	var ReactUpdates = __webpack_require__(792);
	
	var assign = __webpack_require__(777);
	var warning = __webpack_require__(763);
	
	var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactMount.getNode(inst._rootNodeID).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  valueContextKey: valueContextKey,
	
	  getNativeProps: function (inst, props, context) {
	    return assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	  },
	
	  processChildContext: function (inst, props, context) {
	    // Pass down initial value so initial generated markup has correct
	    // `selected` attributes
	    var childContext = assign({}, context);
	    childContext[valueContextKey] = inst._wrapperState.initialValue;
	    return childContext;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // the context value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  this._wrapperState.pendingUpdate = true;
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 851 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var LinkedValueUtils = __webpack_require__(844);
	var ReactDOMIDOperations = __webpack_require__(765);
	var ReactUpdates = __webpack_require__(792);
	
	var assign = __webpack_require__(777);
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getNativeProps: function (inst, props, context) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    var nativeProps = assign({}, props, {
	      defaultValue: undefined,
	      value: undefined,
	      children: inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return nativeProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	    }
	
	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
	      }
	      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
	        children = children[0];
	      }
	
	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(props);
	
	    inst._wrapperState = {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue),
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 852 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(802);
	var ReactMultiChildUpdateTypes = __webpack_require__(754);
	
	var ReactCurrentOwner = __webpack_require__(743);
	var ReactReconciler = __webpack_require__(788);
	var ReactChildReconciler = __webpack_require__(853);
	
	var flattenChildren = __webpack_require__(854);
	
	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;
	
	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];
	
	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];
	
	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueInsertMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    content: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    content: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}
	
	/**
	 * Enqueues setting the markup of a node.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function enqueueSetMarkup(parentID, markup) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    markupIndex: null,
	    content: markup,
	    fromIndex: null,
	    toIndex: null
	  });
	}
	
	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    content: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
	    clearQueue();
	  }
	}
	
	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChild(prevChildren[name]);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        this.setMarkup(nextMarkup);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildrenElements, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChild(prevChild);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChild(prevChildren[name]);
	        }
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function () {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, mountImage) {
	      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },
	
	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function (textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },
	
	    /**
	     * Sets this markup string.
	     *
	     * @param {string} markup Markup to set.
	     * @protected
	     */
	    setMarkup: function (markup) {
	      enqueueSetMarkup(this._rootNodeID, markup);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 853 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(788);
	
	var instantiateReactComponent = __webpack_require__(800);
	var shouldUpdateReactComponent = __webpack_require__(805);
	var traverseAllChildren = __webpack_require__(849);
	var warning = __webpack_require__(763);
	
	function instantiateChild(childInstances, child, name) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, null);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, null);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 854 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */
	
	'use strict';
	
	var traverseAllChildren = __webpack_require__(849);
	var warning = __webpack_require__(763);
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = result[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 855 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 * @typechecks
	 * 
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  var bHasOwnProperty = hasOwnProperty.bind(objB);
	  for (var i = 0; i < keysA.length; i++) {
	    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ }),
/* 856 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventListener = __webpack_require__(857);
	var ExecutionEnvironment = __webpack_require__(747);
	var PooledClass = __webpack_require__(794);
	var ReactInstanceHandles = __webpack_require__(783);
	var ReactMount = __webpack_require__(766);
	var ReactUpdates = __webpack_require__(792);
	
	var assign = __webpack_require__(777);
	var getEventTarget = __webpack_require__(819);
	var getUnboundedScrollPosition = __webpack_require__(858);
	
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  // TODO: Re-enable event.path handling
	  //
	  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
	  //   // New browsers have a path attribute on native events
	  //   handleTopLevelWithPath(bookKeeping);
	  // } else {
	  //   // Legacy browsers don't have a path attribute on native events
	  //   handleTopLevelWithoutPath(bookKeeping);
	  // }
	
	  void handleTopLevelWithPath; // temporarily unused
	  handleTopLevelWithoutPath(bookKeeping);
	}
	
	// Legacy browsers don't have a path attribute on native events
	function handleTopLevelWithoutPath(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	// New browsers have a path attribute on native events
	function handleTopLevelWithPath(bookKeeping) {
	  var path = bookKeeping.nativeEvent.path;
	  var currentNativeTarget = path[0];
	  var eventsFired = 0;
	  for (var i = 0; i < path.length; i++) {
	    var currentPathElement = path[i];
	    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
	      currentNativeTarget = path[i + 1];
	    }
	    // TODO: slow
	    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
	    if (reactParent === currentPathElement) {
	      var currentPathElementID = ReactMount.getID(currentPathElement);
	      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
	      bookKeeping.ancestors.push(currentPathElement);
	
	      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
	      eventsFired++;
	      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);
	
	      // Jump to the root of this React render tree
	      while (currentPathElementID !== newRootID) {
	        i++;
	        currentPathElement = path[i];
	        currentPathElementID = ReactMount.getID(currentPathElement);
	      }
	    }
	  }
	  if (eventsFired === 0) {
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ }),
/* 857 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(753);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function () {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function (target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function () {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function () {}
	};
	
	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 858 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ }),
/* 859 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(761);
	var EventPluginHub = __webpack_require__(769);
	var ReactComponentEnvironment = __webpack_require__(802);
	var ReactClass = __webpack_require__(860);
	var ReactEmptyComponent = __webpack_require__(806);
	var ReactBrowserEventEmitter = __webpack_require__(767);
	var ReactNativeComponent = __webpack_require__(807);
	var ReactPerf = __webpack_require__(756);
	var ReactRootIndex = __webpack_require__(784);
	var ReactUpdates = __webpack_require__(792);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ }),
/* 860 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var ReactComponent = __webpack_require__(861);
	var ReactElement = __webpack_require__(780);
	var ReactPropTypeLocations = __webpack_require__(803);
	var ReactPropTypeLocationNames = __webpack_require__(804);
	var ReactNoopUpdateQueue = __webpack_require__(862);
	
	var assign = __webpack_require__(777);
	var emptyObject = __webpack_require__(796);
	var invariant = __webpack_require__(751);
	var keyMirror = __webpack_require__(755);
	var keyOf = __webpack_require__(817);
	var warning = __webpack_require__(763);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	var warnedSetProps = false;
	function warnSetProps() {
	  if (!warnedSetProps) {
	    warnedSetProps = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
	  }
	}
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
	    }
	  }
	}
	
	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
	
	  var proto = Constructor.prototype;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    validateMethodOverride(proto, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = (name in RESERVED_SPEC_KEYS);
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;
	
	    var isInherited = (name in Constructor);
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function (partialProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueSetProps(this, partialProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function (newProps, callback) {
	    if (process.env.NODE_ENV !== 'production') {
	      warnSetProps();
	    }
	    this.updater.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback);
	    }
	  }
	};
	
	var ReactClassComponent = function () {};
	assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 861 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var ReactNoopUpdateQueue = __webpack_require__(862);
	
	var canDefineProperty = __webpack_require__(781);
	var emptyObject = __webpack_require__(796);
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
	  }
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
	    setProps: ['setProps', 'Instead, call render again at the top level.']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 862 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */
	
	'use strict';
	
	var warning = __webpack_require__(763);
	
	function warnTDZ(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnTDZ(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnTDZ(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnTDZ(publicInstance, 'setState');
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function (publicInstance, partialProps) {
	    warnTDZ(publicInstance, 'setProps');
	  },
	
	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function (publicInstance, props) {
	    warnTDZ(publicInstance, 'replaceProps');
	  }
	
	};
	
	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 863 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(793);
	var PooledClass = __webpack_require__(794);
	var ReactBrowserEventEmitter = __webpack_require__(767);
	var ReactDOMFeatureFlags = __webpack_require__(779);
	var ReactInputSelection = __webpack_require__(864);
	var Transaction = __webpack_require__(795);
	
	var assign = __webpack_require__(777);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(forceHTML) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;

/***/ }),
/* 864 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(865);
	
	var containsNode = __webpack_require__(797);
	var focusNode = __webpack_require__(833);
	var getActiveElement = __webpack_require__(867);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ }),
/* 865 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(747);
	
	var getNodeForCharacterOffset = __webpack_require__(866);
	var getTextContentAccessor = __webpack_require__(813);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ }),
/* 866 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ }),
/* 867 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	'use strict';
	
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ }),
/* 868 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(768);
	var EventPropagators = __webpack_require__(811);
	var ExecutionEnvironment = __webpack_require__(747);
	var ReactInputSelection = __webpack_require__(864);
	var SyntheticEvent = __webpack_require__(815);
	
	var getActiveElement = __webpack_require__(867);
	var isTextInputElement = __webpack_require__(820);
	var keyOf = __webpack_require__(817);
	var shallowEqual = __webpack_require__(855);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (id, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ }),
/* 869 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);
	
	var ServerReactRootIndex = {
	  createReactRootIndex: function () {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};
	
	module.exports = ServerReactRootIndex;

/***/ }),
/* 870 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(768);
	var EventListener = __webpack_require__(857);
	var EventPropagators = __webpack_require__(811);
	var ReactMount = __webpack_require__(766);
	var SyntheticClipboardEvent = __webpack_require__(871);
	var SyntheticEvent = __webpack_require__(815);
	var SyntheticFocusEvent = __webpack_require__(872);
	var SyntheticKeyboardEvent = __webpack_require__(873);
	var SyntheticMouseEvent = __webpack_require__(824);
	var SyntheticDragEvent = __webpack_require__(876);
	var SyntheticTouchEvent = __webpack_require__(877);
	var SyntheticUIEvent = __webpack_require__(825);
	var SyntheticWheelEvent = __webpack_require__(878);
	
	var emptyFunction = __webpack_require__(753);
	var getEventCharCode = __webpack_require__(874);
	var invariant = __webpack_require__(751);
	var keyOf = __webpack_require__(817);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
	    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (id, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var node = ReactMount.getNode(id);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (id, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 871 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(815);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ }),
/* 872 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(825);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ }),
/* 873 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(825);
	
	var getEventCharCode = __webpack_require__(874);
	var getEventKey = __webpack_require__(875);
	var getEventModifierState = __webpack_require__(826);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 874 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ }),
/* 875 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(874);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ }),
/* 876 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(824);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ }),
/* 877 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(825);
	
	var getEventModifierState = __webpack_require__(826);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ }),
/* 878 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(824);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ }),
/* 879 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(761);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    xlinkActuate: MUST_USE_ATTRIBUTE,
	    xlinkArcrole: MUST_USE_ATTRIBUTE,
	    xlinkHref: MUST_USE_ATTRIBUTE,
	    xlinkRole: MUST_USE_ATTRIBUTE,
	    xlinkShow: MUST_USE_ATTRIBUTE,
	    xlinkTitle: MUST_USE_ATTRIBUTE,
	    xlinkType: MUST_USE_ATTRIBUTE,
	    xmlBase: MUST_USE_ATTRIBUTE,
	    xmlLang: MUST_USE_ATTRIBUTE,
	    xmlSpace: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox',
	    xlinkActuate: 'xlink:actuate',
	    xlinkArcrole: 'xlink:arcrole',
	    xlinkHref: 'xlink:href',
	    xlinkRole: 'xlink:role',
	    xlinkShow: 'xlink:show',
	    xlinkTitle: 'xlink:title',
	    xlinkType: 'xlink:type',
	    xmlBase: 'xml:base',
	    xmlLang: 'xml:lang',
	    xmlSpace: 'xml:space'
	  }
	};
	
	module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 880 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(761);
	var ReactDefaultPerfAnalysis = __webpack_require__(881);
	var ReactMount = __webpack_require__(766);
	var ReactPerf = __webpack_require__(756);
	
	var performanceNow = __webpack_require__(882);
	
	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}
	
	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}
	
	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,
	
	  start: function () {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }
	
	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },
	
	  stop: function () {
	    ReactPerf.enableMeasure = false;
	  },
	
	  getLastMeasurements: function () {
	    return ReactDefaultPerf._allMeasurements;
	  },
	
	  printExclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },
	
	  printInclusive: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  getMeasurementsSummaryMap: function (measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
	    return summary.map(function (item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },
	
	  printWasted: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  printDOM: function (measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function (item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result.type = item.type;
	      result.args = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
	  },
	
	  _recordWrite: function (id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },
	
	  measure: function (moduleName, fnName, func) {
	    return function () {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }
	
	      var totalTime;
	      var rv;
	      var start;
	
	      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0,
	          created: {}
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function (update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
	          });
	        } else {
	          // basic format
	          var id = args[0];
	          if (typeof id === 'object') {
	            id = ReactMount.getID(args[0]);
	          }
	          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
	      fnName === '_renderValidatedComponent')) {
	
	        if (this._currentElement.type === ReactMount.TopLevelWrapper) {
	          return func.apply(this, args);
	        }
	
	        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';
	
	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];
	
	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          entry.created[rootNodeID] = true;
	          mountStack.push(0);
	        }
	
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }
	
	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
	        };
	
	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};
	
	module.exports = ReactDefaultPerf;

/***/ }),
/* 881 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */
	
	'use strict';
	
	var assign = __webpack_require__(777);
	
	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  SET_MARKUP: 'set innerHTML',
	  TEXT_CONTENT: 'set textContent',
	  'setValueForProperty': 'update attribute',
	  'setValueForAttribute': 'update attribute',
	  'deleteValueForProperty': 'remove attribute',
	  'setValueForStyles': 'update styles',
	  'replaceNodeWithMarkup': 'replace',
	  'updateTextContent': 'set textContent'
	};
	
	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}
	
	function getDOMSummary(measurements) {
	  var items = [];
	  measurements.forEach(function (measurement) {
	    Object.keys(measurement.writes).forEach(function (id) {
	      measurement.writes[id].forEach(function (write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    });
	  });
	  return items;
	}
	
	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	
	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;
	
	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }
	
	  arr.sort(function (a, b) {
	    return b.exclusive - a.exclusive;
	  });
	
	  return arr;
	}
	
	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	    var cleanComponents;
	
	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }
	
	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }
	
	      var displayName = measurement.displayNames[id];
	
	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;
	
	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };
	
	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }
	
	  arr.sort(function (a, b) {
	    return b.time - a.time;
	  });
	
	  return arr;
	}
	
	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	
	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    // check if component newly created
	    if (measurement.created[id]) {
	      isDirty = true;
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}
	
	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};
	
	module.exports = ReactDefaultPerfAnalysis;

/***/ }),
/* 882 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */
	
	'use strict';
	
	var performance = __webpack_require__(883);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function () {
	    return performance.now();
	  };
	} else {
	  performanceNow = function () {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ }),
/* 883 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(747);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ }),
/* 884 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '0.14.9';

/***/ }),
/* 885 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/
	
	'use strict';
	
	var ReactMount = __webpack_require__(766);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 886 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMServer
	 */
	
	'use strict';
	
	var ReactDefaultInjection = __webpack_require__(809);
	var ReactServerRendering = __webpack_require__(887);
	var ReactVersion = __webpack_require__(884);
	
	ReactDefaultInjection.inject();
	
	var ReactDOMServer = {
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  version: ReactVersion
	};
	
	module.exports = ReactDOMServer;

/***/ }),
/* 887 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';
	
	var ReactDefaultBatchingStrategy = __webpack_require__(830);
	var ReactElement = __webpack_require__(780);
	var ReactInstanceHandles = __webpack_require__(783);
	var ReactMarkupChecksum = __webpack_require__(786);
	var ReactServerBatchingStrategy = __webpack_require__(888);
	var ReactServerRenderingTransaction = __webpack_require__(889);
	var ReactUpdates = __webpack_require__(792);
	
	var emptyObject = __webpack_require__(796);
	var instantiateReactComponent = __webpack_require__(800);
	var invariant = __webpack_require__(751);
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;
	
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
	
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);
	
	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup = componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;
	
	  var transaction;
	  try {
	    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);
	
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);
	
	    return transaction.perform(function () {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	    // Revert to the DOM batching strategy since these two renderers
	    // currently share these stateful modules.
	    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	  }
	}
	
	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 888 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerBatchingStrategy
	 * @typechecks
	 */
	
	'use strict';
	
	var ReactServerBatchingStrategy = {
	  isBatchingUpdates: false,
	  batchedUpdates: function (callback) {
	    // Don't do anything here. During the server rendering we don't want to
	    // schedule any updates. We will simply ignore them.
	  }
	};
	
	module.exports = ReactServerBatchingStrategy;

/***/ }),
/* 889 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(794);
	var CallbackQueue = __webpack_require__(793);
	var Transaction = __webpack_require__(795);
	
	var assign = __webpack_require__(777);
	var emptyFunction = __webpack_require__(753);
	
	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  close: emptyFunction
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = false;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;

/***/ }),
/* 890 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactIsomorphic
	 */
	
	'use strict';
	
	var ReactChildren = __webpack_require__(848);
	var ReactComponent = __webpack_require__(861);
	var ReactClass = __webpack_require__(860);
	var ReactDOMFactories = __webpack_require__(891);
	var ReactElement = __webpack_require__(780);
	var ReactElementValidator = __webpack_require__(892);
	var ReactPropTypes = __webpack_require__(845);
	var ReactVersion = __webpack_require__(884);
	
	var assign = __webpack_require__(777);
	var onlyChild = __webpack_require__(894);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 891 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(780);
	var ReactElementValidator = __webpack_require__(892);
	
	var mapObject = __webpack_require__(893);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',
	
	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'
	
	}, createDOMFactory);
	
	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 892 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(780);
	var ReactPropTypeLocations = __webpack_require__(803);
	var ReactPropTypeLocationNames = __webpack_require__(804);
	var ReactCurrentOwner = __webpack_require__(743);
	
	var canDefineProperty = __webpack_require__(781);
	var getIteratorFn = __webpack_require__(846);
	var invariant = __webpack_require__(751);
	var warning = __webpack_require__(763);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	var loggedTypeFailures = {};
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
	  if (addenda === null) {
	    // we already showed the warning
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
	}
	
	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} messageType A key used for de-duping warnings.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 * @returns {?object} A set of addenda to use in the warning message, or null
	 * if the warning has already been shown before (and shouldn't be shown again).
	 */
	function getAddendaForKeyUse(messageType, element, parentType) {
	  var addendum = getDeclarationErrorAddendum();
	  if (!addendum) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      addendum = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	
	  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
	  if (memoizer[addendum]) {
	    return null;
	  }
	  memoizer[addendum] = true;
	
	  var addenda = {
	    parentOrOwner: addendum,
	    url: ' See https://fb.me/react-warning-keys for more information.',
	    childOwner: null
	  };
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  return addenda;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
	        error = propTypes[propName](props, propName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum();
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 893 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}
	
	module.exports = mapObject;

/***/ }),
/* 894 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';
	
	var ReactElement = __webpack_require__(780);
	
	var invariant = __webpack_require__(751);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
	  return children;
	}
	
	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 895 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule deprecated
	 */
	
	'use strict';
	
	var assign = __webpack_require__(777);
	var warning = __webpack_require__(763);
	
	/**
	 * This will log a single deprecation notice per function and forward the call
	 * on to the new API.
	 *
	 * @param {string} fnName The name of the function
	 * @param {string} newModule The module that fn will exist in
	 * @param {string} newPackage The module that fn will exist in
	 * @param {*} ctx The context this forwarded call should run in
	 * @param {function} fn The function to forward on to
	 * @return {function} The function that will warn once and then call fn
	 */
	function deprecated(fnName, newModule, newPackage, ctx, fn) {
	  var warned = false;
	  if (process.env.NODE_ENV !== 'production') {
	    var newFn = function () {
	      process.env.NODE_ENV !== 'production' ? warning(warned,
	      // Require examples in this string must be split to prevent React's
	      // build tools from mistaking them for real requires.
	      // Otherwise the build tools will attempt to build a '%s' module.
	      'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
	      warned = true;
	      return fn.apply(ctx, arguments);
	    };
	    // We need to make sure all properties of the original fn are copied over.
	    // In particular, this is needed to support PropTypes
	    return assign(newFn, fn);
	  }
	
	  return fn;
	}
	
	module.exports = deprecated;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 896 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(740);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _isReadableStream = __webpack_require__(897);
	
	var _isReadableStream2 = _interopRequireDefault(_isReadableStream);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	// flattens all children of a react element into a single array. usually,
	// we could use React.Children.map here, but that function throws when it
	// encounters a stream.
	var flattenChildren = function flattenChildren(children) {
		if (!children) {
			return [];
		}
		if (typeof children === "string" || (0, _isReadableStream2.default)(children)) {
			return [children];
		}
	
		var result = [];
		children.forEach(function (child) {
			return result.push.apply(result, _toConsumableArray(flattenChildren(child)));
		});
		return result;
	};
	
	exports.default = flattenChildren;

/***/ }),
/* 897 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	exports.default = function (input) {
		return typeof input.isPaused === "function" && typeof input.pause === "function" && typeof input.pipe === "function" && typeof input.read === "function" && typeof input.resume === "function" && typeof input.setEncoding === "function" && typeof input.unpipe === "function" && typeof input.unshift === "function" && typeof input.wrap === "function";
	};

/***/ }),
/* 898 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
	
	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	
	var _react = __webpack_require__(740);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var rawFactory = function rawFactory(Component, childrenFn) {
		return (function (_React$Component) {
			_inherits(RawComponent, _React$Component);
	
			function RawComponent() {
				_classCallCheck(this, RawComponent);
	
				return _possibleConstructorReturn(this, Object.getPrototypeOf(RawComponent).apply(this, arguments));
			}
	
			_createClass(RawComponent, [{
				key: "render",
				value: function render() {
					var children = this.props.children;
					return _react2.default.createElement(Component, { dangerouslySetInnerHTML: { __html: childrenFn(children) } });
				}
			}]);
	
			return RawComponent;
		})(_react2.default.Component);
	};
	
	exports.default = function (childrenFn) {
		var RawHtml = {
			addTag: function addTag(tagName) {
				if (!this[tagName]) {
					this[tagName] = rawFactory(tagName, childrenFn);
				}
			}
		};
	
		["a", "abbr", "acronym", "address", "applet", "article", "aside", "audio", "b", "basefont", "bdi", "bdo", "bgsound", "big", "blink", "blockquote", "body", "button", "canvas", "caption", "center", "cite", "code", "colgroup", "content", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "embed", "fieldset", "figcaption", "figure", "font", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "html", "i", "iframe", "image", "ins", "isindex", "kbd", "label", "legend", "li", "listing", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "multicol", "nav", "nobr", "noembed", "noframes", "noscript", "object", "ol", "optgroup", "option", "output", "p", "picture", "plaintext", "pre", "progress", "q", "rp", "rt", "rtc", "ruby", "s", "samp", "script", "section", "select", "shadow", "small", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "tt", "u", "ul", "var", "video", "xmp"].forEach(function (tag) {
			return RawHtml.addTag(tag);
		});
	
		return RawHtml;
	};

/***/ }),
/* 899 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __assign = (this && this.__assign) || Object.assign || function(t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	            t[p] = s[p];
	    }
	    return t;
	};
	var React = __webpack_require__(1);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var SingleSelection_1 = __webpack_require__(713);
	var Label_1 = __webpack_require__(714);
	var CustomInput_1 = __webpack_require__(715);
	var CustomSelect_1 = __webpack_require__(716);
	var AsyncCustomSelect_1 = __webpack_require__(717);
	var QuestionsCustomDatePicker_1 = __webpack_require__(728);
	var subheader_1 = __webpack_require__(681);
	var underscore_1 = __webpack_require__(540);
	var Questions_1 = __webpack_require__(730);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var ScrollToTopOnMount_1 = __webpack_require__(711);
	var Main = (function (_super) {
	    __extends(Main, _super);
	    function Main() {
	        _super.call(this);
	        this.state = {};
	        this.questions = {};
	        this.actualQuestionLists = [];
	        this.questionComponents = [];
	        this.currentlyAnsweredQuestions = [];
	        this.questionsSource = [];
	        this.questionsSubmittedCount = -1;
	        this.counter = 0;
	        this.keyDownTextField.bind(this);
	        this.onQuestionSubmit.bind(this);
	    }
	    Main.prototype.componentWillMount = function () {
	        var _this = this;
	        this.props.getQuestions().then(function () {
	            if (_this.questions && _this.questions.LOGIN_URL && _this.questions.LOGIN_URL.length > 0) {
	                window.location.href = _this.questions.LOGIN_URL;
	                return;
	            }
	            if (_this.questions && _this.questions.redirect_url && _this.questions.redirect_url.length > 0) {
	                window.location.href = _this.questions.redirect_url;
	                return;
	            }
	            if (!_this.alreadyAnsweredQueryQuestion && _this.props.location.query && (_this.props.location.query.fromReviewPage == true || _this.props.location.query.fromReviewPage == "true" || (_this.props.location.query.fromReviewPage && _this.props.location.query.fromReviewPage[0] == true))) {
	                var questionIdFromQuery = _this.props.location.query.questionId;
	                var currentPageIndex = _this.getCurrentPageIndex(_this.props.location.query.questionId);
	                if (currentPageIndex >= 0) {
	                    for (var i = 0; i < _this.questions.extra_params.answered_questions[currentPageIndex].length; i++) {
	                        var qId = _this.questions.extra_params.answered_questions[currentPageIndex][i];
	                        var question = _this.findQuestionById(_this.questions.data.questionnaire.questions, qId);
	                        if (question.hasReflexive) {
	                            _this.reflexiveQuestioninPage = JSON.parse(JSON.stringify(question));
	                        }
	                    }
	                    _this.setState({
	                        previousQuestionIds: _this.questions.extra_params.answered_questions[currentPageIndex]
	                    });
	                    return;
	                }
	            }
	        });
	    };
	    Main.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.questions)) {
	            this.questions = JSON.parse(JSON.stringify(nextProps.questions));
	            if (!this.alreadyAnsweredQueryQuestion && this.props.location.query && (this.props.location.query.fromReviewPage == true || this.props.location.query.fromReviewPage == "true")) {
	                var questionIdFromQuery = this.props.location.query.questionId;
	                var currentPageIndex = this.getCurrentPageIndex(this.props.location.query.questionId);
	                if (currentPageIndex >= 0) {
	                    for (var i = 0; i < this.questions.extra_params.answered_questions[currentPageIndex].length; i++) {
	                        var qId = this.questions.extra_params.answered_questions[currentPageIndex][i];
	                        var question = this.findQuestionById(this.questions.data.questionnaire.questions, qId);
	                        if (question.hasReflexive) {
	                            this.reflexiveQuestioninPage = JSON.parse(JSON.stringify(question));
	                        }
	                    }
	                    this.setState({
	                        previousQuestionIds: this.questions.extra_params.answered_questions[currentPageIndex]
	                    });
	                    return;
	                }
	            }
	        }
	    };
	    Main.prototype.isOnlyQuestionSingleSelection = function () {
	        if (this.actualQuestionLists.length == 1) {
	            if (this.actualQuestionLists[0] && this.actualQuestionLists[0].options && this.actualQuestionLists[0].options.length == 2) {
	                return true;
	            }
	        }
	        ;
	        return false;
	    };
	    Main.prototype.onChangeInput = function (q, answer) {
	        q.answer = answer;
	        if (q.hasReflexive) {
	            if (this.reflexiveQuestioninPage && this.reflexiveQuestioninPage.id == q.id) {
	                this.reflexiveQuestionModified = true;
	            }
	        }
	        if (this.isOnlyQuestionSingleSelection()) {
	            this.onQuestionSubmit();
	        }
	    };
	    Main.prototype.reRecursiveRender = function (data) {
	        var _this = this;
	        if (!underscore_1.isEmpty(data)) {
	            return underscore_1.map(data, function (qe) {
	                var q = qe;
	                q.key = q.id;
	                if (q.type == "singleselection") {
	                    if (q.options && q.options.length == 2) {
	                        return React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted});
	                    }
	                    else {
	                        return React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted});
	                    }
	                }
	                else if (q.type == "multiselection") {
	                    return React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted, multi: true});
	                }
	                else if (q.type == "label") {
	                    return React.createElement(Label_1.default, __assign({}, q));
	                }
	                else if (q.type == "group" || q.type == "assessment-factor-group") {
	                    return _this.reRecursiveRender(q.questions);
	                }
	                else if (q.type == "number" || q.type == "text") {
	                    return React.createElement(CustomInput_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted});
	                }
	                else if (q.type == "date") {
	                    return React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this)});
	                }
	            });
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.questionsAlreadySubmitted = function (q) {
	        var shouldInclude = !q.required;
	        if (shouldInclude && this.props.questions && this.props.questions.extra_params && this.props.questions.extra_params.answered_questions) {
	            var i = 0, j = 0;
	            var qs = this.props.questions.extra_params.answered_questions;
	            for (i = 0; i < qs.length; i++) {
	                var iqs = qs[i];
	                for (j = 0; j < iqs.length; j++) {
	                    if (iqs[j] == q.id) {
	                        console.log(" q.id: " + q.id);
	                        return true;
	                    }
	                }
	            }
	        }
	        return false;
	    };
	    Main.prototype.reRecursiveGetQuestions1 = function (data, questionsList, preQ, actualQuestionLists) {
	        questionsList.isQuestionsList = false;
	        if (!underscore_1.isEmpty(data)) {
	            var boundaryReached = false;
	            for (var i = 0; i < (data.length); i++) {
	                var qe = data[i];
	                var q = qe;
	                if (q.type == "group") {
	                    questionsList.groupHeader = questionsList.groupHeader || [];
	                    questionsList.groupHeader.push(q.caption);
	                }
	                q.key = q.id;
	                if (this.currentlyAnsweredQuestions.indexOf(q.id) >= 0) {
	                    if (q.hasReflexive) {
	                        if (q.questions) {
	                            var reflexsiveQuestionList = this.reRecursiveGetQuestions1(q.questions, questionsList, preQ, actualQuestionLists);
	                            if (reflexsiveQuestionList.length > 0) {
	                                questionsList.groupHeader = questionsList.groupHeader || [];
	                                questionsList.groupHeader.push(q.caption);
	                                return reflexsiveQuestionList;
	                            }
	                            else {
	                                continue;
	                            }
	                        }
	                    }
	                    continue;
	                }
	                if (preQ && preQ.hasReflexive) {
	                    if (questionsList.length > 0) {
	                        this.actualQuestionLists = actualQuestionLists;
	                        boundaryReached = true;
	                        return questionsList;
	                    }
	                }
	                if (q.type == "singleselection") {
	                    preQ = q;
	                    if (q.options.length == 2) {
	                        questionsList.push(React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    else {
	                        questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                }
	                else if (q.type == "multiselection") {
	                    questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, multi: true, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "label") {
	                    preQ = q;
	                    questionsList.push(React.createElement(Label_1.default, __assign({}, q)));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "list") {
	                    var qL = q.questions;
	                    if (q.prototype && q.prototype.elements) {
	                        if (!q.answer) {
	                            q.answer = [q.prototype];
	                        }
	                        questionsList.siblingAnswers = q.answer;
	                        qL = q.answer[0].elements;
	                    }
	                    else {
	                        qL = [];
	                    }
	                    for (var i = 0; i < qL.length; i++) {
	                        questionsList.push(this.getQuestionComponent(qL[i]));
	                        actualQuestionLists.push(qL[i]);
	                    }
	                    this.actualQuestionLists = actualQuestionLists;
	                    questionsList.isQuestionsList = true;
	                    return questionsList;
	                }
	                else if (q.type == "group" || q.type == "assessment-factor-group") {
	                    if (questionsList.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var i = 0; i < questionsList.length; i++) {
	                            if (questionsList[i].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    var qL = q.questions;
	                    var questionsFromGroup = this.reRecursiveGetQuestions1(qL, questionsList, preQ, actualQuestionLists);
	                    if (questionsFromGroup.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var i = 0; i < questionsFromGroup.length; i++) {
	                            if (questionsFromGroup[i].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            return questionsFromGroup;
	                        }
	                        else {
	                        }
	                    }
	                }
	                else if (q.type == "struct") {
	                    if (questionsList.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var i = 0; i < questionsList.length; i++) {
	                            if (questionsList[i].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    var questionsFromGroup = this.reRecursiveGetQuestions1(q.elements, questionsList, preQ, actualQuestionLists);
	                    if (questionsFromGroup.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var i = 0; i < questionsFromGroup.length; i++) {
	                            if (questionsFromGroup[i].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            return questionsFromGroup;
	                        }
	                        else {
	                        }
	                    }
	                }
	                else if (q.type == "number" || q.type == "text") {
	                    preQ = q;
	                    questionsList.push(React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "date") {
	                    preQ = q;
	                    questionsList.push(React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "assessment-factor-search") {
	                    questionsList.push(React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	            }
	            ;
	            this.actualQuestionLists = actualQuestionLists;
	            return questionsList;
	        }
	        else {
	            this.actualQuestionLists = actualQuestionLists;
	            return questionsList;
	        }
	    };
	    Main.prototype.recursiveGetQuestions1 = function () {
	        if (!underscore_1.isEmpty(this.questionsSource) && !underscore_1.isEmpty(this.questionsSource.questions)) {
	            if (this.questionsSource.questions) {
	                var preQ = null;
	                var questionsList = [];
	                questionsList.isQuestionsList = false;
	                var actualQuestionLists = [];
	                var boundaryReached = false;
	                for (var i = 0; i < (this.questionsSource.questions.length); i++) {
	                    var qe = this.questionsSource.questions[i];
	                    if (qe.type == "group") {
	                        questionsList.groupHeader = [];
	                        questionsList.groupHeader.push(qe.caption);
	                    }
	                    var q = qe;
	                    q.key = q.id;
	                    if (this.currentlyAnsweredQuestions.indexOf(q.id) >= 0) {
	                        if (q.hasReflexive) {
	                            if (q.questions) {
	                                var reflexsiveQuestionList = this.reRecursiveGetQuestions1(q.questions, questionsList, preQ, actualQuestionLists);
	                                if (reflexsiveQuestionList.length > 0) {
	                                    questionsList.groupHeader = questionsList.groupHeader || [];
	                                    questionsList.groupHeader.push(qe.caption);
	                                    return reflexsiveQuestionList;
	                                }
	                                else {
	                                    continue;
	                                }
	                            }
	                        }
	                        continue;
	                    }
	                    if (preQ && preQ.hasReflexive) {
	                        boundaryReached = true;
	                        if (questionsList.length > 0) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    if (q.type == "singleselection") {
	                        if (q.options.length == 2) {
	                            questionsList.push(React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                            actualQuestionLists.push(q);
	                        }
	                        else {
	                            questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                            actualQuestionLists.push(q);
	                        }
	                    }
	                    else if (q.type == "multiselection") {
	                        questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, multi: true}));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "label") {
	                        questionsList.push(React.createElement(Label_1.default, __assign({}, q)));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "list") {
	                        var qL = q.questions;
	                        if (q.prototype && q.prototype.elements) {
	                            if (!q.answer) {
	                                q.answer = [q.prototype];
	                            }
	                            questionsList.siblingAnswers = q.answer;
	                            qL = q.answer[0].elements;
	                        }
	                        else {
	                            qL = [];
	                        }
	                        for (var i = 0; i < qL.length; i++) {
	                            questionsList.push(this.getQuestionComponent(qL[i]));
	                            actualQuestionLists.push(qL[i]);
	                        }
	                        this.actualQuestionLists = actualQuestionLists;
	                        questionsList.isQuestionsList = true;
	                        return questionsList;
	                    }
	                    else if (q.type == "group" || q.type == "assessment-factor-group") {
	                        if (questionsList.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var i = 0; i < questionsList.length; i++) {
	                                if (questionsList[i].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                this.actualQuestionLists = actualQuestionLists;
	                                return questionsList;
	                            }
	                        }
	                        var qL = q.questions;
	                        var questionsFromGroup = this.reRecursiveGetQuestions1(qL, questionsList, preQ, actualQuestionLists);
	                        if (questionsFromGroup.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var i = 0; i < questionsFromGroup.length; i++) {
	                                if (questionsFromGroup[i].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                return questionsFromGroup;
	                            }
	                            else {
	                                questionsList = questionsFromGroup;
	                            }
	                        }
	                    }
	                    else if (q.type == "struct") {
	                        if (questionsList.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var i = 0; i < questionsList.length; i++) {
	                                if (questionsList[i].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                this.actualQuestionLists = actualQuestionLists;
	                                return questionsList;
	                            }
	                        }
	                        var questionsFromGroup = this.reRecursiveGetQuestions1(q.elements, questionsList, preQ, actualQuestionLists);
	                        if (questionsFromGroup.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var i = 0; i < questionsFromGroup.length; i++) {
	                                if (questionsFromGroup[i].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                return questionsFromGroup;
	                            }
	                            else {
	                                questionsList = questionsFromGroup;
	                            }
	                        }
	                    }
	                    else if (q.type == "number" || q.type == "text") {
	                        questionsList.push(React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "date") {
	                        questionsList.push(React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    else if (q.type == "assessment-factor-search") {
	                        questionsList.push(React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                    preQ = q;
	                }
	                ;
	                this.actualQuestionLists = actualQuestionLists;
	                return questionsList;
	            }
	            ;
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.getQuestions = function (lastAnsweredQuestion) {
	        if (lastAnsweredQuestion) {
	        }
	        else {
	            return this.recursiveGetQuestions1();
	        }
	    };
	    Main.prototype.validateTextField = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            var isValid = true;
	            if (constraints.required) {
	                if (constraints.pattern) {
	                    if (q.answer) {
	                        return new RegExp(q.constraints.pattern).test(q.answer);
	                    }
	                    else {
	                        return false;
	                    }
	                }
	                return q.answer && String(q.answer).length > 0;
	            }
	            else {
	                if (q.answer && String(q.answer).length > 0) {
	                    if (constraints.pattern) {
	                        if (q.answer) {
	                            return new RegExp(q.constraints.pattern).test(q.answer);
	                        }
	                        else {
	                            return false;
	                        }
	                    }
	                    else {
	                        return true;
	                    }
	                }
	                else {
	                    return true;
	                }
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateSingleSelection = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            if (constraints.required) {
	                return q.answer && q.answer.id && q.answer.id.length > 0;
	            }
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateCustomDatePicker = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            var isValid = true;
	            if (constraints.required) {
	                if (q.answer) {
	                    if (constraints.minValue) {
	                        return constraints.minValue <= q.answer;
	                    }
	                    else {
	                        return q.answer;
	                    }
	                }
	                return false;
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.onQuestionSubmit = function () {
	        var _this = this;
	        var answered_questions = [];
	        var allQuestionsValid = true;
	        this.setState({
	            alreadyOnceSubmitted: true
	        });
	        underscore_1.each(this.actualQuestionLists, function (q) {
	            _this.currentlyAnsweredQuestions.push(q.id);
	            answered_questions.push(q.id);
	            if (q.type == "text") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	            }
	            else if (q.type == "number") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	            }
	            else if (q.type == "singleselection") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateSingleSelection(q);
	            }
	            else if (q.type == "date") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateCustomDatePicker(q);
	            }
	        });
	        if (allQuestionsValid) {
	            this.setState({
	                submittingQuestions: true
	            });
	            var data = {
	                questions: this.questions,
	                answered_questions: answered_questions
	            };
	            this.props.postQuestions(data).then(function () {
	                window.scrollTo(0, 0);
	                if (_this.questions && _this.questions.LOGIN_URL && _this.questions.LOGIN_URL.length > 0) {
	                    window.location.href = _this.questions.LOGIN_URL;
	                    return;
	                }
	                if (_this.questions && _this.questions.redirect_url && _this.questions.redirect_url.length > 0) {
	                    window.location.href = _this.questions.redirect_url;
	                    return;
	                }
	                if (_this.state.previousQuestionHanldingIndex || _this.state.previousQuestionHanldingIndex == 0) {
	                    if (_this.props.questions && _this.props.questions.extra_params &&
	                        _this.props.questions.extra_params.answered_questions &&
	                        _this.props.questions.extra_params.answered_questions.length > 0) {
	                        if (_this.props.questions.extra_params.answered_questions - 1 == _this.state.previousQuestionHanldingIndex) {
	                            _this.setState({
	                                previousQuestionHanldingIndex: null,
	                                previousQuestionIds: null
	                            });
	                        }
	                        else {
	                            _this.setState({
	                                previousQuestionHanldingIndex: _this.state.previousQuestionHanldingIndex + 1,
	                            }, function () {
	                                _this.setState({
	                                    previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                                });
	                            });
	                        }
	                    }
	                }
	                _this.alreadyAnsweredQueryQuestion = true;
	                _this.setState({
	                    alreadyOnceSubmitted: false,
	                    submittingQuestions: false,
	                    previousQuestionIds: null
	                }, function () {
	                    var queryParams = _this.props.location.query;
	                    var queryParamsString = "?";
	                    for (var k in queryParams) {
	                        if (k != "fromReviewPage" && k != "questionId") {
	                            if (queryParams[k]) {
	                                queryParamsString += k + "=" + queryParams[k] + "&";
	                            }
	                            else {
	                                queryParamsString += k + "&";
	                            }
	                        }
	                    }
	                    queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                    if (_this.questions.status == false) {
	                        react_router_1.browserHistory.push("/error" + queryParamsString + "fromEditPage=true");
	                        return;
	                    }
	                    if (_this.questions.valid_user == 0) {
	                        react_router_1.browserHistory.push("/authorize" + queryParamsString + "fromEditPage=true");
	                        return;
	                    }
	                    if (_this.reflexiveQuestionModified) {
	                        setTimeout(function () {
	                            _this.questionsSubmittedCount++;
	                            if (_this.questionsSubmittedCount >= 0) {
	                                var reflexiveQuestion = _this.findQuestionById(_this.questions.data.questionnaire.questions, _this.reflexiveQuestioninPage.id);
	                                if (underscore_1.isEmpty(reflexiveQuestion.questions)) {
	                                    if (_this.questions && _this.questions && _this.questions.application_complete_status == true) {
	                                        if (_this.questions.application_confirm_status == 1) {
	                                            react_router_1.browserHistory.push("/signature" + queryParamsString);
	                                        }
	                                        else {
	                                            react_router_1.browserHistory.push("/all-questions" + queryParamsString);
	                                        }
	                                        return;
	                                    }
	                                    else {
	                                        react_router_1.browserHistory.push("/questions" + queryParamsString);
	                                    }
	                                }
	                                else {
	                                    _this.questionsSource = reflexiveQuestion;
	                                    _this.setState({
	                                        questionsSource: _this.questionsSource
	                                    });
	                                    if (_this.getQuestions(null).length == 0) {
	                                        if (_this.questions && _this.questions && _this.questions.application_complete_status == true) {
	                                            if (_this.questions.application_confirm_status == 1) {
	                                                react_router_1.browserHistory.push("/signature" + queryParamsString);
	                                            }
	                                            else {
	                                                react_router_1.browserHistory.push("/all-questions" + queryParamsString);
	                                            }
	                                            return;
	                                        }
	                                        else {
	                                            react_router_1.browserHistory.push("/questions" + queryParamsString);
	                                        }
	                                    }
	                                    else {
	                                        react_router_1.browserHistory.push("/questions" + queryParamsString);
	                                    }
	                                }
	                            }
	                            else {
	                                react_router_1.browserHistory.push("/questions" + queryParamsString);
	                            }
	                        }, 200);
	                    }
	                    else {
	                        if (_this.questions && _this.questions && _this.questions.application_complete_status == true) {
	                            if (_this.questions.application_confirm_status == 1) {
	                                react_router_1.browserHistory.push("/signature" + queryParamsString);
	                            }
	                            else {
	                                react_router_1.browserHistory.push("/all-questions" + queryParamsString);
	                            }
	                            return;
	                        }
	                        else {
	                            react_router_1.browserHistory.push("/questions" + queryParamsString);
	                        }
	                    }
	                });
	            }).catch(function () {
	                console.log(_this.props.questions);
	            });
	        }
	    };
	    Main.prototype.setDuplicateQuestions = function (questions) {
	        for (var i = 0; i < questions.length; i++) {
	            var duplicateQuestions = JSON.parse(JSON.stringify(questions));
	        }
	    };
	    Main.prototype.componentDidMount = function () {
	        window.scrollTo(0, 0);
	        document.addEventListener("keydown", this.keyDownTextField, false);
	    };
	    Main.prototype.componentWillUnmount = function () {
	        document.removeEventListener("keydown", this.keyDownTextField, false);
	    };
	    Main.prototype.keyDownTextField = function (e) {
	        var keyCode = e.keyCode;
	        if (keyCode == 13) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                this.onQuestionSubmit();
	            }
	        }
	        else {
	        }
	    };
	    Main.prototype.findQuestionById = function (actualQuestions, questionId) {
	        if (!underscore_1.isEmpty(actualQuestions)) {
	            var targetQuestion = {};
	            for (var i = 0; i < (actualQuestions.length); i++) {
	                var qe = actualQuestions[i];
	                var q = qe;
	                q.key = q.id;
	                if (qe.type == "group") {
	                    this.noFoGroupsCompleted = i;
	                }
	                if (q.id == questionId) {
	                    return q;
	                }
	                if (qe.type == "group" || qe.type == "assessment-factor-group" || qe.hasReflexive) {
	                    targetQuestion = this.findQuestionById(q.questions, questionId);
	                }
	                if (qe.type == "list" && q.answer && q.answer[0].elements) {
	                    targetQuestion = this.findQuestionById(q.answer[0].elements, questionId);
	                }
	                if (qe.type == "struct") {
	                    targetQuestion = this.findQuestionById(q.elements, questionId);
	                }
	                if (!underscore_1.isEmpty(targetQuestion)) {
	                    return targetQuestion;
	                }
	            }
	            return {};
	        }
	        else {
	            return {};
	        }
	    };
	    Main.prototype.getQuestionComponent = function (q) {
	        var qComponent = {};
	        if (q.type == "singleselection") {
	            if (q.options.length == 2) {
	                qComponent = React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	            }
	            else {
	                qComponent = React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	            }
	        }
	        else if (q.type == "multiselection") {
	            qComponent = React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, multi: true, counter: this.counter++});
	        }
	        else if (q.type == "label") {
	            qComponent = React.createElement(Label_1.default, __assign({}, q));
	        }
	        else if (q.type == "number" || q.type == "text") {
	            qComponent = React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	        }
	        else if (q.type == "date") {
	            qComponent = React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	        }
	        else if (q.type == "assessment-factor-search") {
	            qComponent = React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id});
	        }
	        return qComponent;
	    };
	    Main.prototype.getPreviousQuestionComponents = function () {
	        var previousQuestionIds = this.state.previousQuestionIds;
	        var qComps = [];
	        var aQuestions = [];
	        if (!underscore_1.isEmpty(this.questions) && !underscore_1.isEmpty(this.questions.data)) {
	            if (this.questions.data.questionnaire && this.questions.data.questionnaire.questions) {
	                for (var i = 0; i < previousQuestionIds.length; i++) {
	                    var question = this.findQuestionById(this.questions.data.questionnaire.questions, previousQuestionIds[i]);
	                    aQuestions.push(question);
	                    qComps.push(this.getQuestionComponent(question));
	                }
	            }
	        }
	        this.actualQuestionLists = aQuestions;
	        return qComps;
	    };
	    Main.prototype.deleteSibling = function () {
	        if (this.questionComponents.siblingAnswers.length > 1) {
	            this.questionComponents.siblingAnswers.pop();
	            var siblingsCount = this.state.siblingsCount;
	            this.setState({
	                siblingsCount: siblingsCount - 1
	            });
	        }
	    };
	    Main.prototype.addSibling = function () {
	        var siblingsCount = this.state.siblingsCount || 0;
	        if (this.questionComponents.isQuestionsList) {
	            if (this.questionComponents.siblingAnswers) {
	                var a = JSON.parse(JSON.stringify(this.questionComponents.siblingAnswers[0]));
	                this.questionComponents.siblingAnswers.push(a);
	            }
	        }
	        this.setState({
	            siblingsCount: siblingsCount + 1
	        });
	    };
	    ;
	    Main.prototype.getCurrentPageIndex = function (questionId) {
	        var currentPageIndex = -1;
	        var answeredQuestions = [];
	        if (this.questions && this.questions.extra_params && this.questions.extra_params.answered_questions) {
	            answeredQuestions = this.questions.extra_params.answered_questions;
	        }
	        var pageQuestionsList = [];
	        for (var i = 0; (i < answeredQuestions.length && currentPageIndex == -1); i++) {
	            pageQuestionsList = answeredQuestions[i];
	            for (var j = 0; (j < pageQuestionsList.length && currentPageIndex == -1); j++) {
	                if (questionId == pageQuestionsList[j]) {
	                    currentPageIndex = i;
	                }
	            }
	        }
	        return currentPageIndex;
	    };
	    Main.prototype.getCurrentSetOfQuestions = function () {
	        if (this.state.previousQuestionIds && this.state.previousQuestionIds.length > 0) {
	            this.questionComponents = this.getPreviousQuestionComponents();
	            return this.questionComponents;
	        }
	        if (this.questionsSource) {
	            this.questionComponents = this.getQuestions(null);
	            if (this.questionComponents && this.questionComponents.isQuestionsList) {
	                var aQuestions = [];
	                var siblingComponents = [];
	                var qComps;
	                for (var i = 0; i < this.questionComponents.siblingAnswers.length; i++) {
	                    var answers = this.questionComponents.siblingAnswers[i].elements;
	                    qComps = [];
	                    for (var j = 0; j < answers.length; j++) {
	                        qComps.push(this.getQuestionComponent(answers[j]));
	                    }
	                    siblingComponents.push(qComps);
	                }
	                this.questionComponents.siblingComponents = siblingComponents;
	            }
	            return this.questionComponents;
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.getBreadCrumbs = function () {
	        var breadCrumbs = [];
	        var questions = this.props.questions;
	        var questionsList = (questions && questions.data && questions.data.questionnaire &&
	            questions.data.questionnaire.questions) || [];
	        if (questionsList) {
	            for (var i = 0; i < questionsList.length; i++) {
	                if (questionsList[i].type == "group") {
	                    breadCrumbs.push(questionsList[i].caption);
	                }
	            }
	        }
	        return breadCrumbs;
	    };
	    Main.prototype.render = function () {
	        var _this = this;
	        var breadCrumbs = this.getBreadCrumbs();
	        var questionsList = this.getCurrentSetOfQuestions() || [];
	        var noFoGroupsCompleted = this.noFoGroupsCompleted;
	        return (React.createElement("div", null, React.createElement(ScrollToTopOnMount_1.default, null), React.createElement(subheader_1.default, {breadCrumbs: breadCrumbs, noFoGroupsCompleted: [noFoGroupsCompleted], location: this.props.location}), React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center edit-questions-container"}, React.createElement(react_bootstrap_1.Row, null), !questionsList.isQuestionsList && React.createElement("div", {className: "questions-content-container"}, questionsList, !questionsList.isQuestionsList && !this.isOnlyQuestionSingleSelection() && React.createElement("div", {className: "question-action-btn-container"}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", style: { marginLeft: "30px!important" }, onClick: function () {
	            _this.onQuestionSubmit();
	        }}, "Submit", this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), this.isOnlyQuestionSingleSelection() && this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))), questionsList.isQuestionsList &&
	            underscore_1.map(questionsList.siblingComponents, function (s, i) {
	                return React.createElement("div", {className: "", key: i}, React.createElement("div", {className: "siblings-container"}, s, questionsList.isQuestionsList && i == questionsList.siblingComponents.length - 1 && React.createElement("div", {className: "question-action-btn-container"}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", onClick: function () {
	                    _this.addSibling();
	                }}, "ADD SIBLING", _this.state.goingBackQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular next-step-btn action", style: { marginLeft: "30px!important" }, onClick: function () {
	                    _this.deleteSibling();
	                }}, "DELETE ENTRY", _this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement("div", null));
	            })), questionsList.isQuestionsList && React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center", style: { backgrounColor: "transparent", border: "none", boxShadow: "none" }}, " ", React.createElement("div", {className: "question-action-btn-container"}, React.createElement("div", {className: "previous-btn-text", disabled: this.isSubmitBtnDisabled(), onClick: function () {
	            _this.handleBackSubmit();
	        }}, React.createElement("span", null, "Previous")), !this.isOnlyQuestionSingleSelection() && React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", style: { marginLeft: "30px!important" }, onClick: function () {
	            _this.onQuestionSubmit();
	        }}, "Next", this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), this.isOnlyQuestionSingleSelection() && this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))));
	    };
	    return Main;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        questions: state.questions.questions
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        getQuestions: function (data) {
	            return dispatch(Questions_1.getQuestions(data));
	        },
	        postQuestions: function (data, moreInfo) {
	            return dispatch(Questions_1.postQuestions(data, moreInfo));
	        },
	        getFactorsearch: function (data, moreInfo) {
	            return dispatch(Questions_1.getFactorsearch(data, moreInfo));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Main);


/***/ }),
/* 900 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var __assign = (this && this.__assign) || Object.assign || function(t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
	            t[p] = s[p];
	    }
	    return t;
	};
	var React = __webpack_require__(1);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var SingleSelection_1 = __webpack_require__(713);
	var Label_1 = __webpack_require__(714);
	var CustomInput_1 = __webpack_require__(715);
	var CustomSelect_1 = __webpack_require__(716);
	var AsyncCustomSelect_1 = __webpack_require__(717);
	var QuestionsCustomDatePicker_1 = __webpack_require__(728);
	var InstantIdCheckPopup_1 = __webpack_require__(729);
	var subheader_1 = __webpack_require__(681);
	var underscore_1 = __webpack_require__(540);
	var Questions_1 = __webpack_require__(730);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var ScrollToTopOnMount_1 = __webpack_require__(711);
	var Main = (function (_super) {
	    __extends(Main, _super);
	    function Main() {
	        _super.call(this);
	        this.state = {};
	        this.questions = {};
	        this.actualQuestionLists = [];
	        this.questionComponents = [];
	        this.counter = 0;
	        this.keyDownTextField.bind(this);
	        this.onQuestionSubmit.bind(this);
	    }
	    Main.prototype.componentWillMount = function () {
	        var _this = this;
	        this.setState({
	            gettingQuestions: true
	        });
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        this.props.getQuestions().then(function () {
	            if (_this.questions && _this.questions.LOGIN_URL && _this.questions.LOGIN_URL.length > 0) {
	                window.location.href = _this.questions.LOGIN_URL;
	                return;
	            }
	            if (_this.questions && _this.questions.redirect_url && _this.questions.redirect_url.length > 0) {
	                window.location.href = _this.questions.redirect_url;
	                return;
	            }
	            if (_this.questions && _this.questions.instant_id_check && _this.questions.instant_id_check.status == false) {
	                _this.setState({
	                    showInstantIdCheckPopup: true,
	                    instantIdCheckData: _this.questions.instant_id_check
	                });
	            }
	            ;
	            if (_this.questions && _this.questions.status == false) {
	                react_router_1.browserHistory.push("/error" + queryParamsString);
	                return;
	            }
	            if (_this.questions && _this.questions.valid_user == 0) {
	                react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                return;
	            }
	            _this.setState({
	                gettingQuestions: false
	            });
	        });
	    };
	    Main.prototype.componentWillReceiveProps = function (nextProps) {
	        if (!underscore_1.isEmpty(nextProps.questions)) {
	            this.questions = JSON.parse(JSON.stringify(nextProps.questions));
	        }
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (this.questions && this.questions.status == false) {
	            react_router_1.browserHistory.push("/error" + queryParamsString);
	            return;
	        }
	        if (this.questions.valid_user == 0) {
	            react_router_1.browserHistory.push("/authorize" + queryParamsString);
	            return;
	        }
	    };
	    Main.prototype.isOnlyQuestionSingleSelection = function () {
	        if (this.actualQuestionLists.length == 1) {
	            if (this.actualQuestionLists[0] && this.actualQuestionLists[0].options && this.actualQuestionLists[0].options.length == 2) {
	                return true;
	            }
	        }
	        ;
	        return false;
	    };
	    Main.prototype.onChangeInput = function (q, answer) {
	        q.answer = answer;
	        if (this.isOnlyQuestionSingleSelection()) {
	            this.setState({
	                singleselectionQuestionsSubmitting: true
	            });
	            this.onQuestionSubmit();
	        }
	    };
	    Main.prototype.componentDidMount = function () {
	        window.scrollTo(0, 100);
	        return;
	        if (this.questionComponents && this.questionComponents.isQuestionsBeneficiaries) {
	            window.scrollTo(0, 100);
	            return;
	        }
	        window.scrollTo(0, 0);
	        document.addEventListener("keydown", this.keyDownTextField, false);
	    };
	    Main.prototype.componentWillUnmount = function () {
	        document.removeEventListener("keydown", this.keyDownTextField, false);
	    };
	    Main.prototype.keyDownTextField = function (e) {
	        var keyCode = e.keyCode;
	        if (keyCode == 13) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside') && !activeElement.classList.contains('btn')) {
	                this.onQuestionSubmit();
	            }
	        }
	        else {
	        }
	    };
	    Main.prototype.componentDidUpdate = function () {
	    };
	    Main.prototype.reRecursiveRender = function (data) {
	        var _this = this;
	        if (!underscore_1.isEmpty(data)) {
	            return underscore_1.map(data, function (qe) {
	                var q = qe;
	                q.key = q.id;
	                if (q.type == "singleselection") {
	                    if (q.options && q.options.length == 2) {
	                        return React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted, submittingQuestions: _this.state.submittingQuestions});
	                    }
	                    else {
	                        return React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted});
	                    }
	                }
	                else if (q.type == "multiselection") {
	                    return React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted, multi: true});
	                }
	                else if (q.type == "label") {
	                    return React.createElement(Label_1.default, __assign({}, q));
	                }
	                else if (q.type == "group" || q.type == "assessment-factor-group") {
	                    return _this.reRecursiveRender(q.questions);
	                }
	                else if (q.type == "number" || q.type == "text") {
	                    return React.createElement(CustomInput_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this), alreadyOnceSubmitted: _this.state.alreadyOnceSubmitted});
	                }
	                else if (q.type == "date") {
	                    return React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: _this.onChangeInput.bind(_this)});
	                }
	            });
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.questionsAlreadySubmitted = function (q) {
	        var shouldInclude = !q.required;
	        if (shouldInclude && this.props.questions && this.props.questions.extra_params && this.props.questions.extra_params.answered_questions) {
	            var i = 0, j = 0;
	            var qs = this.props.questions.extra_params.answered_questions;
	            for (i = 0; i < qs.length; i++) {
	                var iqs = qs[i];
	                for (j = 0; j < iqs.length; j++) {
	                    if (iqs[j] == q.id) {
	                        console.log(" q.id: " + q.id);
	                        return true;
	                    }
	                }
	            }
	        }
	        return false;
	    };
	    ;
	    Main.prototype.checkIfRemaingQuestionsAreLabels = function (qs, startIndex) {
	        var onlyLabelsPresent = true;
	        var i = 0;
	        for (i = startIndex; (i < qs.length && onlyLabelsPresent); i++) {
	            onlyLabelsPresent = onlyLabelsPresent && qs[i].type == "label";
	        }
	        return onlyLabelsPresent;
	    };
	    ;
	    Main.prototype.insertRemainingQuestionLabels = function (qs, startIndex, actualQuestionLists, questionsList) {
	        var i = 0;
	        for (i = startIndex; i < qs.length; i++) {
	            var q = qs[i];
	            actualQuestionLists.push(q);
	            questionsList.push(React.createElement(Label_1.default, __assign({}, q)));
	        }
	    };
	    Main.prototype.reRecursiveGetQuestions1 = function (data, questionsList, preQ, actualQuestionLists, isPrefixGroup, prefixGroupCounter) {
	        questionsList.isQuestionsList = false;
	        var currentIsPrefixGroup = false;
	        var tmpPrefixOfGroupForLabelGroup = "";
	        if (!underscore_1.isEmpty(data)) {
	            if (isPrefixGroup) {
	                tmpPrefixOfGroupForLabelGroup = questionsList.prefixOfGroupForLabelGroup;
	            }
	            var boundaryReached = false;
	            for (var i = 0; i < (data.length); i++) {
	                var qe = data[i];
	                var q = qe;
	                q.key = q.id;
	                if (preQ && preQ.hasReflexive) {
	                    if (questionsList.length > 0) {
	                        this.actualQuestionLists = actualQuestionLists;
	                        boundaryReached = true;
	                        if (this.checkIfRemaingQuestionsAreLabels(data, i + 1)) {
	                            this.insertRemainingQuestionLabels(data, i + 1, questionsList, actualQuestionLists);
	                        }
	                        return questionsList;
	                    }
	                }
	                if (q.type == "group") {
	                    questionsList.groupHeader = questionsList.groupHeader || [];
	                    questionsList.groupHeader.push(q.caption);
	                    if (q.tags && q.tags.SubgroupRendering) {
	                        currentIsPrefixGroup = true;
	                        questionsList.prefixOfGroupForLabelGroup = q.caption;
	                        tmpPrefixOfGroupForLabelGroup = q.caption;
	                        prefixGroupCounter = 0;
	                        if (actualQuestionLists.length > 0 && actualQuestionLists[actualQuestionLists.length - 1].reflexiveOn[0] == "Yes") {
	                            questionsList.prefixOfGroupForLabelGroup = "";
	                            isPrefixGroup = false;
	                        }
	                    }
	                    else {
	                        questionsList.prefixOfGroupForLabelGroup = "";
	                    }
	                }
	                else {
	                    if (!isPrefixGroup) {
	                        questionsList.prefixOfGroupForLabelGroup = "";
	                    }
	                }
	                if (isPrefixGroup && tmpPrefixOfGroupForLabelGroup) {
	                    questionsList.prefixOfGroupForLabelGroup = tmpPrefixOfGroupForLabelGroup;
	                }
	                if (q.type == "singleselection") {
	                    preQ = q;
	                    if (q.options.length == 2) {
	                        questionsList.push(React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, submittingQuestions: this.state.submittingQuestions}));
	                        actualQuestionLists.push(q);
	                    }
	                    else {
	                        questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                        actualQuestionLists.push(q);
	                    }
	                }
	                else if (q.type == "multiselection") {
	                    questionsList.push(React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, multi: true, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "label") {
	                    preQ = q;
	                    actualQuestionLists.push(q);
	                    questionsList.push(React.createElement(Label_1.default, __assign({}, q)));
	                }
	                else if (q.type == "list") {
	                    var qL = q.questions;
	                    if (q.prototype && q.prototype.elements) {
	                        if (!q.answer) {
	                            q.answer = [q.prototype];
	                        }
	                        questionsList.siblingAnswers = q.answer;
	                        qL = q.answer[0].elements;
	                    }
	                    else {
	                        qL = [];
	                    }
	                    for (var i = 0; i < qL.length; i++) {
	                        questionsList.push(this.getQuestionComponent(qL[i]));
	                        actualQuestionLists.push(qL[i]);
	                    }
	                    this.actualQuestionLists = actualQuestionLists;
	                    questionsList.isQuestionsList = true;
	                    return questionsList;
	                }
	                else if (q.type == "group" || q.type == "assessment-factor-group") {
	                    if (questionsList.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var i = 0; i < questionsList.length; i++) {
	                            if (questionsList[i].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    var qL = q.questions;
	                    var questionsFromGroup = this.reRecursiveGetQuestions1(qL, questionsList, preQ, actualQuestionLists, currentIsPrefixGroup, prefixGroupCounter + 1);
	                    if (questionsFromGroup.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var i = 0; i < questionsFromGroup.length; i++) {
	                            if (questionsFromGroup[i].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            return questionsFromGroup;
	                        }
	                        else {
	                        }
	                    }
	                }
	                else if (q.type == "struct") {
	                    if (questionsList.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var i = 0; i < questionsList.length; i++) {
	                            if (questionsList[i].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                    }
	                    var questionsFromGroup = this.reRecursiveGetQuestions1(q.elements, questionsList, preQ, actualQuestionLists, currentIsPrefixGroup, prefixGroupCounter + 1);
	                    if (questionsFromGroup.length > 0) {
	                        var allQuestionsAreLabels = true;
	                        for (var i = 0; i < questionsFromGroup.length; i++) {
	                            if (questionsFromGroup[i].props.type != "label") {
	                                allQuestionsAreLabels = false;
	                            }
	                        }
	                        if (!allQuestionsAreLabels) {
	                            questionsFromGroup.questionStructCaption = q.caption;
	                            return questionsFromGroup;
	                        }
	                        else {
	                        }
	                    }
	                }
	                else if (q.type == "number" || q.type == "text") {
	                    preQ = q;
	                    questionsList.push(React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "date") {
	                    preQ = q;
	                    questionsList.push(React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	                else if (q.type == "assessment-factor-search") {
	                    questionsList.push(React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id}));
	                    actualQuestionLists.push(q);
	                }
	            }
	            ;
	            this.actualQuestionLists = actualQuestionLists;
	            return questionsList;
	        }
	        else {
	            this.actualQuestionLists = actualQuestionLists;
	            return questionsList;
	        }
	    };
	    Main.prototype.recursiveGetQuestions1 = function () {
	        if (!underscore_1.isEmpty(this.questions) && !underscore_1.isEmpty(this.questions.data)) {
	            if (this.questions.data.questionnaire && this.questions.data.questionnaire.questions) {
	                var preQ = null;
	                var questionsList = [];
	                questionsList.isQuestionsList = false;
	                var actualQuestionLists = [];
	                var boundaryReached = false;
	                this.noFoGroupsCompleted = 0;
	                for (var i = 0; i < (this.questions.data.questionnaire.questions.length); i++) {
	                    var qe = this.questions.data.questionnaire.questions[i];
	                    var isPrefixGroup = false;
	                    if (qe.type == "group") {
	                        questionsList.groupHeader = [];
	                        questionsList.groupHeader.push(qe.caption);
	                        if (qe.tags && qe.tags.SubgroupRendering) {
	                            questionsList.prefixOfGroupForLabelGroup = qe.caption;
	                            isPrefixGroup = true;
	                            if (actualQuestionLists.length > 0 && actualQuestionLists[actualQuestionLists.length - 1].reflexiveOn[0] == "Yes") {
	                                questionsList.prefixOfGroupForLabelGroup = "";
	                                isPrefixGroup = false;
	                            }
	                        }
	                        else {
	                            questionsList.prefixOfGroupForLabelGroup = "";
	                        }
	                    }
	                    this.noFoGroupsCompleted = i;
	                    var q = qe;
	                    q.key = q.id;
	                    if ((q.type == "group" || q.type == "assessment-factor-group") && q.caption.toLowerCase() == "beneficiaries") {
	                        if (questionsList.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var i = 0; i < questionsList.length; i++) {
	                                if (questionsList[i].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                this.actualQuestionLists = actualQuestionLists;
	                                return questionsList;
	                            }
	                        }
	                        var qL = q.questions;
	                        if (q.caption.toLowerCase() == "beneficiaries") {
	                            questionsList.isQuestionsBeneficiaries = true;
	                            actualQuestionLists.primaryBeneficiariesMainQuestion = qL[0];
	                            actualQuestionLists.contingencyBeneficiariesMainQuestion = qL[1];
	                            this.actualQuestionLists = actualQuestionLists;
	                            return questionsList;
	                        }
	                        var questionsFromGroup = this.reRecursiveGetQuestions1(qL, questionsList, preQ, actualQuestionLists, isPrefixGroup, 0);
	                        if (questionsFromGroup.length > 0) {
	                            var allQuestionsAreLabels = true;
	                            for (var i = 0; i < questionsFromGroup.length; i++) {
	                                if (questionsFromGroup[i].props.type != "label") {
	                                    allQuestionsAreLabels = false;
	                                }
	                            }
	                            if (!allQuestionsAreLabels) {
	                                return questionsFromGroup;
	                            }
	                            else {
	                                questionsList = questionsFromGroup;
	                            }
	                        }
	                    }
	                    preQ = q;
	                }
	                ;
	            }
	            ;
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.getQuestions = function (lastAnsweredQuestion) {
	        if (lastAnsweredQuestion) {
	        }
	        else {
	            return this.recursiveGetQuestions1();
	        }
	    };
	    Main.prototype.validateTextField = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            var isValid = true;
	            if (constraints.required) {
	                if (constraints.pattern) {
	                    if (q.answer) {
	                        return new RegExp(q.constraints.pattern).test(q.answer);
	                    }
	                    else {
	                        return false;
	                    }
	                }
	                return q.answer && String(q.answer).length > 0;
	            }
	            else {
	                if (q.answer && String(q.answer).length > 0) {
	                    if (constraints.pattern) {
	                        if (q.answer) {
	                            return new RegExp(q.constraints.pattern).test(q.answer);
	                        }
	                        else {
	                            return false;
	                        }
	                    }
	                    else {
	                        return true;
	                    }
	                }
	                else {
	                    delete q.answer;
	                    return true;
	                }
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateSingleSelection = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            if (constraints.required) {
	                return q.answer && q.answer.id && q.answer.id.length > 0;
	            }
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateCustomDatePicker = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            var isValid = true;
	            if (constraints.required) {
	                if (q.answer) {
	                    if (constraints.minValue) {
	                        return constraints.minValue <= q.answer;
	                    }
	                    else {
	                        return q.answer;
	                    }
	                }
	                return false;
	            }
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.validateMultiSelection = function (q) {
	        if (q.constraints) {
	            var constraints = q.constraints;
	            if (constraints.required) {
	                return q.answer && q.answer.length > 0;
	            }
	            return true;
	        }
	        else {
	            return true;
	        }
	    };
	    Main.prototype.onQuestionSubmit = function (notAddingOrDeletingBeneficiary, noOfBeneficiaryDeleted) {
	        var _this = this;
	        var answered_questions = [];
	        var allQuestionsValid = true;
	        if (!notAddingOrDeletingBeneficiary) {
	            this.setState({
	                alreadyOnceSubmitted: true
	            });
	        }
	        underscore_1.each(this.actualQuestionLists, function (q) {
	            answered_questions.push(q.id);
	            if (q.type == "text") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	            }
	            else if (q.type == "number") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	            }
	            else if (q.type == "singleselection") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateSingleSelection(q);
	            }
	            else if (q.type == "multiselection") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateMultiSelection(q);
	            }
	            else if (q.type == "date") {
	                allQuestionsValid = allQuestionsValid && !!_this.validateCustomDatePicker(q);
	            }
	        });
	        if (this.questionComponents && this.questionComponents.isQuestionsList) {
	            for (var i = 0; i < this.questionComponents.siblingAnswers.length; i++) {
	                var answers = this.questionComponents.siblingAnswers[i].elements;
	                underscore_1.each(answers, function (q) {
	                    answered_questions.push(q.id);
	                    if (q.type == "text") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                    }
	                    else if (q.type == "number") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                    }
	                    else if (q.type == "singleselection") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateSingleSelection(q);
	                    }
	                    else if (q.type == "multiselection") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateMultiSelection(q);
	                    }
	                    else if (q.type == "date") {
	                        allQuestionsValid = allQuestionsValid && !!_this.validateCustomDatePicker(q);
	                    }
	                });
	            }
	        }
	        if (this.questionComponents && this.questionComponents.isQuestionsBeneficiaries && !notAddingOrDeletingBeneficiary) {
	            if (this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions) {
	                for (var i = 0; i < this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions.length; i++) {
	                    var answers = this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions[i].questions;
	                    underscore_1.each(answers, function (q) {
	                        answered_questions.push(q.id);
	                        if (q.type == "text") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                        }
	                        else if (q.type == "number") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                        }
	                        else if (q.type == "singleselection") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateSingleSelection(q);
	                        }
	                        else if (q.type == "multiselection") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateMultiSelection(q);
	                        }
	                        else if (q.type == "date") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateCustomDatePicker(q);
	                        }
	                    });
	                }
	            }
	            if (this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions) {
	                for (var i = 0; i < this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions.length; i++) {
	                    var answers = this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions[i].questions;
	                    underscore_1.each(answers, function (q) {
	                        answered_questions.push(q.id);
	                        if (q.type == "text") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                        }
	                        else if (q.type == "number") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateTextField(q);
	                        }
	                        else if (q.type == "singleselection") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateSingleSelection(q);
	                        }
	                        else if (q.type == "multiselection") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateMultiSelection(q);
	                        }
	                        else if (q.type == "date") {
	                            allQuestionsValid = allQuestionsValid && !!_this.validateCustomDatePicker(q);
	                        }
	                    });
	                }
	            }
	        }
	        if (allQuestionsValid) {
	            this.setState({
	                submittingQuestions: true
	            });
	            var data = {
	                questions: this.questions,
	                answered_questions: answered_questions
	            };
	            this.props.postQuestions(data).then(function () {
	                window.scrollTo(0, 0);
	                if (_this.questions && _this.questions.LOGIN_URL && _this.questions.LOGIN_URL.length > 0) {
	                    window.location.href = _this.questions.LOGIN_URL;
	                    return;
	                }
	                if (_this.questions && _this.questions.redirect_url && _this.questions.redirect_url.length > 0) {
	                    window.location.href = _this.questions.redirect_url;
	                    return;
	                }
	                if (_this.questions && _this.questions.instant_id_check && _this.questions.instant_id_check.status == false) {
	                    _this.setState({
	                        showInstantIdCheckPopup: true,
	                        instantIdCheckData: _this.questions.instant_id_check
	                    });
	                }
	                ;
	                _this.setState({
	                    addingPrimaryBeneficiary: false,
	                    addingContingencyBeneficiary: false,
	                    singleselectionQuestionsSubmitting: false,
	                    deletingContingencyBeneficiary: false,
	                    deletingPrimaryBeneficiary: false
	                });
	                if (noOfBeneficiaryDeleted || noOfBeneficiaryDeleted == 0) {
	                    _this.setState((_a = {},
	                        _a["deletingContingencyBeneficiary_" + noOfBeneficiaryDeleted] = false,
	                        _a["deletingPrimaryBeneficiary_" + noOfBeneficiaryDeleted] = false,
	                        _a
	                    ));
	                }
	                var queryParams = _this.props.location.query;
	                var queryParamsString = "?";
	                for (var k in queryParams) {
	                    if (queryParams[k]) {
	                        queryParamsString += k + "=" + queryParams[k] + "&";
	                    }
	                    else {
	                        queryParamsString += k + "&";
	                    }
	                }
	                queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                if (_this.questions && _this.questions.status == false) {
	                    react_router_1.browserHistory.push("/error" + queryParamsString);
	                    return;
	                }
	                if (_this.questions.valid_user == 0) {
	                    react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                    return;
	                }
	                if (_this.questions.application_complete_status == true || _this.questions.application_complete_status == "true") {
	                    if (_this.questions.application_confirm_status == 1) {
	                        react_router_1.browserHistory.push("/signature" + queryParamsString);
	                    }
	                    else {
	                        react_router_1.browserHistory.push("/all-questions" + queryParamsString);
	                    }
	                    return;
	                }
	                if (_this.state.previousQuestionHanldingIndex || _this.state.previousQuestionHanldingIndex == 0) {
	                    if (_this.props.questions && _this.props.questions.extra_params &&
	                        _this.props.questions.extra_params.answered_questions &&
	                        _this.props.questions.extra_params.answered_questions.length > 0) {
	                        if (_this.props.questions.extra_params.answered_questions - 1 == _this.state.previousQuestionHanldingIndex) {
	                            _this.setState({
	                                previousQuestionHanldingIndex: null,
	                                previousQuestionIds: null
	                            });
	                        }
	                        else {
	                            _this.setState({
	                                previousQuestionHanldingIndex: _this.state.previousQuestionHanldingIndex + 1,
	                            }, function () {
	                                _this.setState({
	                                    previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                                });
	                            });
	                        }
	                    }
	                }
	                _this.setState({
	                    alreadyOnceSubmitted: false,
	                    submittingQuestions: false
	                });
	                var _a;
	            }).catch(function () {
	                console.log(_this.props.questions);
	            });
	        }
	    };
	    Main.prototype.findQuestionById = function (actualQuestions, questionId, isPrefixGroup, prefixGroupCounter) {
	        if (!underscore_1.isEmpty(actualQuestions)) {
	            var targetQuestion = {};
	            var tmpPreviousQuestionsPrefixOfGroupForLabelGroup;
	            for (var i = 0; i < (actualQuestions.length); i++) {
	                var qe = actualQuestions[i];
	                var q = qe;
	                q.key = q.id;
	                if (isPrefixGroup && (prefixGroupCounter == 0 || prefixGroupCounter == 1)) {
	                    if (this.previousQuestionsPrefixOfGroupForLabelGroup) {
	                        tmpPreviousQuestionsPrefixOfGroupForLabelGroup = this.previousQuestionsPrefixOfGroupForLabelGroup;
	                    }
	                }
	                if (q.id == questionId) {
	                    this.previousQuestionsPrefixGroupCounter = prefixGroupCounter;
	                    return q;
	                }
	                var currentIsPrefixGroup = false;
	                if (!this.isPreviousQuestionsPrefixOfGroupForLabelGroup) {
	                    this.previousQuestionsPrefixOfGroupForLabelGroup = "";
	                }
	                if (qe.type == "group" || qe.hasReflexive) {
	                    if (qe.tags && qe.tags.SubgroupRendering) {
	                        this.previousQuestionsPrefixOfGroupForLabelGroup = qe.caption;
	                        tmpPreviousQuestionsPrefixOfGroupForLabelGroup = this.previousQuestionsPrefixOfGroupForLabelGroup;
	                        targetQuestion = this.findQuestionById(q.questions, questionId, true, 0);
	                        if (!underscore_1.isEmpty(targetQuestion)) {
	                            this.isPreviousQuestionsPrefixOfGroupForLabelGroup = true;
	                        }
	                        currentIsPrefixGroup = true;
	                    }
	                    else {
	                        if (isPrefixGroup && prefixGroupCounter == 0) {
	                            targetQuestion = this.findQuestionById(q.questions, questionId, true, 1);
	                        }
	                        else {
	                            targetQuestion = this.findQuestionById(q.questions, questionId, false, 3);
	                        }
	                    }
	                }
	                if (q.type == "assessment-factor-group") {
	                    targetQuestion = this.findQuestionById(q.questions, questionId, currentIsPrefixGroup, prefixGroupCounter + 2);
	                }
	                if (qe.type == "list" && q.answer && q.answer[0].elements) {
	                    targetQuestion = this.findQuestionById(q.answer[0].elements, questionId, currentIsPrefixGroup, prefixGroupCounter + 2);
	                }
	                if (qe.type == "struct") {
	                    targetQuestion = this.findQuestionById(q.elements, questionId, currentIsPrefixGroup, prefixGroupCounter + 2);
	                    if (!underscore_1.isEmpty(targetQuestion)) {
	                        this.previousQuestionStructCaption = qe.caption;
	                    }
	                }
	                if (!underscore_1.isEmpty(targetQuestion)) {
	                    return targetQuestion;
	                }
	            }
	            return {};
	        }
	        else {
	            return {};
	        }
	    };
	    Main.prototype.getQuestionComponent = function (q) {
	        var qComponent = {};
	        if (q.type == "singleselection") {
	            if (q.options.length == 2) {
	                qComponent = React.createElement(SingleSelection_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++, submittingQuestions: this.state.submittingQuestions});
	            }
	            else {
	                qComponent = React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	            }
	        }
	        else if (q.type == "multiselection") {
	            qComponent = React.createElement(CustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, multi: true, counter: this.counter++});
	        }
	        else if (q.type == "label") {
	            qComponent = React.createElement(Label_1.default, __assign({}, q));
	        }
	        else if (q.type == "number" || q.type == "text") {
	            qComponent = React.createElement(CustomInput_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	        }
	        else if (q.type == "date") {
	            qComponent = React.createElement(QuestionsCustomDatePicker_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, key: q.id, counter: this.counter++});
	        }
	        else if (q.type == "assessment-factor-search") {
	            qComponent = React.createElement(AsyncCustomSelect_1.default, {question: q, error: "", onChange: this.onChangeInput.bind(this), alreadyOnceSubmitted: this.state.alreadyOnceSubmitted, getFactorsearch: this.props.getFactorsearch.bind(this), key: q.id});
	        }
	        return qComponent;
	    };
	    Main.prototype.getPreviousQuestionComponents = function () {
	        var previousQuestionIds = this.state.previousQuestionIds;
	        var qComps = [];
	        var aQuestions = [];
	        this.previousQuestionsPrefixOfGroupForLabelGroup = "";
	        this.previousQuestionStructCaption = "";
	        if (!underscore_1.isEmpty(this.questions) && !underscore_1.isEmpty(this.questions.data)) {
	            if (this.questions.data.questionnaire && this.questions.data.questionnaire.questions) {
	                for (var i = 0; i < previousQuestionIds.length; i++) {
	                    var question = this.findQuestionById(this.questions.data.questionnaire.questions, previousQuestionIds[i], false, 0);
	                    aQuestions.push(question);
	                    qComps.push(this.getQuestionComponent(question));
	                }
	            }
	        }
	        qComps.prefixOfGroupForLabelGroup = this.previousQuestionsPrefixOfGroupForLabelGroup;
	        this.actualQuestionLists = aQuestions;
	        return qComps;
	    };
	    Main.prototype.deleteSibling = function () {
	        if (this.questionComponents.siblingAnswers.length > 1) {
	            this.questionComponents.siblingAnswers.pop();
	            var siblingsCount = this.state.siblingsCount;
	            this.setState({
	                siblingsCount: siblingsCount - 1
	            });
	        }
	    };
	    Main.prototype.addSibling = function () {
	        var siblingsCount = this.state.siblingsCount || 0;
	        if (this.questionComponents.isQuestionsList) {
	            if (this.questionComponents.siblingAnswers) {
	                var a = JSON.parse(JSON.stringify(this.questionComponents.siblingAnswers[0]));
	                this.questionComponents.siblingAnswers.push(a);
	            }
	        }
	        this.setState({
	            siblingsCount: siblingsCount + 1
	        });
	    };
	    ;
	    Main.prototype.getCurrentPageIndex = function (questionId) {
	        var currentPageIndex = -1;
	        var answeredQuestions = [];
	        if (this.props.questions && this.props.questions.extra_params && this.props.questions.extra_params.answered_questions) {
	            answeredQuestions = this.props.questions.extra_params.answered_questions;
	        }
	        var pageQuestionsList = [];
	        for (var i = 0; (i < answeredQuestions.length && currentPageIndex == -1); i++) {
	            pageQuestionsList = answeredQuestions[i];
	            for (var j = 0; (j < pageQuestionsList.length && currentPageIndex == -1); j++) {
	                if (questionId == pageQuestionsList[j]) {
	                    currentPageIndex = i;
	                }
	            }
	        }
	        return currentPageIndex;
	    };
	    Main.prototype.getCurrentSetOfQuestions = function () {
	        if (this.state.previousQuestionIds && this.state.previousQuestionIds.length > 0) {
	            this.questionComponents = this.getPreviousQuestionComponents();
	            if (this.questionComponents && this.questionComponents.isQuestionsList) {
	            }
	            return this.questionComponents;
	        }
	        if (this.props.location.query && (this.props.location.query.fromEditablePage == true || this.props.location.query.fromEditablePage == "true")) {
	            var questionIdFromQuery = this.props.location.query.questionId;
	            var currentPageIndex = this.getCurrentPageIndex(this.props.location.query.questionId);
	            if (currentPageIndex >= 0) {
	                this.setState({
	                    previousQuestionIds: this.props.questions.extra_params.answered_questions[currentPageIndex]
	                });
	                return;
	            }
	        }
	        if (this.questions) {
	            this.questionComponents = this.getQuestions(null);
	            if (this.questionComponents && this.questionComponents.isQuestionsList) {
	                var aQuestions = [];
	                var siblingComponents = [];
	                var qComps;
	                for (var i = 0; i < this.questionComponents.siblingAnswers.length; i++) {
	                    var answers = this.questionComponents.siblingAnswers[i].elements;
	                    qComps = [];
	                    for (var j = 0; j < answers.length; j++) {
	                        qComps.push(this.getQuestionComponent(answers[j]));
	                    }
	                    siblingComponents.push(qComps);
	                }
	                this.questionComponents.siblingComponents = siblingComponents;
	            }
	            if (this.questionComponents && this.questionComponents.isQuestionsBeneficiaries) {
	                var aQuestions = [];
	                var beneficiaryQuestions = [];
	                var qComps;
	                if (this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions) {
	                    for (var i = 0; i < this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions.length; i++) {
	                        var answers = this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions[i].questions;
	                        qComps = [];
	                        for (var j = 0; j < answers.length; j++) {
	                            qComps.push(this.getQuestionComponent(answers[j]));
	                        }
	                        beneficiaryQuestions.push(qComps);
	                    }
	                }
	                this.questionComponents.primaryBeneficiaryQuestionsComps = beneficiaryQuestions;
	                beneficiaryQuestions = [];
	                if (this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions) {
	                    for (var i = 0; i < this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions.length; i++) {
	                        var answers = this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions[i].questions;
	                        qComps = [];
	                        for (var j = 0; j < answers.length; j++) {
	                            qComps.push(this.getQuestionComponent(answers[j]));
	                        }
	                        beneficiaryQuestions.push(qComps);
	                    }
	                }
	                this.questionComponents.contingencyBeneficiaryQuestionsComps = beneficiaryQuestions;
	            }
	            return this.questionComponents;
	        }
	        else {
	            return null;
	        }
	    };
	    Main.prototype.getBreadCrumbs = function () {
	        var breadCrumbs = [];
	        var questions = this.props.questions;
	        var questionsList = (questions && questions.data && questions.data.questionnaire &&
	            questions.data.questionnaire.questions) || [];
	        if (questionsList) {
	            for (var i = 0; i < questionsList.length; i++) {
	                if (questionsList[i].type == "group") {
	                    breadCrumbs.push(questionsList[i].caption);
	                }
	            }
	        }
	        return breadCrumbs;
	    };
	    Main.prototype.handleBackSubmit = function () {
	        var _this = this;
	        console.log("sdfds");
	        if (this.state.previousQuestionsHandling)
	            return;
	        if (this.props.questions && this.props.questions.extra_params &&
	            this.props.questions.extra_params.answered_questions &&
	            this.props.questions.extra_params.answered_questions.length > 0) {
	            if (this.state.previousQuestionHanldingIndex != 0) {
	                if (this.state.previousQuestionHanldingIndex) {
	                    this.setState({
	                        previousQuestionHanldingIndex: this.state.previousQuestionHanldingIndex - 1,
	                        previousQuestionsHandling: true
	                    }, function () {
	                        _this.setState({
	                            previousQuestionsHandling: false,
	                            previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                        });
	                    });
	                }
	                else {
	                    this.setState({
	                        previousQuestionHanldingIndex: this.props.questions.extra_params.answered_questions.length - 1,
	                        previousQuestionsHandling: true
	                    }, function () {
	                        _this.setState({
	                            previousQuestionsHandling: false,
	                            previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                        });
	                    });
	                }
	            }
	            else if (this.state.previousQuestionHanldingIndex == 0) {
	                this.setState({
	                    previousQuestionsHandling: true
	                }, function () {
	                    _this.setState({
	                        previousQuestionsHandling: false,
	                        previousQuestionIds: _this.props.questions.extra_params.answered_questions[_this.state.previousQuestionHanldingIndex]
	                    });
	                });
	            }
	        }
	    };
	    Main.prototype.deletePrimaryBeneficiary = function (i) {
	        if (this.questionComponents.primaryBeneficiaryQuestionsComps.length > 0) {
	            this.setState((_a = {},
	                _a["deletingPrimaryBeneficiary_" + i] = this.state["deletingPrimaryBeneficiary_" + i],
	                _a
	            ));
	            this.questionComponents.primaryBeneficiaryQuestionsComps.pop();
	            this.actualQuestionLists.primaryBeneficiariesMainQuestion &&
	                this.actualQuestionLists.primaryBeneficiariesMainQuestion.answer &&
	                this.actualQuestionLists.primaryBeneficiariesMainQuestion.answer.splice(i, 1);
	            this.actualQuestionLists.primaryBeneficiariesMainQuestion.questions.splice(i, 1);
	        }
	        var _a;
	    };
	    Main.prototype.deleteContingencyBeneficiary = function (i) {
	        if (this.questionComponents.contingencyBeneficiaryQuestionsComps.length > 0) {
	            this.setState((_a = {},
	                _a["deletingContingencyBeneficiary_" + i] = this.state["deletingContingencyBeneficiary_" + i],
	                _a
	            ));
	            this.questionComponents.contingencyBeneficiaryQuestionsComps.splice(i, 1);
	            this.actualQuestionLists.contingencyBeneficiariesMainQuestion &&
	                this.actualQuestionLists.contingencyBeneficiariesMainQuestion.answer &&
	                this.actualQuestionLists.contingencyBeneficiariesMainQuestion.answer.splice(i, 1);
	            this.actualQuestionLists.contingencyBeneficiariesMainQuestion.questions.splice(i, 1);
	        }
	        var _a;
	    };
	    Main.prototype.isDeletingBeneficiaryGoingOn = function () {
	        var r = false;
	        if (this.questionComponents && this.questionComponents.primaryBeneficiaryQuestionsComps && this.questionComponents.primaryBeneficiaryQuestionsComps.length > 0) {
	            var l = this.questionComponents.primaryBeneficiaryQuestionsComps.length;
	            for (var i = 0; i < l; i++) {
	                r = r || this.state["deletingPrimaryBeneficiary_" + i];
	            }
	        }
	        if (this.questionComponents && this.questionComponents.contingencyBeneficiaryQuestionsComps && this.questionComponents.contingencyBeneficiaryQuestionsComps.length > 0) {
	            var l = this.questionComponents.contingencyBeneficiaryQuestionsComps.length;
	            for (var i = 0; i < l; i++) {
	                r = r || this.state["deletingContingencyBeneficiary_" + i];
	            }
	        }
	        return r;
	    };
	    Main.prototype.isSubmitBtnDisabled = function () {
	        return this.state.addingPrimaryBeneficiary || this.state.addingContingencyBeneficiary ||
	            this.state.submittingQuestions || this.isDeletingBeneficiaryGoingOn();
	    };
	    Main.prototype.addPrimaryBeneficiary = function () {
	        var _this = this;
	        var qs = this.actualQuestionLists.primaryBeneficiariesMainQuestion;
	        var data = {};
	        data.questionId = qs.links[0].params.questionId;
	        data.assessment_factor_url = qs.links[0].href;
	        data.q = "*";
	        var self = this;
	        this.setState({
	            addingPrimaryBeneficiary: true,
	            addingContingencyBeneficiary: false
	        });
	        self.props.getFactorsearch(data).then(function (response) {
	            if (response.questions && response.questions.LOGIN_URL && response.questions.LOGIN_URL.length > 0) {
	                window.location.href = response.questions.LOGIN_URL;
	                return;
	            }
	            if (response.questions && response.questions.redirect_url && response.questions.redirect_url.length > 0) {
	                window.location.href = response.questions.redirect_url;
	                return;
	            }
	            if (response && response.questions && response.questions.data) {
	                self.beneficiariesIds = self.beneficiariesIds || {};
	                self.beneficiariesIds[qs.id] = response.questions.data;
	                if (qs.answerState == "valid" && qs.questions && qs.questions.length > 0) {
	                    var notFound = false, done = false, rq = {};
	                    var i, foundIndex;
	                    for (i = 0; (i < self.beneficiariesIds[qs.id].length && !done); i++) {
	                        foundIndex = i;
	                        notFound = false;
	                        for (var j = 0; (j < qs.answer.length && !notFound); j++) {
	                            if (qs.answer[j].id == self.beneficiariesIds[qs.id][i].id) {
	                                notFound = true;
	                            }
	                        }
	                        done = !notFound;
	                    }
	                    qs.answer.push(self.beneficiariesIds[qs.id][foundIndex]);
	                }
	                else {
	                    _this.onChangeInput(qs, [self.beneficiariesIds[qs.id][0]]);
	                }
	                _this.onQuestionSubmit(true);
	            }
	        }, function (err) {
	            self.setState({
	                beneficiariesIdsLoaded: self.state.beneficiariesIdsLoaded ? self.state.beneficiariesIdsLoaded++ : 1
	            });
	        });
	    };
	    Main.prototype.closeInstantIdCheckPopup = function () {
	        this.setState({
	            showInstantIdCheckPopup: false
	        });
	    };
	    ;
	    Main.prototype.addContingencyBeneficiary = function () {
	        var _this = this;
	        var qs = this.actualQuestionLists.contingencyBeneficiariesMainQuestion;
	        var data = {};
	        data.questionId = qs.links[0].params.questionId;
	        data.assessment_factor_url = qs.links[0].href;
	        data.q = "*";
	        var self = this;
	        this.setState({
	            addingPrimaryBeneficiary: false,
	            addingContingencyBeneficiary: true
	        });
	        self.props.getFactorsearch(data).then(function (response) {
	            if (response && response.questions && response.questions.data) {
	                if (response.questions && response.questions.LOGIN_URL && response.questions.LOGIN_URL.length > 0) {
	                    window.location.href = response.questions.LOGIN_URL;
	                    return;
	                }
	                if (response.questions && response.questions.redirect_url && response.questions.redirect_url.length > 0) {
	                    window.location.href = response.questions.redirect_url;
	                    return;
	                }
	                self.beneficiariesIds = self.beneficiariesIds || {};
	                self.beneficiariesIds[qs.id] = response.questions.data;
	                if (qs.answerState == "valid" && qs.questions && qs.questions.length > 0) {
	                    var notFound = false, done = false, rq = {};
	                    var i, foundIndex;
	                    for (i = 0; (i < self.beneficiariesIds[qs.id].length && !done); i++) {
	                        foundIndex = i;
	                        notFound = false;
	                        for (var j = 0; (j < qs.answer.length && !notFound); j++) {
	                            if (qs.answer[j].id == self.beneficiariesIds[qs.id][i].id) {
	                                notFound = true;
	                            }
	                        }
	                        done = !notFound;
	                    }
	                    qs.answer.push(self.beneficiariesIds[qs.id][foundIndex]);
	                }
	                else {
	                    _this.onChangeInput(qs, [self.beneficiariesIds[qs.id][0]]);
	                }
	                _this.onQuestionSubmit(true);
	            }
	        }, function (err) {
	            self.setState({
	                beneficiariesIdsLoaded: self.state.beneficiariesIdsLoaded ? self.state.beneficiariesIdsLoaded++ : 1
	            });
	        });
	    };
	    Main.prototype.render = function () {
	        var _this = this;
	        var breadCrumbs = this.getBreadCrumbs();
	        var questionsList = this.getCurrentSetOfQuestions() || [];
	        var noFoGroupsCompleted = this.noFoGroupsCompleted;
	        return (React.createElement("div", null, React.createElement(InstantIdCheckPopup_1.default, {showInstantIdCheckPopup: this.state.showInstantIdCheckPopup, onCloseModal: this.closeInstantIdCheckPopup.bind(this), instantIdCheckData: this.state.instantIdCheckData}), React.createElement(ScrollToTopOnMount_1.default, null), React.createElement(subheader_1.default, {breadCrumbs: breadCrumbs, noFoGroupsCompleted: [noFoGroupsCompleted], location: this.props.location}), React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center"}, React.createElement(react_bootstrap_1.Row, null), questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "primary-beneficiary-main-header"}, "Primary beneficiaries"), questionsList.isQuestionsBeneficiaries &&
	            underscore_1.map(questionsList.primaryBeneficiaryQuestionsComps, function (s, i) {
	                return React.createElement("div", {className: "", key: i}, React.createElement("div", {className: "siblings-container generic-beneficiary-container"}, questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "question-action-btn-container"}, React.createElement("div", {className: "single-add-primary-beneficiary-text"}, "Add Primary Beneficiary", !_this.state["deletingPrimaryBeneficiary_" + i] && React.createElement("img", {style: { float: "right", marginBottom: "25px", width: "24px", height: "24px" }, src: "../images/delete_beneficiary.svg", onClick: function () {
	                    _this.deletePrimaryBeneficiary(i);
	                }}), _this.state["deletingPrimaryBeneficiary_" + i] && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw fa-3x", style: { float: "right" }}))), s), React.createElement("div", null));
	            }), questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "question-action-btn-container questions-content-container Add-a-Primary-Benefi"}, React.createElement(react_bootstrap_1.Row, null, "Add a Primary Beneficiary"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: "7", className: "Add-a-Primary-Benefi-description-text"}, "You must add at least one primary beneficiary to your policy."), React.createElement(react_bootstrap_1.Col, {sm: "5"}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", disabled: this.isSubmitBtnDisabled(), style: { marginLeft: "20px" }, onClick: function () {
	            _this.addPrimaryBeneficiary();
	        }}, "ADD PRIMARY BENEFICIARY", this.state.addingPrimaryBeneficiary && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))), questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "primary-beneficiary-main-header"}, "Contingent beneficiaries"), questionsList.isQuestionsBeneficiaries &&
	            underscore_1.map(questionsList.contingencyBeneficiaryQuestionsComps, function (s, i) {
	                return React.createElement("div", {className: "", key: i}, React.createElement("div", {className: "siblings-container generic-beneficiary-container"}, questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "question-action-btn-container"}, React.createElement("div", {className: "single-add-primary-beneficiary-text"}, "Add Contingency Beneficiary", !_this.state["deletingContingencyBeneficiary_" + i] && React.createElement("img", {disabled: _this.isSubmitBtnDisabled(), style: { float: "right", marginBottom: "25px", width: "24px", height: "24px" }, src: "../images/delete_beneficiary.svg", onClick: function () {
	                    _this.deleteContingencyBeneficiary(i);
	                }}), _this.state["deletingContingencyBeneficiary_" + i] && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw fa-3x", style: { float: "right" }}))), s), React.createElement("div", null));
	            }), questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "question-action-btn-container questions-content-container Add-a-Primary-Benefi"}, React.createElement(react_bootstrap_1.Row, null, "Add a Contingent Beneficiary"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: "7", className: "Add-a-Primary-Benefi-description-text"}, "Adding a contingent beneficiary is optional."), React.createElement(react_bootstrap_1.Col, {sm: "5"}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", disabled: this.isSubmitBtnDisabled(), style: { marginLeft: "20px" }, onClick: function () {
	            _this.addContingencyBeneficiary();
	        }}, "ADD CONTINGENT BENEFICIARY", this.state.addingContingencyBeneficiary && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))), !questionsList.isQuestionsList && !questionsList.isQuestionsBeneficiaries && React.createElement("div", {className: "questions-content-container"}, this.state.gettingQuestions && React.createElement("i", {className: "fa fa-spinner fa-spin fa-3x fa-fw main-loader"}), React.createElement(react_bootstrap_1.Row, {className: "questions-sub-group-header fs18"}, questionsList.questionStructCaption), questionsList.prefixOfGroupForLabelGroup && React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text fs18 questions-sub-group-header", style: { marginBottom: "10px", marginLeft: "0px" }}, questionsList.prefixOfGroupForLabelGroup)), questionsList), !questionsList.isQuestionsList && React.createElement("div", {className: "question-action-btn-container"}, this.state.singleselectionQuestionsSubmitting && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw fa-2x", style: { position: "relative", top: "14px" }}), !this.isOnlyQuestionSingleSelection() && React.createElement(react_bootstrap_1.Button, {disabled: this.isSubmitBtnDisabled(), className: "c-button-default circular  action", style: { marginLeft: "30px!important" }, onClick: function () {
	            _this.onQuestionSubmit();
	        }}, "SUBMIT", this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))), questionsList.isQuestionsList &&
	            underscore_1.map(questionsList.siblingComponents, function (s, i) {
	                return React.createElement("div", {className: "", key: i}, React.createElement("div", {className: "siblings-container"}, s, questionsList.isQuestionsList && i == questionsList.siblingComponents.length - 1 && React.createElement("div", {className: "question-action-btn-container"}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", disabled: _this.isSubmitBtnDisabled(), onClick: function () {
	                    _this.addSibling();
	                }}, "ADD SIBLING", _this.state.goingBackQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {disabled: _this.isSubmitBtnDisabled(), className: "c-button-default circular next-step-btn action", style: { marginLeft: "30px!important" }, onClick: function () {
	                    _this.deleteSibling();
	                }}, "DELETE ENTRY", _this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement("div", null));
	            })), questionsList.isQuestionsList && React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center", style: { backgrounColor: "transparent", border: "none", boxShadow: "none" }}, " ", React.createElement("div", {className: "question-action-btn-container"}, React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular action", disabled: this.isSubmitBtnDisabled(), onClick: function () {
	            _this.handleBackSubmit();
	        }}, "Previous Step", this.state.goingBackQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {disabled: this.isSubmitBtnDisabled(), className: "c-button-default circular next-step-btn action", style: { marginLeft: "30px!important" }, onClick: function () {
	            _this.onQuestionSubmit();
	        }}, "Next Step", this.state.submittingQuestions && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))));
	    };
	    return Main;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        questions: state.questions.questions
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        getQuestions: function (data) {
	            return dispatch(Questions_1.getQuestions(data));
	        },
	        postQuestions: function (data, moreInfo) {
	            return dispatch(Questions_1.postQuestions(data, moreInfo));
	        },
	        getFactorsearch: function (data, moreInfo) {
	            return dispatch(Questions_1.getFactorsearch(data, moreInfo));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Main);


/***/ }),
/* 901 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var ProductHeader_1 = __webpack_require__(902);
	var ProductContainer_1 = __webpack_require__(903);
	var PersonInfo_1 = __webpack_require__(904);
	var subheader_1 = __webpack_require__(681);
	var ScrollToTopOnMount_1 = __webpack_require__(711);
	var react_router_1 = __webpack_require__(184);
	var EditPerson_1 = __webpack_require__(905);
	var NoProducts_1 = __webpack_require__(906);
	var ProductsPage = (function (_super) {
	    __extends(ProductsPage, _super);
	    function ProductsPage() {
	        var _this = this;
	        _super.call(this);
	        this.state = {
	            productId0: [],
	            productId1: []
	        };
	        this.openEditPersonModal = function (person, personIndex) {
	            _this.props.openEditPersonModal(person, personIndex);
	        };
	    }
	    ProductsPage.prototype.componentDidMount = function () {
	        console.log("DDFDSD");
	        setTimeout(function () {
	        }, 1);
	    };
	    ProductsPage.prototype.componentWillMount = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (underscore_1.isEmpty(this.props.products) && underscore_1.isEmpty(this.props.persons)) {
	            var basePath = this.props.location.pathname.indexOf("agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            window.location.href = basePath + queryParamsString;
	            return;
	        }
	        if (this.props.persons && this.props.persons[0] && this.props.products && this.props.products[0] && this.props.products[0].products_data) {
	            var productList = this.props.products[0].products_data.products_list;
	            var productId0 = [];
	            if (!underscore_1.isEmpty(this.props.persons[0].selected_products)) {
	                var productListIds = underscore_1.map(productList, function (product) {
	                    return product.ProductID;
	                });
	                productId0 = underscore_1.intersection(this.props.persons[0].selected_products, productListIds);
	            }
	            this.setState({
	                productId0: productId0
	            });
	        }
	        if (this.props.persons && this.props.persons[1] && this.props.products && this.props.products[1] && this.props.products[1].products_data) {
	            var productList = this.props.products[1].products_data.products_list;
	            var productId1 = [];
	            if (!underscore_1.isEmpty(this.props.persons[1].selected_products)) {
	                var productListIds = underscore_1.map(productList, function (product) {
	                    return product.ProductID;
	                });
	                productId1 = underscore_1.intersection(this.props.persons[1].selected_products, productListIds);
	            }
	            this.setState({
	                productId1: productId1
	            });
	        }
	    };
	    ProductsPage.prototype.selectProductForIndex = function (personIndex, product) {
	        var productsList = JSON.parse(JSON.stringify(this.state["productId" + personIndex]));
	        productsList.push(product.ProductID);
	        productsList = underscore_1.uniq(productsList);
	        this.setState((_a = {},
	            _a["productId" + personIndex] = productsList,
	            _a
	        ));
	        var self = this;
	        setTimeout(function () {
	            self.setProductFormSubmissionErrorMsg();
	        }, 10);
	        var _a;
	    };
	    ProductsPage.prototype.deSelectProductForIndex = function (personIndex, product) {
	        var productsList = JSON.parse(JSON.stringify(this.state["productId" + personIndex]));
	        productsList = underscore_1.without(productsList, product.ProductID);
	        this.setState((_a = {},
	            _a["productId" + personIndex] = productsList,
	            _a
	        ));
	        var self = this;
	        setTimeout(function () {
	            self.setProductFormSubmissionErrorMsg();
	        }, 10);
	        var _a;
	    };
	    ProductsPage.prototype.setProductFormSubmissionErrorMsg = function () {
	        if (this.productSubmissionBtnClicked) {
	            var errorMsg = null;
	            if (this.props.noOfPersons == 2) {
	                if (!(this.state.productId0.length > 0)) {
	                    if (!(this.state.productId1.length > 0)) {
	                        errorMsg = "Please select at least one product for each applicant";
	                    }
	                    else {
	                        errorMsg = "Please select a product for applicant 1";
	                    }
	                }
	                else {
	                    if (!(this.state.productId1.length > 0)) {
	                        errorMsg = "Please select a product for applicant 2";
	                    }
	                }
	            }
	            else {
	                if (!(this.state.productId0.length > 0)) {
	                    errorMsg = "Please select at least one product";
	                }
	            }
	            this.setState({
	                productSelectionErrorMsg: errorMsg
	            });
	        }
	    };
	    ProductsPage.prototype.handleEditChange = function (person, isFromEditModal) {
	        var _this = this;
	        this.props.handleEditChange(person);
	        setTimeout(function () {
	            _this.submitProductsFormOnEditPerson(isFromEditModal);
	        });
	    };
	    ProductsPage.prototype.validateProductsFormSubmission = function (isFromEditModal) {
	        if (isFromEditModal) {
	            var activeProducts = document.querySelectorAll('.single-product-content.active .quote-this-product-container');
	            var k = 0, len = activeProducts.length;
	            if (len > 0) {
	                for (; k < len; k++) {
	                    activeProducts[k].click();
	                }
	            }
	        }
	        else {
	            if (this.props.noOfPersons == 2) {
	                return (this.state.productId0.length > 0 && this.state.productId1.length > 0);
	            }
	            else {
	                return this.state.productId0.length > 0;
	            }
	        }
	    };
	    ProductsPage.prototype.validateQuoteForm = function () {
	        var _this = this;
	        var result = true;
	        var errors = [];
	        underscore_1.each(this.props.persons, function (person, index) {
	            if (index < _this.props.noOfPersons) {
	                var s_birthDate = person.s_birthDate, s_gender = person.s_gender, state = person.state, smoke = person.smoke, health = person.health, name_1 = person.name;
	                var s_birthDateError = !(s_birthDate && moment(s_birthDate).format("YYYY-MM-DD").length > 0);
	                var s_genderError = !(s_gender == 1 || s_gender == 2);
	                var stateError = !(state && state.length > 0);
	                var smokeError = !(smoke == "Yes" || smoke == "No");
	                var healthError = !(health);
	                var nameError = !(name_1 && name_1.length > 0);
	                errors.push({
	                    s_birthDateError: s_birthDateError,
	                    s_genderError: s_genderError,
	                    stateError: stateError,
	                    smokeError: smokeError,
	                    healthError: healthError,
	                    nameError: nameError
	                });
	                result = result && !(s_birthDateError || s_genderError || stateError || smokeError || healthError || nameError);
	            }
	        });
	        this.setState({
	            errors: errors
	        });
	        return result;
	    };
	    ProductsPage.prototype.submitQuoteForm = function () {
	        var _this = this;
	        if (this.validateQuoteForm()) {
	            var persons = [];
	            this.setState({
	                submittingUserInfo: true
	            });
	            var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	            personOne.s_birthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	            personOne.applicant = "1";
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	                personTwo.s_birthDate = moment(personTwo.s_birthDate).format("YYYY-MM-DD");
	                personTwo.applicant = "2";
	                persons.push(personTwo);
	            }
	            this.props.setPersonsData(persons);
	            this.props.submitQuoteForm(persons).then(function () {
	                if (_this.props.products && _this.props.products.LOGIN_URL && _this.props.products.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.products.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.products && _this.props.products.redirect_url && _this.props.products.redirect_url.length > 0) {
	                    window.location.href = _this.props.products.redirect_url;
	                    return;
	                }
	                _this.setState({
	                    submittingUserInfo: false
	                });
	                return;
	            }).catch(function () {
	                var queryParams = _this.props.location.query;
	                var queryParamsString = "?";
	                for (var k in queryParams) {
	                    if (queryParams[k]) {
	                        queryParamsString += k + "=" + queryParams[k] + "&";
	                    }
	                    else {
	                        queryParamsString += k + "&";
	                    }
	                }
	                queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                react_router_1.browserHistory.push("/products" + queryParamsString);
	                _this.setState({
	                    submittingUserInfo: false
	                });
	            });
	        }
	    };
	    ProductsPage.prototype.submitProductsFormOnEditPerson = function (isFromEditModal) {
	        var _this = this;
	        this.productSubmissionBtnClicked = true;
	        if (this.validateProductsFormSubmission(isFromEditModal)) {
	            this.setState({
	                submittingProductsInfo: true
	            });
	            var persons = [];
	            var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	            personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	            personOne.s_birthDate = moment(personOne.s_birthDate);
	            personOne.selected_products = this.state.productId0;
	            personOne.applicant = "1";
	            personOne.sGender = personOne.s_gender;
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	                personTwo.sBirthDate = moment(personTwo.s_birthDate).format("YYYY-MM-DD");
	                personOne.s_birthDate = moment(personOne.s_birthDate);
	                personTwo.selected_products = this.state.productId1;
	                personTwo.applicant = "2";
	                personTwo.sGender = personTwo.s_gender;
	                persons.push(personTwo);
	            }
	            this.props.setPersonsData(persons);
	            this.props.submitQuoteForm(persons).then(function () {
	                if (_this.props.products && _this.props.products.LOGIN_URL && _this.props.products.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.products.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.products && _this.props.products.redirect_url && _this.props.products.redirect_url.length > 0) {
	                    window.location.href = _this.props.products.redirect_url;
	                    return;
	                }
	                _this.setState({
	                    submittingProductsInfo: false
	                });
	            }).catch(function () {
	                if (_this.props.products && _this.props.products.LOGIN_URL && _this.props.products.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.products.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.products && _this.props.products.redirect_url && _this.props.products.redirect_url.length > 0) {
	                    window.location.href = _this.props.products.redirect_url;
	                    return;
	                }
	                _this.submmitedProductForm = false;
	                _this.setState({
	                    submittingProductsInfo: false
	                });
	            });
	        }
	        else if (isFromEditModal) {
	            this.submitQuoteForm();
	        }
	        else {
	            this.setProductFormSubmissionErrorMsg();
	        }
	    };
	    ProductsPage.prototype.getContinueBtnActiveClass = function () {
	        if (this.props.noOfPersons == 2) {
	            if (this.state.productId0.length > 0 && this.state.productId1.length > 0)
	                return "active";
	        }
	        else if (this.state.productId0.length > 0) {
	            return "active";
	        }
	        return "";
	    };
	    ProductsPage.prototype.submitProductsForm = function () {
	        var _this = this;
	        this.productSubmissionBtnClicked = true;
	        if (this.validateProductsFormSubmission()) {
	            this.setState({
	                submittingProductsInfo: true
	            });
	            var persons = [];
	            var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	            personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	            personOne.selected_products = this.state.productId0;
	            personOne.applicant = "1";
	            personOne.sGender = personOne.s_gender;
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	                personTwo.sBirthDate = moment(personTwo.s_birthDate).format("YYYY-MM-DD");
	                personTwo.selected_products = this.state.productId1;
	                personTwo.applicant = "2";
	                personTwo.sGender = personTwo.s_gender;
	                persons.push(personTwo);
	            }
	            this.props.setPersonsData(persons);
	            this.props.submitProductsForm(persons).then(function () {
	                if (_this.props.plans && _this.props.plans.LOGIN_URL && _this.props.plans.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.plans.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.plans && _this.props.plans.redirect_url && _this.props.plans.redirect_url.length > 0) {
	                    window.location.href = _this.props.plans.redirect_url;
	                    return;
	                }
	                var queryParams = _this.props.location.query;
	                var queryParamsString = "?";
	                for (var k in queryParams) {
	                    if (queryParams[k]) {
	                        queryParamsString += k + "=" + queryParams[k] + "&";
	                    }
	                    else {
	                        queryParamsString += k + "&";
	                    }
	                }
	                queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                var basePath = _this.props.location.pathname.indexOf("agent") >= 0 || _this.props.is_agent ? "/agent/" : "/";
	                react_router_1.browserHistory.push(basePath + "plans" + queryParamsString);
	                _this.setState({
	                    submittingProductsInfo: true
	                });
	            }).catch(function () {
	                if (_this.props.plans && _this.props.plans.LOGIN_URL && _this.props.plans.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.plans.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.plans && _this.props.plans.redirect_url && _this.props.plans.redirect_url.length > 0) {
	                    window.location.href = _this.props.plans.redirect_url;
	                    return;
	                }
	                _this.submmitedProductForm = false;
	                _this.setState({
	                    submittingProductsInfo: true
	                });
	            });
	        }
	        else {
	            var errorMsg = "";
	            if (this.props.noOfPersons == 2) {
	                if (!(this.state.productId0.length > 0)) {
	                    if (!(this.state.productId1.length > 0)) {
	                        errorMsg = "Please select at least one product for each applicant";
	                    }
	                    else {
	                        errorMsg = "Please select a product for applicant 1";
	                    }
	                }
	                else {
	                    errorMsg = "Please select a product for applicant 2";
	                }
	            }
	            else {
	                if (!(this.state.productId0.length > 0)) {
	                    errorMsg = "Please select at least one product";
	                }
	            }
	            this.setState({
	                productSelectionErrorMsg: errorMsg
	            });
	        }
	    };
	    ProductsPage.prototype.shouldDisplayBackBtn = function () {
	        return true;
	        var shouldRedirect = underscore_1.isEmpty(this.props.products) || underscore_1.isEmpty(this.props.products[0]);
	        if (this.props.noOfPersons == 2) {
	            shouldRedirect = underscore_1.isEmpty(this.props.products) || underscore_1.isEmpty(this.props.products[1]);
	        }
	        return shouldRedirect;
	    };
	    ProductsPage.prototype.redirectToMainPage = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        var basePath = this.props.location.pathname.indexOf("agent") >= 0 || this.props.is_agent ? "/agent/" : "/";
	        react_router_1.browserHistory.push(basePath + queryParamsString);
	        return;
	    };
	    ProductsPage.prototype.isEmptyProducts = function () {
	    };
	    ProductsPage.prototype.render = function () {
	        var _this = this;
	        var persons = this.props.persons;
	        persons = persons || [];
	        var personsContainerWidth = this.props.noOfPersons == 2 ? 4 : 8;
	        return (React.createElement("div", {className: "product-pager-container", ref: function (c) { _this._scrollView = c; }}, React.createElement(ScrollToTopOnMount_1.default, null), React.createElement(subheader_1.default, {location: this.props.location, products: this.props.products, plans: this.props.plans, premiums: this.props.premiums}), React.createElement("div", {className: "visible-xs"}, this.props.products && this.props.products.length >= 1 && this.props.products[0] &&
	            this.props.products[0].products_data && this.props.products[0].products_data.products_list &&
	            this.props.products[0].products_data.products_list.length > 0 &&
	            React.createElement(ProductHeader_1.default, null)), React.createElement(react_bootstrap_1.Row, {style: { backgroundColor: "rgb(247, 247, 247)" }}, React.createElement(react_bootstrap_1.Col, {className: "all-persons-info-container", style: { marginLeft: "auto", marginRight: "auto", float: "none" }}, this.props.noOfPersons >= 1 &&
	            React.createElement(PersonInfo_1.default, {person: persons[0], noOfPersons: this.props.noOfPersons, personIndex: 0, index: 0, openEditPersonModal: this.openEditPersonModal.bind(this)}), React.createElement("div", {className: "hidden-xs"}, this.props.noOfPersons == 2 &&
	            React.createElement(PersonInfo_1.default, {person: persons[1], noOfPersons: this.props.noOfPersons, personIndex: 1, index: 1, openEditPersonModal: this.openEditPersonModal.bind(this)})))), React.createElement("div", {className: "hidden-xs"}, this.props.products && this.props.products.length >= 1 && this.props.products[0] &&
	            this.props.products[0].products_data && this.props.products[0].products_data.products_list &&
	            this.props.products[0].products_data.products_list.length > 0 &&
	            React.createElement(ProductHeader_1.default, null)), React.createElement(react_bootstrap_1.Row, {style: { backgroundColor: "rgb(247, 247, 247)" }, className: this.props.noOfPersons == 2 ? "two-product-outer-container" : "one-product-outer-container"}, React.createElement(react_bootstrap_1.Col, {className: "c-center all-products-info-container container-max-width"}, React.createElement(react_bootstrap_1.Row, null, this.props.products && this.props.products.length >= 1 && this.props.products[0] &&
	            this.props.products[0].products_data && this.props.products[0].products_data.products_list &&
	            this.props.products[0].products_data.products_list.length > 0 ?
	            React.createElement(ProductContainer_1.default, {productInfo: this.props.products[0], selectProduct: this.selectProductForIndex.bind(this), deSelectProduct: this.deSelectProductForIndex.bind(this), personIndex: 0, person: this.props.persons[0], noOfPersons: this.props.noOfPersons, productValidations: this.props.productValidations, productIds: this.state.productId0}) : React.createElement(NoProducts_1.default, {noOfPersons: this.props.noOfPersons}), React.createElement(react_bootstrap_1.Row, {style: { backgroundColor: "rgb(247, 247, 247)" }, className: "visible-xs"}, React.createElement(react_bootstrap_1.Col, {className: "all-persons-info-container", style: { marginLeft: "auto", marginRight: "auto", float: "none" }}, React.createElement("div", {className: "hidden-xs"}, this.props.noOfPersons >= 1 &&
	            React.createElement(PersonInfo_1.default, {person: persons[0], noOfPersons: this.props.noOfPersons, personIndex: 0, index: 0, openEditPersonModal: this.openEditPersonModal.bind(this)})), this.props.noOfPersons == 2 &&
	            React.createElement(PersonInfo_1.default, {person: persons[1], noOfPersons: this.props.noOfPersons, personIndex: 1, index: 1, openEditPersonModal: this.openEditPersonModal.bind(this)}))), this.props.products && this.props.products.length >= 1 && this.props.products[1] &&
	            this.props.products[1].products_data && this.props.products[1].products_data.products_list &&
	            this.props.products[0].products_data.products_list.length > 0 ?
	            React.createElement(ProductContainer_1.default, {productInfo: this.props.products[1], selectProduct: this.selectProductForIndex.bind(this), deSelectProduct: this.deSelectProductForIndex.bind(this), personIndex: 1, person: this.props.persons[1], noOfPersons: this.props.noOfPersons, productValidations: this.props.productValidations, productIds: this.state.productId1}) : this.props.products && this.props.products.length == 2 ? React.createElement(NoProducts_1.default, {noOfPersons: this.props.noOfPersons}) : null))), React.createElement(react_bootstrap_1.Row, {className: "product-continue-btn-main-container"}, React.createElement(react_bootstrap_1.Col, {xs: 12, className: "product-continue-btn-container container-max-width", style: { marginLeft: "auto", marginRight: "auto", float: "none", paddingLeft: "0px", marginTop: "30px" }}, React.createElement("div", {style: { width: "100%" }}, React.createElement("span", {className: "previous-btn-text hidden-xs", onClick: function () {
	            _this.redirectToMainPage();
	        }}, "PREVIOUS"), React.createElement(react_bootstrap_1.Button, {className: "c-button-default visible-xs back-btn", style: { backgroundColor: "#fb4d3d!important", marginBottom: "15px" }, onClick: function () {
	            _this.redirectToMainPage();
	        }}, "PREVIOUS"), React.createElement(react_bootstrap_1.Button, {style: { marginTop: "10px", marginBottom: "15px", marginLeft: "17px" }, className: "c-button-default circular hidden-xs " + this.getContinueBtnActiveClass(), onClick: function () {
	            _this.submitProductsForm();
	        }}, "NEXT", this.state.submittingProductsInfo && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {className: "c-button-default visible-xs " + this.getContinueBtnActiveClass(), style: { marginBottom: "15px" }, onClick: function () {
	            _this.submitProductsForm();
	        }}, "NEXT", this.state.submittingProductsInfo && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))), this.state.productSelectionErrorMsg && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "center", color: "red", paddingLeft: "0px", marginBottom: "15px" }, sm: 12, className: "c-subheader-text error"}, this.state.productSelectionErrorMsg))), React.createElement(EditPerson_1.default, {showModalEditPerson: this.props.showModalEditPerson, onCloseModal: this.props.closeEditPersonModal.bind(this), editablePerson: this.props.editablePerson, personIndex: this.props.editablePersonIndex, handleChange: this.handleEditChange.bind(this)})));
	    };
	    return ProductsPage;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        isProductFetchCallDone: state.quotes.isProductFetchCallDone,
	        showModalEditPerson: state.quotes.showModalEditPerson,
	        noOfPersons: state.selectPersons.noOfPersons,
	        editablePerson: state.quotes.editablePerson,
	        editablePersonIndex: state.quotes.editablePersonIndex,
	        productValidations: state.quotes.productValidations,
	        is_agent: state.quotes.is_agent,
	        premiums: state.quotes.premiums
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        submitQuoteForm: function (data) { return dispatch(Quote_1.submitQuoteForm(data)); },
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        submitProductsForm: function (data) {
	            return dispatch(Quote_1.submitProductsForm(data));
	        },
	        openEditPersonModal: function (person, personIndex) {
	            return dispatch(Quote_1.openEditPersonModal(person, personIndex));
	        },
	        closeEditPersonModal: function () {
	            return dispatch(Quote_1.closeEditPersonModal());
	        },
	        handleEditChange: function (person) {
	            return dispatch(Quote_1.handleEditChange(person));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(ProductsPage);


/***/ }),
/* 902 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var ProductHeader = (function (_super) {
	    __extends(ProductHeader, _super);
	    function ProductHeader() {
	        _super.apply(this, arguments);
	    }
	    ProductHeader.prototype.render = function () {
	        return (React.createElement(react_bootstrap_1.Row, {style: { backgroundColor: "rgb(247, 247, 247)" }}, React.createElement(react_bootstrap_1.Col, {sm: 7, className: "c-center container-max-width"}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "select-product-header "}, "Select a product"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "select-product-header-content"}, "OK! Thanks for that information. Based on the info you provided, the following products are available. Just click on the product name to get a quote. (You may select up to two products to quote.)"))));
	    };
	    return ProductHeader;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ProductHeader;


/***/ }),
/* 903 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var react_raw_html_1 = __webpack_require__(739);
	var ProductContainer = (function (_super) {
	    __extends(ProductContainer, _super);
	    function ProductContainer(props, context) {
	        var _this = this;
	        _super.call(this, props);
	        this.handleChange = function (value) {
	            _this.setState({
	                value: value
	            });
	        };
	        this.selectProduct = function (product) {
	            var productIds = JSON.parse(JSON.stringify(_this.state.productIds));
	            if (productIds.indexOf(product.ProductID) >= 0) {
	                productIds = underscore_1.without(productIds, product.ProductID);
	                _this.props.deSelectProduct(_this.props.personIndex, product);
	                _this.setState({
	                    productIds: productIds,
	                    productSelectionErrorMsg: "",
	                    productSelectionError: false
	                });
	            }
	            else {
	                productIds.push(product.ProductID);
	                productIds = underscore_1.uniq(productIds);
	                if (_this.props.productValidations && _this.props.productValidations.product_selection_count >= productIds.length) {
	                    _this.setState({
	                        productIds: productIds,
	                        productSelectionErrorMsg: "",
	                        productSelectionError: false
	                    });
	                    _this.props.selectProduct(_this.props.personIndex, product);
	                }
	                else {
	                    _this.setState({
	                        productSelectionErrorMsg: _this.props.productValidations.product_selection_error_message,
	                        productSelectionError: true
	                    });
	                }
	            }
	        };
	        var productIds = [];
	        if (this.props.person && !underscore_1.isEmpty(this.props.person.selected_products)) {
	            productIds = this.props.person.selected_products;
	            if (!underscore_1.isEmpty(this.props.productIds)) {
	                productIds = underscore_1.intersection(this.props.productIds, this.props.person.selected_products);
	            }
	        }
	        this.state = {
	            productIds: productIds
	        };
	    }
	    ProductContainer.prototype.getProductsInOrders = function (products) {
	        return products.sort(function (a, b) {
	            return parseInt(a.ProductDisplayOrder) - parseInt(b.ProductDisplayOrder);
	        });
	    };
	    ProductContainer.prototype.toggleProductDescription = function (product) {
	        this.setState((_a = {},
	            _a["shouldShowProductDescription_" + product.ProductID] = !this.state["shouldShowProductDescription_" + product.ProductID],
	            _a
	        ));
	        var _a;
	    };
	    ProductContainer.prototype.render = function () {
	        var _this = this;
	        var productInfo = this.props.productInfo;
	        var products = productInfo && productInfo.products_data && productInfo.products_data.products_list || [];
	        products = this.getProductsInOrders(products);
	        var personsContainerWidth = this.props.noOfPersons == 2 ? 6 : 12;
	        var productContainerWidth = this.props.noOfPersons == 2 ? 12 : 6;
	        react_raw_html_1.default.addTag("mycooltag");
	        if (!underscore_1.isEmpty(products)) {
	            return (React.createElement(react_bootstrap_1.Col, {sm: personsContainerWidth, className: this.props.personIndex == 0 ? "first-product-container" : "second-product-container"}, React.createElement(react_bootstrap_1.Col, {className: "select-product-header", style: { textAlign: "center", paddingBottom: "22px" }}, "Products for ", this.props.person.name), this.state.productSelectionError && React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center product-selection-error-msg"}, this.state.productSelectionErrorMsg)), React.createElement(react_bootstrap_1.Row, {className: "c-center mt50"}, underscore_1.map(products, function (product) {
	                var product_image_name = product.product_image;
	                var product_image = window.staticRoot + "/assets/img/" + product.product_image;
	                return (React.createElement(react_bootstrap_1.Col, {key: product.ProductID, sm: productContainerWidth, className: "single-product-container product-custom-container"}, React.createElement(react_bootstrap_1.Row, {className: "single-product-content " + (_this.state.productIds.indexOf(product.ProductID) >= 0 ? "active" : "") + " " + (_this.state["shouldShowProductDescription_" + product.ProductID] ? "is-open" : "")}, React.createElement(react_bootstrap_1.Row, {className: "product_img_div"}, _this.state.productIds.indexOf(product.ProductID) < 0 && React.createElement("img", {className: "plan-product-image " + product_image_name + "_transparent", src: "" + product_image}), _this.state.productIds.indexOf(product.ProductID) >= 0 && React.createElement("div", {id: "tickcontainer"}, React.createElement("div", {className: ""}, React.createElement("div", {className: ""}, React.createElement("img", {className: "", src: "../images/tick-mark.svg"}))))), React.createElement(react_bootstrap_1.Row, {className: "header"}, React.createElement(react_bootstrap_1.Col, {style: { textAlign: "left" }, sm: 12}, product.ProductDisplayName)), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "product-main-content"}, React.createElement(react_bootstrap_1.Row, {className: "text-center"}, React.createElement("ul", {className: "c-product-desc-line"}, product.ProductDisplayDescription && product.ProductDisplayDescription.trim && product.ProductDisplayDescription.trim().length > 0 &&
	                    React.createElement(react_raw_html_1.default.mycooltag, null, product.ProductDisplayDescription.trim()))))), React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "0px", marginRight: "0px" }}, !_this.state["shouldShowProductDescription_" + product.ProductID] && React.createElement("div", {className: "product-toggle-description-gradient"}), React.createElement(react_bootstrap_1.Row, {style: { width: "90%", marginLeft: "auto", marginRight: "auto", height: "83px" }, className: "text-center " + (_this.state.productIds.indexOf(product.ProductID) >= 0 ? "active" : "")}, React.createElement(react_bootstrap_1.Col, {className: "product-toggle-description", onClick: function () { _this.toggleProductDescription(product); }}, _this.state["shouldShowProductDescription_" + product.ProductID] && React.createElement("div", {style: { marginBottom: "-20px" }}, "Hide Details"), !_this.state["shouldShowProductDescription_" + product.ProductID] && React.createElement("div", null, "View Details")), !_this.state["shouldShowProductDescription_" + product.ProductID] && React.createElement(react_bootstrap_1.Col, {className: "product-toggle-line", style: { borderTop: "2px solid rgba(161, 161, 161, 1)", marginTop: "10px" }}), React.createElement(react_bootstrap_1.Col, {className: "quote-this-product-container", onClick: function () { return _this.selectProduct(product); }}, _this.state.productIds.indexOf(product.ProductID) >= 0 && React.createElement("div", {className: "c-coverage-amount quote-product product-selection-btn"}, "PRODUCT SELECTED"), _this.state.productIds.indexOf(product.ProductID) < 0 && React.createElement("div", {className: "c-coverage-amount quote-product active product-selection-btn"}, "QUOTE THIS PRODUCT")))))));
	            }))));
	        }
	        else {
	            return null;
	        }
	    };
	    return ProductContainer;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = ProductContainer;


/***/ }),
/* 904 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_bootstrap_1 = __webpack_require__(280);
	var PersonInfo = (function (_super) {
	    __extends(PersonInfo, _super);
	    function PersonInfo() {
	        _super.apply(this, arguments);
	    }
	    PersonInfo.prototype.render = function () {
	        var _this = this;
	        var person = this.props.person;
	        var personsContainerWidth = this.props.noOfPersons == 2 ? 6 : 12;
	        var additionalClass = this.props.noOfPersons == 2 ? "contains-two-persons" : "contains-one-person";
	        if (this.props.personIndex == 0) {
	            additionalClass += " first-person";
	        }
	        else {
	            additionalClass += " second-person";
	        }
	        return (React.createElement(react_bootstrap_1.Col, {sm: personsContainerWidth, className: "person-info-container  " + additionalClass}, React.createElement(react_bootstrap_1.Row, {className: "person-info-header-container"}, React.createElement(react_bootstrap_1.Col, {sm: 9, xs: 9, className: "person-name-container"}, person.name), React.createElement(react_bootstrap_1.Col, {sm: 3, xs: 3, className: "person-edit-container", onClick: function () { return _this.props.openEditPersonModal(_this.props.person, _this.props.personIndex); }}, "EDIT")), React.createElement(react_bootstrap_1.Row, {className: "person-content"}, React.createElement(react_bootstrap_1.Col, {sm: 4, className: "person-info-columns"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "mb10"}, React.createElement("span", {className: "person-label"}, "State: "), React.createElement("span", {className: "person-label-content"}, person.state)), React.createElement(react_bootstrap_1.Col, {sm: 12}, React.createElement("span", {className: "person-label"}, "Gender: "), React.createElement("span", {className: "person-label-content"}, person.s_gender == 1 ? "Male" : "Female")))), React.createElement(react_bootstrap_1.Col, {sm: 4, className: "person-info-columns"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "mb10"}, React.createElement("span", {className: "person-label"}, "D.O.B: "), React.createElement("span", {className: "person-label-content"}, moment(person.s_birthDate).format("MM-DD-YYYY"))), React.createElement(react_bootstrap_1.Col, {sm: 12}, React.createElement("span", {className: "person-label"}, "Health: "), React.createElement("span", {className: "person-label-content"}, person.health)))), React.createElement(react_bootstrap_1.Col, {sm: 4, className: "person-info-columns"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "mb10"}, React.createElement("span", {className: "person-label"}, "Tobacco Use: "), React.createElement("span", {className: "person-label-content"}, person.smoke, " ")))))));
	    };
	    return PersonInfo;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = PersonInfo;


/***/ }),
/* 905 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var textInput_1 = __webpack_require__(703);
	var react_datepicker_1 = __webpack_require__(684);
	var react_lightweight_tooltip_1 = __webpack_require__(705);
	var react_select_1 = __webpack_require__(688);
	var states_1 = __webpack_require__(683);
	var underscore_1 = __webpack_require__(540);
	var moment = __webpack_require__(556);
	var initialpersonData = {};
	var editpersonmodal = null;
	var EditPerson = (function (_super) {
	    __extends(EditPerson, _super);
	    function EditPerson() {
	        _super.call(this);
	        this.state = {
	            errors: {},
	            initialQuoteSubmittedOnce: false
	        };
	    }
	    EditPerson.prototype.componentWillUnmount = function () {
	        if (editpersonmodal != null)
	            editpersonmodal.removeEventListener("keydown", this.keyDowneditpersonmodal.bind(this), false);
	        editpersonmodal = null;
	    };
	    EditPerson.prototype.keyDowneditpersonmodal = function (e) {
	        var keyCode = e.keyCode;
	        var isModalPopup = document.querySelector('div[role="dialog"].fade.in');
	        if (keyCode == 13 && isModalPopup != null) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                this.submitEditForm();
	            }
	        }
	    };
	    EditPerson.prototype.handleChange = function (personIndex, key, val) {
	        var _this = this;
	        this.setState((_a = {},
	            _a[key] = val,
	            _a
	        ));
	        if (this.state.initialQuoteSubmittedOnce) {
	            setTimeout(function () {
	                _this.validateQuoteForm();
	            }, 100);
	        }
	        var _a;
	    };
	    EditPerson.prototype.onDateInputChange = function (year, month, date) {
	        this.setState({ year: year, month: month, date: date });
	        var momentDate = moment(new Date(month + "/" + date + "/" + year));
	        if (momentDate.isValid()) {
	            this.onDateChange("s_birthDate", month + "/" + date + "/" + year);
	        }
	    };
	    EditPerson.prototype.validateQuoteForm = function () {
	        var result = true;
	        var errors = {};
	        var _a = this.state, s_birthDate = _a.s_birthDate, s_gender = _a.s_gender, state = _a.state, smoke = _a.smoke, health = _a.health, name = _a.name;
	        var s_birthDateError = !(s_birthDate && moment(s_birthDate).format("YYYY-MM-DD").length > 0);
	        var s_genderError = !(s_gender == 1 || s_gender == 2);
	        var stateError = !(state && state.length > 0);
	        var smokeError = !(smoke == "Yes" || smoke == "No");
	        var healthError = !(health);
	        var nameError = !(name && String.prototype.trim.call(name).length > 0);
	        errors = {
	            s_birthDateError: s_birthDateError,
	            s_genderError: s_genderError,
	            stateError: stateError,
	            smokeError: smokeError,
	            healthError: healthError,
	            nameError: nameError
	        };
	        result = result && !(s_birthDateError || s_genderError || stateError || smokeError || healthError || nameError);
	        this.setState({
	            errors: errors,
	            initialQuoteSubmittedOnce: true
	        });
	        return result;
	    };
	    EditPerson.prototype.onDateChange = function (key, value) {
	        var _this = this;
	        this.setState((_a = {},
	            _a[key] = ((value == null) ? null : moment(value)),
	            _a.formattedDate = ((value == null) ? null : moment(value).format("MM/DD/YYYY")),
	            _a
	        ));
	        this.handleChange(this.props.personIndex, key, value);
	        if (this.state.initialQuoteSubmittedOnce) {
	            setTimeout(function () {
	                _this.validateQuoteForm();
	            }, 100);
	        }
	        var _a;
	    };
	    EditPerson.prototype.onKeyDown = function (e) {
	        if (e.keyCode == 13) {
	            if (e.target.value && e.target.value.length == 10) {
	            }
	            else {
	                e.preventDefault();
	                e.stopPropagation();
	            }
	        }
	    };
	    EditPerson.prototype.onChangeRaw = function (e) {
	        var parentClass = ".edit-modal-container";
	        if (this.previousDateVal && this.previousDateVal.length > e.target.value.length) {
	            this.previousDateVal = e.target.value;
	            return;
	        }
	        if (e.target.value) {
	            var val = e.target.value;
	            if (val.length == 1) {
	                if (isNaN(val) || parseInt(val) > 1) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = "";
	                }
	                ;
	            }
	            else if (val.length == 2) {
	                if (isNaN(val) || parseInt(val) > 12) {
	                    val = val.substr(0, 1);
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val;
	                }
	                else {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val + "/";
	                }
	            }
	            else if (val.length == 4) {
	                var tempVal = val.substr(3, 1);
	                var monthVal = parseInt(val.substr(0, 2));
	                var maxVal = 3;
	                if (monthVal == 2) {
	                    maxVal = 2;
	                }
	                if (isNaN(tempVal) || parseInt(tempVal) > maxVal) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 3);
	                }
	                else {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val;
	                }
	            }
	            else if (val.length == 5) {
	                var tempVal = val.substr(3, 2);
	                var maxVal = 31;
	                var monthVal = parseInt(val.substr(0, 2));
	                if (monthVal == 4 || monthVal == 6 || monthVal == 9 || monthVal == 11) {
	                    maxVal = 30;
	                }
	                else if (monthVal == 2) {
	                    maxVal = 29;
	                }
	                if (isNaN(tempVal) || parseInt(tempVal) > maxVal) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 4);
	                }
	                else {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val + "/";
	                }
	            }
	            else if (val.length == 7) {
	                document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val;
	                var tempVal = val.substr(6, 1);
	                if (isNaN(tempVal) || !(parseInt(tempVal) >= 1 && parseInt(tempVal) <= 2)) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 6);
	                }
	            }
	            else if (val.length == 8) {
	                var tempVal = val.substr(6, 2);
	                if (isNaN(tempVal) || !(parseInt(tempVal) >= 19 && parseInt(tempVal) <= 20)) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 7);
	                }
	            }
	            else if (val.length == 9) {
	                var tempVal = val.substr(6, 3);
	                if (isNaN(tempVal)) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 8);
	                }
	            }
	            else if (val.length == 10) {
	                var tempVal = val.substr(6, 4);
	                if (isNaN(tempVal)) {
	                    document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 9);
	                }
	            }
	            else if (val.length > 10) {
	                var tempVal = val.substr(6, 4);
	                document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value = val.substring(0, 10);
	            }
	            this.previousDateVal = document.querySelector(parentClass + " .react-datepicker__input-container").getElementsByTagName("input")[0].value;
	        }
	    };
	    EditPerson.prototype.componentWillReceiveProps = function (nextProps) {
	        if (((this.props.editablePerson == undefined || underscore_1.isEmpty(this.props.editablePerson))) && !underscore_1.isEmpty(nextProps.editablePerson)) {
	            initialpersonData = underscore_1.extend({}, nextProps.editablePerson);
	            initialpersonData.s_birthDate = moment(initialpersonData.s_birthDate);
	        }
	        if (nextProps.showModalEditPerson && editpersonmodal == null) {
	            var current = this;
	            setTimeout(function (current) {
	                var modal = document.querySelector('div[role="dialog"].fade.in');
	                if (modal) {
	                    editpersonmodal = modal;
	                    editpersonmodal.addEventListener("keydown", current.keyDowneditpersonmodal.bind(current), false);
	                }
	            }, 200, current);
	        }
	        if (!underscore_1.isEmpty(nextProps.editablePerson)) {
	            var person = underscore_1.extend({}, nextProps.editablePerson);
	            person.s_birthDate = moment(person.s_birthDate);
	            this.setState(person);
	        }
	    };
	    EditPerson.prototype.submitEditForm = function () {
	        var newState = underscore_1.extend({}, this.state);
	        var oldState = underscore_1.extend({}, initialpersonData);
	        if (!underscore_1.isEqual(newState, oldState)) {
	            if (this.validateQuoteForm()) {
	                this.props.handleChange(this.state, true);
	                this.props.onCloseModal();
	            }
	        }
	        else {
	            this.props.onCloseModal();
	        }
	    };
	    EditPerson.prototype.render = function () {
	        var _this = this;
	        var errors = this.state.errors;
	        var personIndex = this.props.personIndex;
	        var toolTipStyles = {
	            wrapper: {
	                marginLeft: "15px",
	                top: "5px",
	                zIndex: "none"
	            },
	            content: {
	                background: 'none',
	                borderRadius: '10px',
	                fontSize: "12px",
	                color: "#ffffff",
	                whiteSpace: "normal",
	                padding: '.3em 5px',
	            },
	            tooltip: {
	                borderRadius: '10px',
	                width: "109px",
	                background: 'rgba(0, 0, 0, 0.5)'
	            },
	            arrow: {
	                borderTop: 'solid rgba(0, 0, 0, 0.5) 5px'
	            },
	            gap: {}
	        };
	        var statesObjects = states_1.getStateObjects();
	        var healthRatingObjects = [
	            { value: "Excellent", label: "Excellent" },
	            { value: "Very Good", label: "Very Good" },
	            { value: "Good", label: "Good" },
	            { value: "Fair", label: "Fair" }
	        ];
	        var toolTipStylesBirthData = JSON.parse(JSON.stringify(toolTipStyles));
	        toolTipStylesBirthData.wrapper.top = "0px";
	        var toolTipStylesTobaccoUsage = JSON.parse(JSON.stringify(toolTipStyles));
	        toolTipStylesTobaccoUsage.tooltip.width = "250px";
	        toolTipStylesTobaccoUsage.wrapper.top = "0px";
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, bsSize: "small", show: this.props.showModalEditPerson, className: "edit-modal-container", onHide: this.props.onCloseModal}, React.createElement(react_bootstrap_1.Modal.Header, {closeButton: true}, "Applicant " + (personIndex + 1)), React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, style: { marginBottom: "11px" }, className: "person-name-container"}, React.createElement(textInput_1.default, {name: "first-applicant-name-" + personIndex, label: "Name", placeholder: "Name", value: this.state.name, onChange: function (e) {
	            _this.handleChange(personIndex, "name", e.target.value);
	        }}), errors.nameError && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error", style: { paddingLeft: "0px" }}, "Please enter applicant name.")), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text"}, "Gender"), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { paddingRight: "22px", marginBottom: "20px" }, className: "person-gender-container"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.handleChange(personIndex, "s_gender", "1");
	        }}, React.createElement("input", {type: "radio", name: "person_s_gender_" + personIndex, checked: this.state.s_gender == "1"}), React.createElement("span", null), React.createElement("label", {htmlFor: "person_s_gender_" + personIndex}, " Male ")), React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.handleChange(personIndex, "s_gender", "2");
	        }}, React.createElement("input", {type: "radio", name: "person_s_gender_" + personIndex, checked: this.state.s_gender == "2"}), React.createElement("span", null), React.createElement("label", {htmlFor: "person_s_gender_" + personIndex}, " Female "))), errors.s_genderError && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error", style: { paddingLeft: "0px" }}, "Please select gender."))), React.createElement(react_bootstrap_1.Row, {style: { marginBottom: "27px", marginLeft: "-15px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text", style: { marginTop: "0px", marginBottom: "3px" }}, "Birth date"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "birth-date-picker-container edit-birth-date-picker-container"}, React.createElement("span", {className: "test-class"}), React.createElement(react_bootstrap_1.FormGroup, {controlId: "change_handler_" + this.props.personIndex}, React.createElement(react_bootstrap_1.ControlLabel, null, React.createElement("div", {className: "custom-date-picker-container"}, React.createElement("span", {className: "custom-date-picker", onClick: this.props.onClick}, React.createElement("img", {src: "../images/calendar.svg"})))), React.createElement("div", {style: { float: 'left' }}, React.createElement(react_datepicker_1.default, {selected: this.state.s_birthDate, onChange: function (date) {
	            _this.onDateChange("s_birthDate", date);
	        }, showMonthDropdown: true, showYearDropdown: true, dropdownMode: "select", placeholderText: "MM/DD/YYYY", onChangeRaw: this.onChangeRaw.bind(this), minDate: moment().subtract(120, "year"), maxDate: moment().add(0, "month"), onKeyDown: this.onKeyDown.bind(this)})))), errors.s_birthDateError && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error"}, "Please select birth date.")), React.createElement(react_bootstrap_1.Row, {style: { marginBottom: "12px", marginLeft: "-15px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text", style: { marginBottom: "2px" }}, "State"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-address-input"}, React.createElement(react_select_1.default, {name: "form-field-name1", options: statesObjects, value: this.state.state, onChange: function (stateObj) {
	            _this.handleChange(personIndex, "state", stateObj.value);
	        }}), errors.stateError && React.createElement(react_bootstrap_1.Col, {style: { paddingLeft: "0px" }, sm: 12, className: "c-subheader-text error"}, "Please select state."))), React.createElement(react_bootstrap_1.Row, {style: { marginBottom: "11px", marginLeft: "-15px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text c-subheader-overall-health", style: { marginTop: "15px" }}, "How would you rate your overall health?"), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { marginBottom: "10px", marginTop: "6px" }}, React.createElement(react_select_1.default, {name: "form-field-name-" + personIndex, options: healthRatingObjects, value: this.state.health, onChange: function (healthObj) {
	            _this.handleChange(personIndex, "health", healthObj.value);
	        }}), React.createElement("div", {style: { display: 'inline-block', float: "left" }}, React.createElement(react_lightweight_tooltip_1.Tooltip, {content: "How would you rate your overall health?", styles: toolTipStyles}, React.createElement("img", {style: { marginBottom: "7px" }, src: "../images/question-mark.svg"}))), errors.person1_healthError && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error"}, "Please select your person1_health status."))), React.createElement(react_bootstrap_1.Row, {style: { marginBottom: "25px", marginLeft: "-15px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text", style: { marginTop: "5px" }}, React.createElement("span", null, "Tobacco use "), React.createElement("div", {style: { display: 'inline-block' }}, React.createElement(react_lightweight_tooltip_1.Tooltip, {content: "If you use of any tobacco-based products, e-cigarettes, vaping, or marijuana you are a tobacco user", styles: toolTipStylesTobaccoUsage}, React.createElement("img", {style: { marginBottom: "0px" }, src: "../images/question-mark.svg"})))), React.createElement(react_bootstrap_1.Col, {sm: 12, style: { paddingRight: "22px" }, className: "person-tobacco-container"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.handleChange(personIndex, "smoke", "Yes");
	        }}, React.createElement("input", {type: "radio", name: "person1_smoke_" + personIndex, checked: this.state.smoke == "Yes"}), React.createElement("span", null), React.createElement("label", null, " Yes ")), React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.handleChange(personIndex, "smoke", "No");
	        }}, React.createElement("input", {type: "radio", name: "person1_smoke_" + personIndex, checked: this.state.smoke == "No"}), React.createElement("span", null), React.createElement("label", null, " No "))), errors.smokeError && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error", style: { marginTop: "0px", paddingLeft: "0px" }}, "Please indicate whether or not use tobacco products."))), React.createElement("div", null, React.createElement(react_bootstrap_1.Col, {style: { marginLeft: "-20px", marginRight: "-20px", marginBottom: "-15px", borderRadius: "5px!important" }}, React.createElement(react_bootstrap_1.Button, {style: { border: "solid 1px #4584c0" }, className: "c-button-default", onClick: function () {
	            _this.submitEditForm();
	        }}, "SAVE CHANGES"))))));
	    };
	    return EditPerson;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = EditPerson;


/***/ }),
/* 906 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var NoProducts = (function (_super) {
	    __extends(NoProducts, _super);
	    function NoProducts() {
	        _super.call(this);
	    }
	    NoProducts.prototype.render = function () {
	        var noOfPersons = this.props.noOfPersons;
	        var personsContainerWidth = this.props.noOfPersons == 2 ? 6 : 12;
	        return (React.createElement(react_bootstrap_1.Col, {sm: personsContainerWidth, className: "no-product-outer-container"}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "no-product-container"}, React.createElement("div", {className: "inner-no-product-container"}, React.createElement(react_bootstrap_1.Row, {className: "", style: { fontSize: "26px", color: "#999999" }}, "No products available"), React.createElement(react_bootstrap_1.Row, {style: { fontSize: "13px", color: "#999999" }}, "We're sorry, we couldn't find any eligible products for you.")))));
	    };
	    return NoProducts;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = NoProducts;


/***/ }),
/* 907 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var PersonInfo_1 = __webpack_require__(904);
	var subheader_1 = __webpack_require__(681);
	var Plan_1 = __webpack_require__(908);
	var react_router_1 = __webpack_require__(184);
	var EditPerson_1 = __webpack_require__(905);
	var Riders_1 = __webpack_require__(984);
	var react_select_1 = __webpack_require__(688);
	var ScrollToTopOnMount_1 = __webpack_require__(711);
	var PlansPage = (function (_super) {
	    __extends(PlansPage, _super);
	    function PlansPage() {
	        var _this = this;
	        _super.call(this);
	        this.state = {};
	        this.openEditPersonModal = function (person, personIndex) {
	            _this.props.openEditPersonModal(person, personIndex);
	        };
	    }
	    PlansPage.prototype.componentWillMount = function () {
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            var basePath = this.props.location.pathname.indexOf("agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            var queryParams = this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	            window.location.href = basePath + queryParamsString;
	        }
	    };
	    PlansPage.prototype.componentDidMount = function () {
	        var p;
	        p = [
	            {
	                value: "Monthly",
	                label: "Monthly"
	            },
	            {
	                value: "Quarterly",
	                label: "Quarterly"
	            },
	            {
	                value: "Semi-Annual",
	                label: "Semi-Annual"
	            },
	            {
	                value: "Annual",
	                label: "Annual"
	            }
	        ];
	        this.setState({
	            paymentSchedules: p
	        });
	        this.onPaymentTypeChange(p[0]);
	    };
	    PlansPage.prototype.selectProduct = function (product) {
	        this.setState({
	            productId: product.ProductID
	        });
	    };
	    PlansPage.prototype.onPaymentTypeChange = function (ob) {
	        this.setState({
	            premium_type: ob.label,
	            selectedPaymentType: ob
	        });
	    };
	    PlansPage.prototype.submitPlansForm = function (personIndex, data, successCb, isCalledFromSlider) {
	        var _this = this;
	        var persons = [];
	        if (true) {
	            var personOne = JSON.parse(JSON.stringify(this.props.persons[personIndex]));
	            personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	            personOne.sPlanID = data[0].plan.PlanID;
	            personOne.sProductID = data[0].productId;
	            personOne.sFaceAmount = data[0].sFaceAmount;
	            if (data[0].plan.SpwlFlag == "1") {
	                personOne.sFaceAmount = 0;
	                personOne.sPremiumAmount = data[0].sFaceAmount;
	                personOne.sWP = "1";
	            }
	            else {
	                personOne.sWP = "0";
	            }
	            personOne.sClassNum = "2";
	            personOne.sDividendNum = "1";
	            personOne.duration = data[0].plan && data[0].plan.PlanName && data[0].plan.PlanName.split(" ")[0] ? data[0].plan.PlanName.split(" ")[0] : "";
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                if (personIndex == 0) {
	                    persons[0] = personOne;
	                    persons[1] = this.props.persons[1];
	                }
	                else {
	                    persons[0] = this.props.persons[0];
	                    persons[1] = personOne;
	                }
	            }
	            this.setState({
	                submittingPlansFromPlan: true
	            });
	            if (!isCalledFromSlider || this.props.persons[personIndex].sProductID == data[0].productId) {
	                setTimeout(function () {
	                    _this.props.setPersonsData(persons);
	                });
	            }
	            setTimeout(function () {
	                _this.props.submitPlansForm(persons).then(function () {
	                    if (_this.props.premiums && _this.props.premiums.LOGIN_URL && _this.props.premiums.LOGIN_URL.length > 0) {
	                        window.location.href = _this.props.premiums.LOGIN_URL;
	                        return;
	                    }
	                    if (_this.props.premiums && _this.props.premiums.redirect_url && _this.props.premiums.redirect_url.length > 0) {
	                        window.location.href = _this.props.premiums.redirect_url;
	                        return;
	                    }
	                    if (successCb) {
	                        successCb();
	                    }
	                    _this.setState({
	                        submittingPlansFromPlan: false
	                    });
	                    console.log("sdfds");
	                }).catch(function () {
	                    if (_this.props.premiums && _this.props.premiums.LOGIN_URL && _this.props.premiums.LOGIN_URL.length > 0) {
	                        window.location.href = _this.props.premiums.LOGIN_URL;
	                        return;
	                    }
	                    if (_this.props.premiums && _this.props.premiums.redirect_url && _this.props.premiums.redirect_url.length > 0) {
	                        window.location.href = _this.props.premiums.redirect_url;
	                        return;
	                    }
	                    _this.setState({
	                        submittingPlansFromPlan: false
	                    });
	                    _this.submmitedProductForm = false;
	                });
	            }, 10);
	        }
	        else {
	            if (successCb) {
	                successCb();
	            }
	        }
	    };
	    PlansPage.prototype.setPlanFormSubmissionErrorMsg = function () {
	        if (this.productSubmissionBtnClicked) {
	            var errorMsg = null;
	            if (this.props.noOfPersons == 2) {
	                if (!(this.state.productIdPlan0)) {
	                    if (!(this.state.productIdPlan1)) {
	                        errorMsg = "Please select a plan for each applicant";
	                    }
	                    else {
	                        errorMsg = "Please select a plan for applicant 1";
	                    }
	                }
	                else {
	                    if (!(this.state.productIdPlan1)) {
	                        errorMsg = "Please select a plan for applicant 2";
	                    }
	                }
	            }
	            else {
	                if (!(this.state.productIdPlan0)) {
	                    errorMsg = "Please select one plan";
	                }
	            }
	            this.setState({
	                productSelectionErrorMsg: errorMsg
	            });
	        }
	    };
	    PlansPage.prototype.validatePlansSelections = function () {
	        if (this.props.noOfPersons == 2) {
	            return (this.state.productIdPlan0 && this.state.productIdPlan1);
	        }
	        else {
	            return this.state.productIdPlan0;
	        }
	    };
	    PlansPage.prototype.redirectToProductPage = function () {
	        var basePath = this.props.location.pathname.indexOf("agent") >= 0 || this.props.is_agent ? "/agent/" : "/";
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        react_router_1.browserHistory.push(basePath + "products" + queryParamsString);
	    };
	    PlansPage.prototype.redirectToNextSteps = function (shouldNotRedirect) {
	        var _this = this;
	        this.productSubmissionBtnClicked = true;
	        if (this.validatePlansSelections()) {
	            var persons = [];
	            var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	            if (!(this.props.premiums && this.props.premiums[0] && this.props.premiums[0][this.state.productIdPlan0] && this.props.premiums[0][this.state.productIdPlan0].Plan)) {
	                return;
	            }
	            if (this.props.premiums && this.props.premiums[0] && this.props.premiums[0][this.state.productIdPlan0] && this.props.premiums[0][this.state.productIdPlan0].Plan && this.props.premiums[0][this.state.productIdPlan0].Plan.SpwlFlag != "1") {
	                if (this.props.premiums && this.props.premiums[0] && this.props.premiums[0][this.state.productIdPlan0] && this.props.premiums[0][this.state.productIdPlan0] && this.props.premiums[0][this.state.productIdPlan0] && this.props.premiums[0][this.state.productIdPlan0].Plan && this.props.premiums[0][this.state.productIdPlan0].Plan.Premium) {
	                    var amount = this.props.premiums[0][this.state.productIdPlan0].Plan.Premium[this.state.premium_type];
	                    amount = amount ? amount.split("$")[1].replace(",", "") : 0;
	                    var riderAmount = 0;
	                    personOne.sWP = 0;
	                    if (this.state.selectedRider0 && this.state.selectedRider0.Premium) {
	                        riderAmount = this.state.selectedRider0.Premium[this.state.premium_type] ? parseFloat(this.state.selectedRider0.Premium[this.state.premium_type].split("$")[1]) : 0;
	                        personOne.wp_premium = String(riderAmount);
	                        personOne.sWP = 1;
	                    }
	                    else {
	                        delete personOne.wp_premium;
	                        personOne.sWP = 0;
	                    }
	                    personOne.premium_amount = String(parseFloat(amount) + parseFloat(riderAmount));
	                    personOne.quote_premium = String(amount);
	                    personOne.premium_type = this.state.premium_type;
	                }
	                else {
	                    this.setState({
	                        showPremiumAmountNotpresentError: true
	                    });
	                    return;
	                }
	            }
	            else {
	                delete personOne.wp_premium;
	                delete personOne.quote_premium;
	                delete personOne.premium_amount;
	                delete personOne.premium_type;
	            }
	            this.setState({
	                showPremiumAmountNotpresentError: false
	            });
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	                if (!(this.props.premiums && this.props.premiums[1] && this.props.premiums[1][this.state.productIdPlan1] && this.props.premiums[1][this.state.productIdPlan1].Plan)) {
	                    return;
	                }
	                if (this.props.premiums && this.props.premiums[1] && this.props.premiums[1][this.state.productIdPlan1] && this.props.premiums[1][this.state.productIdPlan1].Plan && this.props.premiums[1][this.state.productIdPlan1].Plan.SpwlFlag != "1") {
	                    if (this.props.premiums && this.props.premiums[1] && this.props.premiums[1][this.state.productIdPlan1] && this.props.premiums[1][this.state.productIdPlan1] && this.props.premiums[1][this.state.productIdPlan1] && this.props.premiums[1][this.state.productIdPlan1].Plan && this.props.premiums[1][this.state.productIdPlan1].Plan.Premium) {
	                        var amount = this.props.premiums[1][this.state.productIdPlan1].Plan.Premium[this.state.premium_type];
	                        amount = amount ? parseFloat(amount.split("$")[1]) : 0;
	                        var riderAmount = 0;
	                        personTwo.sWP = 0;
	                        if (this.state.selectedRider1 && this.state.selectedRider1.Premium) {
	                            riderAmount = this.state.selectedRider1.Premium[this.state.premium_type] ? parseFloat(this.state.selectedRider1.Premium[this.state.premium_type].split("$")[1]) : 0;
	                            personTwo.wp_premium = String(riderAmount);
	                            personTwo.sWP = 1;
	                        }
	                        else {
	                            delete personTwo.wp_premium;
	                            personTwo.sWP = 0;
	                        }
	                        personTwo.premium_amount = String(parseFloat(amount) + parseFloat(riderAmount));
	                        personTwo.quote_premium = String(amount);
	                        personTwo.premium_type = this.state.premium_type;
	                    }
	                    else {
	                        this.setState({
	                            showPremiumAmountNotpresentError: true
	                        });
	                        return;
	                    }
	                }
	                else {
	                    delete personTwo.wp_premium;
	                    delete personTwo.quote_premium;
	                    delete personTwo.premium_amount;
	                    delete personTwo.premium_type;
	                }
	                persons.push(personTwo);
	                this.setState({
	                    showPremiumAmountNotpresentError: false
	                });
	            }
	            this.setState({
	                movingToFinalStep: true
	            });
	            this.props.setPersonsData(persons);
	            setTimeout(function () {
	                var queryParams = _this.props.location.query;
	                var queryParamsString = "?";
	                for (var k in queryParams) {
	                    if (queryParams[k]) {
	                        queryParamsString += k + "=" + queryParams[k] + "&";
	                    }
	                    else {
	                        queryParamsString += k + "&";
	                    }
	                }
	                queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                var basePath = _this.props.location.pathname.indexOf("agent") >= 0 || _this.props.is_agent ? "/agent/" : "/";
	                react_router_1.browserHistory.push(basePath + "next-steps" + queryParamsString);
	            }, 500);
	        }
	        else {
	            this.setPlanFormSubmissionErrorMsg();
	        }
	    };
	    PlansPage.prototype.handleEditChange = function (person) {
	        var _this = this;
	        this.props.handleEditChange(person);
	        setTimeout(function () {
	            _this.submitProductsFormOnEditPerson();
	        });
	    };
	    PlansPage.prototype.selectProductPlan = function (personIndex, productId) {
	        this.setState((_a = {},
	            _a["productIdPlan" + personIndex] = productId,
	            _a
	        ));
	        var self = this;
	        setTimeout(function () {
	            self.setPlanFormSubmissionErrorMsg();
	        });
	        var _a;
	    };
	    PlansPage.prototype.deleteProductSelection = function (person) {
	        delete person.duration;
	        delete person.sClassNum;
	        delete person.sDividendNum;
	        delete person.sFaceAmount;
	        delete person.sPlanID;
	        delete person.sProductID;
	        delete person.sWP;
	        person.selected_products = [];
	        return person;
	    };
	    PlansPage.prototype.submitProductsFormOnEditPerson = function () {
	        var _this = this;
	        var persons = [];
	        var personOne = underscore_1.extend({}, this.props.persons[0]);
	        personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	        personOne.applicant = "1";
	        personOne.sGender = personOne.s_gender;
	        personOne = this.deleteProductSelection(personOne);
	        persons.push(personOne);
	        if (this.props.noOfPersons == 2) {
	            var personTwo = underscore_1.extend({}, this.props.persons[1]);
	            personTwo.sBirthDate = moment(personTwo.s_birthDate).format("YYYY-MM-DD");
	            personTwo.applicant = "2";
	            personTwo.sGender = personTwo.s_gender;
	            personTwo = this.deleteProductSelection(personTwo);
	            persons.push(personTwo);
	        }
	        this.props.setPersonsData(persons);
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        this.props.submitQuoteForm(persons).then(function () {
	            var basePath = _this.props.location.pathname.indexOf("agent") >= 0 || _this.props.is_agent ? "/agent/" : "/";
	            react_router_1.browserHistory.push(basePath + "products" + queryParamsString);
	        }).catch(function () {
	            _this.submmitedProductForm = false;
	        });
	    };
	    PlansPage.prototype.shouldPremiumTypeText = function () {
	        var sProductID = this.state.productIdPlan0 || null;
	        var sProductID1 = this.state.productIdPlan1 || null;
	        return !(this.isSPWLProduct(this.props.premiums, 0, sProductID) || this.isSPWLProduct(this.props.premiums, 1, sProductID1));
	    };
	    PlansPage.prototype.isSPWLProduct = function (premiums, index, sProductID) {
	        return premiums && premiums[index] && premiums[index][sProductID] && premiums[index][sProductID].Plan && premiums[index][sProductID].Plan.SpwlFlag == 1;
	    };
	    PlansPage.prototype.getTotalPaymentAmount = function () {
	        var total = 0;
	        var sProductID = this.state.productIdPlan0 || null;
	        var sProductID1 = this.state.productIdPlan1 || null;
	        if (this.props.premiums && this.props.premiums[0] && this.props.premiums[0] && this.props.premiums[0][sProductID] && sProductID && this.state.premium_type) {
	            if (this.props.premiums[0][sProductID] && this.props.premiums[0][sProductID] && this.props.premiums[0][sProductID].Plan && this.props.premiums[0][sProductID].Plan.Premium) {
	                total = parseFloat(this.props.premiums[0][sProductID].Plan.Premium[this.state.premium_type].split("$")[1].replace(",", ""));
	            }
	            else if (this.isSPWLProduct(this.props.premiums, 0, sProductID) && this.props.premiums && this.props.premiums[0] && this.props.premiums[0][sProductID] && this.props.premiums[0][sProductID].Plan) {
	                total += parseFloat(this.props.premiums[0][sProductID].Plan.PremiumAmount);
	            }
	            if (this.state.selectedRider0) {
	                var riderAmount = this.state.selectedRider0.Premium[this.state.premium_type] ? parseFloat(this.state.selectedRider0.Premium[this.state.premium_type].split("$")[1]) : 0;
	                total += riderAmount;
	            }
	        }
	        if (this.props.premiums && this.props.premiums[1] && this.props.premiums[1] && this.props.premiums[1][sProductID1] && sProductID1 && this.state.premium_type) {
	            if (this.props.premiums[1][sProductID1] && this.props.premiums[1][sProductID1] && this.props.premiums[1][sProductID1].Plan && this.props.premiums[1][sProductID1].Plan.Premium) {
	                total += parseFloat(this.props.premiums[1][sProductID1].Plan.Premium[this.state.premium_type].split("$")[1].replace(",", ""));
	            }
	            else if (this.isSPWLProduct(this.props.premiums, 1, sProductID1) && this.props.premiums && this.props.premiums[1] && this.props.premiums[1][sProductID1] && parseFloat(this.props.premiums[1][sProductID1].Plan)) {
	                total += parseFloat(this.props.premiums[1][sProductID1].Plan.PremiumAmount);
	            }
	            if (this.state.selectedRider1) {
	                var riderAmount = this.state.selectedRider1.Premium[this.state.premium_type] ? parseFloat(this.state.selectedRider1.Premium[this.state.premium_type].split("$")[1]) : 0;
	                total += riderAmount;
	            }
	        }
	        total = "$" + String((Math.round(total * 100) / 100).toFixed(2)).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
	        if (total.split(".") && total.split(".")[1] && total.split(".")[1].length == 1) {
	            total += "0";
	        }
	        return total;
	    };
	    PlansPage.prototype.shouldShowTotal = function () {
	        if (!this.props.persons)
	            return true;
	        if (this.props.noOfPersons == 1) {
	            if (undefined != this.props.persons[0].selected_products && this.props.persons[0].selected_products.length == 1)
	                return true;
	            return this.state.productIdPlan0 && this.state.productIdPlan0.length > 0;
	        }
	        else {
	            return (this.state.productIdPlan0 && this.state.productIdPlan0.length > 0) ||
	                this.state.productIdPlan1 && this.state.productIdPlan1.length > 0;
	            if (undefined != this.props.persons[0].selected_products && this.props.persons[0].selected_products.length == 1) {
	                if (this.props.persons[1].selected_products.length == 1) {
	                    return true;
	                }
	                else {
	                    return this.state.productIdPlan1 && this.state.productIdPlan1.length > 0;
	                }
	            }
	            else {
	                if (undefined != this.props.persons[1].selected_products && this.props.persons[1].selected_products.length == 1) {
	                    return this.state.productIdPlan0 && this.state.productIdPlan0.length > 0;
	                }
	                return this.state.productIdPlan0 && this.state.productIdPlan0.length > 0 && this.state.productIdPlan1 && this.state.productIdPlan1.length > 0;
	            }
	        }
	    };
	    PlansPage.prototype.selectRider = function (rider, index, riderKey) {
	        if (this.state["selectedRiderKey" + index] == riderKey) {
	            this.setState((_a = {},
	                _a["selectedRider" + index] = null,
	                _a["selectedRiderKey" + index] = null,
	                _a
	            ));
	        }
	        else {
	            this.setState((_b = {},
	                _b["selectedRider" + index] = rider,
	                _b["selectedRiderKey" + index] = riderKey,
	                _b
	            ));
	        }
	        var _a, _b;
	    };
	    PlansPage.prototype.containsOnlySPWL = function () {
	        var containOnlySPWLProducts = false;
	        if (this.props.plans) {
	            if (this.props.noOfPersons == 2) {
	                if (this.props.plans[0] && this.props.plans[0].plans_data && this.props.plans[1] && this.props.plans[1].plans_data) {
	                    containOnlySPWLProducts = this.props.plans[0].plans_data.length == 1 && this.props.plans[0].plans_data[0].spwl_flag == 1 &&
	                        this.props.plans[1].plans_data.length == 1 && this.props.plans[1].plans_data[0].spwl_flag == 1;
	                }
	            }
	            else {
	                if (this.props.plans[0] && this.props.plans[0].plans_data) {
	                    containOnlySPWLProducts = this.props.plans[0].plans_data.length == 1 && this.props.plans[0].plans_data[0].spwl_flag == 1;
	                }
	            }
	        }
	        return containOnlySPWLProducts;
	    };
	    PlansPage.prototype.getPlansInOrder = function (plans) {
	        return plans.sort(function (a, b) {
	            return parseInt(a.PlanDisplayOrder) - parseInt(b.PlanDisplayOrder);
	        });
	    };
	    PlansPage.prototype.render = function () {
	        var _this = this;
	        var persons = this.props.persons;
	        persons = persons || [];
	        var self = this;
	        var personsContainerWidth = this.props.noOfPersons == 2 ? 4 : 8;
	        var individualPlanContainerWidth = this.props.noOfPersons == 2 ? 6 : 12;
	        var paymentSchedules = this.state.paymentSchedules;
	        var additionalPersonClass = this.props.noOfPersons == 2 ? "all-plan-person-info-container" : "";
	        return (React.createElement("div", {className: "product-pager-container"}, React.createElement(ScrollToTopOnMount_1.default, null), React.createElement(subheader_1.default, {location: this.props.location, products: this.props.products, plans: this.props.plans, premiums: this.props.premiums}), this.props.noOfPersons == 2 &&
	            React.createElement(react_bootstrap_1.Row, {className: "plans-product-header visible-xs"}, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-plans-product-text"}, "Selected Products")))), this.props.noOfPersons == 2 && !this.containsOnlySPWL() && React.createElement(react_bootstrap_1.Row, {className: "visible-xs"}, React.createElement(react_bootstrap_1.Col, {className: "c-center plan-selector-outer-container", style: { paddingLeft: "28px", paddingRight: "30px", marginBottom: "15px" }}, React.createElement(react_bootstrap_1.Row, {className: "plans-selector-container"}, React.createElement(react_bootstrap_1.Col, {sm: 6, className: "c-center", style: { paddingTop: "0px" }}, React.createElement(react_bootstrap_1.Col, {sm: 6, className: "payment-schedule-text", style: { paddingTop: "20px", paddingRight: "0px" }}, "Payment schedule"), React.createElement(react_bootstrap_1.Col, {sm: 6, className: "plan-schedule-container", style: { paddingTop: "10px", paddingLeft: "0px" }}, React.createElement(react_select_1.default, {name: "form-field-plans-3", options: paymentSchedules, value: this.state.premium_type, onChange: function (payment) {
	            _this.onPaymentTypeChange(payment);
	        }})))))), React.createElement(react_bootstrap_1.Row, {style: { backgroundColor: "rgb(247, 247, 247)" }}, React.createElement(react_bootstrap_1.Col, {className: "person-info-main-container container-max-width " + additionalPersonClass, style: { marginLeft: "auto", marginRight: "auto", float: "none" }}, this.props.noOfPersons >= 1 &&
	            React.createElement(PersonInfo_1.default, {person: persons[0], noOfPersons: this.props.noOfPersons, personIndex: 0, index: 0, openEditPersonModal: this.openEditPersonModal.bind(this)}), this.props.noOfPersons == 1 && React.createElement(react_bootstrap_1.Row, {className: "plans-product-header plans-product-header-below-personinfo visible-xs"}, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-plans-product-text"}, "Selected Products")))), this.props.noOfPersons == 1 && !this.containsOnlySPWL() && React.createElement(react_bootstrap_1.Row, {className: "visible-xs"}, React.createElement(react_bootstrap_1.Col, {className: "c-center plan-selector-outer-container", style: { paddingLeft: "28px", paddingRight: "30px", marginBottom: "15px" }}, React.createElement(react_bootstrap_1.Row, {className: "plans-selector-container plans-selector-container-below-personinfo"}, React.createElement(react_bootstrap_1.Col, {sm: 6, className: "c-center", style: { paddingTop: "0px" }}, React.createElement(react_bootstrap_1.Col, {sm: 6, className: "payment-schedule-text", style: { paddingTop: "20px", paddingRight: "0px" }}, "Payment schedule"), React.createElement(react_bootstrap_1.Col, {sm: 6, className: "plan-schedule-container", style: { paddingTop: "10px", paddingLeft: "0px" }}, React.createElement(react_select_1.default, {name: "form-field-plans-3", options: paymentSchedules, value: this.state.premium_type, onChange: function (payment) {
	            _this.onPaymentTypeChange(payment);
	        }})))))), React.createElement("div", {className: "hidden-xs"}, this.props.noOfPersons == 2 &&
	            React.createElement(PersonInfo_1.default, {person: persons[1], noOfPersons: this.props.noOfPersons, personIndex: 1, index: 1, openEditPersonModal: this.openEditPersonModal.bind(this)})))), React.createElement(react_bootstrap_1.Row, {className: "plans-product-header hidden-xs"}, React.createElement(react_bootstrap_1.Col, {className: "c-center plans-product-header-text-container container-max-width"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 7, className: "c-plans-product-text"}, "Selected Products"), React.createElement(react_bootstrap_1.Col, {sm: 5, className: "c-select-diff-product-link hidden-xs", onClick: this.redirectToProductPage.bind(this)}, "SELECT DIFFERENT PRODUCTS")))), !this.containsOnlySPWL() && React.createElement(react_bootstrap_1.Row, {className: "hidden-xs"}, React.createElement(react_bootstrap_1.Col, {className: "c-center plan-selector-outer-container container-max-width", style: { paddingLeft: "15px", paddingRight: "15px", marginBottom: "15px" }}, React.createElement(react_bootstrap_1.Row, {className: "plans-selector-container"}, React.createElement(react_bootstrap_1.Col, {lg: 6, sm: 10, md: 8, className: "c-center", style: { paddingTop: "0px" }}, React.createElement(react_bootstrap_1.Col, {sm: 6, className: "payment-schedule-text", style: { paddingTop: "20px", paddingRight: "30px", textAlign: "right" }}, "Payment schedule"), React.createElement(react_bootstrap_1.Col, {sm: 6, className: "plan-schedule-container", style: { paddingTop: "10px", paddingLeft: "0px" }}, React.createElement(react_select_1.default, {name: "form-field-plans-3", options: paymentSchedules, value: this.state.premium_type, onChange: function (payment) {
	            _this.onPaymentTypeChange(payment);
	        }})))))), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "c-center all-plans-main-container container-max-width"}, React.createElement(react_bootstrap_1.Col, {sm: individualPlanContainerWidth, className: "one-person-plan-container"}, this.props.noOfPersons >= 1 &&
	            underscore_1.map(this.getPlansInOrder(this.props.plans[0].plans_data), function (p) {
	                var pl = {
	                    plans_data: p
	                };
	                var premiums = _this.props.premiums && _this.props.premiums[0] && _this.props.premiums[0][p.product_id] ? _this.props.premiums[0][p.product_id] : {};
	                premiums = { plans_data: premiums };
	                return React.createElement(Plan_1.default, {plans: pl, submitPlansForm: self.submitPlansForm.bind(self), premiums: premiums, productIdPlan: self.state.productIdPlan0, noOfPersons: self.props.noOfPersons, selectedPaymentType: self.state.selectedPaymentType, selectProductPlan: self.selectProductPlan.bind(self), personIndex: 0, productInfo: self.props.products[0], person: persons[0], key: p.product_id + "0", shouldShowSelectProductBtn: self.props.plans[0].plans_data && self.props.plans[0].plans_data.length > 1});
	            })), React.createElement(react_bootstrap_1.Row, {style: { backgroundColor: "rgb(247, 247, 247)" }, className: "visible-xs mobile-second-person-info-in-plan-container"}, React.createElement(react_bootstrap_1.Col, {className: "person-info-main-container " + additionalPersonClass, style: { marginLeft: "auto", marginRight: "auto", float: "none" }}, this.props.noOfPersons == 2 &&
	            React.createElement(PersonInfo_1.default, {person: persons[1], noOfPersons: this.props.noOfPersons, personIndex: 1, index: 1, openEditPersonModal: this.openEditPersonModal.bind(this)}))), React.createElement(react_bootstrap_1.Col, {sm: individualPlanContainerWidth, className: "second-person-plan-container"}, this.props.noOfPersons == 2 &&
	            underscore_1.map(this.getPlansInOrder(this.props.plans[1].plans_data), function (p) {
	                var pl = {
	                    plans_data: p
	                };
	                var premiums = _this.props.premiums && _this.props.premiums[1] && _this.props.premiums[1][p.product_id] ? _this.props.premiums[1][p.product_id] : {};
	                premiums = { plans_data: premiums };
	                return React.createElement(Plan_1.default, {plans: pl, submitPlansForm: self.submitPlansForm.bind(self), premiums: premiums, person: persons[1], noOfPersons: self.props.noOfPersons, productIdPlan: self.state.productIdPlan1, selectedPaymentType: self.state.selectedPaymentType, personIndex: 1, productInfo: self.props.products[1], selectProductPlan: self.selectProductPlan.bind(self), key: p.product_id + "1", shouldShowSelectProductBtn: self.props.plans[1].plans_data && self.props.plans[1].plans_data.length > 1});
	            })))), this.props.premiums && this.props.premiums[0] &&
	            this.props.premiums[0][this.state.productIdPlan0] &&
	            this.props.premiums[0][this.state.productIdPlan0].Plan &&
	            this.props.premiums[0][this.state.productIdPlan0].Plan.Rider && React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, null, React.createElement(Riders_1.default, {person: persons[0], riders: this.props.premiums[0][this.state.productIdPlan0].Plan.Rider, index: 0, selectRider: this.selectRider.bind(this), premium_type: this.state.premium_type, selectedRider: this.state.selectedRider0}))), this.props.premiums && this.props.premiums[1] &&
	            this.props.premiums[1][this.state.productIdPlan1] &&
	            this.props.premiums[1][this.state.productIdPlan1].Plan &&
	            this.props.premiums[1][this.state.productIdPlan1].Plan.Rider && React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, null, React.createElement(Riders_1.default, {person: persons[1], riders: this.props.premiums[1][this.state.productIdPlan1].Plan.Rider, index: 1, selectRider: this.selectRider.bind(this), premium_type: this.state.premium_type, selectedRider: this.state.selectedRider1}))), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {xs: 12, className: "c-center plan-total-container visible-xs"}, React.createElement(react_bootstrap_1.Row, {className: "plans-selector-container"}, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center", style: { float: "right", marginRight: "15px" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 4, xs: 6, className: "plan-total-text"}, this.shouldPremiumTypeText() ? this.state.premium_type : "", " Total"), React.createElement(react_bootstrap_1.Col, {sm: 8, xs: 6, className: "plan-total-amount"}, this.getTotalPaymentAmount()))))), !this.containsOnlySPWL() && React.createElement(react_bootstrap_1.Col, {sm: 3, xs: 12, className: "c-center plan-total-container hidden-xs container-max-width"}, React.createElement(react_bootstrap_1.Row, {className: "plans-selector-container", style: { marginLeft: "0px" }}, React.createElement(react_bootstrap_1.Col, {md: 4, sm: 5, className: "", style: { float: "right", marginRight: "15px" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 7, md: 6, className: "plan-total-text"}, this.shouldPremiumTypeText() ? this.state.premium_type : "", " Total"), this.shouldShowTotal() && React.createElement(react_bootstrap_1.Col, {sm: 5, xs: 6, className: "plan-total-amount"}, this.getTotalPaymentAmount())))))), React.createElement(react_bootstrap_1.Row, {className: "plans-continue-to-next-steps-container"}, this.state.productSelectionErrorMsg && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "center", color: "red", paddingLeft: "0px", marginBottom: "15px" }, sm: 12, className: "c-subheader-text error"}, this.state.productSelectionErrorMsg), this.state.showPremiumAmountNotpresentError && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "center", color: "red", paddingLeft: "0px", marginBottom: "15px" }, sm: 12, className: "c-subheader-text error"}, "Something gone wrong. Please try again."), React.createElement(react_bootstrap_1.Col, {className: "continue-to-next-steps c-center", style: {}}, React.createElement("span", {className: "previous-btn-text hidden-xs", disabled: this.state.submittingPlansFromPlan, style: { marginTop: "0px", marginRight: "14px" }, onClick: function () {
	            _this.redirectToProductPage();
	        }}, "PREVIOUS"), React.createElement(react_bootstrap_1.Button, {disabled: this.state.submittingPlansFromPlan, style: { marginTop: "0px" }, className: "c-button-default circular hidden-xs", onClick: function () {
	            _this.redirectToNextSteps();
	        }}, "NEXT", this.state.movingToFinalStep && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}), this.state.submittingPlansFromPlan && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {disabled: this.state.submittingPlansFromPlan, className: "previous-btn-text c-button-default visible-xs ", onClick: function () {
	            _this.redirectToProductPage();
	        }, style: { backgroundColor: "#fb4d3d!important", color: "white", width: "100%", marginBottom: "15px" }}, "PREVIOUS", this.state.movingToFinalStep && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {disabled: this.state.submittingPlansFromPlan, style: { marginBottom: "15px" }, className: "c-button-default visible-xs", onClick: function () {
	            _this.redirectToNextSteps();
	        }}, "NEXT", this.state.movingToFinalStep && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}), this.state.submittingPlansFromPlan && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement(EditPerson_1.default, {showModalEditPerson: this.props.showModalEditPerson, onCloseModal: this.props.closeEditPersonModal.bind(this), editablePerson: this.props.editablePerson, personIndex: this.props.editablePersonIndex, handleChange: this.handleEditChange.bind(this)})));
	    };
	    return PlansPage;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        showModalEditPerson: state.quotes.showModalEditPerson,
	        plans: state.quotes.plans,
	        editablePerson: state.quotes.editablePerson,
	        editablePersonIndex: state.quotes.editablePersonIndex,
	        premiums: state.quotes.premiums,
	        is_agent: state.quotes.is_agent
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        submitQuoteForm: function (data) { return dispatch(Quote_1.submitQuoteForm(data)); },
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        openEditPersonModal: function (person, personIndex) {
	            return dispatch(Quote_1.openEditPersonModal(person, personIndex));
	        },
	        closeEditPersonModal: function () {
	            return dispatch(Quote_1.closeEditPersonModal());
	        },
	        submitPlansForm: function (data) {
	            return dispatch(Quote_1.submitPlansForm(data));
	        },
	        handleEditChange: function (person) {
	            return dispatch(Quote_1.handleEditChange(person));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(PlansPage);


/***/ }),
/* 908 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var react_select_1 = __webpack_require__(688);
	var underscore_1 = __webpack_require__(540);
	var rc_slider_1 = __webpack_require__(909);
	__webpack_require__(980);
	var react_raw_html_1 = __webpack_require__(739);
	var Plan = (function (_super) {
	    __extends(Plan, _super);
	    function Plan() {
	        _super.call(this);
	        this.state = {};
	        this.onFaceValChange.bind(this);
	        this.handleChange.bind(this);
	        this.stopSliderChanging.bind(this);
	        this.firstTime = true;
	    }
	    Plan.prototype.onPlanChange = function (key, obj) {
	        var sFaceAmount = this.state.sFaceAmount;
	        if (sFaceAmount >= parseInt(obj.FaceMin) && sFaceAmount <= parseInt(obj.FaceMax)) {
	            sFaceAmount = this.state.sFaceAmount;
	        }
	        else {
	            sFaceAmount = parseInt(obj.FaceMin);
	        }
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a.selectedPlan = obj,
	            _a.sFaceAmount = sFaceAmount,
	            _a
	        ));
	        this.props.submitPlansForm(this.props.personIndex, [{
	                plan: obj,
	                sFaceAmount: String(sFaceAmount),
	                productId: this.props.plans.plans_data.product_id
	            }], this.stopSliderChanging.bind(this));
	        var _a;
	    };
	    Plan.prototype.onFirstTimePlanChange = function (key, obj) {
	        var sFaceAmount = this.state.sFaceAmount;
	        if (sFaceAmount >= parseInt(obj.FaceMin) && sFaceAmount <= parseInt(obj.FaceMax)) {
	            sFaceAmount = this.state.sFaceAmount;
	        }
	        else {
	            sFaceAmount = parseInt(obj.FaceMin);
	        }
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a.selectedPlan = obj,
	            _a.sFaceAmount = sFaceAmount,
	            _a
	        ));
	        this.props.submitPlansForm(this.props.personIndex, [{
	                plan: obj,
	                sFaceAmount: String(sFaceAmount),
	                productId: this.props.plans.plans_data.product_id
	            }], this.stopSliderChanging.bind(this));
	        var _a;
	    };
	    Plan.prototype.onPaymentTypeChange = function (key, obj) {
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a.selectedPaymentType = obj,
	            _a.payment_amount = parseFloat((obj.amount).split("$")[1]),
	            _a
	        ));
	        this.props.onPaymentTypeChange(this.props.personIndex, obj);
	        var _a;
	    };
	    Plan.prototype.getProductName = function () {
	    };
	    Plan.prototype.getPlan = function (plansData) {
	        if (underscore_1.isEmpty(plansData.plans_list)) {
	            return {};
	        }
	        var plansList = plansData.plans_list;
	        if (plansData.plans_list.constructor.toString().indexOf("Array") == -1) {
	            plansList = [plansList];
	        }
	        ;
	        var plan = JSON.parse(JSON.stringify(plansList[0]));
	        var tenYearPlanLengthProducts = ["Vantis Velocity Term".toLowerCase(), "Vantis Velocity Term with ROP".toLowerCase()];
	        var straightLifeProducts = ["Vantis Velocity Whole Life".toLowerCase(), "Vantis Velocity Whole Life Plus".toLowerCase(), "Gauranteed Golden".toLowerCase()];
	        var productId = this.props.plans && this.props.plans.plans_data && this.props.plans.plans_data.product_id;
	        var productList = this.props.productInfo && this.props.productInfo.products_data && this.props.productInfo.products_data.products_list;
	        productList = productList || [];
	        var product = underscore_1.find(productList, function (product) {
	            return product.ProductID == productId;
	        });
	        var productName = product && product.ProductDisplayName;
	        for (var i = 0; i < plansList.length; i++) {
	            if (tenYearPlanLengthProducts.indexOf(productName) >= 0) {
	                plan = underscore_1.find(plansList, function (plan) {
	                    return "10 Year Level Term".toLowerCase() == plan.PlanDisplayName.toLowerCase();
	                });
	            }
	            else if (straightLifeProducts.indexOf(productName) >= 0) {
	                plan = underscore_1.find(plansList, function (plan) {
	                    return "Straight Life".toLowerCase() == plan.PlanDisplayName.toLowerCase();
	                });
	            }
	        }
	        if (underscore_1.isEmpty(plan)) {
	            plan = JSON.parse(JSON.stringify(plansList[0]));
	        }
	        return plan;
	    };
	    ;
	    Plan.prototype.componentWillReceiveProps = function (nextProps) {
	        var _this = this;
	        if (nextProps && nextProps.plans && nextProps.plans.plans_data) {
	            var plan = this.getPlan(nextProps.plans.plans_data);
	            if (!this.props.selectedPaymentType && nextProps.selectedPaymentType && plan) {
	                plan.value = plan.PlanID;
	                plan.label = plan.PlanDisplayName;
	                if (this.props.personIndex == 1 && this.firstTime) {
	                    this.firstTime = false;
	                    setTimeout(function () {
	                        _this.onPlanChange("sPlanID", plan);
	                    }, 300);
	                    return;
	                }
	                ;
	                this.onPlanChange("sPlanID", plan);
	            }
	        }
	    };
	    Plan.prototype.getAmountFormat = function (amount) {
	        var a = parseInt(amount);
	        if (a / 1000000 >= 1) {
	            return (a / 1000000) + "m";
	        }
	        else {
	            return (a / 1000) + "k";
	        }
	    };
	    Plan.prototype.getPlansDetailsForDropdown = function () {
	        if (underscore_1.isEmpty(this.props.plans) || underscore_1.isEmpty(this.props.plans.plans_data) || (underscore_1.isEmpty(this.props.plans.plans_data.plans_list))) {
	            return [];
	        }
	        var plans = JSON.parse(JSON.stringify(this.props.plans.plans_data.plans_list));
	        if (plans.constructor.toString().indexOf("Array") == -1) {
	            plans = [plans];
	        }
	        ;
	        var plansObj = [];
	        for (var i = 0; i < plans.length; i++) {
	            plans[i].value = plans[i].PlanID;
	            plans[i].label = plans[i].PlanDisplayName;
	            plansObj.push({
	                value: plans[i].PlanID,
	                label: plans[i].PlanDisplayName
	            });
	        }
	        return plans;
	    };
	    Plan.prototype.shouldShowPlanDropdowns = function () {
	        return this.getPlansDetailsForDropdown().length > 1;
	    };
	    Plan.prototype.getPaymentSchedules = function () {
	        if (underscore_1.isEmpty(this.props.premiums) || underscore_1.isEmpty(this.props.premiums.plans_data) || underscore_1.isEmpty(this.props.premiums.plans_data.Plan) || underscore_1.isEmpty(this.props.premiums.plans_data.Plan)) {
	            return [];
	        }
	        var paymentSchedules = JSON.parse(JSON.stringify(this.props.premiums.plans_data.Plan));
	        var sFaceAmount;
	        if (this.state.sFaceAmount == 0) {
	            if (this.state.selectedPlan && this.state.selectedPlan.FaceMin) {
	                sFaceAmount = this.state.selectedPlan.FaceMin;
	            }
	        }
	        else {
	            sFaceAmount = this.state.sFaceAmount;
	        }
	        var face = underscore_1.find(paymentSchedules, function (paymentSchedule) {
	            return (parseInt(paymentSchedule.FaceAmount) <= parseInt(sFaceAmount));
	        });
	        var p = [];
	        if (underscore_1.isEmpty(face)) {
	            face = paymentSchedules["Face1"];
	        }
	        if (face && face.Premium) {
	            underscore_1.each(face.Premium, function (k, v) {
	                var f = {};
	                f.value = v;
	                f.label = v;
	                f.amount = k;
	                p.push(f);
	            });
	        }
	        return p;
	    };
	    Plan.prototype.stopSliderChanging = function () {
	        var _this = this;
	        this.setState({
	            sliderSliding: false
	        });
	        if (!this.props.shouldShowSelectProductBtn) {
	            setTimeout(function () {
	                _this.props.selectProductPlan(_this.props.personIndex, _this.props.premiums.plans_data.ProductID);
	            }, 100);
	        }
	    };
	    Plan.prototype.handleChange = function (value) {
	        var sFaceAmount = parseInt(value);
	        if (sFaceAmount > parseInt(this.state.selectedPlan.FaceMax)) {
	            sFaceAmount = parseInt(this.state.selectedPlan.FaceMax);
	        }
	        this.setState({
	            sFaceAmount: sFaceAmount
	        });
	        var f = function () {
	            this.props.submitPlansForm(this.props.personIndex, [{
	                    plan: this.state.selectedPlan,
	                    sFaceAmount: sFaceAmount,
	                    productId: this.props.plans.plans_data.product_id
	                }], this.stopSliderChanging.bind(this));
	        }.bind(this);
	        setTimeout(f);
	    };
	    Plan.prototype.handleChangeForSlider = function (value) {
	        var sFaceAmount = parseInt(value);
	        if (sFaceAmount > parseInt(this.state.selectedPlan.FaceMax)) {
	            sFaceAmount = parseInt(this.state.selectedPlan.FaceMax);
	        }
	        this.setState({
	            sFaceAmount: sFaceAmount
	        });
	        var f = function () {
	            this.props.submitPlansForm(this.props.personIndex, [{
	                    plan: this.state.selectedPlan,
	                    sFaceAmount: sFaceAmount,
	                    productId: this.props.plans.plans_data.product_id
	                }], this.stopSliderChanging.bind(this), true);
	        }.bind(this);
	        setTimeout(f);
	    };
	    Plan.prototype.duringSliderChanging = function (value) {
	        var sFaceAmount = parseInt(value);
	        if (sFaceAmount > parseInt(this.state.selectedPlan.FaceMax)) {
	            sFaceAmount = parseInt(this.state.selectedPlan.FaceMax);
	        }
	        this.setState({
	            sFaceAmount: sFaceAmount,
	            sliderSliding: true
	        });
	    };
	    Plan.prototype.handleSliderChange = function (value) {
	        this.sFaceAmount = value;
	    };
	    Plan.prototype.onFaceValChange = function (key, value) {
	        this.setState((_a = {},
	            _a[key] = value,
	            _a
	        ));
	        var _a;
	    };
	    Plan.prototype.selectThisProduct = function () {
	        this.props.selectProductPlan(this.props.personIndex, this.props.premiums.plans_data.ProductID);
	        if (this.state.selectedPlan && this.state.sFaceAmount) {
	            this.props.submitPlansForm(this.props.personIndex, [{
	                    plan: this.state.selectedPlan,
	                    sFaceAmount: this.state.sFaceAmount,
	                    productId: this.props.plans.plans_data.product_id
	                }]);
	        }
	    };
	    Plan.prototype.getProductDisplayName = function () {
	        var productId = this.props.plans && this.props.plans.plans_data && this.props.plans.plans_data.product_id;
	        var productList = this.props.productInfo && this.props.productInfo.products_data && this.props.productInfo.products_data.products_list;
	        productList = productList || [];
	        var product = underscore_1.find(productList, function (product) {
	            return product.ProductID == productId;
	        });
	        return product && product.ProductDisplayName;
	    };
	    Plan.prototype.getProductImage = function () {
	        var productId = this.props.plans && this.props.plans.plans_data && this.props.plans.plans_data.product_id;
	        var productList = this.props.productInfo && this.props.productInfo.products_data && this.props.productInfo.products_data.products_list;
	        productList = productList || [];
	        var product = underscore_1.find(productList, function (product) {
	            return product.ProductID == productId;
	        });
	        return product && product.product_image;
	    };
	    Plan.prototype.isProductSPWL = function () {
	        return this.props.plans && this.props.plans.plans_data && this.props.plans.plans_data.spwl_flag == 1;
	    };
	    Plan.prototype.getFaceAmount = function (sFaceAmount) {
	        var faceAmount = sFaceAmount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
	        if (faceAmount.split(".") && faceAmount.split(".")[1] && faceAmount.split(".")[1].length == 1) {
	            faceAmount += "0";
	        }
	        return faceAmount;
	    };
	    Plan.prototype.getProductPlanInstructions = function () {
	        var msg = "";
	        if (this.props.plans && this.props.plans.plans_data && this.props.plans.plans_data.product_data &&
	            this.props.plans.plans_data.product_data.product_plan_instructions && this.props.plans.plans_data.product_data.product_plan_instructions.length > 0) {
	            msg = this.props.plans.plans_data.product_data.product_plan_instructions;
	        }
	        return msg;
	    };
	    Plan.prototype.render = function () {
	        var _this = this;
	        var personIndex = this.props.personIndex;
	        var plansObjs = this.getPlansDetailsForDropdown();
	        var personsContainerWidth = this.props.noOfPersons == 2 ? 6 : 12;
	        react_raw_html_1.default.addTag("mycooltag");
	        var product_image_name = this.getProductImage();
	        var product_image = window.staticRoot + "/assets/img/" + product_image_name;
	        return (React.createElement(react_bootstrap_1.Col, {sm: 12, className: "single-plan-container " + (this.props.noOfPersons == 2 ? "two-persons-plan-container" : "")}, React.createElement(react_bootstrap_1.Row, {className: "plan-details-container"}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-center"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 2, style: { textAlign: "center" }, className: "" + (this.props.noOfPersons == 2 ? "two_products_conainer_width" : "")}, React.createElement("img", {className: "plan-product-image hidden-xs " + product_image_name, src: "" + product_image})), React.createElement(react_bootstrap_1.Col, {sm: 9, className: "plan-product-info-text"}, React.createElement(react_bootstrap_1.Row, {className: "plan-product-name " + (window.location.pathname.indexOf("/agent") >= 0 ? "agent-page" : "")}, this.getProductDisplayName()), !(window.location.pathname.indexOf("/agent") >= 0) && React.createElement(react_bootstrap_1.Row, {className: "plan-sider-info-text1"}, React.createElement(react_raw_html_1.default.mycooltag, null, this.getProductPlanInstructions())))), React.createElement(react_bootstrap_1.Row, {className: "plan-sider-info-text"}, React.createElement(react_bootstrap_1.Col, {sm: 6, className: "plan-sider-coverage-container"}, React.createElement(react_bootstrap_1.Row, {className: "plan-coverage-container"}, (this.state.sFaceAmount && this.state.sFaceAmount != 0) ?
	            [React.createElement("span", {className: "s-face-amount", key: "1", style: { fontSize: "26px", textAlign: "right", color: "#009c91" }}, "$", this.getFaceAmount(this.state.sFaceAmount), " ")] : null, (this.state.sFaceAmount && this.state.sFaceAmount != 0) ?
	            [React.createElement("span", {key: "2", style: { fontSize: "14px", textAlign: "left", color: "#666666" }}, " of")] : null, this.isProductSPWL() ? React.createElement("span", {key: "3", style: { fontSize: "14px", textAlign: "left", color: "#666666" }}, " Single Premium ") : React.createElement("span", {key: "3", style: { fontSize: "14px", textAlign: "left", color: "#666666" }}, " Coverage ")), React.createElement(react_bootstrap_1.Row, null, this.state.selectedPlan &&
	            React.createElement(react_bootstrap_1.Col, {className: "plan-faceMin", xs: 2}, "$", this.getAmountFormat(this.state.selectedPlan.FaceMin)), this.state.selectedPlan &&
	            React.createElement(react_bootstrap_1.Col, {className: "plan-face-val-slider", xs: 8}, React.createElement(rc_slider_1.default, {min: parseInt(this.state.selectedPlan.slider_min), max: parseInt(this.state.selectedPlan.slider_max), step: parseInt(this.state.selectedPlan.slider_step_value) == 0 ? 1 : parseInt(this.state.selectedPlan.slider_step_value), onChange: this.duringSliderChanging.bind(this), onAfterChange: this.handleChangeForSlider.bind(this), trackStyle: { backgroundColor: '#ffffff', height: 10, border: "solid 1px #999999" }, handleStyle: {
	                height: 24,
	                width: 24,
	                marginLeft: -14,
	                marginTop: -9,
	                backgroundColor: "#009c91",
	                boxShadow: "0 2px 4px 0 rgba(0, 0, 0, 0.15)",
	                border: "solid 1px rgba(0, 0, 0, 0.75)"
	            }, railStyle: { backgroundColor: '#ffffff', border: "solid 1px #999999", height: 10 }})), this.state.selectedPlan &&
	            React.createElement(react_bootstrap_1.Col, {className: "plan-faceMax", xs: 2}, "$", this.getAmountFormat(this.state.selectedPlan.FaceMax)))), this.isProductSPWL() || !this.shouldShowPlanDropdowns() ? null : React.createElement(react_bootstrap_1.Col, {sm: 3, className: "plan-length-container"}, React.createElement(react_bootstrap_1.Row, {style: { marginTop: "16px", marginLeft: "5px" }, className: "plan-length-container-text"}, "Plan Choice"), React.createElement(react_bootstrap_1.Row, {className: "plan-length-container-selector"}, React.createElement(react_select_1.default, {name: "form-field-plans", options: plansObjs, value: this.state.sPlanID, onChange: function (stateObj) {
	            _this.onPlanChange("sPlanID", stateObj);
	        }}))), this.isProductSPWL() ? (this.isProductSPWL() ? React.createElement(react_bootstrap_1.Col, {sm: 6, className: "plan-length-container"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 6, className: "plan-length-container-text death-benefit-key-text"}, "Death Benefit"), React.createElement(react_bootstrap_1.Col, {sm: 6, className: "plan-length-container-selector death-benefit-key-value"}, this.props.premiums && this.props.premiums.plans_data && this.props.premiums.plans_data.Plan && this.props.premiums.plans_data.Plan.DeathBenefit))) : React.createElement(react_bootstrap_1.Col, {sm: 6, className: "plan-cost-container"}, React.createElement(react_bootstrap_1.Row, {style: { marginTop: "30px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12}, React.createElement(react_bootstrap_1.Col, {xs: 5, className: "", style: { marginTop: "6px" }}, "Coverage"), React.createElement(react_bootstrap_1.Col, {sm: 7, className: "plan-cost-amount"}, this.state.sliderSliding && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}), !this.state.sliderSliding && this.isProductSPWL() && "$", !this.state.sliderSliding && this.isProductSPWL() && this.state.sFaceAmount, !this.state.sliderSliding && !this.isProductSPWL() && this.props.selectedPaymentType && this.props.selectedPaymentType.label && this.props.premiums && this.props.premiums && this.props.premiums.plans_data && this.props.premiums.plans_data.Plan && this.props.premiums.plans_data.Plan && this.props.premiums.plans_data.Plan && this.props.premiums.plans_data.Plan.Premium && this.props.premiums.plans_data.Plan.Premium[this.props.selectedPaymentType.label]))))) : React.createElement(react_bootstrap_1.Col, {sm: 3, className: "plan-cost-container"}, React.createElement(react_bootstrap_1.Row, {style: { marginTop: "30px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12}, React.createElement(react_bootstrap_1.Col, {xs: 4, className: "plan-cost-text"}, "Cost"), React.createElement(react_bootstrap_1.Col, {sm: 4, className: "plan-cost-text-two-person"}, "Cost (billed ", this.props.selectedPaymentType && this.props.selectedPaymentType.label, ")"), React.createElement(react_bootstrap_1.Col, {sm: 4, className: "plan-cost-amount"}, this.state.sliderSliding && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}), !this.state.sliderSliding && this.props.selectedPaymentType && this.props.selectedPaymentType.label && this.props.premiums && this.props.premiums && this.props.premiums.plans_data && this.props.premiums.plans_data.Plan && this.props.premiums.plans_data.Plan && this.props.premiums.plans_data.Plan && this.props.premiums.plans_data.Plan.Premium && this.props.premiums.plans_data.Plan.Premium[this.props.selectedPaymentType.label]))))), this.props.shouldShowSelectProductBtn && this.props.productIdPlan != this.props.plans.plans_data.product_id && React.createElement(react_bootstrap_1.Row, {className: "select-this-product-container" + (this.props.productIdPlan == this.props.plans.plans_data.product_id ? " active" : ""), onClick: this.selectThisProduct.bind(this)}, "SELECT THIS PRODUCT"), this.props.shouldShowSelectProductBtn && this.props.productIdPlan == this.props.plans.plans_data.product_id && React.createElement(react_bootstrap_1.Row, {className: "select-this-product-container" + (this.props.productIdPlan == this.props.plans.plans_data.product_id ? " active" : ""), onClick: this.selectThisProduct.bind(this)}, "PRODUCT SELECTED")))));
	    };
	    return Plan;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Plan;


/***/ }),
/* 909 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createSliderWithTooltip = exports.Handle = exports.Range = undefined;
	
	var _Slider = __webpack_require__(910);
	
	var _Slider2 = _interopRequireDefault(_Slider);
	
	var _Range = __webpack_require__(936);
	
	var _Range2 = _interopRequireDefault(_Range);
	
	var _Handle = __webpack_require__(932);
	
	var _Handle2 = _interopRequireDefault(_Handle);
	
	var _createSliderWithTooltip = __webpack_require__(938);
	
	var _createSliderWithTooltip2 = _interopRequireDefault(_createSliderWithTooltip);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	_Slider2['default'].Range = _Range2['default'];
	_Slider2['default'].Handle = _Handle2['default'];
	_Slider2['default'].createSliderWithTooltip = _createSliderWithTooltip2['default'];
	exports['default'] = _Slider2['default'];
	exports.Range = _Range2['default'];
	exports.Handle = _Handle2['default'];
	exports.createSliderWithTooltip = _createSliderWithTooltip2['default'];

/***/ }),
/* 910 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _warning = __webpack_require__(189);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _Track = __webpack_require__(915);
	
	var _Track2 = _interopRequireDefault(_Track);
	
	var _createSlider = __webpack_require__(916);
	
	var _createSlider2 = _interopRequireDefault(_createSlider);
	
	var _utils = __webpack_require__(933);
	
	var utils = _interopRequireWildcard(_utils);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/* eslint-disable react/prop-types */
	var Slider = function (_React$Component) {
	  (0, _inherits3['default'])(Slider, _React$Component);
	
	  function Slider(props) {
	    (0, _classCallCheck3['default'])(this, Slider);
	
	    var _this = (0, _possibleConstructorReturn3['default'])(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props));
	
	    _this.onEnd = function () {
	      _this.setState({ dragging: false });
	      _this.removeDocumentEvents();
	      _this.props.onAfterChange(_this.getValue());
	    };
	
	    var defaultValue = props.defaultValue !== undefined ? props.defaultValue : props.min;
	    var value = props.value !== undefined ? props.value : defaultValue;
	
	    _this.state = {
	      value: _this.trimAlignValue(value),
	      dragging: false
	    };
	    if (process.env.NODE_ENV !== 'production') {
	      (0, _warning2['default'])(!('minimumTrackStyle' in props), 'minimumTrackStyle will be deprecate, please use trackStyle instead.');
	      (0, _warning2['default'])(!('maximumTrackStyle' in props), 'maximumTrackStyle will be deprecate, please use railStyle instead.');
	    }
	    return _this;
	  }
	
	  (0, _createClass3['default'])(Slider, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _props = this.props,
	          autoFocus = _props.autoFocus,
	          disabled = _props.disabled;
	
	      if (autoFocus && !disabled) {
	        this.focus();
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (!('value' in nextProps || 'min' in nextProps || 'max' in nextProps)) return;
	
	      var prevValue = this.state.value;
	      var value = nextProps.value !== undefined ? nextProps.value : prevValue;
	      var nextValue = this.trimAlignValue(value, nextProps);
	      if (nextValue === prevValue) return;
	
	      this.setState({ value: nextValue });
	      if (utils.isValueOutOfRange(value, nextProps)) {
	        this.props.onChange(nextValue);
	      }
	    }
	  }, {
	    key: 'onChange',
	    value: function onChange(state) {
	      var props = this.props;
	      var isNotControlled = !('value' in props);
	      if (isNotControlled) {
	        this.setState(state);
	      }
	
	      var changedValue = state.value;
	      props.onChange(changedValue);
	    }
	  }, {
	    key: 'onStart',
	    value: function onStart(position) {
	      this.setState({ dragging: true });
	      var props = this.props;
	      var prevValue = this.getValue();
	      props.onBeforeChange(prevValue);
	
	      var value = this.calcValueByPos(position);
	      this.startValue = value;
	      this.startPosition = position;
	
	      if (value === prevValue) return;
	
	      this.prevMovedHandleIndex = 0;
	
	      this.onChange({ value: value });
	    }
	  }, {
	    key: 'onMove',
	    value: function onMove(e, position) {
	      utils.pauseEvent(e);
	      var oldValue = this.state.value;
	
	      var value = this.calcValueByPos(position);
	      if (value === oldValue) return;
	
	      this.onChange({ value: value });
	    }
	  }, {
	    key: 'onKeyboard',
	    value: function onKeyboard(e) {
	      var valueMutator = utils.getKeyboardValueMutator(e);
	
	      if (valueMutator) {
	        utils.pauseEvent(e);
	        var state = this.state;
	        var oldValue = state.value;
	        var mutatedValue = valueMutator(oldValue, this.props);
	        var value = this.trimAlignValue(mutatedValue);
	        if (value === oldValue) return;
	
	        this.onChange({ value: value });
	      }
	    }
	  }, {
	    key: 'getValue',
	    value: function getValue() {
	      return this.state.value;
	    }
	  }, {
	    key: 'getLowerBound',
	    value: function getLowerBound() {
	      return this.props.min;
	    }
	  }, {
	    key: 'getUpperBound',
	    value: function getUpperBound() {
	      return this.state.value;
	    }
	  }, {
	    key: 'trimAlignValue',
	    value: function trimAlignValue(v) {
	      var nextProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	      var mergedProps = (0, _extends3['default'])({}, this.props, nextProps);
	      var val = utils.ensureValueInRange(v, mergedProps);
	      return utils.ensureValuePrecision(val, mergedProps);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;
	
	      var _props2 = this.props,
	          prefixCls = _props2.prefixCls,
	          vertical = _props2.vertical,
	          included = _props2.included,
	          disabled = _props2.disabled,
	          minimumTrackStyle = _props2.minimumTrackStyle,
	          trackStyle = _props2.trackStyle,
	          handleStyle = _props2.handleStyle,
	          tabIndex = _props2.tabIndex,
	          min = _props2.min,
	          max = _props2.max,
	          handleGenerator = _props2.handle;
	      var _state = this.state,
	          value = _state.value,
	          dragging = _state.dragging;
	
	      var offset = this.calcOffset(value);
	      var handle = handleGenerator({
	        className: prefixCls + '-handle',
	        prefixCls: prefixCls,
	        vertical: vertical,
	        offset: offset,
	        value: value,
	        dragging: dragging,
	        disabled: disabled,
	        min: min,
	        max: max,
	        index: 0,
	        tabIndex: tabIndex,
	        style: handleStyle[0] || handleStyle,
	        ref: function ref(h) {
	          return _this2.saveHandle(0, h);
	        }
	      });
	
	      var _trackStyle = trackStyle[0] || trackStyle;
	      var track = _react2['default'].createElement(_Track2['default'], {
	        className: prefixCls + '-track',
	        vertical: vertical,
	        included: included,
	        offset: 0,
	        length: offset,
	        style: (0, _extends3['default'])({}, minimumTrackStyle, _trackStyle)
	      });
	
	      return { tracks: track, handles: handle };
	    }
	  }]);
	  return Slider;
	}(_react2['default'].Component);
	
	Slider.propTypes = {
	  defaultValue: _propTypes2['default'].number,
	  value: _propTypes2['default'].number,
	  disabled: _propTypes2['default'].bool,
	  autoFocus: _propTypes2['default'].bool,
	  tabIndex: _propTypes2['default'].number
	};
	exports['default'] = (0, _createSlider2['default'])(Slider);
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 911 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(912);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }
	
	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ }),
/* 912 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(913), __esModule: true };

/***/ }),
/* 913 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(914);
	var $Object = __webpack_require__(288).Object;
	module.exports = function defineProperty(it, key, desc) {
	  return $Object.defineProperty(it, key, desc);
	};


/***/ }),
/* 914 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(286);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(296), 'Object', { defineProperty: __webpack_require__(292).f });


/***/ }),
/* 915 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var Track = function Track(props) {
	  var className = props.className,
	      included = props.included,
	      vertical = props.vertical,
	      offset = props.offset,
	      length = props.length,
	      style = props.style;
	
	
	  var positonStyle = vertical ? {
	    bottom: offset + '%',
	    height: length + '%'
	  } : {
	    left: offset + '%',
	    width: length + '%'
	  };
	
	  var elStyle = (0, _extends3['default'])({}, style, positonStyle);
	  return included ? _react2['default'].createElement('div', { className: className, style: elStyle }) : null;
	}; /* eslint-disable react/prop-types */
	exports['default'] = Track;
	module.exports = exports['default'];

/***/ }),
/* 916 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _objectWithoutProperties2 = __webpack_require__(365);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _defineProperty2 = __webpack_require__(917);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _get2 = __webpack_require__(918);
	
	var _get3 = _interopRequireDefault(_get2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	exports['default'] = createSlider;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _addEventListener = __webpack_require__(926);
	
	var _addEventListener2 = _interopRequireDefault(_addEventListener);
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _warning = __webpack_require__(189);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	var _Steps = __webpack_require__(930);
	
	var _Steps2 = _interopRequireDefault(_Steps);
	
	var _Marks = __webpack_require__(931);
	
	var _Marks2 = _interopRequireDefault(_Marks);
	
	var _Handle = __webpack_require__(932);
	
	var _Handle2 = _interopRequireDefault(_Handle);
	
	var _utils = __webpack_require__(933);
	
	var utils = _interopRequireWildcard(_utils);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function noop() {}
	
	function createSlider(Component) {
	  var _class, _temp;
	
	  return _temp = _class = function (_Component) {
	    (0, _inherits3['default'])(ComponentEnhancer, _Component);
	
	    function ComponentEnhancer(props) {
	      (0, _classCallCheck3['default'])(this, ComponentEnhancer);
	
	      var _this = (0, _possibleConstructorReturn3['default'])(this, (ComponentEnhancer.__proto__ || Object.getPrototypeOf(ComponentEnhancer)).call(this, props));
	
	      _this.onMouseDown = function (e) {
	        if (e.button !== 0) {
	          return;
	        }
	
	        var isVertical = _this.props.vertical;
	        var position = utils.getMousePosition(isVertical, e);
	        if (!utils.isEventFromHandle(e, _this.handlesRefs)) {
	          _this.dragOffset = 0;
	        } else {
	          var handlePosition = utils.getHandleCenterPosition(isVertical, e.target);
	          _this.dragOffset = position - handlePosition;
	          position = handlePosition;
	        }
	        _this.removeDocumentEvents();
	        _this.onStart(position);
	        _this.addDocumentMouseEvents();
	      };
	
	      _this.onTouchStart = function (e) {
	        if (utils.isNotTouchEvent(e)) return;
	
	        var isVertical = _this.props.vertical;
	        var position = utils.getTouchPosition(isVertical, e);
	        if (!utils.isEventFromHandle(e, _this.handlesRefs)) {
	          _this.dragOffset = 0;
	        } else {
	          var handlePosition = utils.getHandleCenterPosition(isVertical, e.target);
	          _this.dragOffset = position - handlePosition;
	          position = handlePosition;
	        }
	        _this.onStart(position);
	        _this.addDocumentTouchEvents();
	        utils.pauseEvent(e);
	      };
	
	      _this.onFocus = function (e) {
	        var _this$props = _this.props,
	            onFocus = _this$props.onFocus,
	            vertical = _this$props.vertical;
	
	        if (utils.isEventFromHandle(e, _this.handlesRefs)) {
	          var handlePosition = utils.getHandleCenterPosition(vertical, e.target);
	          _this.dragOffset = 0;
	          _this.onStart(handlePosition);
	          utils.pauseEvent(e);
	          if (onFocus) {
	            onFocus(e);
	          }
	        }
	      };
	
	      _this.onBlur = function (e) {
	        var onBlur = _this.props.onBlur;
	
	        _this.onEnd(e);
	        if (onBlur) {
	          onBlur(e);
	        }
	      };
	
	      _this.onMouseUp = function () {
	        if (_this.handlesRefs[_this.prevMovedHandleIndex]) {
	          _this.handlesRefs[_this.prevMovedHandleIndex].clickFocus();
	        }
	      };
	
	      _this.onMouseMove = function (e) {
	        if (!_this.sliderRef) {
	          _this.onEnd();
	          return;
	        }
	        var position = utils.getMousePosition(_this.props.vertical, e);
	        _this.onMove(e, position - _this.dragOffset);
	      };
	
	      _this.onTouchMove = function (e) {
	        if (utils.isNotTouchEvent(e) || !_this.sliderRef) {
	          _this.onEnd();
	          return;
	        }
	
	        var position = utils.getTouchPosition(_this.props.vertical, e);
	        _this.onMove(e, position - _this.dragOffset);
	      };
	
	      _this.onKeyDown = function (e) {
	        if (_this.sliderRef && utils.isEventFromHandle(e, _this.handlesRefs)) {
	          _this.onKeyboard(e);
	        }
	      };
	
	      _this.onClickMarkLabel = function (e, value) {
	        e.stopPropagation();
	        _this.onChange({ value: value });
	      };
	
	      _this.saveSlider = function (slider) {
	        _this.sliderRef = slider;
	      };
	
	      if (process.env.NODE_ENV !== 'production') {
	        var step = props.step,
	            max = props.max,
	            min = props.min;
	
	        (0, _warning2['default'])(step && Math.floor(step) === step ? (max - min) % step === 0 : true, 'Slider[max] - Slider[min] (%s) should be a multiple of Slider[step] (%s)', max - min, step);
	      }
	      _this.handlesRefs = {};
	      return _this;
	    }
	
	    (0, _createClass3['default'])(ComponentEnhancer, [{
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        // Snapshot testing cannot handle refs, so be sure to null-check this.
	        this.document = this.sliderRef && this.sliderRef.ownerDocument;
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        if ((0, _get3['default'])(ComponentEnhancer.prototype.__proto__ || Object.getPrototypeOf(ComponentEnhancer.prototype), 'componentWillUnmount', this)) (0, _get3['default'])(ComponentEnhancer.prototype.__proto__ || Object.getPrototypeOf(ComponentEnhancer.prototype), 'componentWillUnmount', this).call(this);
	        this.removeDocumentEvents();
	      }
	    }, {
	      key: 'getSliderStart',
	      value: function getSliderStart() {
	        var slider = this.sliderRef;
	        var rect = slider.getBoundingClientRect();
	
	        return this.props.vertical ? rect.top : rect.left;
	      }
	    }, {
	      key: 'getSliderLength',
	      value: function getSliderLength() {
	        var slider = this.sliderRef;
	        if (!slider) {
	          return 0;
	        }
	
	        var coords = slider.getBoundingClientRect();
	        return this.props.vertical ? coords.height : coords.width;
	      }
	    }, {
	      key: 'addDocumentTouchEvents',
	      value: function addDocumentTouchEvents() {
	        // just work for Chrome iOS Safari and Android Browser
	        this.onTouchMoveListener = (0, _addEventListener2['default'])(this.document, 'touchmove', this.onTouchMove);
	        this.onTouchUpListener = (0, _addEventListener2['default'])(this.document, 'touchend', this.onEnd);
	      }
	    }, {
	      key: 'addDocumentMouseEvents',
	      value: function addDocumentMouseEvents() {
	        this.onMouseMoveListener = (0, _addEventListener2['default'])(this.document, 'mousemove', this.onMouseMove);
	        this.onMouseUpListener = (0, _addEventListener2['default'])(this.document, 'mouseup', this.onEnd);
	      }
	    }, {
	      key: 'removeDocumentEvents',
	      value: function removeDocumentEvents() {
	        /* eslint-disable no-unused-expressions */
	        this.onTouchMoveListener && this.onTouchMoveListener.remove();
	        this.onTouchUpListener && this.onTouchUpListener.remove();
	
	        this.onMouseMoveListener && this.onMouseMoveListener.remove();
	        this.onMouseUpListener && this.onMouseUpListener.remove();
	        /* eslint-enable no-unused-expressions */
	      }
	    }, {
	      key: 'focus',
	      value: function focus() {
	        if (!this.props.disabled) {
	          this.handlesRefs[0].focus();
	        }
	      }
	    }, {
	      key: 'blur',
	      value: function blur() {
	        var _this2 = this;
	
	        if (!this.props.disabled) {
	          Object.keys(this.handlesRefs).forEach(function (key) {
	            if (_this2.handlesRefs[key] && _this2.handlesRefs[key].blur) {
	              _this2.handlesRefs[key].blur();
	            }
	          });
	        }
	      }
	    }, {
	      key: 'calcValue',
	      value: function calcValue(offset) {
	        var _props = this.props,
	            vertical = _props.vertical,
	            min = _props.min,
	            max = _props.max;
	
	        var ratio = Math.abs(Math.max(offset, 0) / this.getSliderLength());
	        var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
	        return value;
	      }
	    }, {
	      key: 'calcValueByPos',
	      value: function calcValueByPos(position) {
	        var pixelOffset = position - this.getSliderStart();
	        var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
	        return nextValue;
	      }
	    }, {
	      key: 'calcOffset',
	      value: function calcOffset(value) {
	        var _props2 = this.props,
	            min = _props2.min,
	            max = _props2.max;
	
	        var ratio = (value - min) / (max - min);
	        return ratio * 100;
	      }
	    }, {
	      key: 'saveHandle',
	      value: function saveHandle(index, handle) {
	        this.handlesRefs[index] = handle;
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _classNames;
	
	        var _props3 = this.props,
	            prefixCls = _props3.prefixCls,
	            className = _props3.className,
	            marks = _props3.marks,
	            dots = _props3.dots,
	            step = _props3.step,
	            included = _props3.included,
	            disabled = _props3.disabled,
	            vertical = _props3.vertical,
	            min = _props3.min,
	            max = _props3.max,
	            children = _props3.children,
	            maximumTrackStyle = _props3.maximumTrackStyle,
	            style = _props3.style,
	            railStyle = _props3.railStyle,
	            dotStyle = _props3.dotStyle,
	            activeDotStyle = _props3.activeDotStyle;
	
	        var _get$call = (0, _get3['default'])(ComponentEnhancer.prototype.__proto__ || Object.getPrototypeOf(ComponentEnhancer.prototype), 'render', this).call(this),
	            tracks = _get$call.tracks,
	            handles = _get$call.handles;
	
	        var sliderClassName = (0, _classnames2['default'])(prefixCls, (_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-with-marks', Object.keys(marks).length), (0, _defineProperty3['default'])(_classNames, prefixCls + '-disabled', disabled), (0, _defineProperty3['default'])(_classNames, prefixCls + '-vertical', vertical), (0, _defineProperty3['default'])(_classNames, className, className), _classNames));
	        return _react2['default'].createElement(
	          'div',
	          {
	            ref: this.saveSlider,
	            className: sliderClassName,
	            onTouchStart: disabled ? noop : this.onTouchStart,
	            onMouseDown: disabled ? noop : this.onMouseDown,
	            onMouseUp: disabled ? noop : this.onMouseUp,
	            onKeyDown: disabled ? noop : this.onKeyDown,
	            onFocus: disabled ? noop : this.onFocus,
	            onBlur: disabled ? noop : this.onBlur,
	            style: style
	          },
	          _react2['default'].createElement('div', {
	            className: prefixCls + '-rail',
	            style: (0, _extends3['default'])({}, maximumTrackStyle, railStyle)
	          }),
	          tracks,
	          _react2['default'].createElement(_Steps2['default'], {
	            prefixCls: prefixCls,
	            vertical: vertical,
	            marks: marks,
	            dots: dots,
	            step: step,
	            included: included,
	            lowerBound: this.getLowerBound(),
	            upperBound: this.getUpperBound(),
	            max: max,
	            min: min,
	            dotStyle: dotStyle,
	            activeDotStyle: activeDotStyle
	          }),
	          handles,
	          _react2['default'].createElement(_Marks2['default'], {
	            className: prefixCls + '-mark',
	            onClickLabel: disabled ? noop : this.onClickMarkLabel,
	            vertical: vertical,
	            marks: marks,
	            included: included,
	            lowerBound: this.getLowerBound(),
	            upperBound: this.getUpperBound(),
	            max: max,
	            min: min
	          }),
	          children
	        );
	      }
	    }]);
	    return ComponentEnhancer;
	  }(Component), _class.displayName = 'ComponentEnhancer(' + Component.displayName + ')', _class.propTypes = (0, _extends3['default'])({}, Component.propTypes, {
	    min: _propTypes2['default'].number,
	    max: _propTypes2['default'].number,
	    step: _propTypes2['default'].number,
	    marks: _propTypes2['default'].object,
	    included: _propTypes2['default'].bool,
	    className: _propTypes2['default'].string,
	    prefixCls: _propTypes2['default'].string,
	    disabled: _propTypes2['default'].bool,
	    children: _propTypes2['default'].any,
	    onBeforeChange: _propTypes2['default'].func,
	    onChange: _propTypes2['default'].func,
	    onAfterChange: _propTypes2['default'].func,
	    handle: _propTypes2['default'].func,
	    dots: _propTypes2['default'].bool,
	    vertical: _propTypes2['default'].bool,
	    style: _propTypes2['default'].object,
	    minimumTrackStyle: _propTypes2['default'].object, // just for compatibility, will be deperecate
	    maximumTrackStyle: _propTypes2['default'].object, // just for compatibility, will be deperecate
	    handleStyle: _propTypes2['default'].oneOfType([_propTypes2['default'].object, _propTypes2['default'].arrayOf(_propTypes2['default'].object)]),
	    trackStyle: _propTypes2['default'].oneOfType([_propTypes2['default'].object, _propTypes2['default'].arrayOf(_propTypes2['default'].object)]),
	    railStyle: _propTypes2['default'].object,
	    dotStyle: _propTypes2['default'].object,
	    activeDotStyle: _propTypes2['default'].object,
	    autoFocus: _propTypes2['default'].bool,
	    onFocus: _propTypes2['default'].func,
	    onBlur: _propTypes2['default'].func
	  }), _class.defaultProps = (0, _extends3['default'])({}, Component.defaultProps, {
	    prefixCls: 'rc-slider',
	    className: '',
	    min: 0,
	    max: 100,
	    step: 1,
	    marks: {},
	    handle: function handle(_ref) {
	      var index = _ref.index,
	          restProps = (0, _objectWithoutProperties3['default'])(_ref, ['index']);
	
	      delete restProps.dragging;
	      return _react2['default'].createElement(_Handle2['default'], (0, _extends3['default'])({}, restProps, { key: index }));
	    },
	
	    onBeforeChange: noop,
	    onChange: noop,
	    onAfterChange: noop,
	    included: true,
	    disabled: false,
	    dots: false,
	    vertical: false,
	    trackStyle: [{}],
	    handleStyle: [{}],
	    railStyle: {},
	    dotStyle: {},
	    activeDotStyle: {}
	  }), _temp;
	}
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 917 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _defineProperty = __webpack_require__(912);
	
	var _defineProperty2 = _interopRequireDefault(_defineProperty);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (obj, key, value) {
	  if (key in obj) {
	    (0, _defineProperty2.default)(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }
	
	  return obj;
	};

/***/ }),
/* 918 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _getPrototypeOf = __webpack_require__(919);
	
	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);
	
	var _getOwnPropertyDescriptor = __webpack_require__(923);
	
	var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function get(object, property, receiver) {
	  if (object === null) object = Function.prototype;
	  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);
	
	  if (desc === undefined) {
	    var parent = (0, _getPrototypeOf2.default)(object);
	
	    if (parent === null) {
	      return undefined;
	    } else {
	      return get(parent, property, receiver);
	    }
	  } else if ("value" in desc) {
	    return desc.value;
	  } else {
	    var getter = desc.get;
	
	    if (getter === undefined) {
	      return undefined;
	    }
	
	    return getter.call(receiver);
	  }
	};

/***/ }),
/* 919 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(920), __esModule: true };

/***/ }),
/* 920 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(921);
	module.exports = __webpack_require__(288).Object.getPrototypeOf;


/***/ }),
/* 921 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject = __webpack_require__(320);
	var $getPrototypeOf = __webpack_require__(337);
	
	__webpack_require__(922)('getPrototypeOf', function () {
	  return function getPrototypeOf(it) {
	    return $getPrototypeOf(toObject(it));
	  };
	});


/***/ }),
/* 922 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(286);
	var core = __webpack_require__(288);
	var fails = __webpack_require__(297);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY];
	  var exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
	};


/***/ }),
/* 923 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(924), __esModule: true };

/***/ }),
/* 924 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(925);
	var $Object = __webpack_require__(288).Object;
	module.exports = function getOwnPropertyDescriptor(it, key) {
	  return $Object.getOwnPropertyDescriptor(it, key);
	};


/***/ }),
/* 925 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject = __webpack_require__(305);
	var $getOwnPropertyDescriptor = __webpack_require__(352).f;
	
	__webpack_require__(922)('getOwnPropertyDescriptor', function () {
	  return function getOwnPropertyDescriptor(it, key) {
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});


/***/ }),
/* 926 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = addEventListenerWrap;
	
	var _addDomEventListener = __webpack_require__(927);
	
	var _addDomEventListener2 = _interopRequireDefault(_addDomEventListener);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function addEventListenerWrap(target, eventType, cb) {
	  /* eslint camelcase: 2 */
	  var callback = _reactDom2['default'].unstable_batchedUpdates ? function run(e) {
	    _reactDom2['default'].unstable_batchedUpdates(cb, e);
	  } : cb;
	  return (0, _addDomEventListener2['default'])(target, eventType, callback);
	}
	module.exports = exports['default'];

/***/ }),
/* 927 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = addEventListener;
	
	var _EventObject = __webpack_require__(928);
	
	var _EventObject2 = _interopRequireDefault(_EventObject);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	function addEventListener(target, eventType, callback) {
	  function wrapCallback(e) {
	    var ne = new _EventObject2["default"](e);
	    callback.call(target, ne);
	  }
	
	  if (target.addEventListener) {
	    target.addEventListener(eventType, wrapCallback, false);
	    return {
	      remove: function remove() {
	        target.removeEventListener(eventType, wrapCallback, false);
	      }
	    };
	  } else if (target.attachEvent) {
	    target.attachEvent('on' + eventType, wrapCallback);
	    return {
	      remove: function remove() {
	        target.detachEvent('on' + eventType, wrapCallback);
	      }
	    };
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 928 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _EventBaseObject = __webpack_require__(929);
	
	var _EventBaseObject2 = _interopRequireDefault(_EventBaseObject);
	
	var _objectAssign = __webpack_require__(4);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
	
	/**
	 * @ignore
	 * event object for dom
	 * @author yiminghe@gmail.com
	 */
	
	var TRUE = true;
	var FALSE = false;
	var commonProps = ['altKey', 'bubbles', 'cancelable', 'ctrlKey', 'currentTarget', 'eventPhase', 'metaKey', 'shiftKey', 'target', 'timeStamp', 'view', 'type'];
	
	function isNullOrUndefined(w) {
	  return w === null || w === undefined;
	}
	
	var eventNormalizers = [{
	  reg: /^key/,
	  props: ['char', 'charCode', 'key', 'keyCode', 'which'],
	  fix: function fix(event, nativeEvent) {
	    if (isNullOrUndefined(event.which)) {
	      event.which = !isNullOrUndefined(nativeEvent.charCode) ? nativeEvent.charCode : nativeEvent.keyCode;
	    }
	
	    // add metaKey to non-Mac browsers (use ctrl for PC 's and Meta for Macs)
	    if (event.metaKey === undefined) {
	      event.metaKey = event.ctrlKey;
	    }
	  }
	}, {
	  reg: /^touch/,
	  props: ['touches', 'changedTouches', 'targetTouches']
	}, {
	  reg: /^hashchange$/,
	  props: ['newURL', 'oldURL']
	}, {
	  reg: /^gesturechange$/i,
	  props: ['rotation', 'scale']
	}, {
	  reg: /^(mousewheel|DOMMouseScroll)$/,
	  props: [],
	  fix: function fix(event, nativeEvent) {
	    var deltaX = void 0;
	    var deltaY = void 0;
	    var delta = void 0;
	    var wheelDelta = nativeEvent.wheelDelta;
	    var axis = nativeEvent.axis;
	    var wheelDeltaY = nativeEvent.wheelDeltaY;
	    var wheelDeltaX = nativeEvent.wheelDeltaX;
	    var detail = nativeEvent.detail;
	
	    // ie/webkit
	    if (wheelDelta) {
	      delta = wheelDelta / 120;
	    }
	
	    // gecko
	    if (detail) {
	      // press control e.detail == 1 else e.detail == 3
	      delta = 0 - (detail % 3 === 0 ? detail / 3 : detail);
	    }
	
	    // Gecko
	    if (axis !== undefined) {
	      if (axis === event.HORIZONTAL_AXIS) {
	        deltaY = 0;
	        deltaX = 0 - delta;
	      } else if (axis === event.VERTICAL_AXIS) {
	        deltaX = 0;
	        deltaY = delta;
	      }
	    }
	
	    // Webkit
	    if (wheelDeltaY !== undefined) {
	      deltaY = wheelDeltaY / 120;
	    }
	    if (wheelDeltaX !== undefined) {
	      deltaX = -1 * wheelDeltaX / 120;
	    }
	
	    // 默认 deltaY (ie)
	    if (!deltaX && !deltaY) {
	      deltaY = delta;
	    }
	
	    if (deltaX !== undefined) {
	      /**
	       * deltaX of mousewheel event
	       * @property deltaX
	       * @member Event.DomEvent.Object
	       */
	      event.deltaX = deltaX;
	    }
	
	    if (deltaY !== undefined) {
	      /**
	       * deltaY of mousewheel event
	       * @property deltaY
	       * @member Event.DomEvent.Object
	       */
	      event.deltaY = deltaY;
	    }
	
	    if (delta !== undefined) {
	      /**
	       * delta of mousewheel event
	       * @property delta
	       * @member Event.DomEvent.Object
	       */
	      event.delta = delta;
	    }
	  }
	}, {
	  reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,
	  props: ['buttons', 'clientX', 'clientY', 'button', 'offsetX', 'relatedTarget', 'which', 'fromElement', 'toElement', 'offsetY', 'pageX', 'pageY', 'screenX', 'screenY'],
	  fix: function fix(event, nativeEvent) {
	    var eventDoc = void 0;
	    var doc = void 0;
	    var body = void 0;
	    var target = event.target;
	    var button = nativeEvent.button;
	
	    // Calculate pageX/Y if missing and clientX/Y available
	    if (target && isNullOrUndefined(event.pageX) && !isNullOrUndefined(nativeEvent.clientX)) {
	      eventDoc = target.ownerDocument || document;
	      doc = eventDoc.documentElement;
	      body = eventDoc.body;
	      event.pageX = nativeEvent.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
	      event.pageY = nativeEvent.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
	    }
	
	    // which for click: 1 === left; 2 === middle; 3 === right
	    // do not use button
	    if (!event.which && button !== undefined) {
	      if (button & 1) {
	        event.which = 1;
	      } else if (button & 2) {
	        event.which = 3;
	      } else if (button & 4) {
	        event.which = 2;
	      } else {
	        event.which = 0;
	      }
	    }
	
	    // add relatedTarget, if necessary
	    if (!event.relatedTarget && event.fromElement) {
	      event.relatedTarget = event.fromElement === target ? event.toElement : event.fromElement;
	    }
	
	    return event;
	  }
	}];
	
	function retTrue() {
	  return TRUE;
	}
	
	function retFalse() {
	  return FALSE;
	}
	
	function DomEventObject(nativeEvent) {
	  var type = nativeEvent.type;
	
	  var isNative = typeof nativeEvent.stopPropagation === 'function' || typeof nativeEvent.cancelBubble === 'boolean';
	
	  _EventBaseObject2["default"].call(this);
	
	  this.nativeEvent = nativeEvent;
	
	  // in case dom event has been mark as default prevented by lower dom node
	  var isDefaultPrevented = retFalse;
	  if ('defaultPrevented' in nativeEvent) {
	    isDefaultPrevented = nativeEvent.defaultPrevented ? retTrue : retFalse;
	  } else if ('getPreventDefault' in nativeEvent) {
	    // https://bugzilla.mozilla.org/show_bug.cgi?id=691151
	    isDefaultPrevented = nativeEvent.getPreventDefault() ? retTrue : retFalse;
	  } else if ('returnValue' in nativeEvent) {
	    isDefaultPrevented = nativeEvent.returnValue === FALSE ? retTrue : retFalse;
	  }
	
	  this.isDefaultPrevented = isDefaultPrevented;
	
	  var fixFns = [];
	  var fixFn = void 0;
	  var l = void 0;
	  var prop = void 0;
	  var props = commonProps.concat();
	
	  eventNormalizers.forEach(function (normalizer) {
	    if (type.match(normalizer.reg)) {
	      props = props.concat(normalizer.props);
	      if (normalizer.fix) {
	        fixFns.push(normalizer.fix);
	      }
	    }
	  });
	
	  l = props.length;
	
	  // clone properties of the original event object
	  while (l) {
	    prop = props[--l];
	    this[prop] = nativeEvent[prop];
	  }
	
	  // fix target property, if necessary
	  if (!this.target && isNative) {
	    this.target = nativeEvent.srcElement || document; // srcElement might not be defined either
	  }
	
	  // check if target is a text node (safari)
	  if (this.target && this.target.nodeType === 3) {
	    this.target = this.target.parentNode;
	  }
	
	  l = fixFns.length;
	
	  while (l) {
	    fixFn = fixFns[--l];
	    fixFn(this, nativeEvent);
	  }
	
	  this.timeStamp = nativeEvent.timeStamp || Date.now();
	}
	
	var EventBaseObjectProto = _EventBaseObject2["default"].prototype;
	
	(0, _objectAssign2["default"])(DomEventObject.prototype, EventBaseObjectProto, {
	  constructor: DomEventObject,
	
	  preventDefault: function preventDefault() {
	    var e = this.nativeEvent;
	
	    // if preventDefault exists run it on the original event
	    if (e.preventDefault) {
	      e.preventDefault();
	    } else {
	      // otherwise set the returnValue property of the original event to FALSE (IE)
	      e.returnValue = FALSE;
	    }
	
	    EventBaseObjectProto.preventDefault.call(this);
	  },
	  stopPropagation: function stopPropagation() {
	    var e = this.nativeEvent;
	
	    // if stopPropagation exists run it on the original event
	    if (e.stopPropagation) {
	      e.stopPropagation();
	    } else {
	      // otherwise set the cancelBubble property of the original event to TRUE (IE)
	      e.cancelBubble = TRUE;
	    }
	
	    EventBaseObjectProto.stopPropagation.call(this);
	  }
	});
	
	exports["default"] = DomEventObject;
	module.exports = exports['default'];

/***/ }),
/* 929 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * @ignore
	 * base event object for custom and dom event.
	 * @author yiminghe@gmail.com
	 */
	
	function returnFalse() {
	  return false;
	}
	
	function returnTrue() {
	  return true;
	}
	
	function EventBaseObject() {
	  this.timeStamp = Date.now();
	  this.target = undefined;
	  this.currentTarget = undefined;
	}
	
	EventBaseObject.prototype = {
	  isEventObject: 1,
	
	  constructor: EventBaseObject,
	
	  isDefaultPrevented: returnFalse,
	
	  isPropagationStopped: returnFalse,
	
	  isImmediatePropagationStopped: returnFalse,
	
	  preventDefault: function preventDefault() {
	    this.isDefaultPrevented = returnTrue;
	  },
	  stopPropagation: function stopPropagation() {
	    this.isPropagationStopped = returnTrue;
	  },
	  stopImmediatePropagation: function stopImmediatePropagation() {
	    this.isImmediatePropagationStopped = returnTrue;
	    // fixed 1.2
	    // call stopPropagation implicitly
	    this.stopPropagation();
	  },
	  halt: function halt(immediate) {
	    if (immediate) {
	      this.stopImmediatePropagation();
	    } else {
	      this.stopPropagation();
	    }
	    this.preventDefault();
	  }
	};
	
	exports["default"] = EventBaseObject;
	module.exports = exports['default'];

/***/ }),
/* 930 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(917);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _warning = __webpack_require__(189);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var calcPoints = function calcPoints(vertical, marks, dots, step, min, max) {
	  (0, _warning2['default'])(dots ? step > 0 : true, '`Slider[step]` should be a positive number in order to make Slider[dots] work.');
	  var points = Object.keys(marks).map(parseFloat);
	  if (dots) {
	    for (var i = min; i <= max; i += step) {
	      if (points.indexOf(i) === -1) {
	        points.push(i);
	      }
	    }
	  }
	  return points;
	};
	
	var Steps = function Steps(_ref) {
	  var prefixCls = _ref.prefixCls,
	      vertical = _ref.vertical,
	      marks = _ref.marks,
	      dots = _ref.dots,
	      step = _ref.step,
	      included = _ref.included,
	      lowerBound = _ref.lowerBound,
	      upperBound = _ref.upperBound,
	      max = _ref.max,
	      min = _ref.min,
	      dotStyle = _ref.dotStyle,
	      activeDotStyle = _ref.activeDotStyle;
	
	  var range = max - min;
	  var elements = calcPoints(vertical, marks, dots, step, min, max).map(function (point) {
	    var _classNames;
	
	    var offset = Math.abs(point - min) / range * 100 + '%';
	
	    var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
	    var style = vertical ? (0, _extends3['default'])({ bottom: offset }, dotStyle) : (0, _extends3['default'])({ left: offset }, dotStyle);
	    if (isActived) {
	      style = (0, _extends3['default'])({}, style, activeDotStyle);
	    }
	
	    var pointClassName = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, prefixCls + '-dot', true), (0, _defineProperty3['default'])(_classNames, prefixCls + '-dot-active', isActived), _classNames));
	
	    return _react2['default'].createElement('span', { className: pointClassName, style: style, key: point });
	  });
	
	  return _react2['default'].createElement(
	    'div',
	    { className: prefixCls + '-step' },
	    elements
	  );
	};
	
	Steps.propTypes = {
	  prefixCls: _propTypes2['default'].string,
	  activeDotStyle: _propTypes2['default'].object,
	  dotStyle: _propTypes2['default'].object,
	  min: _propTypes2['default'].number,
	  max: _propTypes2['default'].number,
	  upperBound: _propTypes2['default'].number,
	  lowerBound: _propTypes2['default'].number,
	  included: _propTypes2['default'].bool,
	  dots: _propTypes2['default'].bool,
	  step: _propTypes2['default'].number,
	  marks: _propTypes2['default'].object,
	  vertical: _propTypes2['default'].bool
	};
	
	exports['default'] = Steps;
	module.exports = exports['default'];

/***/ }),
/* 931 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _defineProperty2 = __webpack_require__(917);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var Marks = function Marks(_ref) {
	  var className = _ref.className,
	      vertical = _ref.vertical,
	      marks = _ref.marks,
	      included = _ref.included,
	      upperBound = _ref.upperBound,
	      lowerBound = _ref.lowerBound,
	      max = _ref.max,
	      min = _ref.min,
	      onClickLabel = _ref.onClickLabel;
	
	  var marksKeys = Object.keys(marks);
	  var marksCount = marksKeys.length;
	  var unit = marksCount > 1 ? 100 / (marksCount - 1) : 100;
	  var markWidth = unit * 0.9;
	
	  var range = max - min;
	  var elements = marksKeys.map(parseFloat).sort(function (a, b) {
	    return a - b;
	  }).map(function (point) {
	    var _classNames;
	
	    var markPoint = marks[point];
	    var markPointIsObject = typeof markPoint === 'object' && !_react2['default'].isValidElement(markPoint);
	    var markLabel = markPointIsObject ? markPoint.label : markPoint;
	    if (!markLabel && markLabel !== 0) {
	      return null;
	    }
	
	    var isActive = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
	    var markClassName = (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, className + '-text', true), (0, _defineProperty3['default'])(_classNames, className + '-text-active', isActive), _classNames));
	
	    var bottomStyle = {
	      marginBottom: '-50%',
	      bottom: (point - min) / range * 100 + '%'
	    };
	
	    var leftStyle = {
	      width: markWidth + '%',
	      marginLeft: -markWidth / 2 + '%',
	      left: (point - min) / range * 100 + '%'
	    };
	
	    var style = vertical ? bottomStyle : leftStyle;
	    var markStyle = markPointIsObject ? (0, _extends3['default'])({}, style, markPoint.style) : style;
	    return _react2['default'].createElement(
	      'span',
	      {
	        className: markClassName,
	        style: markStyle,
	        key: point,
	        onMouseDown: function onMouseDown(e) {
	          return onClickLabel(e, point);
	        },
	        onTouchStart: function onTouchStart(e) {
	          return onClickLabel(e, point);
	        }
	      },
	      markLabel
	    );
	  });
	
	  return _react2['default'].createElement(
	    'div',
	    { className: className },
	    elements
	  );
	};
	
	Marks.propTypes = {
	  className: _propTypes2['default'].string,
	  vertical: _propTypes2['default'].bool,
	  marks: _propTypes2['default'].object,
	  included: _propTypes2['default'].bool,
	  upperBound: _propTypes2['default'].number,
	  lowerBound: _propTypes2['default'].number,
	  max: _propTypes2['default'].number,
	  min: _propTypes2['default'].number,
	  onClickLabel: _propTypes2['default'].func
	};
	
	exports['default'] = Marks;
	module.exports = exports['default'];

/***/ }),
/* 932 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _defineProperty2 = __webpack_require__(917);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _objectWithoutProperties2 = __webpack_require__(365);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _addEventListener = __webpack_require__(926);
	
	var _addEventListener2 = _interopRequireDefault(_addEventListener);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var Handle = function (_React$Component) {
	  (0, _inherits3['default'])(Handle, _React$Component);
	
	  function Handle() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3['default'])(this, Handle);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, (_ref = Handle.__proto__ || Object.getPrototypeOf(Handle)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      clickFocused: false
	    }, _this.setHandleRef = function (node) {
	      _this.handle = node;
	    }, _this.handleMouseUp = function () {
	      if (document.activeElement === _this.handle) {
	        _this.setClickFocus(true);
	      }
	    }, _this.handleBlur = function () {
	      _this.setClickFocus(false);
	    }, _this.handleKeyDown = function () {
	      _this.setClickFocus(false);
	    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);
	  }
	
	  (0, _createClass3['default'])(Handle, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      // mouseup won't trigger if mouse moved out of handle,
	      // so we listen on document here.
	      this.onMouseUpListener = (0, _addEventListener2['default'])(document, 'mouseup', this.handleMouseUp);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.onMouseUpListener) {
	        this.onMouseUpListener.remove();
	      }
	    }
	  }, {
	    key: 'setClickFocus',
	    value: function setClickFocus(focused) {
	      this.setState({ clickFocused: focused });
	    }
	  }, {
	    key: 'clickFocus',
	    value: function clickFocus() {
	      this.setClickFocus(true);
	      this.focus();
	    }
	  }, {
	    key: 'focus',
	    value: function focus() {
	      this.handle.focus();
	    }
	  }, {
	    key: 'blur',
	    value: function blur() {
	      this.handle.blur();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          prefixCls = _props.prefixCls,
	          vertical = _props.vertical,
	          offset = _props.offset,
	          style = _props.style,
	          disabled = _props.disabled,
	          min = _props.min,
	          max = _props.max,
	          value = _props.value,
	          tabIndex = _props.tabIndex,
	          restProps = (0, _objectWithoutProperties3['default'])(_props, ['prefixCls', 'vertical', 'offset', 'style', 'disabled', 'min', 'max', 'value', 'tabIndex']);
	
	
	      var className = (0, _classnames2['default'])(this.props.className, (0, _defineProperty3['default'])({}, prefixCls + '-handle-click-focused', this.state.clickFocused));
	
	      var postionStyle = vertical ? { bottom: offset + '%' } : { left: offset + '%' };
	      var elStyle = (0, _extends3['default'])({}, style, postionStyle);
	
	      return _react2['default'].createElement('div', (0, _extends3['default'])({
	        ref: this.setHandleRef,
	        tabIndex: disabled ? null : tabIndex || 0
	      }, restProps, {
	        className: className,
	        style: elStyle,
	        onBlur: this.handleBlur,
	        onKeyDown: this.handleKeyDown
	
	        // aria attribute
	        , role: 'slider',
	        'aria-valuemin': min,
	        'aria-valuemax': max,
	        'aria-valuenow': value,
	        'aria-disabled': !!disabled
	      }));
	    }
	  }]);
	  return Handle;
	}(_react2['default'].Component);
	
	exports['default'] = Handle;
	
	
	Handle.propTypes = {
	  prefixCls: _propTypes2['default'].string,
	  className: _propTypes2['default'].string,
	  vertical: _propTypes2['default'].bool,
	  offset: _propTypes2['default'].number,
	  style: _propTypes2['default'].object,
	  disabled: _propTypes2['default'].bool,
	  min: _propTypes2['default'].number,
	  max: _propTypes2['default'].number,
	  value: _propTypes2['default'].number,
	  tabIndex: _propTypes2['default'].number
	};
	module.exports = exports['default'];

/***/ }),
/* 933 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _toConsumableArray2 = __webpack_require__(934);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	exports.isEventFromHandle = isEventFromHandle;
	exports.isValueOutOfRange = isValueOutOfRange;
	exports.isNotTouchEvent = isNotTouchEvent;
	exports.getClosestPoint = getClosestPoint;
	exports.getPrecision = getPrecision;
	exports.getMousePosition = getMousePosition;
	exports.getTouchPosition = getTouchPosition;
	exports.getHandleCenterPosition = getHandleCenterPosition;
	exports.ensureValueInRange = ensureValueInRange;
	exports.ensureValuePrecision = ensureValuePrecision;
	exports.pauseEvent = pauseEvent;
	exports.getKeyboardValueMutator = getKeyboardValueMutator;
	
	var _reactDom = __webpack_require__(37);
	
	var _KeyCode = __webpack_require__(935);
	
	var _KeyCode2 = _interopRequireDefault(_KeyCode);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function isEventFromHandle(e, handles) {
	  return Object.keys(handles).some(function (key) {
	    return e.target === (0, _reactDom.findDOMNode)(handles[key]);
	  });
	}
	
	function isValueOutOfRange(value, _ref) {
	  var min = _ref.min,
	      max = _ref.max;
	
	  return value < min || value > max;
	}
	
	function isNotTouchEvent(e) {
	  return e.touches.length > 1 || e.type.toLowerCase() === 'touchend' && e.touches.length > 0;
	}
	
	function getClosestPoint(val, _ref2) {
	  var marks = _ref2.marks,
	      step = _ref2.step,
	      min = _ref2.min;
	
	  var points = Object.keys(marks).map(parseFloat);
	  if (step !== null) {
	    var closestStep = Math.round((val - min) / step) * step + min;
	    points.push(closestStep);
	  }
	  var diffs = points.map(function (point) {
	    return Math.abs(val - point);
	  });
	  return points[diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray3['default'])(diffs)))];
	}
	
	function getPrecision(step) {
	  var stepString = step.toString();
	  var precision = 0;
	  if (stepString.indexOf('.') >= 0) {
	    precision = stepString.length - stepString.indexOf('.') - 1;
	  }
	  return precision;
	}
	
	function getMousePosition(vertical, e) {
	  return vertical ? e.clientY : e.pageX;
	}
	
	function getTouchPosition(vertical, e) {
	  return vertical ? e.touches[0].clientY : e.touches[0].pageX;
	}
	
	function getHandleCenterPosition(vertical, handle) {
	  var coords = handle.getBoundingClientRect();
	  return vertical ? coords.top + coords.height * 0.5 : coords.left + coords.width * 0.5;
	}
	
	function ensureValueInRange(val, _ref3) {
	  var max = _ref3.max,
	      min = _ref3.min;
	
	  if (val <= min) {
	    return min;
	  }
	  if (val >= max) {
	    return max;
	  }
	  return val;
	}
	
	function ensureValuePrecision(val, props) {
	  var step = props.step;
	
	  var closestPoint = getClosestPoint(val, props);
	  return step === null ? closestPoint : parseFloat(closestPoint.toFixed(getPrecision(step)));
	}
	
	function pauseEvent(e) {
	  e.stopPropagation();
	  e.preventDefault();
	}
	
	function getKeyboardValueMutator(e) {
	  switch (e.keyCode) {
	    case _KeyCode2['default'].UP:
	    case _KeyCode2['default'].RIGHT:
	      return function (value, props) {
	        return value + props.step;
	      };
	
	    case _KeyCode2['default'].DOWN:
	    case _KeyCode2['default'].LEFT:
	      return function (value, props) {
	        return value - props.step;
	      };
	
	    case _KeyCode2['default'].END:
	      return function (value, props) {
	        return props.max;
	      };
	    case _KeyCode2['default'].HOME:
	      return function (value, props) {
	        return props.min;
	      };
	    case _KeyCode2['default'].PAGE_UP:
	      return function (value, props) {
	        return value + props.step * 2;
	      };
	    case _KeyCode2['default'].PAGE_DOWN:
	      return function (value, props) {
	        return value - props.step * 2;
	      };
	
	    default:
	      return undefined;
	  }
	}

/***/ }),
/* 934 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _from = __webpack_require__(426);
	
	var _from2 = _interopRequireDefault(_from);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }
	
	    return arr2;
	  } else {
	    return (0, _from2.default)(arr);
	  }
	};

/***/ }),
/* 935 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * @ignore
	 * some key-codes definition and utils from closure-library
	 * @author yiminghe@gmail.com
	 */
	
	var KeyCode = {
	  /**
	   * MAC_ENTER
	   */
	  MAC_ENTER: 3,
	  /**
	   * BACKSPACE
	   */
	  BACKSPACE: 8,
	  /**
	   * TAB
	   */
	  TAB: 9,
	  /**
	   * NUMLOCK on FF/Safari Mac
	   */
	  NUM_CENTER: 12, // NUMLOCK on FF/Safari Mac
	  /**
	   * ENTER
	   */
	  ENTER: 13,
	  /**
	   * SHIFT
	   */
	  SHIFT: 16,
	  /**
	   * CTRL
	   */
	  CTRL: 17,
	  /**
	   * ALT
	   */
	  ALT: 18,
	  /**
	   * PAUSE
	   */
	  PAUSE: 19,
	  /**
	   * CAPS_LOCK
	   */
	  CAPS_LOCK: 20,
	  /**
	   * ESC
	   */
	  ESC: 27,
	  /**
	   * SPACE
	   */
	  SPACE: 32,
	  /**
	   * PAGE_UP
	   */
	  PAGE_UP: 33, // also NUM_NORTH_EAST
	  /**
	   * PAGE_DOWN
	   */
	  PAGE_DOWN: 34, // also NUM_SOUTH_EAST
	  /**
	   * END
	   */
	  END: 35, // also NUM_SOUTH_WEST
	  /**
	   * HOME
	   */
	  HOME: 36, // also NUM_NORTH_WEST
	  /**
	   * LEFT
	   */
	  LEFT: 37, // also NUM_WEST
	  /**
	   * UP
	   */
	  UP: 38, // also NUM_NORTH
	  /**
	   * RIGHT
	   */
	  RIGHT: 39, // also NUM_EAST
	  /**
	   * DOWN
	   */
	  DOWN: 40, // also NUM_SOUTH
	  /**
	   * PRINT_SCREEN
	   */
	  PRINT_SCREEN: 44,
	  /**
	   * INSERT
	   */
	  INSERT: 45, // also NUM_INSERT
	  /**
	   * DELETE
	   */
	  DELETE: 46, // also NUM_DELETE
	  /**
	   * ZERO
	   */
	  ZERO: 48,
	  /**
	   * ONE
	   */
	  ONE: 49,
	  /**
	   * TWO
	   */
	  TWO: 50,
	  /**
	   * THREE
	   */
	  THREE: 51,
	  /**
	   * FOUR
	   */
	  FOUR: 52,
	  /**
	   * FIVE
	   */
	  FIVE: 53,
	  /**
	   * SIX
	   */
	  SIX: 54,
	  /**
	   * SEVEN
	   */
	  SEVEN: 55,
	  /**
	   * EIGHT
	   */
	  EIGHT: 56,
	  /**
	   * NINE
	   */
	  NINE: 57,
	  /**
	   * QUESTION_MARK
	   */
	  QUESTION_MARK: 63, // needs localization
	  /**
	   * A
	   */
	  A: 65,
	  /**
	   * B
	   */
	  B: 66,
	  /**
	   * C
	   */
	  C: 67,
	  /**
	   * D
	   */
	  D: 68,
	  /**
	   * E
	   */
	  E: 69,
	  /**
	   * F
	   */
	  F: 70,
	  /**
	   * G
	   */
	  G: 71,
	  /**
	   * H
	   */
	  H: 72,
	  /**
	   * I
	   */
	  I: 73,
	  /**
	   * J
	   */
	  J: 74,
	  /**
	   * K
	   */
	  K: 75,
	  /**
	   * L
	   */
	  L: 76,
	  /**
	   * M
	   */
	  M: 77,
	  /**
	   * N
	   */
	  N: 78,
	  /**
	   * O
	   */
	  O: 79,
	  /**
	   * P
	   */
	  P: 80,
	  /**
	   * Q
	   */
	  Q: 81,
	  /**
	   * R
	   */
	  R: 82,
	  /**
	   * S
	   */
	  S: 83,
	  /**
	   * T
	   */
	  T: 84,
	  /**
	   * U
	   */
	  U: 85,
	  /**
	   * V
	   */
	  V: 86,
	  /**
	   * W
	   */
	  W: 87,
	  /**
	   * X
	   */
	  X: 88,
	  /**
	   * Y
	   */
	  Y: 89,
	  /**
	   * Z
	   */
	  Z: 90,
	  /**
	   * META
	   */
	  META: 91, // WIN_KEY_LEFT
	  /**
	   * WIN_KEY_RIGHT
	   */
	  WIN_KEY_RIGHT: 92,
	  /**
	   * CONTEXT_MENU
	   */
	  CONTEXT_MENU: 93,
	  /**
	   * NUM_ZERO
	   */
	  NUM_ZERO: 96,
	  /**
	   * NUM_ONE
	   */
	  NUM_ONE: 97,
	  /**
	   * NUM_TWO
	   */
	  NUM_TWO: 98,
	  /**
	   * NUM_THREE
	   */
	  NUM_THREE: 99,
	  /**
	   * NUM_FOUR
	   */
	  NUM_FOUR: 100,
	  /**
	   * NUM_FIVE
	   */
	  NUM_FIVE: 101,
	  /**
	   * NUM_SIX
	   */
	  NUM_SIX: 102,
	  /**
	   * NUM_SEVEN
	   */
	  NUM_SEVEN: 103,
	  /**
	   * NUM_EIGHT
	   */
	  NUM_EIGHT: 104,
	  /**
	   * NUM_NINE
	   */
	  NUM_NINE: 105,
	  /**
	   * NUM_MULTIPLY
	   */
	  NUM_MULTIPLY: 106,
	  /**
	   * NUM_PLUS
	   */
	  NUM_PLUS: 107,
	  /**
	   * NUM_MINUS
	   */
	  NUM_MINUS: 109,
	  /**
	   * NUM_PERIOD
	   */
	  NUM_PERIOD: 110,
	  /**
	   * NUM_DIVISION
	   */
	  NUM_DIVISION: 111,
	  /**
	   * F1
	   */
	  F1: 112,
	  /**
	   * F2
	   */
	  F2: 113,
	  /**
	   * F3
	   */
	  F3: 114,
	  /**
	   * F4
	   */
	  F4: 115,
	  /**
	   * F5
	   */
	  F5: 116,
	  /**
	   * F6
	   */
	  F6: 117,
	  /**
	   * F7
	   */
	  F7: 118,
	  /**
	   * F8
	   */
	  F8: 119,
	  /**
	   * F9
	   */
	  F9: 120,
	  /**
	   * F10
	   */
	  F10: 121,
	  /**
	   * F11
	   */
	  F11: 122,
	  /**
	   * F12
	   */
	  F12: 123,
	  /**
	   * NUMLOCK
	   */
	  NUMLOCK: 144,
	  /**
	   * SEMICOLON
	   */
	  SEMICOLON: 186, // needs localization
	  /**
	   * DASH
	   */
	  DASH: 189, // needs localization
	  /**
	   * EQUALS
	   */
	  EQUALS: 187, // needs localization
	  /**
	   * COMMA
	   */
	  COMMA: 188, // needs localization
	  /**
	   * PERIOD
	   */
	  PERIOD: 190, // needs localization
	  /**
	   * SLASH
	   */
	  SLASH: 191, // needs localization
	  /**
	   * APOSTROPHE
	   */
	  APOSTROPHE: 192, // needs localization
	  /**
	   * SINGLE_QUOTE
	   */
	  SINGLE_QUOTE: 222, // needs localization
	  /**
	   * OPEN_SQUARE_BRACKET
	   */
	  OPEN_SQUARE_BRACKET: 219, // needs localization
	  /**
	   * BACKSLASH
	   */
	  BACKSLASH: 220, // needs localization
	  /**
	   * CLOSE_SQUARE_BRACKET
	   */
	  CLOSE_SQUARE_BRACKET: 221, // needs localization
	  /**
	   * WIN_KEY
	   */
	  WIN_KEY: 224,
	  /**
	   * MAC_FF_META
	   */
	  MAC_FF_META: 224, // Firefox (Gecko) fires this for the meta key instead of 91
	  /**
	   * WIN_IME
	   */
	  WIN_IME: 229
	};
	
	/*
	 whether text and modified key is entered at the same time.
	 */
	KeyCode.isTextModifyingKeyEvent = function isTextModifyingKeyEvent(e) {
	  var keyCode = e.keyCode;
	  if (e.altKey && !e.ctrlKey || e.metaKey ||
	  // Function keys don't generate text
	  keyCode >= KeyCode.F1 && keyCode <= KeyCode.F12) {
	    return false;
	  }
	
	  // The following keys are quite harmless, even in combination with
	  // CTRL, ALT or SHIFT.
	  switch (keyCode) {
	    case KeyCode.ALT:
	    case KeyCode.CAPS_LOCK:
	    case KeyCode.CONTEXT_MENU:
	    case KeyCode.CTRL:
	    case KeyCode.DOWN:
	    case KeyCode.END:
	    case KeyCode.ESC:
	    case KeyCode.HOME:
	    case KeyCode.INSERT:
	    case KeyCode.LEFT:
	    case KeyCode.MAC_FF_META:
	    case KeyCode.META:
	    case KeyCode.NUMLOCK:
	    case KeyCode.NUM_CENTER:
	    case KeyCode.PAGE_DOWN:
	    case KeyCode.PAGE_UP:
	    case KeyCode.PAUSE:
	    case KeyCode.PRINT_SCREEN:
	    case KeyCode.RIGHT:
	    case KeyCode.SHIFT:
	    case KeyCode.UP:
	    case KeyCode.WIN_KEY:
	    case KeyCode.WIN_KEY_RIGHT:
	      return false;
	    default:
	      return true;
	  }
	};
	
	/*
	 whether character is entered.
	 */
	KeyCode.isCharacterKey = function isCharacterKey(keyCode) {
	  if (keyCode >= KeyCode.ZERO && keyCode <= KeyCode.NINE) {
	    return true;
	  }
	
	  if (keyCode >= KeyCode.NUM_ZERO && keyCode <= KeyCode.NUM_MULTIPLY) {
	    return true;
	  }
	
	  if (keyCode >= KeyCode.A && keyCode <= KeyCode.Z) {
	    return true;
	  }
	
	  // Safari sends zero key code for non-latin characters.
	  if (window.navigation.userAgent.indexOf('WebKit') !== -1 && keyCode === 0) {
	    return true;
	  }
	
	  switch (keyCode) {
	    case KeyCode.SPACE:
	    case KeyCode.QUESTION_MARK:
	    case KeyCode.NUM_PLUS:
	    case KeyCode.NUM_MINUS:
	    case KeyCode.NUM_PERIOD:
	    case KeyCode.NUM_DIVISION:
	    case KeyCode.SEMICOLON:
	    case KeyCode.DASH:
	    case KeyCode.EQUALS:
	    case KeyCode.COMMA:
	    case KeyCode.PERIOD:
	    case KeyCode.SLASH:
	    case KeyCode.APOSTROPHE:
	    case KeyCode.SINGLE_QUOTE:
	    case KeyCode.OPEN_SQUARE_BRACKET:
	    case KeyCode.BACKSLASH:
	    case KeyCode.CLOSE_SQUARE_BRACKET:
	      return true;
	    default:
	      return false;
	  }
	};
	
	exports['default'] = KeyCode;
	module.exports = exports['default'];

/***/ }),
/* 936 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(917);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _toConsumableArray2 = __webpack_require__(934);
	
	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _shallowequal = __webpack_require__(937);
	
	var _shallowequal2 = _interopRequireDefault(_shallowequal);
	
	var _Track = __webpack_require__(915);
	
	var _Track2 = _interopRequireDefault(_Track);
	
	var _createSlider = __webpack_require__(916);
	
	var _createSlider2 = _interopRequireDefault(_createSlider);
	
	var _utils = __webpack_require__(933);
	
	var utils = _interopRequireWildcard(_utils);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var Range = function (_React$Component) {
	  (0, _inherits3['default'])(Range, _React$Component);
	
	  function Range(props) {
	    (0, _classCallCheck3['default'])(this, Range);
	
	    var _this = (0, _possibleConstructorReturn3['default'])(this, (Range.__proto__ || Object.getPrototypeOf(Range)).call(this, props));
	
	    _this.onEnd = function () {
	      _this.setState({
	        handle: null
	      }, _this.blur);
	      _this.removeDocumentEvents();
	      _this.props.onAfterChange(_this.getValue());
	    };
	
	    var count = props.count,
	        min = props.min,
	        max = props.max;
	
	    var initialValue = Array.apply(undefined, (0, _toConsumableArray3['default'])(Array(count + 1))).map(function () {
	      return min;
	    });
	    var defaultValue = 'defaultValue' in props ? props.defaultValue : initialValue;
	    var value = props.value !== undefined ? props.value : defaultValue;
	    var bounds = value.map(function (v, i) {
	      return _this.trimAlignValue(v, i);
	    });
	    var recent = bounds[0] === max ? 0 : bounds.length - 1;
	
	    _this.state = {
	      handle: null,
	      recent: recent,
	      bounds: bounds
	    };
	    return _this;
	  }
	
	  (0, _createClass3['default'])(Range, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var _this2 = this;
	
	      if (!('value' in nextProps || 'min' in nextProps || 'max' in nextProps)) return;
	      if (this.props.min === nextProps.min && this.props.max === nextProps.max && (0, _shallowequal2['default'])(this.props.value, nextProps.value)) {
	        return;
	      }
	
	      var bounds = this.state.bounds;
	
	      var value = nextProps.value || bounds;
	      var nextBounds = value.map(function (v, i) {
	        return _this2.trimAlignValue(v, i, nextProps);
	      });
	      if (nextBounds.length === bounds.length && nextBounds.every(function (v, i) {
	        return v === bounds[i];
	      })) return;
	
	      this.setState({ bounds: nextBounds });
	
	      if (bounds.some(function (v) {
	        return utils.isValueOutOfRange(v, nextProps);
	      })) {
	        var newValues = value.map(function (v) {
	          return utils.ensureValueInRange(v, nextProps);
	        });
	        this.props.onChange(newValues);
	      }
	    }
	  }, {
	    key: 'onChange',
	    value: function onChange(state) {
	      var props = this.props;
	      var isNotControlled = !('value' in props);
	      if (isNotControlled) {
	        this.setState(state);
	      } else if (state.handle !== undefined) {
	        this.setState({ handle: state.handle });
	      }
	
	      var data = (0, _extends3['default'])({}, this.state, state);
	      var changedValue = data.bounds;
	      props.onChange(changedValue);
	    }
	  }, {
	    key: 'onStart',
	    value: function onStart(position) {
	      var props = this.props;
	      var state = this.state;
	      var bounds = this.getValue();
	      props.onBeforeChange(bounds);
	
	      var value = this.calcValueByPos(position);
	      this.startValue = value;
	      this.startPosition = position;
	
	      var closestBound = this.getClosestBound(value);
	      this.prevMovedHandleIndex = this.getBoundNeedMoving(value, closestBound);
	
	      this.setState({
	        handle: this.prevMovedHandleIndex,
	        recent: this.prevMovedHandleIndex
	      });
	
	      var prevValue = bounds[this.prevMovedHandleIndex];
	      if (value === prevValue) return;
	
	      var nextBounds = [].concat((0, _toConsumableArray3['default'])(state.bounds));
	      nextBounds[this.prevMovedHandleIndex] = value;
	      this.onChange({ bounds: nextBounds });
	    }
	  }, {
	    key: 'onMove',
	    value: function onMove(e, position) {
	      utils.pauseEvent(e);
	      var state = this.state;
	
	      var value = this.calcValueByPos(position);
	      var oldValue = state.bounds[state.handle];
	      if (value === oldValue) return;
	
	      this.moveTo(value);
	    }
	  }, {
	    key: 'onKeyboard',
	    value: function onKeyboard(e) {
	      var valueMutator = utils.getKeyboardValueMutator(e);
	
	      if (valueMutator) {
	        utils.pauseEvent(e);
	        var state = this.state,
	            props = this.props;
	        var bounds = state.bounds,
	            handle = state.handle;
	
	        var oldValue = bounds[handle];
	        var mutatedValue = valueMutator(oldValue, props);
	        var value = this.trimAlignValue(mutatedValue);
	        if (value === oldValue) return;
	        var isFromKeyboardEvent = true;
	        this.moveTo(value, isFromKeyboardEvent);
	      }
	    }
	  }, {
	    key: 'getValue',
	    value: function getValue() {
	      return this.state.bounds;
	    }
	  }, {
	    key: 'getClosestBound',
	    value: function getClosestBound(value) {
	      var bounds = this.state.bounds;
	
	      var closestBound = 0;
	      for (var i = 1; i < bounds.length - 1; ++i) {
	        if (value > bounds[i]) {
	          closestBound = i;
	        }
	      }
	      if (Math.abs(bounds[closestBound + 1] - value) < Math.abs(bounds[closestBound] - value)) {
	        closestBound += 1;
	      }
	      return closestBound;
	    }
	  }, {
	    key: 'getBoundNeedMoving',
	    value: function getBoundNeedMoving(value, closestBound) {
	      var _state = this.state,
	          bounds = _state.bounds,
	          recent = _state.recent;
	
	      var boundNeedMoving = closestBound;
	      var isAtTheSamePoint = bounds[closestBound + 1] === bounds[closestBound];
	
	      if (isAtTheSamePoint && bounds[recent] === bounds[closestBound]) {
	        boundNeedMoving = recent;
	      }
	
	      if (isAtTheSamePoint && value !== bounds[closestBound + 1]) {
	        boundNeedMoving = value < bounds[closestBound + 1] ? closestBound : closestBound + 1;
	      }
	      return boundNeedMoving;
	    }
	  }, {
	    key: 'getLowerBound',
	    value: function getLowerBound() {
	      return this.state.bounds[0];
	    }
	  }, {
	    key: 'getUpperBound',
	    value: function getUpperBound() {
	      var bounds = this.state.bounds;
	
	      return bounds[bounds.length - 1];
	    }
	
	    /**
	     * Returns an array of possible slider points, taking into account both
	     * `marks` and `step`. The result is cached.
	     */
	
	  }, {
	    key: 'getPoints',
	    value: function getPoints() {
	      var _props = this.props,
	          marks = _props.marks,
	          step = _props.step,
	          min = _props.min,
	          max = _props.max;
	
	      var cache = this._getPointsCache;
	      if (!cache || cache.marks !== marks || cache.step !== step) {
	        var pointsObject = (0, _extends3['default'])({}, marks);
	        if (step !== null) {
	          for (var point = min; point <= max; point += step) {
	            pointsObject[point] = point;
	          }
	        }
	        var points = Object.keys(pointsObject).map(parseFloat);
	        points.sort(function (a, b) {
	          return a - b;
	        });
	        this._getPointsCache = { marks: marks, step: step, points: points };
	      }
	      return this._getPointsCache.points;
	    }
	  }, {
	    key: 'moveTo',
	    value: function moveTo(value, isFromKeyboardEvent) {
	      var _this3 = this;
	
	      var state = this.state,
	          props = this.props;
	
	      var nextBounds = [].concat((0, _toConsumableArray3['default'])(state.bounds));
	      nextBounds[state.handle] = value;
	      var nextHandle = state.handle;
	      if (props.pushable !== false) {
	        this.pushSurroundingHandles(nextBounds, nextHandle);
	      } else if (props.allowCross) {
	        nextBounds.sort(function (a, b) {
	          return a - b;
	        });
	        nextHandle = nextBounds.indexOf(value);
	      }
	      this.onChange({
	        handle: nextHandle,
	        bounds: nextBounds
	      });
	      if (isFromKeyboardEvent) {
	        // known problem: because setState is async,
	        // so trigger focus will invoke handler's onEnd and another handler's onStart too early,
	        // cause onBeforeChange and onAfterChange receive wrong value.
	        // here use setState callback to hack，but not elegant
	        this.setState({}, function () {
	          _this3.handlesRefs[nextHandle].focus();
	        });
	      }
	    }
	  }, {
	    key: 'pushSurroundingHandles',
	    value: function pushSurroundingHandles(bounds, handle) {
	      var value = bounds[handle];
	      var threshold = this.props.pushable;
	
	      threshold = Number(threshold);
	
	      var direction = 0;
	      if (bounds[handle + 1] - value < threshold) {
	        direction = +1; // push to right
	      }
	      if (value - bounds[handle - 1] < threshold) {
	        direction = -1; // push to left
	      }
	
	      if (direction === 0) {
	        return;
	      }
	
	      var nextHandle = handle + direction;
	      var diffToNext = direction * (bounds[nextHandle] - value);
	      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
	        // revert to original value if pushing is impossible
	        bounds[handle] = bounds[nextHandle] - direction * threshold;
	      }
	    }
	  }, {
	    key: 'pushHandle',
	    value: function pushHandle(bounds, handle, direction, amount) {
	      var originalValue = bounds[handle];
	      var currentValue = bounds[handle];
	      while (direction * (currentValue - originalValue) < amount) {
	        if (!this.pushHandleOnePoint(bounds, handle, direction)) {
	          // can't push handle enough to create the needed `amount` gap, so we
	          // revert its position to the original value
	          bounds[handle] = originalValue;
	          return false;
	        }
	        currentValue = bounds[handle];
	      }
	      // the handle was pushed enough to create the needed `amount` gap
	      return true;
	    }
	  }, {
	    key: 'pushHandleOnePoint',
	    value: function pushHandleOnePoint(bounds, handle, direction) {
	      var points = this.getPoints();
	      var pointIndex = points.indexOf(bounds[handle]);
	      var nextPointIndex = pointIndex + direction;
	      if (nextPointIndex >= points.length || nextPointIndex < 0) {
	        // reached the minimum or maximum available point, can't push anymore
	        return false;
	      }
	      var nextHandle = handle + direction;
	      var nextValue = points[nextPointIndex];
	      var threshold = this.props.pushable;
	
	      var diffToNext = direction * (bounds[nextHandle] - nextValue);
	      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
	        // couldn't push next handle, so we won't push this one either
	        return false;
	      }
	      // push the handle
	      bounds[handle] = nextValue;
	      return true;
	    }
	  }, {
	    key: 'trimAlignValue',
	    value: function trimAlignValue(v, handle) {
	      var nextProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	      var mergedProps = (0, _extends3['default'])({}, this.props, nextProps);
	      var valInRange = utils.ensureValueInRange(v, mergedProps);
	      var valNotConflict = this.ensureValueNotConflict(handle, valInRange, mergedProps);
	      return utils.ensureValuePrecision(valNotConflict, mergedProps);
	    }
	  }, {
	    key: 'ensureValueNotConflict',
	    value: function ensureValueNotConflict(handle, val, _ref) {
	      var allowCross = _ref.allowCross,
	          thershold = _ref.pushable;
	
	      var state = this.state || {};
	      var bounds = state.bounds;
	
	      handle = handle === undefined ? state.handle : handle;
	      thershold = Number(thershold);
	      /* eslint-disable eqeqeq */
	      if (!allowCross && handle != null && bounds !== undefined) {
	        if (handle > 0 && val <= bounds[handle - 1] + thershold) {
	          return bounds[handle - 1] + thershold;
	        }
	        if (handle < bounds.length - 1 && val >= bounds[handle + 1] - thershold) {
	          return bounds[handle + 1] - thershold;
	        }
	      }
	      /* eslint-enable eqeqeq */
	      return val;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;
	
	      var _state2 = this.state,
	          handle = _state2.handle,
	          bounds = _state2.bounds;
	      var _props2 = this.props,
	          prefixCls = _props2.prefixCls,
	          vertical = _props2.vertical,
	          included = _props2.included,
	          disabled = _props2.disabled,
	          min = _props2.min,
	          max = _props2.max,
	          handleGenerator = _props2.handle,
	          trackStyle = _props2.trackStyle,
	          handleStyle = _props2.handleStyle,
	          tabIndex = _props2.tabIndex;
	
	
	      var offsets = bounds.map(function (v) {
	        return _this4.calcOffset(v);
	      });
	
	      var handleClassName = prefixCls + '-handle';
	      var handles = bounds.map(function (v, i) {
	        var _classNames;
	
	        return handleGenerator({
	          className: (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, handleClassName, true), (0, _defineProperty3['default'])(_classNames, handleClassName + '-' + (i + 1), true), _classNames)),
	          prefixCls: prefixCls,
	          vertical: vertical,
	          offset: offsets[i],
	          value: v,
	          dragging: handle === i,
	          index: i,
	          tabIndex: tabIndex[i] || 0,
	          min: min,
	          max: max,
	          disabled: disabled,
	          style: handleStyle[i],
	          ref: function ref(h) {
	            return _this4.saveHandle(i, h);
	          }
	        });
	      });
	
	      var tracks = bounds.slice(0, -1).map(function (_, index) {
	        var _classNames2;
	
	        var i = index + 1;
	        var trackClassName = (0, _classnames2['default'])((_classNames2 = {}, (0, _defineProperty3['default'])(_classNames2, prefixCls + '-track', true), (0, _defineProperty3['default'])(_classNames2, prefixCls + '-track-' + i, true), _classNames2));
	        return _react2['default'].createElement(_Track2['default'], {
	          className: trackClassName,
	          vertical: vertical,
	          included: included,
	          offset: offsets[i - 1],
	          length: offsets[i] - offsets[i - 1],
	          style: trackStyle[index],
	          key: i
	        });
	      });
	
	      return { tracks: tracks, handles: handles };
	    }
	  }]);
	  return Range;
	}(_react2['default'].Component); /* eslint-disable react/prop-types */
	
	
	Range.displayName = 'Range';
	Range.propTypes = {
	  defaultValue: _propTypes2['default'].arrayOf(_propTypes2['default'].number),
	  value: _propTypes2['default'].arrayOf(_propTypes2['default'].number),
	  count: _propTypes2['default'].number,
	  pushable: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].number]),
	  allowCross: _propTypes2['default'].bool,
	  disabled: _propTypes2['default'].bool,
	  tabIndex: _propTypes2['default'].arrayOf(_propTypes2['default'].number)
	};
	Range.defaultProps = {
	  count: 1,
	  allowCross: true,
	  pushable: false,
	  tabIndex: []
	};
	exports['default'] = (0, _createSlider2['default'])(Range);
	module.exports = exports['default'];

/***/ }),
/* 937 */
/***/ (function(module, exports) {

	//
	
	module.exports = function shallowEqual(objA, objB, compare, compareContext) {
	  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
	
	  if (ret !== void 0) {
	    return !!ret;
	  }
	
	  if (objA === objB) {
	    return true;
	  }
	
	  if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
	
	  // Test for A's keys different from B.
	  for (var idx = 0; idx < keysA.length; idx++) {
	    var key = keysA[idx];
	
	    if (!bHasOwnProperty(key)) {
	      return false;
	    }
	
	    var valueA = objA[key];
	    var valueB = objB[key];
	
	    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
	
	    if (ret === false || (ret === void 0 && valueA !== valueB)) {
	      return false;
	    }
	  }
	
	  return true;
	};


/***/ }),
/* 938 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _objectWithoutProperties2 = __webpack_require__(365);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _defineProperty2 = __webpack_require__(917);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _extends3 = __webpack_require__(282);
	
	var _extends4 = _interopRequireDefault(_extends3);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	exports['default'] = createSliderWithTooltip;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _rcTooltip = __webpack_require__(939);
	
	var _rcTooltip2 = _interopRequireDefault(_rcTooltip);
	
	var _Handle = __webpack_require__(932);
	
	var _Handle2 = _interopRequireDefault(_Handle);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function createSliderWithTooltip(Component) {
	  var _class, _temp;
	
	  return _temp = _class = function (_React$Component) {
	    (0, _inherits3['default'])(ComponentWrapper, _React$Component);
	
	    function ComponentWrapper(props) {
	      (0, _classCallCheck3['default'])(this, ComponentWrapper);
	
	      var _this = (0, _possibleConstructorReturn3['default'])(this, (ComponentWrapper.__proto__ || Object.getPrototypeOf(ComponentWrapper)).call(this, props));
	
	      _this.handleTooltipVisibleChange = function (index, visible) {
	        _this.setState(function (prevState) {
	          return {
	            visibles: (0, _extends4['default'])({}, prevState.visibles, (0, _defineProperty3['default'])({}, index, visible))
	          };
	        });
	      };
	
	      _this.handleWithTooltip = function (_ref) {
	        var value = _ref.value,
	            dragging = _ref.dragging,
	            index = _ref.index,
	            disabled = _ref.disabled,
	            restProps = (0, _objectWithoutProperties3['default'])(_ref, ['value', 'dragging', 'index', 'disabled']);
	        var _this$props = _this.props,
	            tipFormatter = _this$props.tipFormatter,
	            tipProps = _this$props.tipProps,
	            handleStyle = _this$props.handleStyle;
	        var _tipProps$prefixCls = tipProps.prefixCls,
	            prefixCls = _tipProps$prefixCls === undefined ? 'rc-slider-tooltip' : _tipProps$prefixCls,
	            _tipProps$overlay = tipProps.overlay,
	            overlay = _tipProps$overlay === undefined ? tipFormatter(value) : _tipProps$overlay,
	            _tipProps$placement = tipProps.placement,
	            placement = _tipProps$placement === undefined ? 'top' : _tipProps$placement,
	            _tipProps$visible = tipProps.visible,
	            visible = _tipProps$visible === undefined ? false : _tipProps$visible,
	            restTooltipProps = (0, _objectWithoutProperties3['default'])(tipProps, ['prefixCls', 'overlay', 'placement', 'visible']);
	
	
	        var handleStyleWithIndex = void 0;
	        if (Array.isArray(handleStyle)) {
	          handleStyleWithIndex = handleStyle[index] || handleStyle[0];
	        } else {
	          handleStyleWithIndex = handleStyle;
	        }
	
	        return _react2['default'].createElement(
	          _rcTooltip2['default'],
	          (0, _extends4['default'])({}, restTooltipProps, {
	            prefixCls: prefixCls,
	            overlay: overlay,
	            placement: placement,
	            visible: !disabled && (_this.state.visibles[index] || dragging) || visible,
	            key: index
	          }),
	          _react2['default'].createElement(_Handle2['default'], (0, _extends4['default'])({}, restProps, {
	            style: (0, _extends4['default'])({}, handleStyleWithIndex),
	            value: value,
	            onMouseEnter: function onMouseEnter() {
	              return _this.handleTooltipVisibleChange(index, true);
	            },
	            onMouseLeave: function onMouseLeave() {
	              return _this.handleTooltipVisibleChange(index, false);
	            }
	          }))
	        );
	      };
	
	      _this.state = { visibles: {} };
	      return _this;
	    }
	
	    (0, _createClass3['default'])(ComponentWrapper, [{
	      key: 'render',
	      value: function render() {
	        return _react2['default'].createElement(Component, (0, _extends4['default'])({}, this.props, { handle: this.handleWithTooltip }));
	      }
	    }]);
	    return ComponentWrapper;
	  }(_react2['default'].Component), _class.propTypes = {
	    tipFormatter: _propTypes2['default'].func,
	    handleStyle: _propTypes2['default'].oneOfType([_propTypes2['default'].object, _propTypes2['default'].arrayOf(_propTypes2['default'].object)]),
	    tipProps: _propTypes2['default'].object
	  }, _class.defaultProps = {
	    tipFormatter: function tipFormatter(value) {
	      return value;
	    },
	
	    handleStyle: [{}],
	    tipProps: {}
	  }, _temp;
	}
	module.exports = exports['default'];

/***/ }),
/* 939 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _Tooltip = __webpack_require__(940);
	
	var _Tooltip2 = _interopRequireDefault(_Tooltip);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = _Tooltip2['default'];
	module.exports = exports['default'];

/***/ }),
/* 940 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _objectWithoutProperties2 = __webpack_require__(365);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _rcTrigger = __webpack_require__(941);
	
	var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
	
	var _placements = __webpack_require__(978);
	
	var _Content = __webpack_require__(979);
	
	var _Content2 = _interopRequireDefault(_Content);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var Tooltip = function (_Component) {
	  (0, _inherits3['default'])(Tooltip, _Component);
	
	  function Tooltip() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3['default'])(this, Tooltip);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.getPopupElement = function () {
	      var _this$props = _this.props,
	          arrowContent = _this$props.arrowContent,
	          overlay = _this$props.overlay,
	          prefixCls = _this$props.prefixCls,
	          id = _this$props.id;
	
	      return [_react2['default'].createElement(
	        'div',
	        { className: prefixCls + '-arrow', key: 'arrow' },
	        arrowContent
	      ), _react2['default'].createElement(_Content2['default'], {
	        key: 'content',
	        trigger: _this.trigger,
	        prefixCls: prefixCls,
	        id: id,
	        overlay: overlay
	      })];
	    }, _this.saveTrigger = function (node) {
	      _this.trigger = node;
	    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);
	  }
	
	  Tooltip.prototype.getPopupDomNode = function getPopupDomNode() {
	    return this.trigger.getPopupDomNode();
	  };
	
	  Tooltip.prototype.render = function render() {
	    var _props = this.props,
	        overlayClassName = _props.overlayClassName,
	        trigger = _props.trigger,
	        mouseEnterDelay = _props.mouseEnterDelay,
	        mouseLeaveDelay = _props.mouseLeaveDelay,
	        overlayStyle = _props.overlayStyle,
	        prefixCls = _props.prefixCls,
	        children = _props.children,
	        onVisibleChange = _props.onVisibleChange,
	        afterVisibleChange = _props.afterVisibleChange,
	        transitionName = _props.transitionName,
	        animation = _props.animation,
	        placement = _props.placement,
	        align = _props.align,
	        destroyTooltipOnHide = _props.destroyTooltipOnHide,
	        defaultVisible = _props.defaultVisible,
	        getTooltipContainer = _props.getTooltipContainer,
	        restProps = (0, _objectWithoutProperties3['default'])(_props, ['overlayClassName', 'trigger', 'mouseEnterDelay', 'mouseLeaveDelay', 'overlayStyle', 'prefixCls', 'children', 'onVisibleChange', 'afterVisibleChange', 'transitionName', 'animation', 'placement', 'align', 'destroyTooltipOnHide', 'defaultVisible', 'getTooltipContainer']);
	
	    var extraProps = (0, _extends3['default'])({}, restProps);
	    if ('visible' in this.props) {
	      extraProps.popupVisible = this.props.visible;
	    }
	    return _react2['default'].createElement(
	      _rcTrigger2['default'],
	      (0, _extends3['default'])({
	        popupClassName: overlayClassName,
	        ref: this.saveTrigger,
	        prefixCls: prefixCls,
	        popup: this.getPopupElement,
	        action: trigger,
	        builtinPlacements: _placements.placements,
	        popupPlacement: placement,
	        popupAlign: align,
	        getPopupContainer: getTooltipContainer,
	        onPopupVisibleChange: onVisibleChange,
	        afterPopupVisibleChange: afterVisibleChange,
	        popupTransitionName: transitionName,
	        popupAnimation: animation,
	        defaultPopupVisible: defaultVisible,
	        destroyPopupOnHide: destroyTooltipOnHide,
	        mouseLeaveDelay: mouseLeaveDelay,
	        popupStyle: overlayStyle,
	        mouseEnterDelay: mouseEnterDelay
	      }, extraProps),
	      children
	    );
	  };
	
	  return Tooltip;
	}(_react.Component);
	
	Tooltip.propTypes = {
	  trigger: _propTypes2['default'].any,
	  children: _propTypes2['default'].any,
	  defaultVisible: _propTypes2['default'].bool,
	  visible: _propTypes2['default'].bool,
	  placement: _propTypes2['default'].string,
	  transitionName: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].object]),
	  animation: _propTypes2['default'].any,
	  onVisibleChange: _propTypes2['default'].func,
	  afterVisibleChange: _propTypes2['default'].func,
	  overlay: _propTypes2['default'].oneOfType([_propTypes2['default'].node, _propTypes2['default'].func]).isRequired,
	  overlayStyle: _propTypes2['default'].object,
	  overlayClassName: _propTypes2['default'].string,
	  prefixCls: _propTypes2['default'].string,
	  mouseEnterDelay: _propTypes2['default'].number,
	  mouseLeaveDelay: _propTypes2['default'].number,
	  getTooltipContainer: _propTypes2['default'].func,
	  destroyTooltipOnHide: _propTypes2['default'].bool,
	  align: _propTypes2['default'].object,
	  arrowContent: _propTypes2['default'].any,
	  id: _propTypes2['default'].string
	};
	Tooltip.defaultProps = {
	  prefixCls: 'rc-tooltip',
	  mouseEnterDelay: 0,
	  destroyTooltipOnHide: false,
	  mouseLeaveDelay: 0.1,
	  align: {},
	  placement: 'right',
	  trigger: ['hover'],
	  arrowContent: null
	};
	exports['default'] = Tooltip;
	module.exports = exports['default'];

/***/ }),
/* 941 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactDom = __webpack_require__(37);
	
	var _contains = __webpack_require__(942);
	
	var _contains2 = _interopRequireDefault(_contains);
	
	var _addEventListener = __webpack_require__(926);
	
	var _addEventListener2 = _interopRequireDefault(_addEventListener);
	
	var _ContainerRender = __webpack_require__(943);
	
	var _ContainerRender2 = _interopRequireDefault(_ContainerRender);
	
	var _Portal = __webpack_require__(944);
	
	var _Portal2 = _interopRequireDefault(_Portal);
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _utils = __webpack_require__(945);
	
	var _Popup = __webpack_require__(946);
	
	var _Popup2 = _interopRequireDefault(_Popup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function noop() {}
	
	function returnEmptyString() {
	  return '';
	}
	
	function returnDocument() {
	  return window.document;
	}
	
	var ALL_HANDLERS = ['onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur', 'onContextMenu'];
	
	var IS_REACT_16 = !!_reactDom.createPortal;
	
	var contextTypes = {
	  rcTrigger: _propTypes2['default'].shape({
	    onPopupMouseDown: _propTypes2['default'].func
	  })
	};
	
	var Trigger = function (_React$Component) {
	  (0, _inherits3['default'])(Trigger, _React$Component);
	
	  function Trigger(props) {
	    (0, _classCallCheck3['default'])(this, Trigger);
	
	    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));
	
	    _initialiseProps.call(_this);
	
	    var popupVisible = void 0;
	    if ('popupVisible' in props) {
	      popupVisible = !!props.popupVisible;
	    } else {
	      popupVisible = !!props.defaultPopupVisible;
	    }
	
	    _this.prevPopupVisible = popupVisible;
	
	    _this.state = {
	      popupVisible: popupVisible
	    };
	    return _this;
	  }
	
	  Trigger.prototype.getChildContext = function getChildContext() {
	    return {
	      rcTrigger: {
	        onPopupMouseDown: this.onPopupMouseDown
	      }
	    };
	  };
	
	  Trigger.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;
	
	    ALL_HANDLERS.forEach(function (h) {
	      _this2['fire' + h] = function (e) {
	        _this2.fireEvents(h, e);
	      };
	    });
	  };
	
	  Trigger.prototype.componentDidMount = function componentDidMount() {
	    this.componentDidUpdate({}, {
	      popupVisible: this.state.popupVisible
	    });
	  };
	
	  Trigger.prototype.componentWillReceiveProps = function componentWillReceiveProps(_ref) {
	    var popupVisible = _ref.popupVisible;
	
	    if (popupVisible !== undefined) {
	      this.setState({
	        popupVisible: popupVisible
	      });
	    }
	  };
	
	  Trigger.prototype.componentDidUpdate = function componentDidUpdate(_, prevState) {
	    var props = this.props;
	    var state = this.state;
	    var triggerAfterPopupVisibleChange = function triggerAfterPopupVisibleChange() {
	      if (prevState.popupVisible !== state.popupVisible) {
	        props.afterPopupVisibleChange(state.popupVisible);
	      }
	    };
	    if (!IS_REACT_16) {
	      this.renderComponent(null, triggerAfterPopupVisibleChange);
	    }
	
	    this.prevPopupVisible = prevState.popupVisible;
	
	    // We must listen to `mousedown` or `touchstart`, edge case:
	    // https://github.com/ant-design/ant-design/issues/5804
	    // https://github.com/react-component/calendar/issues/250
	    // https://github.com/react-component/trigger/issues/50
	    if (state.popupVisible) {
	      var currentDocument = void 0;
	      if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextMenuToShow())) {
	        currentDocument = props.getDocument();
	        this.clickOutsideHandler = (0, _addEventListener2['default'])(currentDocument, 'mousedown', this.onDocumentClick);
	      }
	      // always hide on mobile
	      if (!this.touchOutsideHandler) {
	        currentDocument = currentDocument || props.getDocument();
	        this.touchOutsideHandler = (0, _addEventListener2['default'])(currentDocument, 'touchstart', this.onDocumentClick);
	      }
	      // close popup when trigger type contains 'onContextMenu' and document is scrolling.
	      if (!this.contextMenuOutsideHandler1 && this.isContextMenuToShow()) {
	        currentDocument = currentDocument || props.getDocument();
	        this.contextMenuOutsideHandler1 = (0, _addEventListener2['default'])(currentDocument, 'scroll', this.onContextMenuClose);
	      }
	      // close popup when trigger type contains 'onContextMenu' and window is blur.
	      if (!this.contextMenuOutsideHandler2 && this.isContextMenuToShow()) {
	        this.contextMenuOutsideHandler2 = (0, _addEventListener2['default'])(window, 'blur', this.onContextMenuClose);
	      }
	      return;
	    }
	
	    this.clearOutsideHandler();
	  };
	
	  Trigger.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.clearDelayTimer();
	    this.clearOutsideHandler();
	    clearTimeout(this.mouseDownTimeout);
	  };
	
	  Trigger.prototype.getPopupDomNode = function getPopupDomNode() {
	    // for test
	    if (this._component && this._component.getPopupDomNode) {
	      return this._component.getPopupDomNode();
	    }
	    return null;
	  };
	
	  Trigger.prototype.getPopupAlign = function getPopupAlign() {
	    var props = this.props;
	    var popupPlacement = props.popupPlacement,
	        popupAlign = props.popupAlign,
	        builtinPlacements = props.builtinPlacements;
	
	    if (popupPlacement && builtinPlacements) {
	      return (0, _utils.getAlignFromPlacement)(builtinPlacements, popupPlacement, popupAlign);
	    }
	    return popupAlign;
	  };
	
	  /**
	   * @param popupVisible    Show or not the popup element
	   * @param event           SyntheticEvent, used for `pointAlign`
	   */
	  Trigger.prototype.setPopupVisible = function setPopupVisible(popupVisible, event) {
	    var alignPoint = this.props.alignPoint;
	
	
	    this.clearDelayTimer();
	
	    if (this.state.popupVisible !== popupVisible) {
	      if (!('popupVisible' in this.props)) {
	        this.setState({ popupVisible: popupVisible });
	      }
	      this.props.onPopupVisibleChange(popupVisible);
	    }
	
	    // Always record the point position since mouseEnterDelay will delay the show
	    if (alignPoint && event) {
	      this.setPoint(event);
	    }
	  };
	
	  Trigger.prototype.delaySetPopupVisible = function delaySetPopupVisible(visible, delayS, event) {
	    var _this3 = this;
	
	    var delay = delayS * 1000;
	    this.clearDelayTimer();
	    if (delay) {
	      var point = event ? { pageX: event.pageX, pageY: event.pageY } : null;
	      this.delayTimer = setTimeout(function () {
	        _this3.setPopupVisible(visible, point);
	        _this3.clearDelayTimer();
	      }, delay);
	    } else {
	      this.setPopupVisible(visible, event);
	    }
	  };
	
	  Trigger.prototype.clearDelayTimer = function clearDelayTimer() {
	    if (this.delayTimer) {
	      clearTimeout(this.delayTimer);
	      this.delayTimer = null;
	    }
	  };
	
	  Trigger.prototype.clearOutsideHandler = function clearOutsideHandler() {
	    if (this.clickOutsideHandler) {
	      this.clickOutsideHandler.remove();
	      this.clickOutsideHandler = null;
	    }
	
	    if (this.contextMenuOutsideHandler1) {
	      this.contextMenuOutsideHandler1.remove();
	      this.contextMenuOutsideHandler1 = null;
	    }
	
	    if (this.contextMenuOutsideHandler2) {
	      this.contextMenuOutsideHandler2.remove();
	      this.contextMenuOutsideHandler2 = null;
	    }
	
	    if (this.touchOutsideHandler) {
	      this.touchOutsideHandler.remove();
	      this.touchOutsideHandler = null;
	    }
	  };
	
	  Trigger.prototype.createTwoChains = function createTwoChains(event) {
	    var childPros = this.props.children.props;
	    var props = this.props;
	    if (childPros[event] && props[event]) {
	      return this['fire' + event];
	    }
	    return childPros[event] || props[event];
	  };
	
	  Trigger.prototype.isClickToShow = function isClickToShow() {
	    var _props = this.props,
	        action = _props.action,
	        showAction = _props.showAction;
	
	    return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;
	  };
	
	  Trigger.prototype.isContextMenuToShow = function isContextMenuToShow() {
	    var _props2 = this.props,
	        action = _props2.action,
	        showAction = _props2.showAction;
	
	    return action.indexOf('contextMenu') !== -1 || showAction.indexOf('contextMenu') !== -1;
	  };
	
	  Trigger.prototype.isClickToHide = function isClickToHide() {
	    var _props3 = this.props,
	        action = _props3.action,
	        hideAction = _props3.hideAction;
	
	    return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;
	  };
	
	  Trigger.prototype.isMouseEnterToShow = function isMouseEnterToShow() {
	    var _props4 = this.props,
	        action = _props4.action,
	        showAction = _props4.showAction;
	
	    return action.indexOf('hover') !== -1 || showAction.indexOf('mouseEnter') !== -1;
	  };
	
	  Trigger.prototype.isMouseLeaveToHide = function isMouseLeaveToHide() {
	    var _props5 = this.props,
	        action = _props5.action,
	        hideAction = _props5.hideAction;
	
	    return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseLeave') !== -1;
	  };
	
	  Trigger.prototype.isFocusToShow = function isFocusToShow() {
	    var _props6 = this.props,
	        action = _props6.action,
	        showAction = _props6.showAction;
	
	    return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;
	  };
	
	  Trigger.prototype.isBlurToHide = function isBlurToHide() {
	    var _props7 = this.props,
	        action = _props7.action,
	        hideAction = _props7.hideAction;
	
	    return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;
	  };
	
	  Trigger.prototype.forcePopupAlign = function forcePopupAlign() {
	    if (this.state.popupVisible && this._component && this._component.alignInstance) {
	      this._component.alignInstance.forceAlign();
	    }
	  };
	
	  Trigger.prototype.fireEvents = function fireEvents(type, e) {
	    var childCallback = this.props.children.props[type];
	    if (childCallback) {
	      childCallback(e);
	    }
	    var callback = this.props[type];
	    if (callback) {
	      callback(e);
	    }
	  };
	
	  Trigger.prototype.close = function close() {
	    this.setPopupVisible(false);
	  };
	
	  Trigger.prototype.render = function render() {
	    var _this4 = this;
	
	    var popupVisible = this.state.popupVisible;
	    var _props8 = this.props,
	        children = _props8.children,
	        forceRender = _props8.forceRender,
	        alignPoint = _props8.alignPoint,
	        className = _props8.className;
	
	    var child = _react2['default'].Children.only(children);
	    var newChildProps = { key: 'trigger' };
	
	    if (this.isContextMenuToShow()) {
	      newChildProps.onContextMenu = this.onContextMenu;
	    } else {
	      newChildProps.onContextMenu = this.createTwoChains('onContextMenu');
	    }
	
	    if (this.isClickToHide() || this.isClickToShow()) {
	      newChildProps.onClick = this.onClick;
	      newChildProps.onMouseDown = this.onMouseDown;
	      newChildProps.onTouchStart = this.onTouchStart;
	    } else {
	      newChildProps.onClick = this.createTwoChains('onClick');
	      newChildProps.onMouseDown = this.createTwoChains('onMouseDown');
	      newChildProps.onTouchStart = this.createTwoChains('onTouchStart');
	    }
	    if (this.isMouseEnterToShow()) {
	      newChildProps.onMouseEnter = this.onMouseEnter;
	      if (alignPoint) {
	        newChildProps.onMouseMove = this.onMouseMove;
	      }
	    } else {
	      newChildProps.onMouseEnter = this.createTwoChains('onMouseEnter');
	    }
	    if (this.isMouseLeaveToHide()) {
	      newChildProps.onMouseLeave = this.onMouseLeave;
	    } else {
	      newChildProps.onMouseLeave = this.createTwoChains('onMouseLeave');
	    }
	    if (this.isFocusToShow() || this.isBlurToHide()) {
	      newChildProps.onFocus = this.onFocus;
	      newChildProps.onBlur = this.onBlur;
	    } else {
	      newChildProps.onFocus = this.createTwoChains('onFocus');
	      newChildProps.onBlur = this.createTwoChains('onBlur');
	    }
	
	    var childrenClassName = (0, _classnames2['default'])(child && child.props && child.props.className, className);
	    if (childrenClassName) {
	      newChildProps.className = childrenClassName;
	    }
	    var trigger = _react2['default'].cloneElement(child, newChildProps);
	
	    if (!IS_REACT_16) {
	      return _react2['default'].createElement(
	        _ContainerRender2['default'],
	        {
	          parent: this,
	          visible: popupVisible,
	          autoMount: false,
	          forceRender: forceRender,
	          getComponent: this.getComponent,
	          getContainer: this.getContainer
	        },
	        function (_ref2) {
	          var renderComponent = _ref2.renderComponent;
	
	          _this4.renderComponent = renderComponent;
	          return trigger;
	        }
	      );
	    }
	
	    var portal = void 0;
	    // prevent unmounting after it's rendered
	    if (popupVisible || this._component || forceRender) {
	      portal = _react2['default'].createElement(
	        _Portal2['default'],
	        {
	          key: 'portal',
	          getContainer: this.getContainer,
	          didUpdate: this.handlePortalUpdate
	        },
	        this.getComponent()
	      );
	    }
	
	    return [trigger, portal];
	  };
	
	  return Trigger;
	}(_react2['default'].Component);
	
	Trigger.propTypes = {
	  children: _propTypes2['default'].any,
	  action: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].arrayOf(_propTypes2['default'].string)]),
	  showAction: _propTypes2['default'].any,
	  hideAction: _propTypes2['default'].any,
	  getPopupClassNameFromAlign: _propTypes2['default'].any,
	  onPopupVisibleChange: _propTypes2['default'].func,
	  afterPopupVisibleChange: _propTypes2['default'].func,
	  popup: _propTypes2['default'].oneOfType([_propTypes2['default'].node, _propTypes2['default'].func]).isRequired,
	  popupStyle: _propTypes2['default'].object,
	  prefixCls: _propTypes2['default'].string,
	  popupClassName: _propTypes2['default'].string,
	  className: _propTypes2['default'].string,
	  popupPlacement: _propTypes2['default'].string,
	  builtinPlacements: _propTypes2['default'].object,
	  popupTransitionName: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].object]),
	  popupAnimation: _propTypes2['default'].any,
	  mouseEnterDelay: _propTypes2['default'].number,
	  mouseLeaveDelay: _propTypes2['default'].number,
	  zIndex: _propTypes2['default'].number,
	  focusDelay: _propTypes2['default'].number,
	  blurDelay: _propTypes2['default'].number,
	  getPopupContainer: _propTypes2['default'].func,
	  getDocument: _propTypes2['default'].func,
	  forceRender: _propTypes2['default'].bool,
	  destroyPopupOnHide: _propTypes2['default'].bool,
	  mask: _propTypes2['default'].bool,
	  maskClosable: _propTypes2['default'].bool,
	  onPopupAlign: _propTypes2['default'].func,
	  popupAlign: _propTypes2['default'].object,
	  popupVisible: _propTypes2['default'].bool,
	  defaultPopupVisible: _propTypes2['default'].bool,
	  maskTransitionName: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].object]),
	  maskAnimation: _propTypes2['default'].string,
	  stretch: _propTypes2['default'].string,
	  alignPoint: _propTypes2['default'].bool // Maybe we can support user pass position in the future
	};
	Trigger.contextTypes = contextTypes;
	Trigger.childContextTypes = contextTypes;
	Trigger.defaultProps = {
	  prefixCls: 'rc-trigger-popup',
	  getPopupClassNameFromAlign: returnEmptyString,
	  getDocument: returnDocument,
	  onPopupVisibleChange: noop,
	  afterPopupVisibleChange: noop,
	  onPopupAlign: noop,
	  popupClassName: '',
	  mouseEnterDelay: 0,
	  mouseLeaveDelay: 0.1,
	  focusDelay: 0,
	  blurDelay: 0.15,
	  popupStyle: {},
	  destroyPopupOnHide: false,
	  popupAlign: {},
	  defaultPopupVisible: false,
	  mask: false,
	  maskClosable: true,
	  action: [],
	  showAction: [],
	  hideAction: []
	};
	
	var _initialiseProps = function _initialiseProps() {
	  var _this5 = this;
	
	  this.onMouseEnter = function (e) {
	    var mouseEnterDelay = _this5.props.mouseEnterDelay;
	
	    _this5.fireEvents('onMouseEnter', e);
	    _this5.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e);
	  };
	
	  this.onMouseMove = function (e) {
	    _this5.fireEvents('onMouseMove', e);
	    _this5.setPoint(e);
	  };
	
	  this.onMouseLeave = function (e) {
	    _this5.fireEvents('onMouseLeave', e);
	    _this5.delaySetPopupVisible(false, _this5.props.mouseLeaveDelay);
	  };
	
	  this.onPopupMouseEnter = function () {
	    _this5.clearDelayTimer();
	  };
	
	  this.onPopupMouseLeave = function (e) {
	    // https://github.com/react-component/trigger/pull/13
	    // react bug?
	    if (e.relatedTarget && !e.relatedTarget.setTimeout && _this5._component && _this5._component.getPopupDomNode && (0, _contains2['default'])(_this5._component.getPopupDomNode(), e.relatedTarget)) {
	      return;
	    }
	    _this5.delaySetPopupVisible(false, _this5.props.mouseLeaveDelay);
	  };
	
	  this.onFocus = function (e) {
	    _this5.fireEvents('onFocus', e);
	    // incase focusin and focusout
	    _this5.clearDelayTimer();
	    if (_this5.isFocusToShow()) {
	      _this5.focusTime = Date.now();
	      _this5.delaySetPopupVisible(true, _this5.props.focusDelay);
	    }
	  };
	
	  this.onMouseDown = function (e) {
	    _this5.fireEvents('onMouseDown', e);
	    _this5.preClickTime = Date.now();
	  };
	
	  this.onTouchStart = function (e) {
	    _this5.fireEvents('onTouchStart', e);
	    _this5.preTouchTime = Date.now();
	  };
	
	  this.onBlur = function (e) {
	    _this5.fireEvents('onBlur', e);
	    _this5.clearDelayTimer();
	    if (_this5.isBlurToHide()) {
	      _this5.delaySetPopupVisible(false, _this5.props.blurDelay);
	    }
	  };
	
	  this.onContextMenu = function (e) {
	    e.preventDefault();
	    _this5.fireEvents('onContextMenu', e);
	    _this5.setPopupVisible(true, e);
	  };
	
	  this.onContextMenuClose = function () {
	    if (_this5.isContextMenuToShow()) {
	      _this5.close();
	    }
	  };
	
	  this.onClick = function (event) {
	    _this5.fireEvents('onClick', event);
	    // focus will trigger click
	    if (_this5.focusTime) {
	      var preTime = void 0;
	      if (_this5.preClickTime && _this5.preTouchTime) {
	        preTime = Math.min(_this5.preClickTime, _this5.preTouchTime);
	      } else if (_this5.preClickTime) {
	        preTime = _this5.preClickTime;
	      } else if (_this5.preTouchTime) {
	        preTime = _this5.preTouchTime;
	      }
	      if (Math.abs(preTime - _this5.focusTime) < 20) {
	        return;
	      }
	      _this5.focusTime = 0;
	    }
	    _this5.preClickTime = 0;
	    _this5.preTouchTime = 0;
	    if (event && event.preventDefault) {
	      event.preventDefault();
	    }
	    var nextVisible = !_this5.state.popupVisible;
	    if (_this5.isClickToHide() && !nextVisible || nextVisible && _this5.isClickToShow()) {
	      _this5.setPopupVisible(!_this5.state.popupVisible, event);
	    }
	  };
	
	  this.onPopupMouseDown = function () {
	    var _context$rcTrigger = _this5.context.rcTrigger,
	        rcTrigger = _context$rcTrigger === undefined ? {} : _context$rcTrigger;
	
	    _this5.hasPopupMouseDown = true;
	
	    clearTimeout(_this5.mouseDownTimeout);
	    _this5.mouseDownTimeout = setTimeout(function () {
	      _this5.hasPopupMouseDown = false;
	    }, 0);
	
	    if (rcTrigger.onPopupMouseDown) {
	      rcTrigger.onPopupMouseDown.apply(rcTrigger, arguments);
	    }
	  };
	
	  this.onDocumentClick = function (event) {
	    if (_this5.props.mask && !_this5.props.maskClosable) {
	      return;
	    }
	
	    var target = event.target;
	    var root = (0, _reactDom.findDOMNode)(_this5);
	    if (!(0, _contains2['default'])(root, target) && !_this5.hasPopupMouseDown) {
	      _this5.close();
	    }
	  };
	
	  this.getRootDomNode = function () {
	    return (0, _reactDom.findDOMNode)(_this5);
	  };
	
	  this.getPopupClassNameFromAlign = function (align) {
	    var className = [];
	    var _props9 = _this5.props,
	        popupPlacement = _props9.popupPlacement,
	        builtinPlacements = _props9.builtinPlacements,
	        prefixCls = _props9.prefixCls,
	        alignPoint = _props9.alignPoint,
	        getPopupClassNameFromAlign = _props9.getPopupClassNameFromAlign;
	
	    if (popupPlacement && builtinPlacements) {
	      className.push((0, _utils.getAlignPopupClassName)(builtinPlacements, prefixCls, align, alignPoint));
	    }
	    if (getPopupClassNameFromAlign) {
	      className.push(getPopupClassNameFromAlign(align));
	    }
	    return className.join(' ');
	  };
	
	  this.getComponent = function () {
	    var _props10 = _this5.props,
	        prefixCls = _props10.prefixCls,
	        destroyPopupOnHide = _props10.destroyPopupOnHide,
	        popupClassName = _props10.popupClassName,
	        action = _props10.action,
	        onPopupAlign = _props10.onPopupAlign,
	        popupAnimation = _props10.popupAnimation,
	        popupTransitionName = _props10.popupTransitionName,
	        popupStyle = _props10.popupStyle,
	        mask = _props10.mask,
	        maskAnimation = _props10.maskAnimation,
	        maskTransitionName = _props10.maskTransitionName,
	        zIndex = _props10.zIndex,
	        popup = _props10.popup,
	        stretch = _props10.stretch,
	        alignPoint = _props10.alignPoint;
	    var _state = _this5.state,
	        popupVisible = _state.popupVisible,
	        point = _state.point;
	
	
	    var align = _this5.getPopupAlign();
	
	    var mouseProps = {};
	    if (_this5.isMouseEnterToShow()) {
	      mouseProps.onMouseEnter = _this5.onPopupMouseEnter;
	    }
	    if (_this5.isMouseLeaveToHide()) {
	      mouseProps.onMouseLeave = _this5.onPopupMouseLeave;
	    }
	
	    mouseProps.onMouseDown = _this5.onPopupMouseDown;
	
	    return _react2['default'].createElement(
	      _Popup2['default'],
	      (0, _extends3['default'])({
	        prefixCls: prefixCls,
	        destroyPopupOnHide: destroyPopupOnHide,
	        visible: popupVisible,
	        point: alignPoint && point,
	        className: popupClassName,
	        action: action,
	        align: align,
	        onAlign: onPopupAlign,
	        animation: popupAnimation,
	        getClassNameFromAlign: _this5.getPopupClassNameFromAlign
	      }, mouseProps, {
	        stretch: stretch,
	        getRootDomNode: _this5.getRootDomNode,
	        style: popupStyle,
	        mask: mask,
	        zIndex: zIndex,
	        transitionName: popupTransitionName,
	        maskAnimation: maskAnimation,
	        maskTransitionName: maskTransitionName,
	        ref: _this5.savePopup
	      }),
	      typeof popup === 'function' ? popup() : popup
	    );
	  };
	
	  this.getContainer = function () {
	    var props = _this5.props;
	
	    var popupContainer = document.createElement('div');
	    // Make sure default popup container will never cause scrollbar appearing
	    // https://github.com/react-component/trigger/issues/41
	    popupContainer.style.position = 'absolute';
	    popupContainer.style.top = '0';
	    popupContainer.style.left = '0';
	    popupContainer.style.width = '100%';
	    var mountNode = props.getPopupContainer ? props.getPopupContainer((0, _reactDom.findDOMNode)(_this5)) : props.getDocument().body;
	    mountNode.appendChild(popupContainer);
	    return popupContainer;
	  };
	
	  this.setPoint = function (point) {
	    var alignPoint = _this5.props.alignPoint;
	
	    if (!alignPoint || !point) return;
	
	    _this5.setState({
	      point: {
	        pageX: point.pageX,
	        pageY: point.pageY
	      }
	    });
	  };
	
	  this.handlePortalUpdate = function () {
	    if (_this5.prevPopupVisible !== _this5.state.popupVisible) {
	      _this5.props.afterPopupVisibleChange(_this5.state.popupVisible);
	    }
	  };
	
	  this.savePopup = function (node) {
	    _this5._component = node;
	  };
	};
	
	exports['default'] = Trigger;
	module.exports = exports['default'];

/***/ }),
/* 942 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = contains;
	function contains(root, n) {
	  var node = n;
	  while (node) {
	    if (node === root) {
	      return true;
	    }
	    node = node.parentNode;
	  }
	
	  return false;
	}
	module.exports = exports['default'];

/***/ }),
/* 943 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var ContainerRender = function (_React$Component) {
	  (0, _inherits3['default'])(ContainerRender, _React$Component);
	
	  function ContainerRender() {
	    var _ref;
	
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3['default'])(this, ContainerRender);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, (_ref = ContainerRender.__proto__ || Object.getPrototypeOf(ContainerRender)).call.apply(_ref, [this].concat(args))), _this), _this.removeContainer = function () {
	      if (_this.container) {
	        _reactDom2['default'].unmountComponentAtNode(_this.container);
	        _this.container.parentNode.removeChild(_this.container);
	        _this.container = null;
	      }
	    }, _this.renderComponent = function (props, ready) {
	      var _this$props = _this.props,
	          visible = _this$props.visible,
	          getComponent = _this$props.getComponent,
	          forceRender = _this$props.forceRender,
	          getContainer = _this$props.getContainer,
	          parent = _this$props.parent;
	
	      if (visible || parent._component || forceRender) {
	        if (!_this.container) {
	          _this.container = getContainer();
	        }
	        _reactDom2['default'].unstable_renderSubtreeIntoContainer(parent, getComponent(props), _this.container, function callback() {
	          if (ready) {
	            ready.call(this);
	          }
	        });
	      }
	    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);
	  }
	
	  (0, _createClass3['default'])(ContainerRender, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.autoMount) {
	        this.renderComponent();
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      if (this.props.autoMount) {
	        this.renderComponent();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.props.autoDestroy) {
	        this.removeContainer();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.props.children({
	        renderComponent: this.renderComponent,
	        removeContainer: this.removeContainer
	      });
	    }
	  }]);
	  return ContainerRender;
	}(_react2['default'].Component);
	
	ContainerRender.propTypes = {
	  autoMount: _propTypes2['default'].bool,
	  autoDestroy: _propTypes2['default'].bool,
	  visible: _propTypes2['default'].bool,
	  forceRender: _propTypes2['default'].bool,
	  parent: _propTypes2['default'].any,
	  getComponent: _propTypes2['default'].func.isRequired,
	  getContainer: _propTypes2['default'].func.isRequired,
	  children: _propTypes2['default'].func.isRequired
	};
	ContainerRender.defaultProps = {
	  autoMount: true,
	  autoDestroy: true,
	  forceRender: false
	};
	exports['default'] = ContainerRender;
	module.exports = exports['default'];

/***/ }),
/* 944 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var Portal = function (_React$Component) {
	  (0, _inherits3['default'])(Portal, _React$Component);
	
	  function Portal() {
	    (0, _classCallCheck3['default'])(this, Portal);
	    return (0, _possibleConstructorReturn3['default'])(this, (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(this, arguments));
	  }
	
	  (0, _createClass3['default'])(Portal, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.createContainer();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      var didUpdate = this.props.didUpdate;
	
	      if (didUpdate) {
	        didUpdate(prevProps);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.removeContainer();
	    }
	  }, {
	    key: 'createContainer',
	    value: function createContainer() {
	      this._container = this.props.getContainer();
	      this.forceUpdate();
	    }
	  }, {
	    key: 'removeContainer',
	    value: function removeContainer() {
	      if (this._container) {
	        this._container.parentNode.removeChild(this._container);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      if (this._container) {
	        return _reactDom2['default'].createPortal(this.props.children, this._container);
	      }
	      return null;
	    }
	  }]);
	  return Portal;
	}(_react2['default'].Component);
	
	Portal.propTypes = {
	  getContainer: _propTypes2['default'].func.isRequired,
	  children: _propTypes2['default'].node.isRequired,
	  didUpdate: _propTypes2['default'].func
	};
	exports['default'] = Portal;
	module.exports = exports['default'];

/***/ }),
/* 945 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	exports.getAlignFromPlacement = getAlignFromPlacement;
	exports.getAlignPopupClassName = getAlignPopupClassName;
	exports.saveRef = saveRef;
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function isPointsEq(a1, a2, isAlignPoint) {
	  if (isAlignPoint) {
	    return a1[0] === a2[0];
	  }
	  return a1[0] === a2[0] && a1[1] === a2[1];
	}
	
	function getAlignFromPlacement(builtinPlacements, placementStr, align) {
	  var baseAlign = builtinPlacements[placementStr] || {};
	  return (0, _extends3['default'])({}, baseAlign, align);
	}
	
	function getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {
	  var points = align.points;
	  for (var placement in builtinPlacements) {
	    if (builtinPlacements.hasOwnProperty(placement)) {
	      if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {
	        return prefixCls + '-placement-' + placement;
	      }
	    }
	  }
	  return '';
	}
	
	function saveRef(name, component) {
	  this[name] = component;
	}

/***/ }),
/* 946 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _rcAlign = __webpack_require__(947);
	
	var _rcAlign2 = _interopRequireDefault(_rcAlign);
	
	var _rcAnimate = __webpack_require__(963);
	
	var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
	
	var _PopupInner = __webpack_require__(976);
	
	var _PopupInner2 = _interopRequireDefault(_PopupInner);
	
	var _LazyRenderBox = __webpack_require__(977);
	
	var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
	
	var _utils = __webpack_require__(945);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var Popup = function (_Component) {
	  (0, _inherits3['default'])(Popup, _Component);
	
	  function Popup(props) {
	    (0, _classCallCheck3['default'])(this, Popup);
	
	    var _this = (0, _possibleConstructorReturn3['default'])(this, _Component.call(this, props));
	
	    _initialiseProps.call(_this);
	
	    _this.state = {
	      // Used for stretch
	      stretchChecked: false,
	      targetWidth: undefined,
	      targetHeight: undefined
	    };
	
	    _this.savePopupRef = _utils.saveRef.bind(_this, 'popupInstance');
	    _this.saveAlignRef = _utils.saveRef.bind(_this, 'alignInstance');
	    return _this;
	  }
	
	  Popup.prototype.componentDidMount = function componentDidMount() {
	    this.rootNode = this.getPopupDomNode();
	    this.setStretchSize();
	  };
	
	  Popup.prototype.componentDidUpdate = function componentDidUpdate() {
	    this.setStretchSize();
	  };
	
	  // Record size if stretch needed
	
	
	  Popup.prototype.getPopupDomNode = function getPopupDomNode() {
	    return _reactDom2['default'].findDOMNode(this.popupInstance);
	  };
	
	  // `target` on `rc-align` can accept as a function to get the bind element or a point.
	  // ref: https://www.npmjs.com/package/rc-align
	
	
	  Popup.prototype.getMaskTransitionName = function getMaskTransitionName() {
	    var props = this.props;
	    var transitionName = props.maskTransitionName;
	    var animation = props.maskAnimation;
	    if (!transitionName && animation) {
	      transitionName = props.prefixCls + '-' + animation;
	    }
	    return transitionName;
	  };
	
	  Popup.prototype.getTransitionName = function getTransitionName() {
	    var props = this.props;
	    var transitionName = props.transitionName;
	    if (!transitionName && props.animation) {
	      transitionName = props.prefixCls + '-' + props.animation;
	    }
	    return transitionName;
	  };
	
	  Popup.prototype.getClassName = function getClassName(currentAlignClassName) {
	    return this.props.prefixCls + ' ' + this.props.className + ' ' + currentAlignClassName;
	  };
	
	  Popup.prototype.getPopupElement = function getPopupElement() {
	    var _this2 = this;
	
	    var savePopupRef = this.savePopupRef;
	    var _state = this.state,
	        stretchChecked = _state.stretchChecked,
	        targetHeight = _state.targetHeight,
	        targetWidth = _state.targetWidth;
	    var _props = this.props,
	        align = _props.align,
	        visible = _props.visible,
	        prefixCls = _props.prefixCls,
	        style = _props.style,
	        getClassNameFromAlign = _props.getClassNameFromAlign,
	        destroyPopupOnHide = _props.destroyPopupOnHide,
	        stretch = _props.stretch,
	        children = _props.children,
	        onMouseEnter = _props.onMouseEnter,
	        onMouseLeave = _props.onMouseLeave,
	        onMouseDown = _props.onMouseDown;
	
	    var className = this.getClassName(this.currentAlignClassName || getClassNameFromAlign(align));
	    var hiddenClassName = prefixCls + '-hidden';
	
	    if (!visible) {
	      this.currentAlignClassName = null;
	    }
	
	    var sizeStyle = {};
	    if (stretch) {
	      // Stretch with target
	      if (stretch.indexOf('height') !== -1) {
	        sizeStyle.height = targetHeight;
	      } else if (stretch.indexOf('minHeight') !== -1) {
	        sizeStyle.minHeight = targetHeight;
	      }
	      if (stretch.indexOf('width') !== -1) {
	        sizeStyle.width = targetWidth;
	      } else if (stretch.indexOf('minWidth') !== -1) {
	        sizeStyle.minWidth = targetWidth;
	      }
	
	      // Delay force align to makes ui smooth
	      if (!stretchChecked) {
	        sizeStyle.visibility = 'hidden';
	        setTimeout(function () {
	          if (_this2.alignInstance) {
	            _this2.alignInstance.forceAlign();
	          }
	        }, 0);
	      }
	    }
	
	    var newStyle = (0, _extends3['default'])({}, sizeStyle, style, this.getZIndexStyle());
	
	    var popupInnerProps = {
	      className: className,
	      prefixCls: prefixCls,
	      ref: savePopupRef,
	      onMouseEnter: onMouseEnter,
	      onMouseLeave: onMouseLeave,
	      onMouseDown: onMouseDown,
	      style: newStyle
	    };
	    if (destroyPopupOnHide) {
	      return _react2['default'].createElement(
	        _rcAnimate2['default'],
	        {
	          component: '',
	          exclusive: true,
	          transitionAppear: true,
	          transitionName: this.getTransitionName()
	        },
	        visible ? _react2['default'].createElement(
	          _rcAlign2['default'],
	          {
	            target: this.getAlignTarget(),
	            key: 'popup',
	            ref: this.saveAlignRef,
	            monitorWindowResize: true,
	            align: align,
	            onAlign: this.onAlign
	          },
	          _react2['default'].createElement(
	            _PopupInner2['default'],
	            (0, _extends3['default'])({
	              visible: true
	            }, popupInnerProps),
	            children
	          )
	        ) : null
	      );
	    }
	
	    return _react2['default'].createElement(
	      _rcAnimate2['default'],
	      {
	        component: '',
	        exclusive: true,
	        transitionAppear: true,
	        transitionName: this.getTransitionName(),
	        showProp: 'xVisible'
	      },
	      _react2['default'].createElement(
	        _rcAlign2['default'],
	        {
	          target: this.getAlignTarget(),
	          key: 'popup',
	          ref: this.saveAlignRef,
	          monitorWindowResize: true,
	          xVisible: visible,
	          childrenProps: { visible: 'xVisible' },
	          disabled: !visible,
	          align: align,
	          onAlign: this.onAlign
	        },
	        _react2['default'].createElement(
	          _PopupInner2['default'],
	          (0, _extends3['default'])({
	            hiddenClassName: hiddenClassName
	          }, popupInnerProps),
	          children
	        )
	      )
	    );
	  };
	
	  Popup.prototype.getZIndexStyle = function getZIndexStyle() {
	    var style = {};
	    var props = this.props;
	    if (props.zIndex !== undefined) {
	      style.zIndex = props.zIndex;
	    }
	    return style;
	  };
	
	  Popup.prototype.getMaskElement = function getMaskElement() {
	    var props = this.props;
	    var maskElement = void 0;
	    if (props.mask) {
	      var maskTransition = this.getMaskTransitionName();
	      maskElement = _react2['default'].createElement(_LazyRenderBox2['default'], {
	        style: this.getZIndexStyle(),
	        key: 'mask',
	        className: props.prefixCls + '-mask',
	        hiddenClassName: props.prefixCls + '-mask-hidden',
	        visible: props.visible
	      });
	      if (maskTransition) {
	        maskElement = _react2['default'].createElement(
	          _rcAnimate2['default'],
	          {
	            key: 'mask',
	            showProp: 'visible',
	            transitionAppear: true,
	            component: '',
	            transitionName: maskTransition
	          },
	          maskElement
	        );
	      }
	    }
	    return maskElement;
	  };
	
	  Popup.prototype.render = function render() {
	    return _react2['default'].createElement(
	      'div',
	      null,
	      this.getMaskElement(),
	      this.getPopupElement()
	    );
	  };
	
	  return Popup;
	}(_react.Component);
	
	Popup.propTypes = {
	  visible: _propTypes2['default'].bool,
	  style: _propTypes2['default'].object,
	  getClassNameFromAlign: _propTypes2['default'].func,
	  onAlign: _propTypes2['default'].func,
	  getRootDomNode: _propTypes2['default'].func,
	  align: _propTypes2['default'].any,
	  destroyPopupOnHide: _propTypes2['default'].bool,
	  className: _propTypes2['default'].string,
	  prefixCls: _propTypes2['default'].string,
	  onMouseEnter: _propTypes2['default'].func,
	  onMouseLeave: _propTypes2['default'].func,
	  onMouseDown: _propTypes2['default'].func,
	  stretch: _propTypes2['default'].string,
	  children: _propTypes2['default'].node,
	  point: _propTypes2['default'].shape({
	    pageX: _propTypes2['default'].number,
	    pageY: _propTypes2['default'].number
	  })
	};
	
	var _initialiseProps = function _initialiseProps() {
	  var _this3 = this;
	
	  this.onAlign = function (popupDomNode, align) {
	    var props = _this3.props;
	    var currentAlignClassName = props.getClassNameFromAlign(align);
	    // FIX: https://github.com/react-component/trigger/issues/56
	    // FIX: https://github.com/react-component/tooltip/issues/79
	    if (_this3.currentAlignClassName !== currentAlignClassName) {
	      _this3.currentAlignClassName = currentAlignClassName;
	      popupDomNode.className = _this3.getClassName(currentAlignClassName);
	    }
	    props.onAlign(popupDomNode, align);
	  };
	
	  this.setStretchSize = function () {
	    var _props2 = _this3.props,
	        stretch = _props2.stretch,
	        getRootDomNode = _props2.getRootDomNode,
	        visible = _props2.visible;
	    var _state2 = _this3.state,
	        stretchChecked = _state2.stretchChecked,
	        targetHeight = _state2.targetHeight,
	        targetWidth = _state2.targetWidth;
	
	
	    if (!stretch || !visible) {
	      if (stretchChecked) {
	        _this3.setState({ stretchChecked: false });
	      }
	      return;
	    }
	
	    var $ele = getRootDomNode();
	    if (!$ele) return;
	
	    var height = $ele.offsetHeight;
	    var width = $ele.offsetWidth;
	
	    if (targetHeight !== height || targetWidth !== width || !stretchChecked) {
	      _this3.setState({
	        stretchChecked: true,
	        targetHeight: height,
	        targetWidth: width
	      });
	    }
	  };
	
	  this.getTargetElement = function () {
	    return _this3.props.getRootDomNode();
	  };
	
	  this.getAlignTarget = function () {
	    var point = _this3.props.point;
	
	    if (point) {
	      return point;
	    }
	    return _this3.getTargetElement;
	  };
	};
	
	exports['default'] = Popup;
	module.exports = exports['default'];

/***/ }),
/* 947 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _Align = __webpack_require__(948);
	
	var _Align2 = _interopRequireDefault(_Align);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports['default'] = _Align2['default']; // export this package's api
	
	module.exports = exports['default'];

/***/ }),
/* 948 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _domAlign = __webpack_require__(949);
	
	var _addEventListener = __webpack_require__(926);
	
	var _addEventListener2 = _interopRequireDefault(_addEventListener);
	
	var _util = __webpack_require__(962);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function getElement(func) {
	  if (typeof func !== 'function' || !func) return null;
	  return func();
	}
	
	function getPoint(point) {
	  if (typeof point !== 'object' || !point) return null;
	  return point;
	}
	
	var Align = function (_Component) {
	  (0, _inherits3['default'])(Align, _Component);
	
	  function Align() {
	    var _temp, _this, _ret;
	
	    (0, _classCallCheck3['default'])(this, Align);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3['default'])(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.forceAlign = function () {
	      var _this$props = _this.props,
	          disabled = _this$props.disabled,
	          target = _this$props.target,
	          align = _this$props.align,
	          onAlign = _this$props.onAlign;
	
	      if (!disabled && target) {
	        var source = _reactDom2['default'].findDOMNode(_this);
	
	        var result = void 0;
	        var element = getElement(target);
	        var point = getPoint(target);
	
	        if (element) {
	          result = (0, _domAlign.alignElement)(source, element, align);
	        } else if (point) {
	          result = (0, _domAlign.alignPoint)(source, point, align);
	        }
	
	        if (onAlign) {
	          onAlign(source, result);
	        }
	      }
	    }, _temp), (0, _possibleConstructorReturn3['default'])(_this, _ret);
	  }
	
	  Align.prototype.componentDidMount = function componentDidMount() {
	    var props = this.props;
	    // if parent ref not attached .... use document.getElementById
	    this.forceAlign();
	    if (!props.disabled && props.monitorWindowResize) {
	      this.startMonitorWindowResize();
	    }
	  };
	
	  Align.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var reAlign = false;
	    var props = this.props;
	
	    if (!props.disabled) {
	      var source = _reactDom2['default'].findDOMNode(this);
	      var sourceRect = source ? source.getBoundingClientRect() : null;
	
	      if (prevProps.disabled) {
	        reAlign = true;
	      } else {
	        var lastElement = getElement(prevProps.target);
	        var currentElement = getElement(props.target);
	        var lastPoint = getPoint(prevProps.target);
	        var currentPoint = getPoint(props.target);
	
	        if ((0, _util.isWindow)(lastElement) && (0, _util.isWindow)(currentElement)) {
	          // Skip if is window
	          reAlign = false;
	        } else if (lastElement !== currentElement || // Element change
	        lastElement && !currentElement && currentPoint || // Change from element to point
	        lastPoint && currentPoint && currentElement || // Change from point to element
	        currentPoint && !(0, _util.isSamePoint)(lastPoint, currentPoint)) {
	          reAlign = true;
	        }
	
	        // If source element size changed
	        var preRect = this.sourceRect || {};
	        if (!reAlign && source && (preRect.width !== sourceRect.width || preRect.height !== sourceRect.height)) {
	          reAlign = true;
	        }
	      }
	
	      this.sourceRect = sourceRect;
	    }
	
	    if (reAlign) {
	      this.forceAlign();
	    }
	
	    if (props.monitorWindowResize && !props.disabled) {
	      this.startMonitorWindowResize();
	    } else {
	      this.stopMonitorWindowResize();
	    }
	  };
	
	  Align.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.stopMonitorWindowResize();
	  };
	
	  Align.prototype.startMonitorWindowResize = function startMonitorWindowResize() {
	    if (!this.resizeHandler) {
	      this.bufferMonitor = (0, _util.buffer)(this.forceAlign, this.props.monitorBufferTime);
	      this.resizeHandler = (0, _addEventListener2['default'])(window, 'resize', this.bufferMonitor);
	    }
	  };
	
	  Align.prototype.stopMonitorWindowResize = function stopMonitorWindowResize() {
	    if (this.resizeHandler) {
	      this.bufferMonitor.clear();
	      this.resizeHandler.remove();
	      this.resizeHandler = null;
	    }
	  };
	
	  Align.prototype.render = function render() {
	    var _this2 = this;
	
	    var _props = this.props,
	        childrenProps = _props.childrenProps,
	        children = _props.children;
	
	    var child = _react2['default'].Children.only(children);
	    if (childrenProps) {
	      var newProps = {};
	      var propList = Object.keys(childrenProps);
	      propList.forEach(function (prop) {
	        newProps[prop] = _this2.props[childrenProps[prop]];
	      });
	
	      return _react2['default'].cloneElement(child, newProps);
	    }
	    return child;
	  };
	
	  return Align;
	}(_react.Component);
	
	Align.propTypes = {
	  childrenProps: _propTypes2['default'].object,
	  align: _propTypes2['default'].object.isRequired,
	  target: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].shape({
	    clientX: _propTypes2['default'].number,
	    clientY: _propTypes2['default'].number,
	    pageX: _propTypes2['default'].number,
	    pageY: _propTypes2['default'].number
	  })]),
	  onAlign: _propTypes2['default'].func,
	  monitorBufferTime: _propTypes2['default'].number,
	  monitorWindowResize: _propTypes2['default'].bool,
	  disabled: _propTypes2['default'].bool,
	  children: _propTypes2['default'].any
	};
	Align.defaultProps = {
	  target: function target() {
	    return window;
	  },
	  monitorBufferTime: 50,
	  monitorWindowResize: false,
	  disabled: false
	};
	exports['default'] = Align;
	module.exports = exports['default'];

/***/ }),
/* 949 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.alignPoint = exports.alignElement = undefined;
	
	var _alignElement = __webpack_require__(950);
	
	var _alignElement2 = _interopRequireDefault(_alignElement);
	
	var _alignPoint = __webpack_require__(961);
	
	var _alignPoint2 = _interopRequireDefault(_alignPoint);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	exports.alignElement = _alignElement2['default'];
	exports.alignPoint = _alignPoint2['default'];
	exports['default'] = _alignElement2['default'];

/***/ }),
/* 950 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _align = __webpack_require__(951);
	
	var _align2 = _interopRequireDefault(_align);
	
	var _getOffsetParent = __webpack_require__(955);
	
	var _getOffsetParent2 = _interopRequireDefault(_getOffsetParent);
	
	var _getVisibleRectForElement = __webpack_require__(954);
	
	var _getVisibleRectForElement2 = _interopRequireDefault(_getVisibleRectForElement);
	
	var _getRegion = __webpack_require__(958);
	
	var _getRegion2 = _interopRequireDefault(_getRegion);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function isOutOfVisibleRect(target) {
	  var visibleRect = (0, _getVisibleRectForElement2['default'])(target);
	  var targetRegion = (0, _getRegion2['default'])(target);
	
	  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;
	}
	
	function alignElement(el, refNode, align) {
	  var target = align.target || refNode;
	  var refNodeRegion = (0, _getRegion2['default'])(target);
	
	  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target);
	
	  return (0, _align2['default'])(el, refNodeRegion, align, isTargetNotOutOfVisible);
	}
	
	alignElement.__getOffsetParent = _getOffsetParent2['default'];
	
	alignElement.__getVisibleRectForElement = _getVisibleRectForElement2['default'];
	
	exports['default'] = alignElement;
	module.exports = exports['default'];

/***/ }),
/* 951 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(952);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _getVisibleRectForElement = __webpack_require__(954);
	
	var _getVisibleRectForElement2 = _interopRequireDefault(_getVisibleRectForElement);
	
	var _adjustForViewport = __webpack_require__(957);
	
	var _adjustForViewport2 = _interopRequireDefault(_adjustForViewport);
	
	var _getRegion = __webpack_require__(958);
	
	var _getRegion2 = _interopRequireDefault(_getRegion);
	
	var _getElFuturePos = __webpack_require__(959);
	
	var _getElFuturePos2 = _interopRequireDefault(_getElFuturePos);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	// http://yiminghe.iteye.com/blog/1124720
	
	function isFailX(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
	} /**
	   * align dom node flexibly
	   * @author yiminghe@gmail.com
	   */
	
	function isFailY(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
	}
	
	function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
	}
	
	function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
	}
	
	function flip(points, reg, map) {
	  var ret = [];
	  _utils2['default'].each(points, function (p) {
	    ret.push(p.replace(reg, function (m) {
	      return map[m];
	    }));
	  });
	  return ret;
	}
	
	function flipOffset(offset, index) {
	  offset[index] = -offset[index];
	  return offset;
	}
	
	function convertOffset(str, offsetLen) {
	  var n = void 0;
	  if (/%$/.test(str)) {
	    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
	  } else {
	    n = parseInt(str, 10);
	  }
	  return n || 0;
	}
	
	function normalizeOffset(offset, el) {
	  offset[0] = convertOffset(offset[0], el.width);
	  offset[1] = convertOffset(offset[1], el.height);
	}
	
	/**
	 * @param el
	 * @param tgtRegion 参照节点所占的区域: { left, top, width, height }
	 * @param align
	 */
	function doAlign(el, tgtRegion, align, isTgtRegionVisible) {
	  var points = align.points;
	  var offset = align.offset || [0, 0];
	  var targetOffset = align.targetOffset || [0, 0];
	  var overflow = align.overflow;
	  var source = align.source || el;
	  offset = [].concat(offset);
	  targetOffset = [].concat(targetOffset);
	  overflow = overflow || {};
	  var newOverflowCfg = {};
	  var fail = 0;
	  // 当前节点可以被放置的显示区域
	  var visibleRect = (0, _getVisibleRectForElement2['default'])(source);
	  // 当前节点所占的区域, left/top/width/height
	  var elRegion = (0, _getRegion2['default'])(source);
	  // 将 offset 转换成数值，支持百分比
	  normalizeOffset(offset, elRegion);
	  normalizeOffset(targetOffset, tgtRegion);
	  // 当前节点将要被放置的位置
	  var elFuturePos = (0, _getElFuturePos2['default'])(elRegion, tgtRegion, points, offset, targetOffset);
	  // 当前节点将要所处的区域
	  var newElRegion = _utils2['default'].merge(elRegion, elFuturePos);
	
	  // 如果可视区域不能完全放置当前节点时允许调整
	  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {
	    if (overflow.adjustX) {
	      // 如果横向不能放下
	      if (isFailX(elFuturePos, elRegion, visibleRect)) {
	        // 对齐位置反下
	        var newPoints = flip(points, /[lr]/ig, {
	          l: 'r',
	          r: 'l'
	        });
	        // 偏移量也反下
	        var newOffset = flipOffset(offset, 0);
	        var newTargetOffset = flipOffset(targetOffset, 0);
	        var newElFuturePos = (0, _getElFuturePos2['default'])(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);
	
	        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
	          fail = 1;
	          points = newPoints;
	          offset = newOffset;
	          targetOffset = newTargetOffset;
	        }
	      }
	    }
	
	    if (overflow.adjustY) {
	      // 如果纵向不能放下
	      if (isFailY(elFuturePos, elRegion, visibleRect)) {
	        // 对齐位置反下
	        var _newPoints = flip(points, /[tb]/ig, {
	          t: 'b',
	          b: 't'
	        });
	        // 偏移量也反下
	        var _newOffset = flipOffset(offset, 1);
	        var _newTargetOffset = flipOffset(targetOffset, 1);
	        var _newElFuturePos = (0, _getElFuturePos2['default'])(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);
	
	        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
	          fail = 1;
	          points = _newPoints;
	          offset = _newOffset;
	          targetOffset = _newTargetOffset;
	        }
	      }
	    }
	
	    // 如果失败，重新计算当前节点将要被放置的位置
	    if (fail) {
	      elFuturePos = (0, _getElFuturePos2['default'])(elRegion, tgtRegion, points, offset, targetOffset);
	      _utils2['default'].mix(newElRegion, elFuturePos);
	    }
	    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);
	    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect);
	    // 检查反下后的位置是否可以放下了，如果仍然放不下：
	    // 1. 复原修改过的定位参数
	    if (isStillFailX || isStillFailY) {
	      points = align.points;
	      offset = align.offset || [0, 0];
	      targetOffset = align.targetOffset || [0, 0];
	    }
	    // 2. 只有指定了可以调整当前方向才调整
	    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;
	    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY;
	
	    // 确实要调整，甚至可能会调整高度宽度
	    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
	      newElRegion = (0, _adjustForViewport2['default'])(elFuturePos, elRegion, visibleRect, newOverflowCfg);
	    }
	  }
	
	  // need judge to in case set fixed with in css on height auto element
	  if (newElRegion.width !== elRegion.width) {
	    _utils2['default'].css(source, 'width', _utils2['default'].width(source) + newElRegion.width - elRegion.width);
	  }
	
	  if (newElRegion.height !== elRegion.height) {
	    _utils2['default'].css(source, 'height', _utils2['default'].height(source) + newElRegion.height - elRegion.height);
	  }
	
	  // https://github.com/kissyteam/kissy/issues/190
	  // 相对于屏幕位置没变，而 left/top 变了
	  // 例如 <div 'relative'><el absolute></div>
	  _utils2['default'].offset(source, {
	    left: newElRegion.left,
	    top: newElRegion.top
	  }, {
	    useCssRight: align.useCssRight,
	    useCssBottom: align.useCssBottom,
	    useCssTransform: align.useCssTransform,
	    ignoreShake: align.ignoreShake
	  });
	
	  return {
	    points: points,
	    offset: offset,
	    targetOffset: targetOffset,
	    overflow: newOverflowCfg
	  };
	}
	
	exports['default'] = doAlign;
	/**
	 *  2012-04-26 yiminghe@gmail.com
	 *   - 优化智能对齐算法
	 *   - 慎用 resizeXX
	 *
	 *  2011-07-13 yiminghe@gmail.com note:
	 *   - 增加智能对齐，以及大小调整选项
	 **/
	
	module.exports = exports['default'];

/***/ }),
/* 952 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _propertyUtils = __webpack_require__(953);
	
	var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
	
	var getComputedStyleX = void 0;
	
	// https://stackoverflow.com/a/3485654/3040605
	function forceRelayout(elem) {
	  var originalStyle = elem.style.display;
	  elem.style.display = 'none';
	  elem.offsetHeight; // eslint-disable-line
	  elem.style.display = originalStyle;
	}
	
	function css(el, name, v) {
	  var value = v;
	  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
	    for (var i in name) {
	      if (name.hasOwnProperty(i)) {
	        css(el, i, name[i]);
	      }
	    }
	    return undefined;
	  }
	  if (typeof value !== 'undefined') {
	    if (typeof value === 'number') {
	      value = value + 'px';
	    }
	    el.style[name] = value;
	    return undefined;
	  }
	  return getComputedStyleX(el, name);
	}
	
	function getClientPosition(elem) {
	  var box = void 0;
	  var x = void 0;
	  var y = void 0;
	  var doc = elem.ownerDocument;
	  var body = doc.body;
	  var docElem = doc && doc.documentElement;
	  // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
	  box = elem.getBoundingClientRect();
	
	  // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
	  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
	  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin
	
	  x = box.left;
	  y = box.top;
	
	  // In IE, most of the time, 2 extra pixels are added to the top and left
	  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
	  // IE6 standards mode, this border can be overridden by setting the
	  // document element's border to zero -- thus, we cannot rely on the
	  // offset always being 2 pixels.
	
	  // In quirks mode, the offset can be determined by querying the body's
	  // clientLeft/clientTop, but in standards mode, it is found by querying
	  // the document element's clientLeft/clientTop.  Since we already called
	  // getClientBoundingRect we have already forced a reflow, so it is not
	  // too expensive just to query them all.
	
	  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
	  // 窗口边框标准是设 documentElement ,quirks 时设置 body
	  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
	  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
	  // 标准 ie 下 docElem.clientTop 就是 border-top
	  // ie7 html 即窗口边框改变不了。永远为 2
	  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0
	
	  x -= docElem.clientLeft || body.clientLeft || 0;
	  y -= docElem.clientTop || body.clientTop || 0;
	
	  return {
	    left: x,
	    top: y
	  };
	}
	
	function getScroll(w, top) {
	  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
	  var method = 'scroll' + (top ? 'Top' : 'Left');
	  if (typeof ret !== 'number') {
	    var d = w.document;
	    // ie6,7,8 standard mode
	    ret = d.documentElement[method];
	    if (typeof ret !== 'number') {
	      // quirks mode
	      ret = d.body[method];
	    }
	  }
	  return ret;
	}
	
	function getScrollLeft(w) {
	  return getScroll(w);
	}
	
	function getScrollTop(w) {
	  return getScroll(w, true);
	}
	
	function getOffset(el) {
	  var pos = getClientPosition(el);
	  var doc = el.ownerDocument;
	  var w = doc.defaultView || doc.parentWindow;
	  pos.left += getScrollLeft(w);
	  pos.top += getScrollTop(w);
	  return pos;
	}
	
	/**
	 * A crude way of determining if an object is a window
	 * @member util
	 */
	function isWindow(obj) {
	  // must use == for ie8
	  /* eslint eqeqeq:0 */
	  return obj !== null && obj !== undefined && obj == obj.window;
	}
	
	function getDocument(node) {
	  if (isWindow(node)) {
	    return node.document;
	  }
	  if (node.nodeType === 9) {
	    return node;
	  }
	  return node.ownerDocument;
	}
	
	function _getComputedStyle(elem, name, cs) {
	  var computedStyle = cs;
	  var val = '';
	  var d = getDocument(elem);
	  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null);
	
	  // https://github.com/kissyteam/kissy/issues/61
	  if (computedStyle) {
	    val = computedStyle.getPropertyValue(name) || computedStyle[name];
	  }
	
	  return val;
	}
	
	var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');
	var RE_POS = /^(top|right|bottom|left)$/;
	var CURRENT_STYLE = 'currentStyle';
	var RUNTIME_STYLE = 'runtimeStyle';
	var LEFT = 'left';
	var PX = 'px';
	
	function _getComputedStyleIE(elem, name) {
	  // currentStyle maybe null
	  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
	  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];
	
	  // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
	  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
	  // 在 ie 下不对，需要直接用 offset 方式
	  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了
	
	  // From the awesome hack by Dean Edwards
	  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
	  // If we're not dealing with a regular pixel number
	  // but a number that has a weird ending, we need to convert it to pixels
	  // exclude left right for relativity
	  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
	    // Remember the original values
	    var style = elem.style;
	    var left = style[LEFT];
	    var rsLeft = elem[RUNTIME_STYLE][LEFT];
	
	    // prevent flashing of content
	    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];
	
	    // Put in the new values to get a computed value out
	    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
	    ret = style.pixelLeft + PX;
	
	    // Revert the changed values
	    style[LEFT] = left;
	
	    elem[RUNTIME_STYLE][LEFT] = rsLeft;
	  }
	  return ret === '' ? 'auto' : ret;
	}
	
	if (typeof window !== 'undefined') {
	  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
	}
	
	function getOffsetDirection(dir, option) {
	  if (dir === 'left') {
	    return option.useCssRight ? 'right' : dir;
	  }
	  return option.useCssBottom ? 'bottom' : dir;
	}
	
	function oppositeOffsetDirection(dir) {
	  if (dir === 'left') {
	    return 'right';
	  } else if (dir === 'right') {
	    return 'left';
	  } else if (dir === 'top') {
	    return 'bottom';
	  } else if (dir === 'bottom') {
	    return 'top';
	  }
	}
	
	// 设置 elem 相对 elem.ownerDocument 的坐标
	function setLeftTop(elem, offset, option) {
	  // set position first, in-case top/left are set even on static elem
	  if (css(elem, 'position') === 'static') {
	    elem.style.position = 'relative';
	  }
	  var presetH = -999;
	  var presetV = -999;
	  var horizontalProperty = getOffsetDirection('left', option);
	  var verticalProperty = getOffsetDirection('top', option);
	  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
	  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);
	
	  if (horizontalProperty !== 'left') {
	    presetH = 999;
	  }
	
	  if (verticalProperty !== 'top') {
	    presetV = 999;
	  }
	  var originalTransition = '';
	  var originalOffset = getOffset(elem);
	  if ('left' in offset || 'top' in offset) {
	    originalTransition = (0, _propertyUtils.getTransitionProperty)(elem) || '';
	    (0, _propertyUtils.setTransitionProperty)(elem, 'none');
	  }
	  if ('left' in offset) {
	    elem.style[oppositeHorizontalProperty] = '';
	    elem.style[horizontalProperty] = presetH + 'px';
	  }
	  if ('top' in offset) {
	    elem.style[oppositeVerticalProperty] = '';
	    elem.style[verticalProperty] = presetV + 'px';
	  }
	  // force relayout
	  forceRelayout(elem);
	  var old = getOffset(elem);
	  var originalStyle = {};
	  for (var key in offset) {
	    if (offset.hasOwnProperty(key)) {
	      var dir = getOffsetDirection(key, option);
	      var preset = key === 'left' ? presetH : presetV;
	      var off = originalOffset[key] - old[key];
	      if (dir === key) {
	        originalStyle[dir] = preset + off;
	      } else {
	        originalStyle[dir] = preset - off;
	      }
	    }
	  }
	  css(elem, originalStyle);
	  // force relayout
	  forceRelayout(elem);
	  if ('left' in offset || 'top' in offset) {
	    (0, _propertyUtils.setTransitionProperty)(elem, originalTransition);
	  }
	  var ret = {};
	  for (var _key in offset) {
	    if (offset.hasOwnProperty(_key)) {
	      var _dir = getOffsetDirection(_key, option);
	      var _off = offset[_key] - originalOffset[_key];
	      if (_key === _dir) {
	        ret[_dir] = originalStyle[_dir] + _off;
	      } else {
	        ret[_dir] = originalStyle[_dir] - _off;
	      }
	    }
	  }
	  css(elem, ret);
	}
	
	function setTransform(elem, offset) {
	  var originalOffset = getOffset(elem);
	  var originalXY = (0, _propertyUtils.getTransformXY)(elem);
	  var resultXY = { x: originalXY.x, y: originalXY.y };
	  if ('left' in offset) {
	    resultXY.x = originalXY.x + offset.left - originalOffset.left;
	  }
	  if ('top' in offset) {
	    resultXY.y = originalXY.y + offset.top - originalOffset.top;
	  }
	  (0, _propertyUtils.setTransformXY)(elem, resultXY);
	}
	
	function setOffset(elem, offset, option) {
	  if (option.ignoreShake) {
	    var oriOffset = getOffset(elem);
	
	    var oLeft = oriOffset.left.toFixed(0);
	    var oTop = oriOffset.top.toFixed(0);
	    var tLeft = offset.left.toFixed(0);
	    var tTop = offset.top.toFixed(0);
	
	    if (oLeft === tLeft && oTop === tTop) {
	      return;
	    }
	  }
	
	  if (option.useCssRight || option.useCssBottom) {
	    setLeftTop(elem, offset, option);
	  } else if (option.useCssTransform && (0, _propertyUtils.getTransformName)() in document.body.style) {
	    setTransform(elem, offset, option);
	  } else {
	    setLeftTop(elem, offset, option);
	  }
	}
	
	function each(arr, fn) {
	  for (var i = 0; i < arr.length; i++) {
	    fn(arr[i]);
	  }
	}
	
	function isBorderBoxFn(elem) {
	  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
	}
	
	var BOX_MODELS = ['margin', 'border', 'padding'];
	var CONTENT_INDEX = -1;
	var PADDING_INDEX = 2;
	var BORDER_INDEX = 1;
	var MARGIN_INDEX = 0;
	
	function swap(elem, options, callback) {
	  var old = {};
	  var style = elem.style;
	  var name = void 0;
	
	  // Remember the old values, and insert the new ones
	  for (name in options) {
	    if (options.hasOwnProperty(name)) {
	      old[name] = style[name];
	      style[name] = options[name];
	    }
	  }
	
	  callback.call(elem);
	
	  // Revert the old values
	  for (name in options) {
	    if (options.hasOwnProperty(name)) {
	      style[name] = old[name];
	    }
	  }
	}
	
	function getPBMWidth(elem, props, which) {
	  var value = 0;
	  var prop = void 0;
	  var j = void 0;
	  var i = void 0;
	  for (j = 0; j < props.length; j++) {
	    prop = props[j];
	    if (prop) {
	      for (i = 0; i < which.length; i++) {
	        var cssProp = void 0;
	        if (prop === 'border') {
	          cssProp = '' + prop + which[i] + 'Width';
	        } else {
	          cssProp = prop + which[i];
	        }
	        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
	      }
	    }
	  }
	  return value;
	}
	
	var domUtils = {};
	
	each(['Width', 'Height'], function (name) {
	  domUtils['doc' + name] = function (refWin) {
	    var d = refWin.document;
	    return Math.max(
	    // firefox chrome documentElement.scrollHeight< body.scrollHeight
	    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
	    d.documentElement['scroll' + name],
	    // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
	    d.body['scroll' + name], domUtils['viewport' + name](d));
	  };
	
	  domUtils['viewport' + name] = function (win) {
	    // pc browser includes scrollbar in window.innerWidth
	    var prop = 'client' + name;
	    var doc = win.document;
	    var body = doc.body;
	    var documentElement = doc.documentElement;
	    var documentElementProp = documentElement[prop];
	    // 标准模式取 documentElement
	    // backcompat 取 body
	    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
	  };
	});
	
	/*
	 得到元素的大小信息
	 @param elem
	 @param name
	 @param {String} [extra]  'padding' : (css width) + padding
	 'border' : (css width) + padding + border
	 'margin' : (css width) + padding + border + margin
	 */
	function getWH(elem, name, ex) {
	  var extra = ex;
	  if (isWindow(elem)) {
	    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
	  } else if (elem.nodeType === 9) {
	    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
	  }
	  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
	  var borderBoxValue = name === 'width' ? elem.getBoundingClientRect().width : elem.getBoundingClientRect().height;
	  var computedStyle = getComputedStyleX(elem);
	  var isBorderBox = isBorderBoxFn(elem, computedStyle);
	  var cssBoxValue = 0;
	  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {
	    borderBoxValue = undefined;
	    // Fall back to computed then un computed css if necessary
	    cssBoxValue = getComputedStyleX(elem, name);
	    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {
	      cssBoxValue = elem.style[name] || 0;
	    }
	    // Normalize '', auto, and prepare for extra
	    cssBoxValue = parseFloat(cssBoxValue) || 0;
	  }
	  if (extra === undefined) {
	    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
	  }
	  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
	  var val = borderBoxValue || cssBoxValue;
	  if (extra === CONTENT_INDEX) {
	    if (borderBoxValueOrIsBorderBox) {
	      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);
	    }
	    return cssBoxValue;
	  } else if (borderBoxValueOrIsBorderBox) {
	    if (extra === BORDER_INDEX) {
	      return val;
	    }
	    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle));
	  }
	  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);
	}
	
	var cssShow = {
	  position: 'absolute',
	  visibility: 'hidden',
	  display: 'block'
	};
	
	// fix #119 : https://github.com/kissyteam/kissy/issues/119
	function getWHIgnoreDisplay() {
	  for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
	    args[_key2] = arguments[_key2];
	  }
	
	  var val = void 0;
	  var elem = args[0];
	  // in case elem is window
	  // elem.offsetWidth === undefined
	  if (elem.offsetWidth !== 0) {
	    val = getWH.apply(undefined, args);
	  } else {
	    swap(elem, cssShow, function () {
	      val = getWH.apply(undefined, args);
	    });
	  }
	  return val;
	}
	
	each(['width', 'height'], function (name) {
	  var first = name.charAt(0).toUpperCase() + name.slice(1);
	  domUtils['outer' + first] = function (el, includeMargin) {
	    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
	  };
	  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
	
	  domUtils[name] = function (elem, v) {
	    var val = v;
	    if (val !== undefined) {
	      if (elem) {
	        var computedStyle = getComputedStyleX(elem);
	        var isBorderBox = isBorderBoxFn(elem);
	        if (isBorderBox) {
	          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);
	        }
	        return css(elem, name, val);
	      }
	      return undefined;
	    }
	    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
	  };
	});
	
	function mix(to, from) {
	  for (var i in from) {
	    if (from.hasOwnProperty(i)) {
	      to[i] = from[i];
	    }
	  }
	  return to;
	}
	
	var utils = {
	  getWindow: function getWindow(node) {
	    if (node && node.document && node.setTimeout) {
	      return node;
	    }
	    var doc = node.ownerDocument || node;
	    return doc.defaultView || doc.parentWindow;
	  },
	
	  getDocument: getDocument,
	  offset: function offset(el, value, option) {
	    if (typeof value !== 'undefined') {
	      setOffset(el, value, option || {});
	    } else {
	      return getOffset(el);
	    }
	  },
	
	  isWindow: isWindow,
	  each: each,
	  css: css,
	  clone: function clone(obj) {
	    var i = void 0;
	    var ret = {};
	    for (i in obj) {
	      if (obj.hasOwnProperty(i)) {
	        ret[i] = obj[i];
	      }
	    }
	    var overflow = obj.overflow;
	    if (overflow) {
	      for (i in obj) {
	        if (obj.hasOwnProperty(i)) {
	          ret.overflow[i] = obj.overflow[i];
	        }
	      }
	    }
	    return ret;
	  },
	
	  mix: mix,
	  getWindowScrollLeft: function getWindowScrollLeft(w) {
	    return getScrollLeft(w);
	  },
	  getWindowScrollTop: function getWindowScrollTop(w) {
	    return getScrollTop(w);
	  },
	  merge: function merge() {
	    var ret = {};
	
	    for (var _len2 = arguments.length, args = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
	      args[_key3] = arguments[_key3];
	    }
	
	    for (var i = 0; i < args.length; i++) {
	      utils.mix(ret, args[i]);
	    }
	    return ret;
	  },
	
	  viewportWidth: 0,
	  viewportHeight: 0
	};
	
	mix(utils, domUtils);
	
	exports['default'] = utils;
	module.exports = exports['default'];

/***/ }),
/* 953 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getTransformName = getTransformName;
	exports.setTransitionProperty = setTransitionProperty;
	exports.getTransitionProperty = getTransitionProperty;
	exports.getTransformXY = getTransformXY;
	exports.setTransformXY = setTransformXY;
	var vendorPrefix = void 0;
	
	var jsCssMap = {
	  Webkit: '-webkit-',
	  Moz: '-moz-',
	  // IE did it wrong again ...
	  ms: '-ms-',
	  O: '-o-'
	};
	
	function getVendorPrefix() {
	  if (vendorPrefix !== undefined) {
	    return vendorPrefix;
	  }
	  vendorPrefix = '';
	  var style = document.createElement('p').style;
	  var testProp = 'Transform';
	  for (var key in jsCssMap) {
	    if (key + testProp in style) {
	      vendorPrefix = key;
	    }
	  }
	  return vendorPrefix;
	}
	
	function getTransitionName() {
	  return getVendorPrefix() ? getVendorPrefix() + 'TransitionProperty' : 'transitionProperty';
	}
	
	function getTransformName() {
	  return getVendorPrefix() ? getVendorPrefix() + 'Transform' : 'transform';
	}
	
	function setTransitionProperty(node, value) {
	  var name = getTransitionName();
	  if (name) {
	    node.style[name] = value;
	    if (name !== 'transitionProperty') {
	      node.style.transitionProperty = value;
	    }
	  }
	}
	
	function setTransform(node, value) {
	  var name = getTransformName();
	  if (name) {
	    node.style[name] = value;
	    if (name !== 'transform') {
	      node.style.transform = value;
	    }
	  }
	}
	
	function getTransitionProperty(node) {
	  return node.style.transitionProperty || node.style[getTransitionName()];
	}
	
	function getTransformXY(node) {
	  var style = window.getComputedStyle(node, null);
	  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
	  if (transform && transform !== 'none') {
	    var matrix = transform.replace(/[^0-9\-.,]/g, '').split(',');
	    return { x: parseFloat(matrix[12] || matrix[4], 0), y: parseFloat(matrix[13] || matrix[5], 0) };
	  }
	  return {
	    x: 0,
	    y: 0
	  };
	}
	
	var matrix2d = /matrix\((.*)\)/;
	var matrix3d = /matrix3d\((.*)\)/;
	
	function setTransformXY(node, xy) {
	  var style = window.getComputedStyle(node, null);
	  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
	  if (transform && transform !== 'none') {
	    var arr = void 0;
	    var match2d = transform.match(matrix2d);
	    if (match2d) {
	      match2d = match2d[1];
	      arr = match2d.split(',').map(function (item) {
	        return parseFloat(item, 10);
	      });
	      arr[4] = xy.x;
	      arr[5] = xy.y;
	      setTransform(node, 'matrix(' + arr.join(',') + ')');
	    } else {
	      var match3d = transform.match(matrix3d)[1];
	      arr = match3d.split(',').map(function (item) {
	        return parseFloat(item, 10);
	      });
	      arr[12] = xy.x;
	      arr[13] = xy.y;
	      setTransform(node, 'matrix3d(' + arr.join(',') + ')');
	    }
	  } else {
	    setTransform(node, 'translateX(' + xy.x + 'px) translateY(' + xy.y + 'px) translateZ(0)');
	  }
	}

/***/ }),
/* 954 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(952);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _getOffsetParent = __webpack_require__(955);
	
	var _getOffsetParent2 = _interopRequireDefault(_getOffsetParent);
	
	var _isAncestorFixed = __webpack_require__(956);
	
	var _isAncestorFixed2 = _interopRequireDefault(_isAncestorFixed);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * 获得元素的显示部分的区域
	 */
	function getVisibleRectForElement(element) {
	  var visibleRect = {
	    left: 0,
	    right: Infinity,
	    top: 0,
	    bottom: Infinity
	  };
	  var el = (0, _getOffsetParent2['default'])(element);
	  var doc = _utils2['default'].getDocument(element);
	  var win = doc.defaultView || doc.parentWindow;
	  var body = doc.body;
	  var documentElement = doc.documentElement;
	
	  // Determine the size of the visible rect by climbing the dom accounting for
	  // all scrollable containers.
	  while (el) {
	    // clientWidth is zero for inline block elements in ie.
	    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&
	    // body may have overflow set on it, yet we still get the entire
	    // viewport. In some browsers, el.offsetParent may be
	    // document.documentElement, so check for that too.
	    el !== body && el !== documentElement && _utils2['default'].css(el, 'overflow') !== 'visible') {
	      var pos = _utils2['default'].offset(el);
	      // add border
	      pos.left += el.clientLeft;
	      pos.top += el.clientTop;
	      visibleRect.top = Math.max(visibleRect.top, pos.top);
	      visibleRect.right = Math.min(visibleRect.right,
	      // consider area without scrollBar
	      pos.left + el.clientWidth);
	      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
	      visibleRect.left = Math.max(visibleRect.left, pos.left);
	    } else if (el === body || el === documentElement) {
	      break;
	    }
	    el = (0, _getOffsetParent2['default'])(el);
	  }
	
	  // Set element position to fixed
	  // make sure absolute element itself don't affect it's visible area
	  // https://github.com/ant-design/ant-design/issues/7601
	  var originalPosition = null;
	  if (!_utils2['default'].isWindow(element) && element.nodeType !== 9) {
	    originalPosition = element.style.position;
	    var position = _utils2['default'].css(element, 'position');
	    if (position === 'absolute') {
	      element.style.position = 'fixed';
	    }
	  }
	
	  var scrollX = _utils2['default'].getWindowScrollLeft(win);
	  var scrollY = _utils2['default'].getWindowScrollTop(win);
	  var viewportWidth = _utils2['default'].viewportWidth(win);
	  var viewportHeight = _utils2['default'].viewportHeight(win);
	  var documentWidth = documentElement.scrollWidth;
	  var documentHeight = documentElement.scrollHeight;
	
	  // Reset element position after calculate the visible area
	  if (element.style) {
	    element.style.position = originalPosition;
	  }
	
	  if ((0, _isAncestorFixed2['default'])(element)) {
	    // Clip by viewport's size.
	    visibleRect.left = Math.max(visibleRect.left, scrollX);
	    visibleRect.top = Math.max(visibleRect.top, scrollY);
	    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);
	    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);
	  } else {
	    // Clip by document's size.
	    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);
	    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);
	
	    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);
	    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);
	  }
	
	  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
	}
	
	exports['default'] = getVisibleRectForElement;
	module.exports = exports['default'];

/***/ }),
/* 955 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(952);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * 得到会导致元素显示不全的祖先元素
	 */
	
	function getOffsetParent(element) {
	  if (_utils2['default'].isWindow(element) || element.nodeType === 9) {
	    return null;
	  }
	  // ie 这个也不是完全可行
	  /*
	   <div style="width: 50px;height: 100px;overflow: hidden">
	   <div style="width: 50px;height: 100px;position: relative;" id="d6">
	   元素 6 高 100px 宽 50px<br/>
	   </div>
	   </div>
	   */
	  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!
	  //  In other browsers it only includes elements with position absolute, relative or
	  // fixed, not elements with overflow set to auto or scroll.
	  //        if (UA.ie && ieMode < 8) {
	  //            return element.offsetParent;
	  //        }
	  // 统一的 offsetParent 方法
	  var doc = _utils2['default'].getDocument(element);
	  var body = doc.body;
	  var parent = void 0;
	  var positionStyle = _utils2['default'].css(element, 'position');
	  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';
	
	  if (!skipStatic) {
	    return element.nodeName.toLowerCase() === 'html' ? null : element.parentNode;
	  }
	
	  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {
	    positionStyle = _utils2['default'].css(parent, 'position');
	    if (positionStyle !== 'static') {
	      return parent;
	    }
	  }
	  return null;
	}
	
	exports['default'] = getOffsetParent;
	module.exports = exports['default'];

/***/ }),
/* 956 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = isAncestorFixed;
	
	var _utils = __webpack_require__(952);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function isAncestorFixed(element) {
	  if (_utils2['default'].isWindow(element) || element.nodeType === 9) {
	    return false;
	  }
	
	  var doc = _utils2['default'].getDocument(element);
	  var body = doc.body;
	  var parent = null;
	  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {
	    var positionStyle = _utils2['default'].css(parent, 'position');
	    if (positionStyle === 'fixed') {
	      return true;
	    }
	  }
	  return false;
	}
	module.exports = exports['default'];

/***/ }),
/* 957 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(952);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {
	  var pos = _utils2['default'].clone(elFuturePos);
	  var size = {
	    width: elRegion.width,
	    height: elRegion.height
	  };
	
	  if (overflow.adjustX && pos.left < visibleRect.left) {
	    pos.left = visibleRect.left;
	  }
	
	  // Left edge inside and right edge outside viewport, try to resize it.
	  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {
	    size.width -= pos.left + size.width - visibleRect.right;
	  }
	
	  // Right edge outside viewport, try to move it.
	  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {
	    // 保证左边界和可视区域左边界对齐
	    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);
	  }
	
	  // Top edge outside viewport, try to move it.
	  if (overflow.adjustY && pos.top < visibleRect.top) {
	    pos.top = visibleRect.top;
	  }
	
	  // Top edge inside and bottom edge outside viewport, try to resize it.
	  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {
	    size.height -= pos.top + size.height - visibleRect.bottom;
	  }
	
	  // Bottom edge outside viewport, try to move it.
	  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {
	    // 保证上边界和可视区域上边界对齐
	    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);
	  }
	
	  return _utils2['default'].mix(pos, size);
	}
	
	exports['default'] = adjustForViewport;
	module.exports = exports['default'];

/***/ }),
/* 958 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(952);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function getRegion(node) {
	  var offset = void 0;
	  var w = void 0;
	  var h = void 0;
	  if (!_utils2['default'].isWindow(node) && node.nodeType !== 9) {
	    offset = _utils2['default'].offset(node);
	    w = _utils2['default'].outerWidth(node);
	    h = _utils2['default'].outerHeight(node);
	  } else {
	    var win = _utils2['default'].getWindow(node);
	    offset = {
	      left: _utils2['default'].getWindowScrollLeft(win),
	      top: _utils2['default'].getWindowScrollTop(win)
	    };
	    w = _utils2['default'].viewportWidth(win);
	    h = _utils2['default'].viewportHeight(win);
	  }
	  offset.width = w;
	  offset.height = h;
	  return offset;
	}
	
	exports['default'] = getRegion;
	module.exports = exports['default'];

/***/ }),
/* 959 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getAlignOffset = __webpack_require__(960);
	
	var _getAlignOffset2 = _interopRequireDefault(_getAlignOffset);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
	  var p1 = (0, _getAlignOffset2['default'])(refNodeRegion, points[1]);
	  var p2 = (0, _getAlignOffset2['default'])(elRegion, points[0]);
	  var diff = [p2.left - p1.left, p2.top - p1.top];
	
	  return {
	    left: elRegion.left - diff[0] + offset[0] - targetOffset[0],
	    top: elRegion.top - diff[1] + offset[1] - targetOffset[1]
	  };
	}
	
	exports['default'] = getElFuturePos;
	module.exports = exports['default'];

/***/ }),
/* 960 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * 获取 node 上的 align 对齐点 相对于页面的坐标
	 */
	
	function getAlignOffset(region, align) {
	  var V = align.charAt(0);
	  var H = align.charAt(1);
	  var w = region.width;
	  var h = region.height;
	
	  var x = region.left;
	  var y = region.top;
	
	  if (V === 'c') {
	    y += h / 2;
	  } else if (V === 'b') {
	    y += h;
	  }
	
	  if (H === 'c') {
	    x += w / 2;
	  } else if (H === 'r') {
	    x += w;
	  }
	
	  return {
	    left: x,
	    top: y
	  };
	}
	
	exports['default'] = getAlignOffset;
	module.exports = exports['default'];

/***/ }),
/* 961 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _utils = __webpack_require__(952);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _align = __webpack_require__(951);
	
	var _align2 = _interopRequireDefault(_align);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	/**
	 * `tgtPoint`: { pageX, pageY } or { clientX, clientY }.
	 * If client position provided, will internal convert to page position.
	 */
	
	function alignPoint(el, tgtPoint, align) {
	  var pageX = void 0;
	  var pageY = void 0;
	
	  var doc = _utils2['default'].getDocument(el);
	  var win = doc.defaultView || doc.parentWindow;
	
	  var scrollX = _utils2['default'].getWindowScrollLeft(win);
	  var scrollY = _utils2['default'].getWindowScrollTop(win);
	  var viewportWidth = _utils2['default'].viewportWidth(win);
	  var viewportHeight = _utils2['default'].viewportHeight(win);
	
	  if ('pageX' in tgtPoint) {
	    pageX = tgtPoint.pageX;
	  } else {
	    pageX = scrollX + tgtPoint.clientX;
	  }
	
	  if ('pageY' in tgtPoint) {
	    pageY = tgtPoint.pageY;
	  } else {
	    pageY = scrollY + tgtPoint.clientY;
	  }
	
	  var tgtRegion = {
	    left: pageX,
	    top: pageY,
	    width: 0,
	    height: 0
	  };
	
	  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight;
	
	  // Provide default target point
	  var points = [align.points[0], 'cc'];
	
	  return (0, _align2['default'])(el, tgtRegion, _extends({}, align, { points: points }), pointInView);
	}
	
	exports['default'] = alignPoint;
	module.exports = exports['default'];

/***/ }),
/* 962 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	exports.buffer = buffer;
	exports.isSamePoint = isSamePoint;
	exports.isWindow = isWindow;
	function buffer(fn, ms) {
	  var timer = void 0;
	
	  function clear() {
	    if (timer) {
	      clearTimeout(timer);
	      timer = null;
	    }
	  }
	
	  function bufferFn() {
	    clear();
	    timer = setTimeout(fn, ms);
	  }
	
	  bufferFn.clear = clear;
	
	  return bufferFn;
	}
	
	function isSamePoint(prev, next) {
	  if (prev === next) return true;
	  if (!prev || !next) return false;
	
	  if ('pageX' in next && 'pageY' in next) {
	    return prev.pageX === next.pageX && prev.pageY === next.pageY;
	  }
	
	  if ('clientX' in next && 'clientY' in next) {
	    return prev.clientX === next.clientX && prev.clientY === next.clientY;
	  }
	
	  return false;
	}
	
	function isWindow(obj) {
	  return obj && typeof obj === 'object' && obj.window === obj;
	}

/***/ }),
/* 963 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.CSSMotion = undefined;
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _defineProperty2 = __webpack_require__(917);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _ChildrenUtils = __webpack_require__(964);
	
	var _AnimateChild = __webpack_require__(965);
	
	var _AnimateChild2 = _interopRequireDefault(_AnimateChild);
	
	var _CSSMotion = __webpack_require__(971);
	
	var _CSSMotion2 = _interopRequireDefault(_CSSMotion);
	
	var _animate = __webpack_require__(970);
	
	var _animate2 = _interopRequireDefault(_animate);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var defaultKey = 'rc_animate_' + Date.now();
	
	function getChildrenFromProps(props) {
	  var children = props.children;
	  if (_react2['default'].isValidElement(children)) {
	    if (!children.key) {
	      return _react2['default'].cloneElement(children, {
	        key: defaultKey
	      });
	    }
	  }
	  return children;
	}
	
	function noop() {}
	
	exports.CSSMotion = _CSSMotion2['default'];
	
	var Animate = function (_React$Component) {
	  (0, _inherits3['default'])(Animate, _React$Component);
	
	  function Animate(props) {
	    (0, _classCallCheck3['default'])(this, Animate);
	
	    var _this = (0, _possibleConstructorReturn3['default'])(this, (Animate.__proto__ || Object.getPrototypeOf(Animate)).call(this, props));
	
	    _initialiseProps.call(_this);
	
	    _this.currentlyAnimatingKeys = {};
	    _this.keysToEnter = [];
	    _this.keysToLeave = [];
	
	    _this.state = {
	      children: (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props))
	    };
	
	    _this.childrenRefs = {};
	    return _this;
	  } // eslint-disable-line
	
	  (0, _createClass3['default'])(Animate, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;
	
	      var showProp = this.props.showProp;
	      var children = this.state.children;
	      if (showProp) {
	        children = children.filter(function (child) {
	          return !!child.props[showProp];
	        });
	      }
	      children.forEach(function (child) {
	        if (child) {
	          _this2.performAppear(child.key);
	        }
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var _this3 = this;
	
	      this.nextProps = nextProps;
	      var nextChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(nextProps));
	      var props = this.props;
	      // exclusive needs immediate response
	      if (props.exclusive) {
	        Object.keys(this.currentlyAnimatingKeys).forEach(function (key) {
	          _this3.stop(key);
	        });
	      }
	      var showProp = props.showProp;
	      var currentlyAnimatingKeys = this.currentlyAnimatingKeys;
	      // last props children if exclusive
	      var currentChildren = props.exclusive ? (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props)) : this.state.children;
	      // in case destroy in showProp mode
	      var newChildren = [];
	      if (showProp) {
	        currentChildren.forEach(function (currentChild) {
	          var nextChild = currentChild && (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, currentChild.key);
	          var newChild = void 0;
	          if ((!nextChild || !nextChild.props[showProp]) && currentChild.props[showProp]) {
	            newChild = _react2['default'].cloneElement(nextChild || currentChild, (0, _defineProperty3['default'])({}, showProp, true));
	          } else {
	            newChild = nextChild;
	          }
	          if (newChild) {
	            newChildren.push(newChild);
	          }
	        });
	        nextChildren.forEach(function (nextChild) {
	          if (!nextChild || !(0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, nextChild.key)) {
	            newChildren.push(nextChild);
	          }
	        });
	      } else {
	        newChildren = (0, _ChildrenUtils.mergeChildren)(currentChildren, nextChildren);
	      }
	
	      // need render to avoid update
	      this.setState({
	        children: newChildren
	      });
	
	      nextChildren.forEach(function (child) {
	        var key = child && child.key;
	        if (child && currentlyAnimatingKeys[key]) {
	          return;
	        }
	        var hasPrev = child && (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
	        if (showProp) {
	          var showInNext = child.props[showProp];
	          if (hasPrev) {
	            var showInNow = (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
	            if (!showInNow && showInNext) {
	              _this3.keysToEnter.push(key);
	            }
	          } else if (showInNext) {
	            _this3.keysToEnter.push(key);
	          }
	        } else if (!hasPrev) {
	          _this3.keysToEnter.push(key);
	        }
	      });
	
	      currentChildren.forEach(function (child) {
	        var key = child && child.key;
	        if (child && currentlyAnimatingKeys[key]) {
	          return;
	        }
	        var hasNext = child && (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, key);
	        if (showProp) {
	          var showInNow = child.props[showProp];
	          if (hasNext) {
	            var showInNext = (0, _ChildrenUtils.findShownChildInChildrenByKey)(nextChildren, key, showProp);
	            if (!showInNext && showInNow) {
	              _this3.keysToLeave.push(key);
	            }
	          } else if (showInNow) {
	            _this3.keysToLeave.push(key);
	          }
	        } else if (!hasNext) {
	          _this3.keysToLeave.push(key);
	        }
	      });
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      var keysToEnter = this.keysToEnter;
	      this.keysToEnter = [];
	      keysToEnter.forEach(this.performEnter);
	      var keysToLeave = this.keysToLeave;
	      this.keysToLeave = [];
	      keysToLeave.forEach(this.performLeave);
	    }
	  }, {
	    key: 'isValidChildByKey',
	    value: function isValidChildByKey(currentChildren, key) {
	      var showProp = this.props.showProp;
	      if (showProp) {
	        return (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
	      }
	      return (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
	    }
	  }, {
	    key: 'stop',
	    value: function stop(key) {
	      delete this.currentlyAnimatingKeys[key];
	      var component = this.childrenRefs[key];
	      if (component) {
	        component.stop();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;
	
	      var props = this.props;
	      this.nextProps = props;
	      var stateChildren = this.state.children;
	      var children = null;
	      if (stateChildren) {
	        children = stateChildren.map(function (child) {
	          if (child === null || child === undefined) {
	            return child;
	          }
	          if (!child.key) {
	            throw new Error('must set key for <rc-animate> children');
	          }
	          return _react2['default'].createElement(
	            _AnimateChild2['default'],
	            {
	              key: child.key,
	              ref: function ref(node) {
	                _this4.childrenRefs[child.key] = node;
	              },
	              animation: props.animation,
	              transitionName: props.transitionName,
	              transitionEnter: props.transitionEnter,
	              transitionAppear: props.transitionAppear,
	              transitionLeave: props.transitionLeave
	            },
	            child
	          );
	        });
	      }
	      var Component = props.component;
	      if (Component) {
	        var passedProps = props;
	        if (typeof Component === 'string') {
	          passedProps = (0, _extends3['default'])({
	            className: props.className,
	            style: props.style
	          }, props.componentProps);
	        }
	        return _react2['default'].createElement(
	          Component,
	          passedProps,
	          children
	        );
	      }
	      return children[0] || null;
	    }
	  }]);
	  return Animate;
	}(_react2['default'].Component);
	
	Animate.isAnimate = true;
	Animate.CSSMotion = _CSSMotion2['default'];
	Animate.propTypes = {
	  component: _propTypes2['default'].any,
	  componentProps: _propTypes2['default'].object,
	  animation: _propTypes2['default'].object,
	  transitionName: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].object]),
	  transitionEnter: _propTypes2['default'].bool,
	  transitionAppear: _propTypes2['default'].bool,
	  exclusive: _propTypes2['default'].bool,
	  transitionLeave: _propTypes2['default'].bool,
	  onEnd: _propTypes2['default'].func,
	  onEnter: _propTypes2['default'].func,
	  onLeave: _propTypes2['default'].func,
	  onAppear: _propTypes2['default'].func,
	  showProp: _propTypes2['default'].string,
	  children: _propTypes2['default'].node
	};
	Animate.defaultProps = {
	  animation: {},
	  component: 'span',
	  componentProps: {},
	  transitionEnter: true,
	  transitionLeave: true,
	  transitionAppear: false,
	  onEnd: noop,
	  onEnter: noop,
	  onLeave: noop,
	  onAppear: noop
	};
	
	var _initialiseProps = function _initialiseProps() {
	  var _this5 = this;
	
	  this.performEnter = function (key) {
	    // may already remove by exclusive
	    if (_this5.childrenRefs[key]) {
	      _this5.currentlyAnimatingKeys[key] = true;
	      _this5.childrenRefs[key].componentWillEnter(_this5.handleDoneAdding.bind(_this5, key, 'enter'));
	    }
	  };
	
	  this.performAppear = function (key) {
	    if (_this5.childrenRefs[key]) {
	      _this5.currentlyAnimatingKeys[key] = true;
	      _this5.childrenRefs[key].componentWillAppear(_this5.handleDoneAdding.bind(_this5, key, 'appear'));
	    }
	  };
	
	  this.handleDoneAdding = function (key, type) {
	    var props = _this5.props;
	    delete _this5.currentlyAnimatingKeys[key];
	    // if update on exclusive mode, skip check
	    if (props.exclusive && props !== _this5.nextProps) {
	      return;
	    }
	    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
	    if (!_this5.isValidChildByKey(currentChildren, key)) {
	      // exclusive will not need this
	      _this5.performLeave(key);
	    } else if (type === 'appear') {
	      if (_animate2['default'].allowAppearCallback(props)) {
	        props.onAppear(key);
	        props.onEnd(key, true);
	      }
	    } else if (_animate2['default'].allowEnterCallback(props)) {
	      props.onEnter(key);
	      props.onEnd(key, true);
	    }
	  };
	
	  this.performLeave = function (key) {
	    // may already remove by exclusive
	    if (_this5.childrenRefs[key]) {
	      _this5.currentlyAnimatingKeys[key] = true;
	      _this5.childrenRefs[key].componentWillLeave(_this5.handleDoneLeaving.bind(_this5, key));
	    }
	  };
	
	  this.handleDoneLeaving = function (key) {
	    var props = _this5.props;
	    delete _this5.currentlyAnimatingKeys[key];
	    // if update on exclusive mode, skip check
	    if (props.exclusive && props !== _this5.nextProps) {
	      return;
	    }
	    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
	    // in case state change is too fast
	    if (_this5.isValidChildByKey(currentChildren, key)) {
	      _this5.performEnter(key);
	    } else {
	      var end = function end() {
	        if (_animate2['default'].allowLeaveCallback(props)) {
	          props.onLeave(key);
	          props.onEnd(key, false);
	        }
	      };
	      if (!(0, _ChildrenUtils.isSameChildren)(_this5.state.children, currentChildren, props.showProp)) {
	        _this5.setState({
	          children: currentChildren
	        }, end);
	      } else {
	        end();
	      }
	    }
	  };
	};
	
	exports['default'] = Animate;

/***/ }),
/* 964 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.toArrayChildren = toArrayChildren;
	exports.findChildInChildrenByKey = findChildInChildrenByKey;
	exports.findShownChildInChildrenByKey = findShownChildInChildrenByKey;
	exports.findHiddenChildInChildrenByKey = findHiddenChildInChildrenByKey;
	exports.isSameChildren = isSameChildren;
	exports.mergeChildren = mergeChildren;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	function toArrayChildren(children) {
	  var ret = [];
	  _react2['default'].Children.forEach(children, function (child) {
	    ret.push(child);
	  });
	  return ret;
	}
	
	function findChildInChildrenByKey(children, key) {
	  var ret = null;
	  if (children) {
	    children.forEach(function (child) {
	      if (ret) {
	        return;
	      }
	      if (child && child.key === key) {
	        ret = child;
	      }
	    });
	  }
	  return ret;
	}
	
	function findShownChildInChildrenByKey(children, key, showProp) {
	  var ret = null;
	  if (children) {
	    children.forEach(function (child) {
	      if (child && child.key === key && child.props[showProp]) {
	        if (ret) {
	          throw new Error('two child with same key for <rc-animate> children');
	        }
	        ret = child;
	      }
	    });
	  }
	  return ret;
	}
	
	function findHiddenChildInChildrenByKey(children, key, showProp) {
	  var found = 0;
	  if (children) {
	    children.forEach(function (child) {
	      if (found) {
	        return;
	      }
	      found = child && child.key === key && !child.props[showProp];
	    });
	  }
	  return found;
	}
	
	function isSameChildren(c1, c2, showProp) {
	  var same = c1.length === c2.length;
	  if (same) {
	    c1.forEach(function (child, index) {
	      var child2 = c2[index];
	      if (child && child2) {
	        if (child && !child2 || !child && child2) {
	          same = false;
	        } else if (child.key !== child2.key) {
	          same = false;
	        } else if (showProp && child.props[showProp] !== child2.props[showProp]) {
	          same = false;
	        }
	      }
	    });
	  }
	  return same;
	}
	
	function mergeChildren(prev, next) {
	  var ret = [];
	
	  // For each key of `next`, the list of keys to insert before that key in
	  // the combined list
	  var nextChildrenPending = {};
	  var pendingChildren = [];
	  prev.forEach(function (child) {
	    if (child && findChildInChildrenByKey(next, child.key)) {
	      if (pendingChildren.length) {
	        nextChildrenPending[child.key] = pendingChildren;
	        pendingChildren = [];
	      }
	    } else {
	      pendingChildren.push(child);
	    }
	  });
	
	  next.forEach(function (child) {
	    if (child && Object.prototype.hasOwnProperty.call(nextChildrenPending, child.key)) {
	      ret = ret.concat(nextChildrenPending[child.key]);
	    }
	    ret.push(child);
	  });
	
	  ret = ret.concat(pendingChildren);
	
	  return ret;
	}

/***/ }),
/* 965 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _cssAnimation = __webpack_require__(966);
	
	var _cssAnimation2 = _interopRequireDefault(_cssAnimation);
	
	var _animate = __webpack_require__(970);
	
	var _animate2 = _interopRequireDefault(_animate);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var transitionMap = {
	  enter: 'transitionEnter',
	  appear: 'transitionAppear',
	  leave: 'transitionLeave'
	};
	
	var AnimateChild = function (_React$Component) {
	  (0, _inherits3['default'])(AnimateChild, _React$Component);
	
	  function AnimateChild() {
	    (0, _classCallCheck3['default'])(this, AnimateChild);
	    return (0, _possibleConstructorReturn3['default'])(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).apply(this, arguments));
	  }
	
	  (0, _createClass3['default'])(AnimateChild, [{
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.stop();
	    }
	  }, {
	    key: 'componentWillEnter',
	    value: function componentWillEnter(done) {
	      if (_animate2['default'].isEnterSupported(this.props)) {
	        this.transition('enter', done);
	      } else {
	        done();
	      }
	    }
	  }, {
	    key: 'componentWillAppear',
	    value: function componentWillAppear(done) {
	      if (_animate2['default'].isAppearSupported(this.props)) {
	        this.transition('appear', done);
	      } else {
	        done();
	      }
	    }
	  }, {
	    key: 'componentWillLeave',
	    value: function componentWillLeave(done) {
	      if (_animate2['default'].isLeaveSupported(this.props)) {
	        this.transition('leave', done);
	      } else {
	        // always sync, do not interupt with react component life cycle
	        // update hidden -> animate hidden ->
	        // didUpdate -> animate leave -> unmount (if animate is none)
	        done();
	      }
	    }
	  }, {
	    key: 'transition',
	    value: function transition(animationType, finishCallback) {
	      var _this2 = this;
	
	      var node = _reactDom2['default'].findDOMNode(this);
	      var props = this.props;
	      var transitionName = props.transitionName;
	      var nameIsObj = typeof transitionName === 'object';
	      this.stop();
	      var end = function end() {
	        _this2.stopper = null;
	        finishCallback();
	      };
	      if ((_cssAnimation.isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {
	        var name = nameIsObj ? transitionName[animationType] : transitionName + '-' + animationType;
	        var activeName = name + '-active';
	        if (nameIsObj && transitionName[animationType + 'Active']) {
	          activeName = transitionName[animationType + 'Active'];
	        }
	        this.stopper = (0, _cssAnimation2['default'])(node, {
	          name: name,
	          active: activeName
	        }, end);
	      } else {
	        this.stopper = props.animation[animationType](node, end);
	      }
	    }
	  }, {
	    key: 'stop',
	    value: function stop() {
	      var stopper = this.stopper;
	      if (stopper) {
	        this.stopper = null;
	        stopper.stop();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	  return AnimateChild;
	}(_react2['default'].Component);
	
	AnimateChild.propTypes = {
	  children: _propTypes2['default'].any
	};
	exports['default'] = AnimateChild;
	module.exports = exports['default'];

/***/ }),
/* 966 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isCssAnimationSupported = undefined;
	
	var _typeof2 = __webpack_require__(323);
	
	var _typeof3 = _interopRequireDefault(_typeof2);
	
	var _Event = __webpack_require__(967);
	
	var _Event2 = _interopRequireDefault(_Event);
	
	var _componentClasses = __webpack_require__(968);
	
	var _componentClasses2 = _interopRequireDefault(_componentClasses);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var isCssAnimationSupported = _Event2['default'].endEvents.length !== 0;
	var capitalPrefixes = ['Webkit', 'Moz', 'O',
	// ms is special .... !
	'ms'];
	var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];
	
	function getStyleProperty(node, name) {
	  // old ff need null, https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
	  var style = window.getComputedStyle(node, null);
	  var ret = '';
	  for (var i = 0; i < prefixes.length; i++) {
	    ret = style.getPropertyValue(prefixes[i] + name);
	    if (ret) {
	      break;
	    }
	  }
	  return ret;
	}
	
	function fixBrowserByTimeout(node) {
	  if (isCssAnimationSupported) {
	    var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
	    var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
	    var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
	    var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
	    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
	    // sometimes, browser bug
	    node.rcEndAnimTimeout = setTimeout(function () {
	      node.rcEndAnimTimeout = null;
	      if (node.rcEndListener) {
	        node.rcEndListener();
	      }
	    }, time * 1000 + 200);
	  }
	}
	
	function clearBrowserBugTimeout(node) {
	  if (node.rcEndAnimTimeout) {
	    clearTimeout(node.rcEndAnimTimeout);
	    node.rcEndAnimTimeout = null;
	  }
	}
	
	var cssAnimation = function cssAnimation(node, transitionName, endCallback) {
	  var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : (0, _typeof3['default'])(transitionName)) === 'object';
	  var className = nameIsObj ? transitionName.name : transitionName;
	  var activeClassName = nameIsObj ? transitionName.active : transitionName + '-active';
	  var end = endCallback;
	  var start = void 0;
	  var active = void 0;
	  var nodeClasses = (0, _componentClasses2['default'])(node);
	
	  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
	    end = endCallback.end;
	    start = endCallback.start;
	    active = endCallback.active;
	  }
	
	  if (node.rcEndListener) {
	    node.rcEndListener();
	  }
	
	  node.rcEndListener = function (e) {
	    if (e && e.target !== node) {
	      return;
	    }
	
	    if (node.rcAnimTimeout) {
	      clearTimeout(node.rcAnimTimeout);
	      node.rcAnimTimeout = null;
	    }
	
	    clearBrowserBugTimeout(node);
	
	    nodeClasses.remove(className);
	    nodeClasses.remove(activeClassName);
	
	    _Event2['default'].removeEndEventListener(node, node.rcEndListener);
	    node.rcEndListener = null;
	
	    // Usually this optional end is used for informing an owner of
	    // a leave animation and telling it to remove the child.
	    if (end) {
	      end();
	    }
	  };
	
	  _Event2['default'].addEndEventListener(node, node.rcEndListener);
	
	  if (start) {
	    start();
	  }
	  nodeClasses.add(className);
	
	  node.rcAnimTimeout = setTimeout(function () {
	    node.rcAnimTimeout = null;
	    nodeClasses.add(activeClassName);
	    if (active) {
	      setTimeout(active, 0);
	    }
	    fixBrowserByTimeout(node);
	    // 30ms for firefox
	  }, 30);
	
	  return {
	    stop: function stop() {
	      if (node.rcEndListener) {
	        node.rcEndListener();
	      }
	    }
	  };
	};
	
	cssAnimation.style = function (node, style, callback) {
	  if (node.rcEndListener) {
	    node.rcEndListener();
	  }
	
	  node.rcEndListener = function (e) {
	    if (e && e.target !== node) {
	      return;
	    }
	
	    if (node.rcAnimTimeout) {
	      clearTimeout(node.rcAnimTimeout);
	      node.rcAnimTimeout = null;
	    }
	
	    clearBrowserBugTimeout(node);
	
	    _Event2['default'].removeEndEventListener(node, node.rcEndListener);
	    node.rcEndListener = null;
	
	    // Usually this optional callback is used for informing an owner of
	    // a leave animation and telling it to remove the child.
	    if (callback) {
	      callback();
	    }
	  };
	
	  _Event2['default'].addEndEventListener(node, node.rcEndListener);
	
	  node.rcAnimTimeout = setTimeout(function () {
	    for (var s in style) {
	      if (style.hasOwnProperty(s)) {
	        node.style[s] = style[s];
	      }
	    }
	    node.rcAnimTimeout = null;
	    fixBrowserByTimeout(node);
	  }, 0);
	};
	
	cssAnimation.setTransition = function (node, p, value) {
	  var property = p;
	  var v = value;
	  if (value === undefined) {
	    v = property;
	    property = '';
	  }
	  property = property || '';
	  capitalPrefixes.forEach(function (prefix) {
	    node.style[prefix + 'Transition' + property] = v;
	  });
	};
	
	cssAnimation.isCssAnimationSupported = isCssAnimationSupported;
	
	exports.isCssAnimationSupported = isCssAnimationSupported;
	exports['default'] = cssAnimation;

/***/ }),
/* 967 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var EVENT_NAME_MAP = {
	  transitionend: {
	    transition: 'transitionend',
	    WebkitTransition: 'webkitTransitionEnd',
	    MozTransition: 'mozTransitionEnd',
	    OTransition: 'oTransitionEnd',
	    msTransition: 'MSTransitionEnd'
	  },
	
	  animationend: {
	    animation: 'animationend',
	    WebkitAnimation: 'webkitAnimationEnd',
	    MozAnimation: 'mozAnimationEnd',
	    OAnimation: 'oAnimationEnd',
	    msAnimation: 'MSAnimationEnd'
	  }
	};
	
	var endEvents = [];
	
	function detectEvents() {
	  var testEl = document.createElement('div');
	  var style = testEl.style;
	
	  if (!('AnimationEvent' in window)) {
	    delete EVENT_NAME_MAP.animationend.animation;
	  }
	
	  if (!('TransitionEvent' in window)) {
	    delete EVENT_NAME_MAP.transitionend.transition;
	  }
	
	  for (var baseEventName in EVENT_NAME_MAP) {
	    if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
	      var baseEvents = EVENT_NAME_MAP[baseEventName];
	      for (var styleName in baseEvents) {
	        if (styleName in style) {
	          endEvents.push(baseEvents[styleName]);
	          break;
	        }
	      }
	    }
	  }
	}
	
	if (typeof window !== 'undefined' && typeof document !== 'undefined') {
	  detectEvents();
	}
	
	function addEventListener(node, eventName, eventListener) {
	  node.addEventListener(eventName, eventListener, false);
	}
	
	function removeEventListener(node, eventName, eventListener) {
	  node.removeEventListener(eventName, eventListener, false);
	}
	
	var TransitionEvents = {
	  addEndEventListener: function addEndEventListener(node, eventListener) {
	    if (endEvents.length === 0) {
	      window.setTimeout(eventListener, 0);
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      addEventListener(node, endEvent, eventListener);
	    });
	  },
	
	
	  endEvents: endEvents,
	
	  removeEndEventListener: function removeEndEventListener(node, eventListener) {
	    if (endEvents.length === 0) {
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      removeEventListener(node, endEvent, eventListener);
	    });
	  }
	};
	
	exports['default'] = TransitionEvents;
	module.exports = exports['default'];

/***/ }),
/* 968 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Module dependencies.
	 */
	
	try {
	  var index = __webpack_require__(969);
	} catch (err) {
	  var index = __webpack_require__(969);
	}
	
	/**
	 * Whitespace regexp.
	 */
	
	var re = /\s+/;
	
	/**
	 * toString reference.
	 */
	
	var toString = Object.prototype.toString;
	
	/**
	 * Wrap `el` in a `ClassList`.
	 *
	 * @param {Element} el
	 * @return {ClassList}
	 * @api public
	 */
	
	module.exports = function(el){
	  return new ClassList(el);
	};
	
	/**
	 * Initialize a new ClassList for `el`.
	 *
	 * @param {Element} el
	 * @api private
	 */
	
	function ClassList(el) {
	  if (!el || !el.nodeType) {
	    throw new Error('A DOM element reference is required');
	  }
	  this.el = el;
	  this.list = el.classList;
	}
	
	/**
	 * Add class `name` if not already present.
	 *
	 * @param {String} name
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.add = function(name){
	  // classList
	  if (this.list) {
	    this.list.add(name);
	    return this;
	  }
	
	  // fallback
	  var arr = this.array();
	  var i = index(arr, name);
	  if (!~i) arr.push(name);
	  this.el.className = arr.join(' ');
	  return this;
	};
	
	/**
	 * Remove class `name` when present, or
	 * pass a regular expression to remove
	 * any which match.
	 *
	 * @param {String|RegExp} name
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.remove = function(name){
	  if ('[object RegExp]' == toString.call(name)) {
	    return this.removeMatching(name);
	  }
	
	  // classList
	  if (this.list) {
	    this.list.remove(name);
	    return this;
	  }
	
	  // fallback
	  var arr = this.array();
	  var i = index(arr, name);
	  if (~i) arr.splice(i, 1);
	  this.el.className = arr.join(' ');
	  return this;
	};
	
	/**
	 * Remove all classes matching `re`.
	 *
	 * @param {RegExp} re
	 * @return {ClassList}
	 * @api private
	 */
	
	ClassList.prototype.removeMatching = function(re){
	  var arr = this.array();
	  for (var i = 0; i < arr.length; i++) {
	    if (re.test(arr[i])) {
	      this.remove(arr[i]);
	    }
	  }
	  return this;
	};
	
	/**
	 * Toggle class `name`, can force state via `force`.
	 *
	 * For browsers that support classList, but do not support `force` yet,
	 * the mistake will be detected and corrected.
	 *
	 * @param {String} name
	 * @param {Boolean} force
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.toggle = function(name, force){
	  // classList
	  if (this.list) {
	    if ("undefined" !== typeof force) {
	      if (force !== this.list.toggle(name, force)) {
	        this.list.toggle(name); // toggle again to correct
	      }
	    } else {
	      this.list.toggle(name);
	    }
	    return this;
	  }
	
	  // fallback
	  if ("undefined" !== typeof force) {
	    if (!force) {
	      this.remove(name);
	    } else {
	      this.add(name);
	    }
	  } else {
	    if (this.has(name)) {
	      this.remove(name);
	    } else {
	      this.add(name);
	    }
	  }
	
	  return this;
	};
	
	/**
	 * Return an array of classes.
	 *
	 * @return {Array}
	 * @api public
	 */
	
	ClassList.prototype.array = function(){
	  var className = this.el.getAttribute('class') || '';
	  var str = className.replace(/^\s+|\s+$/g, '');
	  var arr = str.split(re);
	  if ('' === arr[0]) arr.shift();
	  return arr;
	};
	
	/**
	 * Check if class `name` is present.
	 *
	 * @param {String} name
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.has =
	ClassList.prototype.contains = function(name){
	  return this.list
	    ? this.list.contains(name)
	    : !! ~index(this.array(), name);
	};


/***/ }),
/* 969 */
/***/ (function(module, exports) {

	module.exports = function(arr, obj){
	  if (arr.indexOf) return arr.indexOf(obj);
	  for (var i = 0; i < arr.length; ++i) {
	    if (arr[i] === obj) return i;
	  }
	  return -1;
	};

/***/ }),
/* 970 */
/***/ (function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var util = {
	  isAppearSupported: function isAppearSupported(props) {
	    return props.transitionName && props.transitionAppear || props.animation.appear;
	  },
	  isEnterSupported: function isEnterSupported(props) {
	    return props.transitionName && props.transitionEnter || props.animation.enter;
	  },
	  isLeaveSupported: function isLeaveSupported(props) {
	    return props.transitionName && props.transitionLeave || props.animation.leave;
	  },
	  allowAppearCallback: function allowAppearCallback(props) {
	    return props.transitionAppear || props.animation.appear;
	  },
	  allowEnterCallback: function allowEnterCallback(props) {
	    return props.transitionEnter || props.animation.enter;
	  },
	  allowLeaveCallback: function allowLeaveCallback(props) {
	    return props.transitionLeave || props.animation.leave;
	  }
	};
	exports["default"] = util;
	module.exports = exports['default'];

/***/ }),
/* 971 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _defineProperty2 = __webpack_require__(917);
	
	var _defineProperty3 = _interopRequireDefault(_defineProperty2);
	
	var _extends2 = __webpack_require__(282);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _createClass2 = __webpack_require__(911);
	
	var _createClass3 = _interopRequireDefault(_createClass2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	exports.genCSSMotion = genCSSMotion;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(37);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _reactLifecyclesCompat = __webpack_require__(972);
	
	var _classnames = __webpack_require__(366);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _raf = __webpack_require__(973);
	
	var _raf2 = _interopRequireDefault(_raf);
	
	var _motion = __webpack_require__(975);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var STATUS_NONE = 'none';
	var STATUS_APPEAR = 'appear';
	var STATUS_ENTER = 'enter';
	var STATUS_LEAVE = 'leave';
	
	/**
	 * `transitionSupport` is used for none transition test case.
	 * Default we use browser transition event support check.
	 */
	function genCSSMotion(transitionSupport) {
	  function isSupportTransition(props) {
	    return !!(props.motionName && transitionSupport);
	  }
	
	  var CSSMotion = function (_React$Component) {
	    (0, _inherits3['default'])(CSSMotion, _React$Component);
	
	    function CSSMotion() {
	      (0, _classCallCheck3['default'])(this, CSSMotion);
	
	      var _this = (0, _possibleConstructorReturn3['default'])(this, (CSSMotion.__proto__ || Object.getPrototypeOf(CSSMotion)).call(this));
	
	      _this.onDomUpdate = function () {
	        var _this$state = _this.state,
	            status = _this$state.status,
	            newStatus = _this$state.newStatus;
	        var _this$props = _this.props,
	            onAppearStart = _this$props.onAppearStart,
	            onEnterStart = _this$props.onEnterStart,
	            onLeaveStart = _this$props.onLeaveStart,
	            onAppearActive = _this$props.onAppearActive,
	            onEnterActive = _this$props.onEnterActive,
	            onLeaveActive = _this$props.onLeaveActive,
	            motionAppear = _this$props.motionAppear,
	            motionEnter = _this$props.motionEnter,
	            motionLeave = _this$props.motionLeave;
	
	
	        if (!isSupportTransition(_this.props)) {
	          return;
	        }
	
	        // Event injection
	        var $ele = _reactDom2['default'].findDOMNode(_this);
	        if (_this.$ele !== $ele) {
	          _this.removeEventListener(_this.$ele);
	          _this.addEventListener($ele);
	          _this.$ele = $ele;
	        }
	
	        // Init status
	        if (newStatus && status === STATUS_APPEAR && motionAppear) {
	          _this.updateStatus(onAppearStart, null, null, function () {
	            _this.updateActiveStatus(onAppearActive, STATUS_APPEAR);
	          });
	        } else if (newStatus && status === STATUS_ENTER && motionEnter) {
	          _this.updateStatus(onEnterStart, null, null, function () {
	            _this.updateActiveStatus(onEnterActive, STATUS_ENTER);
	          });
	        } else if (newStatus && status === STATUS_LEAVE && motionLeave) {
	          _this.updateStatus(onLeaveStart, null, null, function () {
	            _this.updateActiveStatus(onLeaveActive, STATUS_LEAVE);
	          });
	        }
	      };
	
	      _this.onMotionEnd = function (event) {
	        var _this$state2 = _this.state,
	            status = _this$state2.status,
	            statusActive = _this$state2.statusActive;
	        var _this$props2 = _this.props,
	            onAppearEnd = _this$props2.onAppearEnd,
	            onEnterEnd = _this$props2.onEnterEnd,
	            onLeaveEnd = _this$props2.onLeaveEnd;
	
	        if (status === STATUS_APPEAR && statusActive) {
	          _this.updateStatus(onAppearEnd, { status: STATUS_NONE }, event);
	        } else if (status === STATUS_ENTER && statusActive) {
	          _this.updateStatus(onEnterEnd, { status: STATUS_NONE }, event);
	        } else if (status === STATUS_LEAVE && statusActive) {
	          _this.updateStatus(onLeaveEnd, { status: STATUS_NONE }, event);
	        }
	      };
	
	      _this.addEventListener = function ($ele) {
	        if (!$ele) return;
	
	        $ele.addEventListener(_motion.transitionEndName, _this.onMotionEnd);
	        $ele.addEventListener(_motion.animationEndName, _this.onMotionEnd);
	      };
	
	      _this.removeEventListener = function ($ele) {
	        if (!$ele) return;
	
	        $ele.removeEventListener(_motion.transitionEndName, _this.onMotionEnd);
	        $ele.removeEventListener(_motion.animationEndName, _this.onMotionEnd);
	      };
	
	      _this.updateStatus = function (styleFunc, additionalState, event, callback) {
	        var statusStyle = styleFunc ? styleFunc(_reactDom2['default'].findDOMNode(_this), event) : null;
	
	        if (statusStyle === false || _this._destroyed) return;
	
	        var nextStep = void 0;
	        if (callback) {
	          nextStep = function nextStep() {
	            _this.nextFrame(callback);
	          };
	        }
	
	        _this.setState((0, _extends3['default'])({
	          statusStyle: typeof statusStyle === 'object' ? statusStyle : null,
	          newStatus: false
	        }, additionalState), nextStep); // Trigger before next frame & after `componentDidMount`
	      };
	
	      _this.updateActiveStatus = function (styleFunc, currentStatus) {
	        // `setState` use `postMessage` to trigger at the end of frame.
	        // Let's use requestAnimationFrame to update new state in next frame.
	        _this.nextFrame(function () {
	          var status = _this.state.status;
	
	          if (status !== currentStatus) return;
	
	          _this.updateStatus(styleFunc, { statusActive: true });
	        });
	      };
	
	      _this.nextFrame = function (func) {
	        _this.cancelNextFrame();
	        _this.raf = (0, _raf2['default'])(func);
	      };
	
	      _this.cancelNextFrame = function () {
	        if (_this.raf) {
	          _raf2['default'].cancel(_this.raf);
	          _this.raf = null;
	        }
	      };
	
	      _this.state = {
	        status: STATUS_NONE,
	        statusActive: false,
	        newStatus: false,
	        statusStyle: null
	      };
	      _this.$ele = null;
	      _this.raf = null;
	      return _this;
	    }
	
	    (0, _createClass3['default'])(CSSMotion, [{
	      key: 'componentDidMount',
	      value: function componentDidMount() {
	        this.onDomUpdate();
	      }
	    }, {
	      key: 'componentDidUpdate',
	      value: function componentDidUpdate() {
	        this.onDomUpdate();
	      }
	    }, {
	      key: 'componentWillUnmount',
	      value: function componentWillUnmount() {
	        this._destroyed = true;
	        this.removeEventListener(this.$ele);
	        this.cancelNextFrame();
	      }
	    }, {
	      key: 'render',
	      value: function render() {
	        var _classNames;
	
	        var _state = this.state,
	            status = _state.status,
	            statusActive = _state.statusActive,
	            statusStyle = _state.statusStyle;
	        var _props = this.props,
	            children = _props.children,
	            motionName = _props.motionName,
	            visible = _props.visible,
	            removeOnLeave = _props.removeOnLeave;
	
	
	        if (!children) return null;
	
	        if (status === STATUS_NONE || !isSupportTransition(this.props)) {
	          return visible || !removeOnLeave ? children({}) : null;
	        }
	
	        return children({
	          className: (0, _classnames2['default'])((_classNames = {}, (0, _defineProperty3['default'])(_classNames, (0, _motion.getTransitionName)(motionName, status), status !== STATUS_NONE), (0, _defineProperty3['default'])(_classNames, (0, _motion.getTransitionName)(motionName, status + '-active'), status !== STATUS_NONE && statusActive), (0, _defineProperty3['default'])(_classNames, motionName, typeof motionName === 'string'), _classNames)),
	          style: statusStyle
	        });
	      }
	    }], [{
	      key: 'getDerivedStateFromProps',
	      value: function getDerivedStateFromProps(props, _ref) {
	        var prevProps = _ref.prevProps;
	
	        if (!isSupportTransition(props)) return {};
	
	        var visible = props.visible,
	            motionAppear = props.motionAppear,
	            motionEnter = props.motionEnter,
	            motionLeave = props.motionLeave,
	            motionLeaveImmediately = props.motionLeaveImmediately;
	
	        var newState = {
	          prevProps: props
	        };
	
	        // Appear
	        if (!prevProps && visible && motionAppear) {
	          newState.status = STATUS_APPEAR;
	          newState.statusActive = false;
	          newState.newStatus = true;
	        }
	
	        // Enter
	        if (prevProps && !prevProps.visible && visible && motionEnter) {
	          newState.status = STATUS_ENTER;
	          newState.statusActive = false;
	          newState.newStatus = true;
	        }
	
	        // Leave
	        if (prevProps && prevProps.visible && !visible && motionLeave || !prevProps && motionLeaveImmediately && !visible && motionLeave) {
	          newState.status = STATUS_LEAVE;
	          newState.statusActive = false;
	          newState.newStatus = true;
	        }
	
	        return newState;
	      }
	    }]);
	    return CSSMotion;
	  }(_react2['default'].Component);
	
	  CSSMotion.propTypes = {
	    visible: _propTypes2['default'].bool,
	    children: _propTypes2['default'].func,
	    motionName: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].object]),
	    motionAppear: _propTypes2['default'].bool,
	    motionEnter: _propTypes2['default'].bool,
	    motionLeave: _propTypes2['default'].bool,
	    motionLeaveImmediately: _propTypes2['default'].bool, // Trigger leave motion immediately
	    removeOnLeave: _propTypes2['default'].bool,
	    onAppearStart: _propTypes2['default'].func,
	    onAppearActive: _propTypes2['default'].func,
	    onAppearEnd: _propTypes2['default'].func,
	    onEnterStart: _propTypes2['default'].func,
	    onEnterActive: _propTypes2['default'].func,
	    onEnterEnd: _propTypes2['default'].func,
	    onLeaveStart: _propTypes2['default'].func,
	    onLeaveActive: _propTypes2['default'].func,
	    onLeaveEnd: _propTypes2['default'].func
	  };
	  CSSMotion.defaultProps = {
	    visible: true,
	    motionEnter: true,
	    motionAppear: true,
	    motionLeave: true,
	    removeOnLeave: true
	  };
	
	
	  (0, _reactLifecyclesCompat.polyfill)(CSSMotion);
	
	  return CSSMotion;
	}
	
	exports['default'] = genCSSMotion(_motion.supportTransition);

/***/ }),
/* 972 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', { value: true });
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	
	function componentWillMount() {
	  // Call this.constructor.gDSFP to support sub-classes.
	  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
	  if (state !== null && state !== undefined) {
	    this.setState(state);
	  }
	}
	
	function componentWillReceiveProps(nextProps) {
	  // Call this.constructor.gDSFP to support sub-classes.
	  // Use the setState() updater to ensure state isn't stale in certain edge cases.
	  function updater(prevState) {
	    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
	    return state !== null && state !== undefined ? state : null;
	  }
	  // Binding "this" is important for shallow renderer support.
	  this.setState(updater.bind(this));
	}
	
	function componentWillUpdate(nextProps, nextState) {
	  try {
	    var prevProps = this.props;
	    var prevState = this.state;
	    this.props = nextProps;
	    this.state = nextState;
	    this.__reactInternalSnapshotFlag = true;
	    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
	      prevProps,
	      prevState
	    );
	  } finally {
	    this.props = prevProps;
	    this.state = prevState;
	  }
	}
	
	// React may warn about cWM/cWRP/cWU methods being deprecated.
	// Add a flag to suppress these warnings for this special case.
	componentWillMount.__suppressDeprecationWarning = true;
	componentWillReceiveProps.__suppressDeprecationWarning = true;
	componentWillUpdate.__suppressDeprecationWarning = true;
	
	function polyfill(Component) {
	  var prototype = Component.prototype;
	
	  if (!prototype || !prototype.isReactComponent) {
	    throw new Error('Can only polyfill class components');
	  }
	
	  if (
	    typeof Component.getDerivedStateFromProps !== 'function' &&
	    typeof prototype.getSnapshotBeforeUpdate !== 'function'
	  ) {
	    return Component;
	  }
	
	  // If new component APIs are defined, "unsafe" lifecycles won't be called.
	  // Error if any of these lifecycles are present,
	  // Because they would work differently between older and newer (16.3+) versions of React.
	  var foundWillMountName = null;
	  var foundWillReceivePropsName = null;
	  var foundWillUpdateName = null;
	  if (typeof prototype.componentWillMount === 'function') {
	    foundWillMountName = 'componentWillMount';
	  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
	    foundWillMountName = 'UNSAFE_componentWillMount';
	  }
	  if (typeof prototype.componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'componentWillReceiveProps';
	  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
	    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
	  }
	  if (typeof prototype.componentWillUpdate === 'function') {
	    foundWillUpdateName = 'componentWillUpdate';
	  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
	    foundWillUpdateName = 'UNSAFE_componentWillUpdate';
	  }
	  if (
	    foundWillMountName !== null ||
	    foundWillReceivePropsName !== null ||
	    foundWillUpdateName !== null
	  ) {
	    var componentName = Component.displayName || Component.name;
	    var newApiName =
	      typeof Component.getDerivedStateFromProps === 'function'
	        ? 'getDerivedStateFromProps()'
	        : 'getSnapshotBeforeUpdate()';
	
	    throw Error(
	      'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' +
	        componentName +
	        ' uses ' +
	        newApiName +
	        ' but also contains the following legacy lifecycles:' +
	        (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') +
	        (foundWillReceivePropsName !== null
	          ? '\n  ' + foundWillReceivePropsName
	          : '') +
	        (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') +
	        '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' +
	        'https://fb.me/react-async-component-lifecycle-hooks'
	    );
	  }
	
	  // React <= 16.2 does not support static getDerivedStateFromProps.
	  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
	  // Newer versions of React will ignore these lifecycles if gDSFP exists.
	  if (typeof Component.getDerivedStateFromProps === 'function') {
	    prototype.componentWillMount = componentWillMount;
	    prototype.componentWillReceiveProps = componentWillReceiveProps;
	  }
	
	  // React <= 16.2 does not support getSnapshotBeforeUpdate.
	  // As a workaround, use cWU to invoke the new lifecycle.
	  // Newer versions of React will ignore that lifecycle if gSBU exists.
	  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
	    if (typeof prototype.componentDidUpdate !== 'function') {
	      throw new Error(
	        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'
	      );
	    }
	
	    prototype.componentWillUpdate = componentWillUpdate;
	
	    var componentDidUpdate = prototype.componentDidUpdate;
	
	    prototype.componentDidUpdate = function componentDidUpdatePolyfill(
	      prevProps,
	      prevState,
	      maybeSnapshot
	    ) {
	      // 16.3+ will not execute our will-update method;
	      // It will pass a snapshot value to did-update though.
	      // Older versions will require our polyfilled will-update value.
	      // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
	      // Because for <= 15.x versions this might be a "prevContext" object.
	      // We also can't just check "__reactInternalSnapshot",
	      // Because get-snapshot might return a falsy value.
	      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
	      var snapshot = this.__reactInternalSnapshotFlag
	        ? this.__reactInternalSnapshot
	        : maybeSnapshot;
	
	      componentDidUpdate.call(this, prevProps, prevState, snapshot);
	    };
	  }
	
	  return Component;
	}
	
	exports.polyfill = polyfill;


/***/ }),
/* 973 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(974)
	  , root = typeof window === 'undefined' ? global : window
	  , vendors = ['moz', 'webkit']
	  , suffix = 'AnimationFrame'
	  , raf = root['request' + suffix]
	  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]
	
	for(var i = 0; !raf && i < vendors.length; i++) {
	  raf = root[vendors[i] + 'Request' + suffix]
	  caf = root[vendors[i] + 'Cancel' + suffix]
	      || root[vendors[i] + 'CancelRequest' + suffix]
	}
	
	// Some versions of FF have rAF but not cAF
	if(!raf || !caf) {
	  var last = 0
	    , id = 0
	    , queue = []
	    , frameDuration = 1000 / 60
	
	  raf = function(callback) {
	    if(queue.length === 0) {
	      var _now = now()
	        , next = Math.max(0, frameDuration - (_now - last))
	      last = next + _now
	      setTimeout(function() {
	        var cp = queue.slice(0)
	        // Clear queue here to prevent
	        // callbacks from appending listeners
	        // to the current frame's queue
	        queue.length = 0
	        for(var i = 0; i < cp.length; i++) {
	          if(!cp[i].cancelled) {
	            try{
	              cp[i].callback(last)
	            } catch(e) {
	              setTimeout(function() { throw e }, 0)
	            }
	          }
	        }
	      }, Math.round(next))
	    }
	    queue.push({
	      handle: ++id,
	      callback: callback,
	      cancelled: false
	    })
	    return id
	  }
	
	  caf = function(handle) {
	    for(var i = 0; i < queue.length; i++) {
	      if(queue[i].handle === handle) {
	        queue[i].cancelled = true
	      }
	    }
	  }
	}
	
	module.exports = function(fn) {
	  // Wrap in a new function to prevent
	  // `cancel` potentially being assigned
	  // to the native rAF function
	  return raf.call(root, fn)
	}
	module.exports.cancel = function() {
	  caf.apply(root, arguments)
	}
	module.exports.polyfill = function(object) {
	  if (!object) {
	    object = root;
	  }
	  object.requestAnimationFrame = raf
	  object.cancelAnimationFrame = caf
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 974 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
	(function() {
	  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
	
	  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
	    module.exports = function() {
	      return performance.now();
	    };
	  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
	    module.exports = function() {
	      return (getNanoSeconds() - nodeLoadTime) / 1e6;
	    };
	    hrtime = process.hrtime;
	    getNanoSeconds = function() {
	      var hr;
	      hr = hrtime();
	      return hr[0] * 1e9 + hr[1];
	    };
	    moduleLoadTime = getNanoSeconds();
	    upTime = process.uptime() * 1e9;
	    nodeLoadTime = moduleLoadTime - upTime;
	  } else if (Date.now) {
	    module.exports = function() {
	      return Date.now() - loadTime;
	    };
	    loadTime = Date.now();
	  } else {
	    module.exports = function() {
	      return new Date().getTime() - loadTime;
	    };
	    loadTime = new Date().getTime();
	  }
	
	}).call(this);
	
	//# sourceMappingURL=performance-now.js.map
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 975 */
/***/ (function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getVendorPrefixes = getVendorPrefixes;
	exports.getVendorPrefixedEventName = getVendorPrefixedEventName;
	exports.getTransitionName = getTransitionName;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	// ================= Transition =================
	// Event wrapper. Copy from react source code
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	function getVendorPrefixes(domSupport, win) {
	  var prefixes = {
	    animationend: makePrefixMap('Animation', 'AnimationEnd'),
	    transitionend: makePrefixMap('Transition', 'TransitionEnd')
	  };
	
	  if (domSupport) {
	    if (!('AnimationEvent' in win)) {
	      delete prefixes.animationend.animation;
	    }
	
	    if (!('TransitionEvent' in win)) {
	      delete prefixes.transitionend.transition;
	    }
	  }
	
	  return prefixes;
	}
	
	var vendorPrefixes = getVendorPrefixes(canUseDOM, typeof window !== 'undefined' ? window : {});
	
	var style = {};
	
	if (canUseDOM) {
	  style = document.createElement('div').style;
	}
	
	var prefixedEventNames = {};
	
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  if (prefixMap) {
	    var stylePropList = Object.keys(prefixMap);
	    var len = stylePropList.length;
	    for (var i = 0; i < len; i += 1) {
	      var styleProp = stylePropList[i];
	      if (Object.prototype.hasOwnProperty.call(prefixMap, styleProp) && styleProp in style) {
	        prefixedEventNames[eventName] = prefixMap[styleProp];
	        return prefixedEventNames[eventName];
	      }
	    }
	  }
	
	  return '';
	}
	
	var animationEndName = exports.animationEndName = getVendorPrefixedEventName('animationend');
	var transitionEndName = exports.transitionEndName = getVendorPrefixedEventName('transitionend');
	var supportTransition = exports.supportTransition = !!(animationEndName && transitionEndName);
	
	function getTransitionName(transitionName, transitionType) {
	  if (!transitionName) return null;
	
	  if (typeof transitionName === 'object') {
	    var type = transitionType.replace(/-\w/g, function (match) {
	      return match[1].toUpperCase();
	    });
	    return transitionName[type];
	  }
	
	  return transitionName + '-' + transitionType;
	}

/***/ }),
/* 976 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	var _LazyRenderBox = __webpack_require__(977);
	
	var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var PopupInner = function (_Component) {
	  (0, _inherits3['default'])(PopupInner, _Component);
	
	  function PopupInner() {
	    (0, _classCallCheck3['default'])(this, PopupInner);
	    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));
	  }
	
	  PopupInner.prototype.render = function render() {
	    var props = this.props;
	    var className = props.className;
	    if (!props.visible) {
	      className += ' ' + props.hiddenClassName;
	    }
	    return _react2['default'].createElement(
	      'div',
	      {
	        className: className,
	        onMouseEnter: props.onMouseEnter,
	        onMouseLeave: props.onMouseLeave,
	        onMouseDown: props.onMouseDown,
	        style: props.style
	      },
	      _react2['default'].createElement(
	        _LazyRenderBox2['default'],
	        { className: props.prefixCls + '-content', visible: props.visible },
	        props.children
	      )
	    );
	  };
	
	  return PopupInner;
	}(_react.Component);
	
	PopupInner.propTypes = {
	  hiddenClassName: _propTypes2['default'].string,
	  className: _propTypes2['default'].string,
	  prefixCls: _propTypes2['default'].string,
	  onMouseEnter: _propTypes2['default'].func,
	  onMouseLeave: _propTypes2['default'].func,
	  onMouseDown: _propTypes2['default'].func,
	  children: _propTypes2['default'].any
	};
	exports['default'] = PopupInner;
	module.exports = exports['default'];

/***/ }),
/* 977 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _objectWithoutProperties2 = __webpack_require__(365);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var LazyRenderBox = function (_Component) {
	  (0, _inherits3['default'])(LazyRenderBox, _Component);
	
	  function LazyRenderBox() {
	    (0, _classCallCheck3['default'])(this, LazyRenderBox);
	    return (0, _possibleConstructorReturn3['default'])(this, _Component.apply(this, arguments));
	  }
	
	  LazyRenderBox.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	    return nextProps.hiddenClassName || nextProps.visible;
	  };
	
	  LazyRenderBox.prototype.render = function render() {
	    var _props = this.props,
	        hiddenClassName = _props.hiddenClassName,
	        visible = _props.visible,
	        props = (0, _objectWithoutProperties3['default'])(_props, ['hiddenClassName', 'visible']);
	
	
	    if (hiddenClassName || _react2['default'].Children.count(props.children) > 1) {
	      if (!visible && hiddenClassName) {
	        props.className += ' ' + hiddenClassName;
	      }
	      return _react2['default'].createElement('div', props);
	    }
	
	    return _react2['default'].Children.only(props.children);
	  };
	
	  return LazyRenderBox;
	}(_react.Component);
	
	LazyRenderBox.propTypes = {
	  children: _propTypes2['default'].any,
	  className: _propTypes2['default'].string,
	  visible: _propTypes2['default'].bool,
	  hiddenClassName: _propTypes2['default'].string
	};
	exports['default'] = LazyRenderBox;
	module.exports = exports['default'];

/***/ }),
/* 978 */
/***/ (function(module, exports) {

	'use strict';
	
	exports.__esModule = true;
	var autoAdjustOverflow = {
	  adjustX: 1,
	  adjustY: 1
	};
	
	var targetOffset = [0, 0];
	
	var placements = exports.placements = {
	  left: {
	    points: ['cr', 'cl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  },
	  right: {
	    points: ['cl', 'cr'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  top: {
	    points: ['bc', 'tc'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  bottom: {
	    points: ['tc', 'bc'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  topLeft: {
	    points: ['bl', 'tl'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  leftTop: {
	    points: ['tr', 'tl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  },
	  topRight: {
	    points: ['br', 'tr'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  rightTop: {
	    points: ['tl', 'tr'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  bottomRight: {
	    points: ['tr', 'br'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  rightBottom: {
	    points: ['bl', 'br'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  bottomLeft: {
	    points: ['tl', 'bl'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  leftBottom: {
	    points: ['br', 'bl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  }
	};
	
	exports['default'] = placements;

/***/ }),
/* 979 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	exports.__esModule = true;
	
	var _classCallCheck2 = __webpack_require__(321);
	
	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);
	
	var _possibleConstructorReturn2 = __webpack_require__(322);
	
	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);
	
	var _inherits2 = __webpack_require__(356);
	
	var _inherits3 = _interopRequireDefault(_inherits2);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _propTypes = __webpack_require__(270);
	
	var _propTypes2 = _interopRequireDefault(_propTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
	
	var Content = function (_React$Component) {
	  (0, _inherits3['default'])(Content, _React$Component);
	
	  function Content() {
	    (0, _classCallCheck3['default'])(this, Content);
	    return (0, _possibleConstructorReturn3['default'])(this, _React$Component.apply(this, arguments));
	  }
	
	  Content.prototype.componentDidUpdate = function componentDidUpdate() {
	    var trigger = this.props.trigger;
	
	    if (trigger) {
	      trigger.forcePopupAlign();
	    }
	  };
	
	  Content.prototype.render = function render() {
	    var _props = this.props,
	        overlay = _props.overlay,
	        prefixCls = _props.prefixCls,
	        id = _props.id;
	
	    return _react2['default'].createElement(
	      'div',
	      { className: prefixCls + '-inner', id: id, role: 'tooltip' },
	      typeof overlay === 'function' ? overlay() : overlay
	    );
	  };
	
	  return Content;
	}(_react2['default'].Component);
	
	Content.propTypes = {
	  prefixCls: _propTypes2['default'].string,
	  overlay: _propTypes2['default'].oneOfType([_propTypes2['default'].node, _propTypes2['default'].func]).isRequired,
	  id: _propTypes2['default'].string,
	  trigger: _propTypes2['default'].any
	};
	exports['default'] = Content;
	module.exports = exports['default'];

/***/ }),
/* 980 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(981);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(983)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../css-loader/index.js!./index.css", function() {
				var newContent = require("!!../../css-loader/index.js!./index.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 981 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(982)();
	// imports
	
	
	// module
	exports.push([module.id, ".rc-slider {\n  position: relative;\n  height: 14px;\n  padding: 5px 0;\n  width: 100%;\n  border-radius: 6px;\n  -ms-touch-action: none;\n      touch-action: none;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-slider * {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-slider-rail {\n  position: absolute;\n  width: 100%;\n  background-color: #e9e9e9;\n  height: 4px;\n  border-radius: 6px;\n}\n.rc-slider-track {\n  position: absolute;\n  left: 0;\n  height: 4px;\n  border-radius: 6px;\n  background-color: #abe2fb;\n}\n.rc-slider-handle {\n  position: absolute;\n  margin-left: -7px;\n  margin-top: -5px;\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  cursor: -webkit-grab;\n  cursor: grab;\n  border-radius: 50%;\n  border: solid 2px #96dbfa;\n  background-color: #fff;\n  -ms-touch-action: pan-x;\n      touch-action: pan-x;\n}\n.rc-slider-handle:focus {\n  border-color: #57c5f7;\n  box-shadow: 0 0 0 5px #96dbfa;\n  outline: none;\n}\n.rc-slider-handle-click-focused:focus {\n  border-color: #96dbfa;\n  box-shadow: unset;\n}\n.rc-slider-handle:hover {\n  border-color: #57c5f7;\n}\n.rc-slider-handle:active {\n  border-color: #57c5f7;\n  box-shadow: 0 0 5px #57c5f7;\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n.rc-slider-mark {\n  position: absolute;\n  top: 18px;\n  left: 0;\n  width: 100%;\n  font-size: 12px;\n}\n.rc-slider-mark-text {\n  position: absolute;\n  display: inline-block;\n  vertical-align: middle;\n  text-align: center;\n  cursor: pointer;\n  color: #999;\n}\n.rc-slider-mark-text-active {\n  color: #666;\n}\n.rc-slider-step {\n  position: absolute;\n  width: 100%;\n  height: 4px;\n  background: transparent;\n}\n.rc-slider-dot {\n  position: absolute;\n  bottom: -2px;\n  margin-left: -4px;\n  width: 8px;\n  height: 8px;\n  border: 2px solid #e9e9e9;\n  background-color: #fff;\n  cursor: pointer;\n  border-radius: 50%;\n  vertical-align: middle;\n}\n.rc-slider-dot-active {\n  border-color: #96dbfa;\n}\n.rc-slider-disabled {\n  background-color: #e9e9e9;\n}\n.rc-slider-disabled .rc-slider-track {\n  background-color: #ccc;\n}\n.rc-slider-disabled .rc-slider-handle,\n.rc-slider-disabled .rc-slider-dot {\n  border-color: #ccc;\n  box-shadow: none;\n  background-color: #fff;\n  cursor: not-allowed;\n}\n.rc-slider-disabled .rc-slider-mark-text,\n.rc-slider-disabled .rc-slider-dot {\n  cursor: not-allowed !important;\n}\n.rc-slider-vertical {\n  width: 14px;\n  height: 100%;\n  padding: 0 5px;\n}\n.rc-slider-vertical .rc-slider-rail {\n  height: 100%;\n  width: 4px;\n}\n.rc-slider-vertical .rc-slider-track {\n  left: 5px;\n  bottom: 0;\n  width: 4px;\n}\n.rc-slider-vertical .rc-slider-handle {\n  margin-left: -5px;\n  margin-bottom: -7px;\n  -ms-touch-action: pan-y;\n      touch-action: pan-y;\n}\n.rc-slider-vertical .rc-slider-mark {\n  top: 0;\n  left: 18px;\n  height: 100%;\n}\n.rc-slider-vertical .rc-slider-step {\n  height: 100%;\n  width: 4px;\n}\n.rc-slider-vertical .rc-slider-dot {\n  left: 2px;\n  margin-bottom: -4px;\n}\n.rc-slider-vertical .rc-slider-dot:first-child {\n  margin-bottom: -4px;\n}\n.rc-slider-vertical .rc-slider-dot:last-child {\n  margin-bottom: -4px;\n}\n.rc-slider-tooltip-zoom-down-enter,\n.rc-slider-tooltip-zoom-down-appear {\n  animation-duration: .3s;\n  animation-fill-mode: both;\n  display: block !important;\n  animation-play-state: paused;\n}\n.rc-slider-tooltip-zoom-down-leave {\n  animation-duration: .3s;\n  animation-fill-mode: both;\n  display: block !important;\n  animation-play-state: paused;\n}\n.rc-slider-tooltip-zoom-down-enter.rc-slider-tooltip-zoom-down-enter-active,\n.rc-slider-tooltip-zoom-down-appear.rc-slider-tooltip-zoom-down-appear-active {\n  animation-name: rcSliderTooltipZoomDownIn;\n  animation-play-state: running;\n}\n.rc-slider-tooltip-zoom-down-leave.rc-slider-tooltip-zoom-down-leave-active {\n  animation-name: rcSliderTooltipZoomDownOut;\n  animation-play-state: running;\n}\n.rc-slider-tooltip-zoom-down-enter,\n.rc-slider-tooltip-zoom-down-appear {\n  transform: scale(0, 0);\n  animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);\n}\n.rc-slider-tooltip-zoom-down-leave {\n  animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n}\n@keyframes rcSliderTooltipZoomDownIn {\n  0% {\n    opacity: 0;\n    transform-origin: 50% 100%;\n    transform: scale(0, 0);\n  }\n  100% {\n    transform-origin: 50% 100%;\n    transform: scale(1, 1);\n  }\n}\n@keyframes rcSliderTooltipZoomDownOut {\n  0% {\n    transform-origin: 50% 100%;\n    transform: scale(1, 1);\n  }\n  100% {\n    opacity: 0;\n    transform-origin: 50% 100%;\n    transform: scale(0, 0);\n  }\n}\n.rc-slider-tooltip {\n  position: absolute;\n  left: -9999px;\n  top: -9999px;\n  visibility: visible;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-slider-tooltip * {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-slider-tooltip-hidden {\n  display: none;\n}\n.rc-slider-tooltip-placement-top {\n  padding: 4px 0 8px 0;\n}\n.rc-slider-tooltip-inner {\n  padding: 6px 2px;\n  min-width: 24px;\n  height: 24px;\n  font-size: 12px;\n  line-height: 1;\n  color: #fff;\n  text-align: center;\n  text-decoration: none;\n  background-color: #6c6c6c;\n  border-radius: 6px;\n  box-shadow: 0 0 4px #d9d9d9;\n}\n.rc-slider-tooltip-arrow {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid;\n}\n.rc-slider-tooltip-placement-top .rc-slider-tooltip-arrow {\n  bottom: 4px;\n  left: 50%;\n  margin-left: -4px;\n  border-width: 4px 4px 0;\n  border-top-color: #6c6c6c;\n}\n", ""]);
	
	// exports


/***/ }),
/* 982 */
/***/ (function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ }),
/* 983 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(self.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ }),
/* 984 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var Rider_1 = __webpack_require__(985);
	var underscore_1 = __webpack_require__(540);
	var Plan = (function (_super) {
	    __extends(Plan, _super);
	    function Plan() {
	        _super.call(this);
	        this.state = {};
	        this.selectRider.bind(this);
	    }
	    Plan.prototype.selectRider = function (rider, riderKey) {
	        if (riderKey == this.state.selectedRiderName) {
	            this.setState({
	                selectedRiderName: null
	            });
	        }
	        else {
	            this.setState({
	                selectedRiderName: riderKey
	            });
	        }
	        this.props.selectRider(rider, this.props.index, riderKey);
	    };
	    Plan.prototype.render = function () {
	        var riders = this.props.riders;
	        var person = this.props.person;
	        var self = this;
	        if (riders && riders.RiderCount == "0") {
	            return null;
	        }
	        return (React.createElement(react_bootstrap_1.Row, {className: "all-riders-info-container"}, React.createElement(react_bootstrap_1.Col, {key: person.name, sm: 12, className: "c-one-person-container riders-outer-container"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center rider-header-text container-max-width"}, "Riders for ", person.name), React.createElement(react_bootstrap_1.Col, {sm: 8, className: "riders-container c-center container-max-width"}, underscore_1.map(riders, function (rider, key) {
	            if (typeof rider != "string") {
	                if (String(key) == "WP") {
	                    if (rider.Premium) {
	                        return React.createElement(Rider_1.default, {key: rider.Name, rider: rider, person: person, riderKey: key, isActive: key == self.state.selectedRiderName, selectRider: self.selectRider.bind(self), premium_type: self.props.premium_type});
	                    }
	                    else {
	                        return null;
	                    }
	                }
	                else {
	                    return React.createElement(Rider_1.default, {key: rider.Name, rider: rider, person: person, riderKey: key, isActive: key == self.state.selectedRiderName, selectRider: self.selectRider.bind(self), premium_type: self.props.premium_type});
	                }
	            }
	            else {
	                return null;
	            }
	        })))), ")}"));
	    };
	    return Plan;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Plan;


/***/ }),
/* 985 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var react_raw_html_1 = __webpack_require__(739);
	var Plan = (function (_super) {
	    __extends(Plan, _super);
	    function Plan() {
	        _super.call(this);
	        this.state = {};
	    }
	    Plan.prototype.selectRider = function () {
	        this.props.selectRider(this.props.rider, this.props.riderKey);
	    };
	    Plan.prototype.getPremiumType = function () {
	        return this.props.premium_type;
	        if (this.props.premium_type.toUpperCase() == "Semi-Annual".toUpperCase()) {
	            return this.props.premium_type;
	        }
	        return this.props.premium_type.substring(0, 2).toUpperCase();
	    };
	    Plan.prototype.render = function () {
	        var _this = this;
	        var rider = this.props.rider;
	        react_raw_html_1.default.addTag("mycooltag");
	        if (!underscore_1.isEmpty(rider)) {
	            return (React.createElement(react_bootstrap_1.Col, {key: rider.Name, sm: 4, className: "rider-container single-product-container"}, React.createElement(react_bootstrap_1.Row, {className: "single-product-content"}, React.createElement(react_bootstrap_1.Row, {className: "header"}, React.createElement(react_bootstrap_1.Col, {style: { textAlign: "center" }, sm: 12}, rider.Name)), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "product-main-content"}, React.createElement(react_bootstrap_1.Row, {className: "text-center"}, React.createElement("div", {className: "c-product-text"}, React.createElement(react_raw_html_1.default.mycooltag, null, rider.Description)))))), this.props.riderKey != "WP" && React.createElement(react_bootstrap_1.Row, {className: "text-center quote-product rider-footer-container", style: { paddingTop: "10px", marginLeft: "0px", height: "70px", fontFamily: "NunitoRegular!important" }, onClick: function () { return _this.selectRider(rider); }}, React.createElement("div", {className: "c-coverage-amount", style: { fontSize: "14px", color: "#317dbd" }}, "included in policy"), React.createElement("div", {className: "c-coverage-amount additional-text", style: { fontSize: "14px", color: "#999999" }}, "(no additional premium)")), this.props.riderKey == "WP" && React.createElement(react_bootstrap_1.Row, {className: "text-center quote-product ", style: { paddingTop: "10px", marginLeft: "0px", height: "70px", fontFamily: "NunitoRegular!important", fontSize: "12px" }}, !this.props.isActive &&
	                React.createElement(react_bootstrap_1.Button, {style: { paddingTop: "3px", height: "48px!important", float: "right", width: "88%", marginRight: "6%", marginTop: "0px" }, className: "c-button-default circular rider-adding-btn " + (this.state.riderAdded ? "active" : ""), onClick: function () {
	                    _this.selectRider(rider, _this.props.riderKey);
	                }}, React.createElement("div", null, "ADD $", this.props.rider.Premium[this.props.premium_type] ? this.props.rider.Premium[this.props.premium_type].split("$")[1] : 0), React.createElement("div", null, this.getPremiumType())), this.props.isActive && React.createElement(react_bootstrap_1.Button, {style: { height: "48px!important", float: "right", width: "88%", marginRight: "6%", marginTop: "0px" }, className: "c-button-default circular active rider-adding-btn " + (this.state.riderAdded ? "active" : ""), onClick: function () {
	                _this.selectRider(rider, _this.props.riderKey);
	            }}, "ADDED TO QUOTE"))));
	        }
	        else {
	            return null;
	        }
	    };
	    return Plan;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = Plan;


/***/ }),
/* 986 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var EmailModal_1 = __webpack_require__(987);
	var EmailModalCapture_1 = __webpack_require__(988);
	var ThanksEmail_1 = __webpack_require__(989);
	var ThanksPhone_1 = __webpack_require__(990);
	var LicensedModal_1 = __webpack_require__(991);
	var subheader_1 = __webpack_require__(681);
	var react_lightweight_tooltip_1 = __webpack_require__(705);
	var ScrollToTopOnMount_1 = __webpack_require__(711);
	var react_router_1 = __webpack_require__(184);
	var _ = __webpack_require__(540);
	var PlansPage = (function (_super) {
	    __extends(PlansPage, _super);
	    function PlansPage() {
	        _super.call(this);
	        this.state = {};
	    }
	    PlansPage.prototype.componentWillMount = function () {
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            var basePath = this.props.location.pathname.indexOf("agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            var queryParams = this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	            window.location.href = basePath + queryParamsString;
	        }
	    };
	    PlansPage.prototype.selectProduct = function (product) {
	        this.setState({
	            productId: product.ProductID
	        });
	    };
	    PlansPage.prototype.changeTypeOfSubmission = function (val) {
	        this.setState({
	            type_of_submission: val
	        });
	        this.props.setTypeOfSubmission(val);
	    };
	    PlansPage.prototype.submitQuote = function () {
	        this.props.submitQuote();
	    };
	    PlansPage.prototype.openEmailPopup = function () {
	        this.setState({
	            showModalEmail: true,
	            type_of_submission: 10002,
	            showModalPhone: false,
	            showModalEmailCapture: false
	        });
	    };
	    PlansPage.prototype.openEmailCapturePopup = function () {
	        this.setState({
	            showModalEmailCapture: true,
	            type_of_submission: 10001,
	            showModalPhone: false,
	            showModalEmail: false,
	        });
	    };
	    PlansPage.prototype.getNextButtonDOM = function () {
	        var submit_button = document.querySelectorAll('button.next-step-submit-btn.forward-btn');
	        for (var i = 0, max = submit_button.length; i < max; i++) {
	            var style = window.getComputedStyle(submit_button[i]);
	            var isHidden = ((style.display === 'none') || (style.visibility === 'hidden'));
	            if (!isHidden) {
	                submit_button = submit_button[i];
	                break;
	            }
	        }
	        return submit_button;
	    };
	    PlansPage.prototype.focusNextBtn = function () {
	        var submit_button = this.getNextButtonDOM();
	        window.scrollTo(0, submit_button.offsetTop + 50);
	        submit_button.focus();
	    };
	    PlansPage.prototype.selectNextStep = function (nextStep) {
	        this.setState({
	            nextStep: nextStep
	        });
	        this.focusNextBtn();
	    };
	    PlansPage.prototype.openAgentInputPopup = function () {
	        this.setState({
	            showModalPhone: true,
	            showModalEmail: false,
	            type_of_submission: 10003,
	            showModalEmailCapture: false
	        });
	    };
	    PlansPage.prototype.handlePhoneChange = function (v) {
	        this.setState({
	            phone: v
	        });
	    };
	    PlansPage.prototype.handleSlotChange = function (v) {
	        this.setState({
	            slot: v
	        });
	    };
	    PlansPage.prototype.getExtraInfo = function (data) {
	        if (this.state.slot) {
	            data.contact_time = this.state.slot;
	        }
	        if (this.state.phone) {
	            data.phone_number = this.state.phone;
	        }
	        if (this.state.text_accepted) {
	            data.text_accepted = this.state.text_accepted;
	        }
	        else {
	            data.text_accepted = "No";
	        }
	        if (this.state.type_of_submission == 10003) {
	            data.request_type = 3;
	        }
	        else if (this.state.type_of_submission == 10001) {
	            data.request_type = 1;
	        }
	        else if (this.state.type_of_submission == 10002) {
	            data.request_type = 2;
	        }
	        else if (this.state.type_of_submission == 10004) {
	            data.request_type = 4;
	        }
	        else if (this.state.type_of_submission == 10005) {
	            data.request_type = 5;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	        }
	        else if (this.state.type_of_submission == 10006) {
	            data.request_type = 6;
	        }
	        else if (this.state.type_of_submission == 10007) {
	            data.request_type = 6;
	        }
	        data.request_type = this.state.nextStep.request_type;
	    };
	    PlansPage.prototype.constructPersonsInfo = function (persons) {
	        var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	        personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	        if (this.state.email0) {
	            personOne.email = this.state.email0;
	        }
	        this.getExtraInfo(personOne);
	        persons.push(personOne);
	        if (this.props.noOfPersons == 2) {
	            var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	            personTwo.type_of_submission = this.state.type_of_submission;
	            if (this.state.email1) {
	                personTwo.email = this.state.email1;
	            }
	            this.getExtraInfo(personTwo);
	            persons.push(personTwo);
	        }
	    };
	    PlansPage.prototype.redirectToPlanPage = function () {
	        var basePath = this.props.location.pathname.indexOf("agent") >= 0 || this.props.is_agent ? "/agent/" : "/";
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        react_router_1.browserHistory.push(basePath + "plans" + queryParamsString);
	    };
	    PlansPage.prototype.saveQuote = function () {
	        var _this = this;
	        var persons = [];
	        this.constructPersonsInfo(persons);
	        var data = {
	            applicants: JSON.stringify(persons)
	        };
	        this.getExtraInfo(data);
	        this.props.setPersonsData(persons);
	        return this.props.saveQuoteForm(data).then(function () {
	            if (_this.props.quoteResponse && _this.props.quoteResponse.LOGIN_URL && _this.props.quoteResponse.LOGIN_URL.length > 0) {
	                window.location.href = _this.props.quoteResponse.LOGIN_URL;
	                return;
	            }
	            if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                window.location.href = _this.props.quoteResponse.redirect_url;
	                return;
	            }
	            var k1, k2;
	            if (_this.state.type_of_submission == 10002) {
	                k1 = "showModalEmailThanks";
	                k2 = "showModalEmail";
	            }
	            else if (_this.state.type_of_submission == 10001) {
	                k1 = "showModalEmailThanks";
	                k2 = "showModalEmailCapture";
	            }
	            else {
	                k1 = "showModalPhoneThanks";
	                k2 = "showModalPhone";
	            }
	            _this.setState((_a = {},
	                _a[k1] = true,
	                _a[k2] = false,
	                _a
	            ));
	            if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                window.location.href = _this.props.quoteResponse.redirect_url;
	            }
	            var _a;
	        }).catch(function () {
	            _this.submmitedProductForm = false;
	        });
	    };
	    PlansPage.prototype.handleEmailChange = function (personIndex, v) {
	        this.setState((_a = {},
	            _a["email" + personIndex] = String(v).trim(),
	            _a
	        ));
	        var _a;
	    };
	    PlansPage.prototype.closeEmailModal = function () {
	        this.setState({
	            showModalEmail: false
	        });
	    };
	    PlansPage.prototype.closeEmailThanksModal = function () {
	        this.setState({
	            showModalEmailThanks: false
	        });
	    };
	    PlansPage.prototype.closePhoneThanksModal = function () {
	        this.setState({
	            showModalPhoneThanks: false
	        });
	    };
	    PlansPage.prototype.closeEmailCaptureModal = function () {
	        this.setState({
	            showModalEmailCapture: false
	        });
	    };
	    PlansPage.prototype.closeLicensedModal = function () {
	        this.setState({
	            showModalPhone: false
	        });
	    };
	    PlansPage.prototype.keyValueChange = function (k, v) {
	        this.setState((_a = {},
	            _a[k] = v,
	            _a
	        ));
	        var _a;
	    };
	    PlansPage.prototype.openCorrespondingPopup = function () {
	        if (this.state.nextStep.menu_item_id == "customer_continue_application") {
	            this.openEmailCapturePopup();
	        }
	        else if (this.state.nextStep.menu_item_id == "customer_connect_to_agent") {
	            this.openAgentInputPopup();
	        }
	        else {
	            this.openEmailPopup();
	        }
	    };
	    PlansPage.prototype.directToCorrespondingPage = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (this.state.nextStep.menu_item_id == "customer_continue_application") {
	            this.setState({
	                type_of_submission: 10001,
	            });
	            this.changeTypeOfSubmission(10001);
	            setTimeout(function () {
	                react_router_1.browserHistory.push("/connect-through-application" + queryParamsString);
	            }, 100);
	        }
	        else if (this.state.nextStep.menu_item_id == "customer_connect_to_agent") {
	            this.setState({
	                type_of_submission: 10003,
	            });
	            this.changeTypeOfSubmission(10003);
	            setTimeout(function () {
	                react_router_1.browserHistory.push("/connect-to-agent" + queryParamsString);
	            }, 100);
	        }
	        else {
	            this.setState({
	                type_of_submission: 10002,
	            });
	            this.changeTypeOfSubmission(10002);
	            setTimeout(function () {
	                react_router_1.browserHistory.push("/email-to-quote" + queryParamsString);
	            }, 100);
	        }
	    };
	    PlansPage.prototype.render = function () {
	        var _this = this;
	        var toolTipStyles = {
	            wrapper: {
	                marginLeft: "15px",
	                top: "-16px"
	            },
	            content: {
	                background: 'none',
	                borderRadius: '10px',
	                fontSize: "12px",
	                color: "#ffffff",
	                whiteSpace: "normal",
	                padding: '.3em 5px',
	            },
	            tooltip: {
	                borderRadius: '10px',
	                width: "109px",
	                background: 'rgba(0, 0, 0, 0.5)'
	            },
	            arrow: {
	                borderTop: 'solid rgba(0, 0, 0, 0.5) 5px'
	            },
	            gap: {}
	        };
	        var persons = this.props.persons;
	        persons = persons || [];
	        var personsContainerWidth = this.props.noOfPersons == 2 ? 4 : 8;
	        return (React.createElement("div", {className: "next-steps-container"}, React.createElement(ScrollToTopOnMount_1.default, null), React.createElement(subheader_1.default, {location: this.props.location, products: this.props.products, plans: this.props.plans}), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "c-center customer-next-steps-container container-max-width"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 6, className: "c-center next-steps-header"}, "OK... Let's Take Some Action")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "next-steps-text c-center"}, "This is where the rubber hits the road. You're well on your way to getting covered with life insurance! Click on the appropriate button to take the next step.")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12}, _.map(this.props.saveQuoteOptions, function (saveQuoteOption) {
	            if (saveQuoteOption.enable) {
	                return (React.createElement(react_bootstrap_1.Col, {sm: 4, className: "next-action-application-img-container", onClick: function () {
	                    _this.selectNextStep(saveQuoteOption);
	                }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "next-action-img-container next-action-img-container-mobile " + (_this.state.nextStep && _this.state.nextStep.menu_item_id == saveQuoteOption.menu_item_id ? "active" : "")}, (!_this.state.nextStep || _this.state.nextStep.menu_item_id != saveQuoteOption.menu_item_id) && React.createElement("img", {src: "../images/" + saveQuoteOption.menu_item_id + ".svg", className: "hidden-xs"}), _this.state.nextStep && _this.state.nextStep.menu_item_id == saveQuoteOption.menu_item_id && React.createElement("img", {src: "../images/" + saveQuoteOption.menu_item_id + "_active.png", className: "hidden-xs"}), React.createElement(react_bootstrap_1.Row, {className: "visible-xs"}, React.createElement(react_bootstrap_1.Col, {xs: 2, style: { paddingRight: "0px" }}, (!_this.state.nextStep || _this.state.nextStep.menu_item_id != saveQuoteOption.menu_item_id) && React.createElement("img", {src: "../images/" + saveQuoteOption.menu_item_id + ".svg"}), _this.state.nextStep && _this.state.nextStep.menu_item_id == saveQuoteOption.menu_item_id && React.createElement("img", {src: "../images/" + saveQuoteOption.menu_item_id + "_active.png"})), React.createElement(react_bootstrap_1.Col, {xs: 7, style: { marginTop: "23px" }}, saveQuoteOption.menu_item_title), React.createElement(react_bootstrap_1.Col, {xs: 3, className: "next-steps-tool-tips"}, React.createElement(react_lightweight_tooltip_1.Tooltip, {content: "Apply now", styles: toolTipStyles}, React.createElement("img", {style: { marginBottom: "7px" }, src: "../images/question-mark.svg"})))))));
	            }
	            else {
	                return null;
	            }
	        }))), React.createElement(react_bootstrap_1.Row, {className: "hidden-xs"}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "next-steps-footer"}, _.map(this.props.saveQuoteOptions, function (saveQuoteOption) {
	            if (saveQuoteOption.enable) {
	                return (React.createElement(react_bootstrap_1.Col, {sm: 4, onClick: function () {
	                    _this.selectNextStep(saveQuoteOption);
	                }}, saveQuoteOption.menu_item_title));
	            }
	            else {
	                return null;
	            }
	        }))))), React.createElement(react_bootstrap_1.Row, {className: "next-step-submit-btn-outer-container"}, React.createElement(react_bootstrap_1.Col, {className: "c-center next-step-submit-btn-container"}, React.createElement("span", {className: "hidden-xs previous-btn-text " + (this.state.nextStep ? "active" : ""), onClick: function () {
	            _this.redirectToPlanPage();
	        }}, "PREVIOUS"), React.createElement(react_bootstrap_1.Button, {className: "hidden-xs c-button-default forward-btn next-step-submit-btn " + (this.state.nextStep ? "active" : ""), onClick: function () {
	            _this.openCorrespondingPopup();
	        }}, "NEXT"), React.createElement(react_bootstrap_1.Button, {className: "visible-xs back-btn c-button-default next-step-submit-btn " + (this.state.nextStep ? "active" : ""), onClick: function () {
	            _this.redirectToPlanPage();
	        }, style: { backgroundColor: "#fb4d3d!important" }}, "PREVIOUS"), React.createElement(react_bootstrap_1.Button, {className: "visible-xs c-button-default forward-btn next-step-submit-btn " + (this.state.nextStep ? "active" : ""), onClick: function () {
	            _this.directToCorrespondingPage();
	        }}, "NEXT"))), React.createElement(EmailModal_1.default, {showModalEmail: this.state.showModalEmail, saveQuote: this.saveQuote.bind(this), handleChange: this.handleEmailChange.bind(this), onCloseModal: this.closeEmailModal.bind(this), noOfPersons: this.props.noOfPersons, fromAgentPage: false, handlePhoneChange: this.handlePhoneChange.bind(this), handleSlotChange: this.handleSlotChange.bind(this), keyValueChange: this.keyValueChange.bind(this), phoneNumberDetails: this.props.phoneNumber}), React.createElement(EmailModalCapture_1.default, {showModalEmail: this.state.showModalEmailCapture, saveQuote: this.saveQuote.bind(this), handleChange: this.handleEmailChange.bind(this), onCloseModal: this.closeEmailCaptureModal.bind(this), noOfPersons: this.props.noOfPersons, fromAgentPage: false, handlePhoneChange: this.handlePhoneChange.bind(this), handleSlotChange: this.handleSlotChange.bind(this), keyValueChange: this.keyValueChange.bind(this), phoneNumberDetails: this.props.phoneNumber}), React.createElement(LicensedModal_1.default, {showModalPhone: this.state.showModalPhone, saveQuote: this.saveQuote.bind(this), handlePhoneChange: this.handlePhoneChange.bind(this), handleSlotChange: this.handleSlotChange.bind(this), onCloseModal: this.closeLicensedModal.bind(this), keyValueChange: this.keyValueChange.bind(this), noOfPersons: this.props.noOfPersons, handleChange: this.handleEmailChange.bind(this), fromAgentPage: false, phoneNumberDetails: this.props.phoneNumber}), React.createElement(ThanksEmail_1.default, {showModalEmailThanks: this.state.showModalEmailThanks, onCloseModal: this.closeEmailThanksModal.bind(this)}), React.createElement(ThanksPhone_1.default, {showModalPhoneThanks: this.state.showModalPhoneThanks, onCloseModal: this.closePhoneThanksModal.bind(this)})));
	    };
	    return PlansPage;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        plans: state.quotes.plans,
	        premiums: state.quotes.premiums,
	        is_agent: state.quotes.is_agent,
	        quoteResponse: state.quotes.quoteResponse,
	        saveQuoteOptions: state.quotes.saveQuoteOptions,
	        phoneNumber: state.quotes.phoneNumberDetails
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        saveQuoteForm: function (data) {
	            return dispatch(Quote_1.saveQuoteForm(data));
	        },
	        setTypeOfSubmission: function (data) {
	            return dispatch(Quote_1.setTypeOfSubmission(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(PlansPage);


/***/ }),
/* 987 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var textInput_1 = __webpack_require__(703);
	var underscore_1 = __webpack_require__(540);
	var TelLinkComponent_1 = __webpack_require__(539);
	var popupemailmodal = null;
	var phonesampleVal = "123-123-1234";
	var EmailModal = (function (_super) {
	    __extends(EmailModal, _super);
	    function EmailModal() {
	        _super.call(this);
	        this.state = {};
	    }
	    EmailModal.prototype.componentWillUnmount = function () {
	        if (popupemailmodal != null)
	            popupemailmodal.removeEventListener("keydown", this.keyDownEmailModal.bind(this), false);
	        popupemailmodal = null;
	    };
	    EmailModal.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.showModalEmail && popupemailmodal == null) {
	            var current = this;
	            setTimeout(function (current) {
	                var modal = document.querySelector('div[role="dialog"].fade.in');
	                if (modal) {
	                    popupemailmodal = modal;
	                    popupemailmodal.addEventListener("keydown", current.keyDownEmailModal.bind(current), false);
	                }
	            }, 200, current);
	        }
	    };
	    EmailModal.prototype.keyDownEmailModal = function (e) {
	        var keyCode = e.keyCode;
	        var isModalPopup = document.querySelector('div[role="dialog"].fade.in');
	        if (keyCode == 13 && isModalPopup != null) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                this.saveQuote();
	            }
	        }
	    };
	    EmailModal.prototype.saveQuote = function () {
	        var _this = this;
	        this.setState({
	            alreadySubmittedOnce: true
	        });
	        if (this.validateEmailForm(true)) {
	            this.setState({
	                savingQuote: true
	            });
	            this.props.saveQuote().then(function () {
	                _this.setState({
	                    savingQuote: false
	                });
	            });
	        }
	    };
	    EmailModal.prototype.validateEmailForm = function (checkPhoneNumber) {
	        checkPhoneNumber = undefined != checkPhoneNumber ? checkPhoneNumber : false;
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if (this.props.noOfPersons == 2) {
	            if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	                isError = true;
	                this.setState({
	                    emailErrorExists: true,
	                    emailError0: true
	                });
	            }
	            else {
	                isError = false;
	                this.setState({
	                    emailErrorExists: false
	                });
	                if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                    isError = true;
	                    this.setState((_a = {},
	                        _a["emailError1"] = true,
	                        _a
	                    ));
	                }
	                else {
	                    this.setState((_b = {},
	                        _b["emailError1"] = false,
	                        _b
	                    ));
	                }
	                if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                    isError = true;
	                    this.setState((_c = {},
	                        _c["emailError0"] = true,
	                        _c
	                    ));
	                }
	                else {
	                    this.setState((_d = {},
	                        _d["emailError0"] = false,
	                        _d
	                    ));
	                }
	            }
	        }
	        else {
	            if (input1Valid) {
	                isError = false;
	                this.setState({
	                    emailError0: false
	                });
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	            else {
	                isError = true;
	                this.setState({
	                    emailError0: true,
	                    emailErrorExists: true
	                });
	            }
	        }
	        if (checkPhoneNumber) {
	            var phoneNumber = this.state.phone || "";
	            var val = phoneNumber.trim();
	            if (!underscore_1.isEmpty(val)) {
	                this.props.handlePhoneChange(val);
	                this.setState({
	                    phone: val,
	                    phoneError: (val.length != phonesampleVal.length)
	                });
	                if (!isError && (val.length != phonesampleVal.length)) {
	                    isError = true;
	                }
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    EmailModal.prototype.handlePhoneChange = function (e) {
	        var val = String(e.target.value).trim();
	        if (val.length > 0 && (phonesampleVal && phonesampleVal.length > val.length) && !(new RegExp(/^[a-zA-Z0-9]*$/).test(phonesampleVal[val.length]))) {
	            if (this.state.phone && this.state.phone.length > val.length) {
	            }
	            else {
	                val = val + phonesampleVal[val.length];
	            }
	        }
	        this.props.handlePhoneChange(val);
	        this.setState({
	            phone: val,
	            phoneError: (val.length > phonesampleVal.length)
	        });
	    };
	    EmailModal.prototype.onTextAllowedChange = function (k, v) {
	        this.setState((_a = {}, _a[k] = v, _a));
	        this.props.keyValueChange(k, v);
	        var _a;
	    };
	    ;
	    EmailModal.prototype.handleChange = function (personIndex, e) {
	        var _this = this;
	        var emailRegex = /^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
	        this.props.handleChange(personIndex, String(e.target.value).trim());
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = String(e.target.value).trim(),
	            _a
	        ), function () {
	            _this.validateEmailForm();
	        });
	        var _a;
	    };
	    EmailModal.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, bsSize: "small", show: this.props.showModalEmail, onHide: this.props.onCloseModal, className: "email-modal-container email-modal-unique-container"}, React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text email-quote-text-on-modal"}, this.props.nextStep == "printTheQuote" ? "Print & Email Quote" : "Email the quote"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description email-description-on-modal c-center", sm: 12}, this.props.fromAgentPage ? (this.props.nextStep == "printTheQuote" ? "Please provide the applicant's email address where the quote should be sent. You will then be redirected to the Agent Panel so you can print the quote information." :
	            "Fill out this info to email the quote to the applicant! Then the application can be continued from the Agent panel.") :
	            "Complete your email address to receive the quote for your records. Then you can click submit to complete the application.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Applicant Email address"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }}))), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "left", color: "red", paddingLeft: "0px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid email address of applicant", this.props.noOfPersons == 2 && " 1", "."), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "15px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Applicant Email address 2"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-2", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }}))), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "left", color: "red", paddingLeft: "0px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid email address of applicant 2."), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 6}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Phone number"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container"}, React.createElement(textInput_1.default, {name: "phone-number", placeholder: "866-826-8471", value: this.state.phone, onChange: this.handlePhoneChange.bind(this)})), this.state.phoneError && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "right", color: "red", paddingRight: "0px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px", textAlign: "left" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid phone number.")), React.createElement(react_bootstrap_1.Col, {sm: 6, className: "okay-to-text-number"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.onTextAllowedChange("text_accepted", "Yes");
	        }}, React.createElement("input", {type: "radio", name: "text_accepted", checked: this.state.text_accepted == "Yes"}), React.createElement("span", {style: { top: "3px" }}), React.createElement("label", {htmlFor: "text_accepted"}, " It's okay to text this number. ")))))), React.createElement(react_bootstrap_1.Modal.Footer, null, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default circular " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement(react_bootstrap_1.Row, {className: "agent-modal-submit-text-container"}, React.createElement(react_bootstrap_1.Col, {className: "agent-modal-submit-text"}, "By clicking SUBMIT, I consent to receive phone calls from Vantis Life Insurance Company, at the telephone numbers indicated above including wireless numbers, if provided. I understand these calls may be generated using an automatic dialing system. I understand consent is not required to get a quote, apply for insurance or to make a purchase from Vantis Life Insurance Company.")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 10, className: "c-center", style: { marginTop: "20px" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "free-toll-no-text"}, "Vantis Life Call Center toll free number  |  Mon-Fri 8:30 am - 6 pm, Eastern Time"), React.createElement(react_bootstrap_1.Col, {className: "free-toll-no center"}, React.createElement(TelLinkComponent_1.default, {phoneNumber: this.props.phoneNumberDetails}))))))));
	    };
	    return EmailModal;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = EmailModal;


/***/ }),
/* 988 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var textInput_1 = __webpack_require__(703);
	var underscore_1 = __webpack_require__(540);
	var TelLinkComponent_1 = __webpack_require__(539);
	var emailmodalacapturemodal = null;
	var phonesampleVal = "123-123-1234";
	var EmailModalCapture = (function (_super) {
	    __extends(EmailModalCapture, _super);
	    function EmailModalCapture() {
	        _super.call(this);
	        this.state = {};
	    }
	    EmailModalCapture.prototype.componentWillUnmount = function () {
	        if (emailmodalacapturemodal != null)
	            emailmodalacapturemodal.removeEventListener("keydown", this.keyDownEmailModalCapture.bind(this), false);
	        emailmodalacapturemodal = null;
	    };
	    EmailModalCapture.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.showModalEmail && emailmodalacapturemodal == null) {
	            var current = this;
	            setTimeout(function (current) {
	                var modal = document.querySelector('div[role="dialog"].fade.in');
	                if (modal) {
	                    emailmodalacapturemodal = modal;
	                    emailmodalacapturemodal.addEventListener("keydown", current.keyDownEmailModalCapture.bind(current), false);
	                }
	            }, 200, current);
	        }
	    };
	    EmailModalCapture.prototype.keyDownEmailModalCapture = function (e) {
	        var keyCode = e.keyCode;
	        var isModalPopup = document.querySelector('div[role="dialog"].fade.in');
	        if (keyCode == 13 && isModalPopup != null) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                {
	                    this.saveQuote();
	                }
	            }
	        }
	    };
	    EmailModalCapture.prototype.validateEmailForm = function (checkPhoneNumber) {
	        checkPhoneNumber = undefined != checkPhoneNumber ? checkPhoneNumber : false;
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if (this.props.noOfPersons == 2) {
	            if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	                isError = true;
	                this.setState({
	                    emailErrorExists: true,
	                    emailError0: true
	                });
	            }
	            else {
	                isError = false;
	                this.setState({
	                    emailErrorExists: false
	                });
	                if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                    isError = true;
	                    this.setState((_a = {},
	                        _a["emailError1"] = true,
	                        _a
	                    ));
	                }
	                else {
	                    this.setState((_b = {},
	                        _b["emailError1"] = false,
	                        _b
	                    ));
	                }
	                if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                    isError = true;
	                    this.setState((_c = {},
	                        _c["emailError0"] = true,
	                        _c
	                    ));
	                }
	                else {
	                    this.setState((_d = {},
	                        _d["emailError0"] = false,
	                        _d
	                    ));
	                }
	            }
	        }
	        else {
	            if (input1Valid) {
	                isError = false;
	                this.setState({
	                    emailError0: false
	                });
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	            else {
	                isError = true;
	                this.setState({
	                    emailError0: true,
	                    emailErrorExists: true
	                });
	            }
	        }
	        if (checkPhoneNumber) {
	            var phoneNumber = this.state.phone || "";
	            var val = phoneNumber.trim();
	            if (!underscore_1.isEmpty(val)) {
	                this.props.handlePhoneChange(val);
	                this.setState({
	                    phone: val,
	                    phoneError: (val.length != phonesampleVal.length)
	                });
	                if (!isError && (val.length != phonesampleVal.length)) {
	                    isError = true;
	                }
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    EmailModalCapture.prototype.saveQuote = function () {
	        var _this = this;
	        if (this.validateEmailForm(true)) {
	            this.setState({
	                savingQuote: true
	            });
	            this.props.saveQuote().then(function () {
	                _this.setState({
	                    savingQuote: false
	                });
	            });
	        }
	    };
	    EmailModalCapture.prototype.handleChange = function (personIndex, e) {
	        if (this.validateEmailForm()) {
	            this.setState({
	                emailErrorExists: false
	            });
	        }
	        this.props.handleChange(personIndex, String(e.target.value).trim());
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = String(e.target.value).trim(),
	            _a
	        ));
	        var _a;
	    };
	    EmailModalCapture.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    EmailModalCapture.prototype.handlePhoneChange = function (e) {
	        var val = String(e.target.value).trim();
	        if (val.length > 0 && (phonesampleVal && phonesampleVal.length > val.length) && !(new RegExp(/^[a-zA-Z0-9]*$/).test(phonesampleVal[val.length]))) {
	            if (this.state.phone && this.state.phone.length > val.length) {
	            }
	            else {
	                val = val + phonesampleVal[val.length];
	            }
	        }
	        this.props.handlePhoneChange(val);
	        this.setState({
	            phone: val,
	            phoneError: (val.length > phonesampleVal.length)
	        });
	    };
	    EmailModalCapture.prototype.onTextAllowedChange = function (k, v) {
	        this.setState((_a = {}, _a[k] = v, _a));
	        this.props.keyValueChange(k, v);
	        var _a;
	    };
	    ;
	    EmailModalCapture.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, bsSize: "small", show: this.props.showModalEmail, onHide: this.props.onCloseModal, className: "email-modal-container email-modal-capture-container"}, React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text email-quote-text-on-modal"}, "Email"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description email-description-on-modal c-center", sm: 12}, this.props.fromAgentPage ?
	            "Before beginning the application, please enter the applicant's email address. An email with the quote information will be sent to them." :
	            "Before beginning the application, please enter your preferred email address.  We will send you the estimated quote for your records.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, null, " Applicant 1 Email "), this.props.noOfPersons != 2 && React.createElement(react_bootstrap_1.Row, null, " Email address ")), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError0")}), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "left", color: "red", paddingLeft: "0px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid email address of applicant."))), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 6}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Phone number"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container"}, React.createElement(textInput_1.default, {name: "phone-number", placeholder: "866-826-8471", value: this.state.phone, onChange: this.handlePhoneChange.bind(this)})), this.state.phoneError && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "right", color: "red", paddingRight: "0px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px", textAlign: "left" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid phone number.")), React.createElement(react_bootstrap_1.Col, {sm: 6, className: "okay-to-text-number"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.onTextAllowedChange("text_accepted", "Yes");
	        }}, React.createElement("input", {type: "radio", name: "text_accepted", checked: this.state.text_accepted == "Yes"}), React.createElement("span", {style: { top: "3px" }}), React.createElement("label", {htmlFor: "text_accepted"}, " It's okay to text this number. "))))), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, style: { paddingLeft: "15px" }, className: "email-label"}, "Applicant 2 Email"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-2", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError1")}), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", textAlign: "left", fontSize: "18px" }}, "Please enter valid email address of applicant 2.")))), React.createElement(react_bootstrap_1.Modal.Footer, null, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default circular " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement(react_bootstrap_1.Row, {className: "agent-modal-submit-text-container"}, React.createElement(react_bootstrap_1.Col, {className: "agent-modal-submit-text"}, "By clicking SUBMIT, I consent to receive phone calls from Vantis Life Insurance Company, at the telephone numbers indicated above including wireless numbers, if provided. I understand these calls may be generated using an automatic dialing system. I understand consent is not required to get a quote, apply for insurance or to make a purchase from Vantis Life Insurance Company.")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 10, className: "c-center", style: { marginTop: "20px" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "free-toll-no-text"}, "Vantis Life Call Center toll free number  |  Mon-Fri 8:30 am - 6 pm, Eastern Time"), React.createElement(react_bootstrap_1.Col, {className: "free-toll-no center"}, React.createElement(TelLinkComponent_1.default, {phoneNumber: this.props.phoneNumberDetails}))))))));
	    };
	    return EmailModalCapture;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = EmailModalCapture;


/***/ }),
/* 989 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var react_redux_1 = __webpack_require__(268);
	var thanksemailmodal = null;
	var ThanksEmail = (function (_super) {
	    __extends(ThanksEmail, _super);
	    function ThanksEmail() {
	        _super.call(this);
	        this.state = {};
	    }
	    ThanksEmail.prototype.componentWillUnmount = function () {
	        console.log('componentWillUnmount');
	        if (thanksemailmodal != null)
	            thanksemailmodal.removeEventListener("keydown", this.keyDownthanksemailmodal.bind(this), false);
	        thanksemailmodal = null;
	    };
	    ThanksEmail.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.showModalPhone && thanksemailmodal == null) {
	            var current = this;
	            setTimeout(function (current) {
	                var modal = document.querySelector('div[role="dialog"].fade.in');
	                if (modal) {
	                    thanksemailmodal = modal;
	                    thanksemailmodal.addEventListener("keydown", current.keyDownthanksemailmodal.bind(current), false);
	                }
	            }, 200, current);
	        }
	    };
	    ThanksEmail.prototype.keyDownthanksemailmodal = function (e) {
	        var keyCode = e.keyCode;
	        var isModalPopup = document.querySelector('div[role="dialog"].fade.in');
	        if (keyCode == 13 && isModalPopup != null) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                this.saveQuote();
	            }
	        }
	    };
	    ThanksEmail.prototype.saveQuote = function () {
	        this.props.saveQuote();
	    };
	    ThanksEmail.prototype.getAmountFormat = function (amount) {
	        var a = parseInt(amount);
	        if (a / 1000000 >= 1) {
	            return (a / 1000000) + "m";
	        }
	        else {
	            return (a / 1000) + "k";
	        }
	    };
	    ThanksEmail.prototype.render = function () {
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, show: this.props.showModalEmailThanks, onHide: this.props.onCloseModal, bsSize: "small"}, React.createElement(react_bootstrap_1.Modal.Header, {closeButton: true}), React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement("img", {style: { marginBottom: "34px", marginTop: "54px" }, src: "../images/thanks-email.svg"})), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "confirmation-email-text"}, this.props.quoteResponse && this.props.quoteResponse.data && this.props.quoteResponse.data.message_heading), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "confirmation-email-desc"}, this.props.quoteResponse && this.props.quoteResponse.data && this.props.quoteResponse.data.message_text)))));
	    };
	    return ThanksEmail;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        quoteResponse: state.quotes.quoteResponse
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {};
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(ThanksEmail);


/***/ }),
/* 990 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var react_redux_1 = __webpack_require__(268);
	var ThanksPhone = (function (_super) {
	    __extends(ThanksPhone, _super);
	    function ThanksPhone() {
	        _super.call(this);
	        this.state = {};
	    }
	    ;
	    ThanksPhone.prototype.render = function () {
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, show: this.props.showModalPhoneThanks, onHide: this.props.onCloseModal, bsSize: "small"}, React.createElement(react_bootstrap_1.Modal.Header, {closeButton: true}), React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement("img", {style: { marginBottom: "34px", marginTop: "54px" }, src: "../images/thanks-phone.svg"})), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "confirmation-email-text"}, this.props.quoteResponse && this.props.quoteResponse.data && this.props.quoteResponse.data.message_heading), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "confirmation-email-desc"}, this.props.quoteResponse && this.props.quoteResponse.data && this.props.quoteResponse.data.message_text)))));
	    };
	    return ThanksPhone;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        quoteResponse: state.quotes.quoteResponse
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {};
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(ThanksPhone);


/***/ }),
/* 991 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var textInput_1 = __webpack_require__(703);
	var react_select_1 = __webpack_require__(688);
	var underscore_1 = __webpack_require__(540);
	var TelLinkComponent_1 = __webpack_require__(539);
	var licensemodal = null;
	var phonesampleVal = "123-123-1234";
	var LicensedModal = (function (_super) {
	    __extends(LicensedModal, _super);
	    function LicensedModal() {
	        _super.call(this);
	        this.state = {};
	    }
	    LicensedModal.prototype.componentWillUnmount = function () {
	        if (licensemodal != null)
	            licensemodal.removeEventListener("keydown", this.keyDownlicensemodal.bind(this), false);
	        licensemodal = null;
	    };
	    LicensedModal.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.showModalEmail && licensemodal == null) {
	            var current = this;
	            setTimeout(function (current) {
	                var modal = document.querySelector('div[role="dialog"].fade.in');
	                if (modal) {
	                    licensemodal = modal;
	                    licensemodal.addEventListener("keydown", current.keyDownlicensemodal.bind(current), false);
	                }
	            }, 200, current);
	        }
	    };
	    LicensedModal.prototype.keyDownlicensemodal = function (e) {
	        var keyCode = e.keyCode;
	        var isModalPopup = document.querySelector('div[role="dialog"].fade.in');
	        if (keyCode == 13 && isModalPopup != null) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                this.saveQuote();
	            }
	        }
	    };
	    LicensedModal.prototype.saveQuote = function () {
	        var _this = this;
	        if (this.validateEmailForm(true)) {
	            this.setState({
	                savingQuote: true
	            });
	            this.props.saveQuote().then(function () {
	                _this.setState({
	                    savingQuote: false
	                });
	            });
	            ;
	        }
	    };
	    LicensedModal.prototype.handlePhoneChange = function (e) {
	        var val = e.target.value;
	        val = val.trim();
	        if (val.length > 0 && (phonesampleVal && phonesampleVal.length > val.length) && !(new RegExp(/^[a-zA-Z0-9]*$/).test(phonesampleVal[val.length]))) {
	            if (this.state.phone && this.state.phone.length > val.length) {
	            }
	            else {
	                val = val + phonesampleVal[val.length];
	            }
	        }
	        this.props.handlePhoneChange(val);
	        this.setState({
	            phone: val,
	            phoneError: (underscore_1.isEmpty(val) || val.length > phonesampleVal.length)
	        });
	    };
	    LicensedModal.prototype.validateEmailForm = function (checkPhoneNumber) {
	        checkPhoneNumber = undefined != checkPhoneNumber ? checkPhoneNumber : false;
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if (this.props.noOfPersons == 2) {
	            if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	                isError = true;
	                this.setState({
	                    emailErrorExists: true,
	                    emailError0: true
	                });
	            }
	            else {
	                isError = false;
	                this.setState({
	                    emailErrorExists: false
	                });
	                if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                    isError = true;
	                    this.setState((_a = {},
	                        _a["emailError1"] = true,
	                        _a
	                    ));
	                }
	                else {
	                    this.setState((_b = {},
	                        _b["emailError1"] = false,
	                        _b
	                    ));
	                }
	                if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                    isError = true;
	                    this.setState((_c = {},
	                        _c["emailError0"] = true,
	                        _c
	                    ));
	                }
	                else {
	                    this.setState((_d = {},
	                        _d["emailError0"] = false,
	                        _d
	                    ));
	                }
	            }
	        }
	        else {
	            if (input1Valid) {
	                isError = false;
	                this.setState({
	                    emailError0: false
	                });
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	            else {
	                isError = true;
	                this.setState({
	                    emailError0: true,
	                    emailErrorExists: true
	                });
	            }
	        }
	        if (checkPhoneNumber) {
	            var phoneNumber = this.state.phone || "";
	            var val = phoneNumber.trim();
	            this.props.handlePhoneChange(val);
	            this.setState({
	                phone: val,
	                phoneError: (val.length != phonesampleVal.length)
	            });
	            if (!isError && (val.length != phonesampleVal.length)) {
	                isError = true;
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    ;
	    LicensedModal.prototype.onSlotChange = function (key, obj) {
	        if (this.state.slotInputError) {
	            this.setState({
	                slotInputError: false
	            });
	        }
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a
	        ));
	        this.props.handleSlotChange(obj.value);
	        var _a;
	    };
	    LicensedModal.prototype.onTextAllowedChange = function (k, v) {
	        this.setState((_a = {}, _a[k] = v, _a));
	        this.props.keyValueChange(k, v);
	        var _a;
	    };
	    ;
	    LicensedModal.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    LicensedModal.prototype.handleChange = function (personIndex, e) {
	        var _this = this;
	        var emailRegex = /^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
	        if (this.state.emailErrorExists) {
	            if (this.validateEmailForm()) {
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	        }
	        this.props.handleChange(personIndex, String(e.target.value).trim());
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = String(e.target.value).trim(),
	            _a
	        ), function () {
	            _this.validateEmailForm();
	        });
	        var _a;
	    };
	    LicensedModal.prototype.render = function () {
	        var _this = this;
	        var timingSlots = [
	            {
	                value: "Morning",
	                label: "Morning"
	            },
	            {
	                value: "Afternoon",
	                label: "Afternoon"
	            },
	            {
	                value: "Evening",
	                label: "Evening"
	            },
	            {
	                value: "Night",
	                label: "Night"
	            }
	        ];
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, show: this.props.showModalPhone, onHide: this.props.onCloseModal, className: "email-modal-container agent-modal-container"}, React.createElement(react_bootstrap_1.Modal.Header, {closeButton: true}), React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text"}, "Connect me to a licensed agent"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description c-center", sm: 12}, "Please complete the information below and a licensed agent will contact you to complete your application.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 6}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label slot-label"}, "Best time to reach you?"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "slot-input-container"}, React.createElement(react_select_1.default, {name: "form-field-slot", options: timingSlots, value: this.state.slot, onChange: function (slot) {
	            _this.onSlotChange("slot", slot);
	        }}))), React.createElement(react_bootstrap_1.Col, {sm: 6}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Phone number"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container"}, React.createElement(textInput_1.default, {name: "phone-number", placeholder: "800-252-7254", value: this.state.phone, onChange: this.handlePhoneChange.bind(this)}))), this.state.phoneError && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "right", color: "red", paddingRight: "33px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid phone number.")), React.createElement(react_bootstrap_1.Row, {className: "okay-to-text-number"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.onTextAllowedChange("text_accepted", "Yes");
	        }}, React.createElement("input", {type: "radio", name: "text_accepted", checked: this.state.text_accepted == "Yes"}), React.createElement("span", {style: { top: "3px" }}), React.createElement("label", {htmlFor: "text_accepted"}, " It's okay to text this number. ")))), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Applicant Email address"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError0")}), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", fontSize: "16px", marginBottom: "15px" }}, "Please enter valid email address of applicant", this.props.noOfPersons == 2 && "1", "."))), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label", style: { paddingLeft: "15px" }}, "Applicant Email address 2"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError1")}), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", fontSize: "16px", marginBottom: "15px" }}, "Please enter valid email address of applicant 2.")))), React.createElement(react_bootstrap_1.Modal.Footer, null, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default circular " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement(react_bootstrap_1.Row, {className: "agent-modal-submit-text-container"}, React.createElement(react_bootstrap_1.Col, {className: "agent-modal-submit-text"}, "By clicking SUBMIT, I consent to receive phone calls from Vantis Life Insurance Company, at the telephone numbers indicated above including wireless numbers, if provided. I understand these calls may be generated using an automatic dialing system. I understand consent is not required to get a quote, apply for insurance or to make a purchase from Vantis Life Insurance Company.")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 10, className: "c-center", style: { marginTop: "20px" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "free-toll-no-text"}, "Vantis Life Call Center toll free number  |  Mon-Fri 8:30 am - 6 pm, Eastern Time"), React.createElement(react_bootstrap_1.Col, {className: "free-toll-no center"}, React.createElement(TelLinkComponent_1.default, {phoneNumber: this.props.phoneNumberDetails}))))))));
	    };
	    return LicensedModal;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = LicensedModal;


/***/ }),
/* 992 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var AgentEmailModal_1 = __webpack_require__(993);
	var ThanksEmail_1 = __webpack_require__(989);
	var ThanksPhone_1 = __webpack_require__(990);
	var AgentLicensedModal_1 = __webpack_require__(994);
	var subheader_1 = __webpack_require__(681);
	var react_router_1 = __webpack_require__(184);
	var AgentEmailModalCapture_1 = __webpack_require__(995);
	var _ = __webpack_require__(540);
	var PlansPage = (function (_super) {
	    __extends(PlansPage, _super);
	    function PlansPage() {
	        _super.call(this);
	        this.state = {};
	        this.changeTypeOfSubmission.bind(this);
	        this.openAgentInputPopup.bind(this);
	        this.openEmailPopup.bind(this);
	    }
	    PlansPage.prototype.componentWillMount = function () {
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            var queryParams = this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	            var basePath = this.props.location.pathname.indexOf("agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            react_router_1.browserHistory.push(basePath + queryParamsString);
	        }
	    };
	    PlansPage.prototype.selectProduct = function (product) {
	        this.setState({
	            productId: product.ProductID
	        });
	    };
	    PlansPage.prototype.changeTypeOfSubmission = function (val) {
	        this.setState({
	            type_of_submission: val
	        });
	        this.props.setTypeOfSubmission(val);
	    };
	    PlansPage.prototype.submitQuote = function () {
	        this.props.submitQuote();
	    };
	    PlansPage.prototype.openEmailCapturePopup = function () {
	        this.setState({
	            showModalEmailCapture: true,
	            type_of_submission: 10004,
	            showModalPhone: false,
	            showModalEmail: false
	        });
	    };
	    PlansPage.prototype.openEmailPopup = function () {
	        this.setState({
	            showModalEmail: true,
	            showModalPhone: false,
	            showModalEmailCapture: false,
	            type_of_submission: 10007
	        });
	    };
	    PlansPage.prototype.openPrintPdf = function () {
	        this.setState({
	            showModalEmail: true,
	            showModalEmailCapture: false,
	            type_of_submission: 10006,
	            openingPdf: true
	        });
	    };
	    PlansPage.prototype.openAgentInputPopup = function () {
	        this.setState({
	            showModalPhone: true,
	            showModalEmail: false,
	            showModalEmailCapture: false,
	            type_of_submission: 10005
	        });
	    };
	    PlansPage.prototype.handlePhoneChange = function (v) {
	        this.setState({
	            phone: v
	        });
	    };
	    PlansPage.prototype.handleSlotChange = function (v) {
	        this.setState({
	            slot: v
	        });
	    };
	    PlansPage.prototype.handleKeyChange = function (k, v) {
	        this.setState((_a = {},
	            _a[k] = v,
	            _a
	        ));
	        var _a;
	    };
	    PlansPage.prototype.getExtraInfo = function (data) {
	        if (this.state.type_of_submission == 10003) {
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	            else {
	                data.text_accepted = "No";
	            }
	            data.request_type = 3;
	        }
	        else if (this.state.type_of_submission == 10001) {
	            data.request_type = 1;
	        }
	        else if (this.state.type_of_submission == 10002) {
	            data.request_type = 2;
	        }
	        else if (this.state.type_of_submission == 10004) {
	            data.request_type = 4;
	        }
	        else if (this.state.type_of_submission == 10005) {
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	            else {
	                data.text_accepted = "No";
	            }
	            data.request_type = 5;
	        }
	        else if (this.state.type_of_submission == 10006) {
	            data.request_type = 6;
	        }
	        else if (this.state.type_of_submission == 10007) {
	            data.request_type = 7;
	        }
	        data.request_type = this.state.nextStep.request_type;
	    };
	    PlansPage.prototype.saveQuote = function () {
	        var _this = this;
	        var persons = [];
	        var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	        personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	        if (this.state.email0) {
	            personOne.email = this.state.email0;
	        }
	        this.getExtraInfo(personOne);
	        persons.push(personOne);
	        if (this.props.noOfPersons == 2) {
	            var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	            if (this.state.email1) {
	                personTwo.email = this.state.email1;
	            }
	            this.getExtraInfo(personTwo);
	            persons.push(personTwo);
	        }
	        var data = {
	            applicants: JSON.stringify(persons)
	        };
	        this.getExtraInfo(data);
	        this.props.setPersonsData(persons);
	        return this.props.saveQuoteForm(data).then(function () {
	            if (_this.props.quoteResponse && _this.props.quoteResponse.LOGIN_URL && _this.props.quoteResponse.LOGIN_URL.length > 0) {
	                window.location.href = _this.props.quoteResponse.LOGIN_URL;
	                return;
	            }
	            if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url) {
	                window.location.href = _this.props.quoteResponse.redirect_url;
	                return;
	            }
	            var k1, k2;
	            if (_this.state.type_of_submission == 10006) {
	                k1 = "showModalEmailThanks";
	                k2 = "showModalEmail";
	            }
	            else if (_this.state.type_of_submission == 10004) {
	                k1 = "showModalEmailThanks";
	                k2 = "showModalEmailCapture";
	            }
	            else if (_this.state.type_of_submission == 10005) {
	                k1 = "showModalPhoneThanks";
	                k2 = "showModalPhone";
	            }
	            else {
	                k1 = "showModalEmailThanks";
	                k2 = "showModalEmail";
	            }
	            _this.setState((_a = {},
	                _a[k1] = true,
	                _a[k2] = false,
	                _a
	            ));
	            if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                window.location.href = _this.props.quoteResponse.redirect_url;
	            }
	            var _a;
	        }).catch(function () {
	            _this.submmitedProductForm = false;
	        });
	    };
	    PlansPage.prototype.handleEmailChange = function (personIndex, v) {
	        this.setState((_a = {},
	            _a["email" + personIndex] = String(v).trim(),
	            _a
	        ));
	        var _a;
	    };
	    PlansPage.prototype.closeEmailThanksModal = function () {
	        this.setState({
	            showModalEmailThanks: false
	        });
	    };
	    PlansPage.prototype.closePhoneThanksModal = function () {
	        this.setState({
	            showModalPhoneThanks: false
	        });
	    };
	    PlansPage.prototype.closeEmailModal = function () {
	        this.setState({
	            showModalEmail: false
	        });
	    };
	    PlansPage.prototype.closeAgentLicensedModal = function () {
	        this.setState({
	            showModalPhone: false
	        });
	    };
	    PlansPage.prototype.keyValueChange = function (k, v) {
	        this.setState((_a = {},
	            _a[k] = v,
	            _a
	        ));
	        var _a;
	    };
	    PlansPage.prototype.openCorrespondingPopup = function () {
	        if (this.state.nextStep.menu_item_id == "agent_complete_application" || this.state.nextStep.menu_item_id == "completeTheApplication") {
	            this.openEmailCapturePopup();
	        }
	        else if (this.state.nextStep.menu_item_id == "agent_drop_ticket_call_center" || this.state.nextStep.menu_item_id == "ticketToVantisLifeSales") {
	            this.openAgentInputPopup();
	        }
	        else if (this.state.nextStep.menu_item_id == "agent_print_email_quote") {
	            this.openPrintPdf();
	        }
	        else {
	            this.openEmailPopup();
	        }
	    };
	    PlansPage.prototype.closeEmailCaptureModal = function () {
	        this.setState({
	            showModalEmailCapture: false
	        });
	    };
	    PlansPage.prototype.directToCorrespondingPage = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (this.state.nextStep.menu_item_id == "agent_complete_application" || this.state.nextStep == "completeTheApplication") {
	            this.changeTypeOfSubmission(10004);
	            setTimeout(function () {
	                react_router_1.browserHistory.push("/agent/connect-through-application" + queryParamsString);
	            }, 100);
	        }
	        else if (this.state.nextStep.menu_item_id == "agent_drop_ticket_call_center" || this.state.nextStep == "ticketToVantisLifeSales") {
	            this.changeTypeOfSubmission(10005);
	            setTimeout(function () {
	                react_router_1.browserHistory.push("/agent/connect-to-agent" + queryParamsString);
	            }, 100);
	        }
	        else if (this.state.nextStep.menu_item_id == "agent_print_email_quote") {
	            this.changeTypeOfSubmission(10006);
	            setTimeout(function () {
	                react_router_1.browserHistory.push("/agent/email-to-quote" + queryParamsString);
	            }, 100);
	        }
	        else {
	            this.changeTypeOfSubmission(10007);
	            setTimeout(function () {
	                react_router_1.browserHistory.push("/agent/email-to-quote" + queryParamsString);
	            }, 100);
	        }
	    };
	    PlansPage.prototype.selectNextStep = function (nextStep) {
	        this.setState({
	            nextStep: nextStep
	        });
	    };
	    PlansPage.prototype.redirectToPlanPage = function () {
	        var basePath = this.props.location.pathname.indexOf("agent") >= 0 || this.props.is_agent ? "/agent/" : "/";
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        react_router_1.browserHistory.push(basePath + "plans" + queryParamsString);
	    };
	    PlansPage.prototype.render = function () {
	        var _this = this;
	        var persons = this.props.persons;
	        persons = persons || [];
	        var personsContainerWidth = this.props.noOfPersons == 2 ? 4 : 8;
	        return (React.createElement("div", {className: "next-steps-container"}, React.createElement(subheader_1.default, {location: this.props.location, products: this.props.products, plans: this.props.plans}), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center customer-next-steps-container agent-next-steps-outer-container"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 4, className: "agent-next-steps-text-container"}, React.createElement(react_bootstrap_1.Row, {className: "next-steps-header"}, "OK... Let's Take Some Action!"), React.createElement(react_bootstrap_1.Row, {sm: 8, className: "next-steps-text"}, "You can start the application right away or choose one of the other options.")), React.createElement(react_bootstrap_1.Col, {sm: 8, className: "agent-next-steps-container"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, _.map(this.props.saveQuoteOptions, function (saveQuoteOption) {
	            if (saveQuoteOption.enable) {
	                return (React.createElement("div", {className: "agent-next-step-container"}, React.createElement("div", {className: "c-radio l-next-step-container", onClick: function () {
	                    _this.selectNextStep(saveQuoteOption);
	                }}, React.createElement("input", {type: "radio", name: "nextStep-agent_complete_application", checked: _this.state.nextStep && _this.state.nextStep.menu_item_id == saveQuoteOption.menu_item_id}), React.createElement("span", null), React.createElement("label", {htmlFor: "person_s_gender_"}, " ", saveQuoteOption.menu_item_title, " "))));
	            }
	            else {
	                return null;
	            }
	        })))))), React.createElement(react_bootstrap_1.Row, {className: "next-step-submit-btn-outer-container"}, React.createElement(react_bootstrap_1.Col, {className: "c-center next-step-submit-btn-container"}, React.createElement("span", {className: "hidden-xs previous-btn-text " + (this.state.nextStep ? "active" : ""), onClick: function () {
	            _this.redirectToPlanPage();
	        }}, "PREVIOUS"), React.createElement(react_bootstrap_1.Button, {className: "hidden-xs c-button-default next-step-submit-btn " + (this.state.nextStep ? "active" : ""), onClick: function () {
	            _this.openCorrespondingPopup();
	        }}, "NEXT", this.state.openingPdf && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})), React.createElement(react_bootstrap_1.Button, {className: "visible-xs c-button-default back-btn next-step-submit-btn " + (this.state.nextStep ? "active" : ""), onClick: function () {
	            _this.redirectToPlanPage();
	        }, style: { backgroundColor: "#fb4d3d!important" }}, "PREVIOUS"), React.createElement(react_bootstrap_1.Button, {className: "visible-xs c-button-default next-step-submit-btn " + (this.state.nextStep ? "active" : ""), onClick: function () {
	            _this.directToCorrespondingPage();
	        }}, "NEXT", this.state.openingPdf && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement(AgentEmailModalCapture_1.default, {showModalEmail: this.state.showModalEmailCapture, saveQuote: this.saveQuote.bind(this), handleChange: this.handleEmailChange.bind(this), onCloseModal: this.closeEmailCaptureModal.bind(this), noOfPersons: this.props.noOfPersons, fromAgentPage: true}), React.createElement(AgentEmailModal_1.default, {showModalEmail: this.state.showModalEmail, saveQuote: this.saveQuote.bind(this), handleChange: this.handleEmailChange.bind(this), onCloseModal: this.closeEmailModal.bind(this), noOfPersons: this.props.noOfPersons, fromAgentPage: true, nextStep: this.state.nextStep}), React.createElement(AgentLicensedModal_1.default, {showModalPhone: this.state.showModalPhone, saveQuote: this.saveQuote.bind(this), handlePhoneChange: this.handlePhoneChange.bind(this), handleSlotChange: this.handleSlotChange.bind(this), onCloseModal: this.closeAgentLicensedModal.bind(this), keyValueChange: this.keyValueChange.bind(this), noOfPersons: this.props.noOfPersons, fromAgentPage: true, phoneNumberDetails: this.props.phoneNumber}), React.createElement(ThanksEmail_1.default, {showModalEmailThanks: this.state.showModalEmailThanks, onCloseModal: this.closeEmailThanksModal.bind(this)}), React.createElement(ThanksPhone_1.default, {showModalPhoneThanks: this.state.showModalPhoneThanks, onCloseModal: this.closePhoneThanksModal.bind(this)})));
	    };
	    return PlansPage;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        plans: state.quotes.plans,
	        premiums: state.quotes.premiums,
	        is_agent: state.quotes.is_agent,
	        quoteResponse: state.quotes.quoteResponse,
	        saveQuoteOptions: state.quotes.saveQuoteOptions,
	        phoneNumber: state.quotes.phoneNumberDetails
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        saveQuoteForm: function (data) {
	            return dispatch(Quote_1.saveQuoteForm(data));
	        },
	        setTypeOfSubmission: function (data) {
	            return dispatch(Quote_1.setTypeOfSubmission(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(PlansPage);


/***/ }),
/* 993 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var textInput_1 = __webpack_require__(703);
	var underscore_1 = __webpack_require__(540);
	var popupemailmodal = null;
	var AgentEmailModal = (function (_super) {
	    __extends(AgentEmailModal, _super);
	    function AgentEmailModal() {
	        _super.call(this);
	        this.state = {};
	    }
	    AgentEmailModal.prototype.componentWillUnmount = function () {
	        if (popupemailmodal != null)
	            popupemailmodal.removeEventListener("keydown", this.keyDownEmailModal.bind(this), false);
	        popupemailmodal = null;
	    };
	    AgentEmailModal.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.showModalEmail && popupemailmodal == null) {
	            var current = this;
	            setTimeout(function (current) {
	                var modal = document.querySelector('div[role="dialog"].fade.in');
	                if (modal) {
	                    popupemailmodal = modal;
	                    popupemailmodal.addEventListener("keydown", current.keyDownEmailModal.bind(current), false);
	                }
	            }, 200, current);
	        }
	    };
	    AgentEmailModal.prototype.keyDownEmailModal = function (e) {
	        var keyCode = e.keyCode;
	        var isModalPopup = document.querySelector('div[role="dialog"].fade.in');
	        if (keyCode == 13 && isModalPopup != null) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                this.saveQuote();
	            }
	        }
	    };
	    AgentEmailModal.prototype.saveQuote = function () {
	        var _this = this;
	        this.setState({
	            alreadySubmittedOnce: true
	        });
	        if (this.validateEmailForm()) {
	            this.setState({
	                savingQuote: true
	            });
	            this.props.saveQuote().then(function () {
	                _this.setState({
	                    savingQuote: false
	                });
	            });
	        }
	    };
	    AgentEmailModal.prototype.validateEmailForm = function () {
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if (this.props.noOfPersons == 2) {
	            if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	                isError = true;
	                this.setState({
	                    emailErrorExists: true,
	                    emailError0: true
	                });
	            }
	            else {
	                isError = false;
	                this.setState({
	                    emailErrorExists: false
	                });
	                if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                    isError = true;
	                    this.setState((_a = {},
	                        _a["emailError1"] = true,
	                        _a
	                    ));
	                }
	                else {
	                    this.setState((_b = {},
	                        _b["emailError1"] = false,
	                        _b
	                    ));
	                }
	                if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                    isError = true;
	                    this.setState((_c = {},
	                        _c["emailError0"] = true,
	                        _c
	                    ));
	                }
	                else {
	                    this.setState((_d = {},
	                        _d["emailError0"] = false,
	                        _d
	                    ));
	                }
	            }
	        }
	        else {
	            if (input1Valid) {
	                isError = false;
	                this.setState({
	                    emailError0: false
	                });
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	            else {
	                isError = true;
	                this.setState({
	                    emailError0: true,
	                    emailErrorExists: true
	                });
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    AgentEmailModal.prototype.handleChange = function (personIndex, e) {
	        var _this = this;
	        var emailRegex = /^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
	        this.props.handleChange(personIndex, String(e.target.value).trim());
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = String(e.target.value).trim(),
	            _a
	        ), function () {
	            _this.validateEmailForm();
	        });
	        var _a;
	    };
	    AgentEmailModal.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, bsSize: "small", show: this.props.showModalEmail, onHide: this.props.onCloseModal, className: "email-modal-container email-modal-unique-container"}, React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text email-quote-text-on-modal"}, this.props.nextStep == "printTheQuote" ? "Print & Email Quote" : "Email the quote"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description email-description-on-modal c-center", sm: 12}, this.props.fromAgentPage ? (this.props.nextStep == "printTheQuote" ? "Please provide the applicant's email address where the quote should be sent. You will then be redirected to the Agent Panel so you can print the quote information." :
	            "Fill out this info to email the quote to the applicant! Then the application can be continued from the Agent panel.") :
	            "Fill out this info to email the quote to yourself for your records! Then you can click on the link to complete the application.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Applicant Email address", this.props.noOfPersons == 2 && " 1"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }}))), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "left", color: "red", paddingLeft: "0px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid email address of applicant", this.props.noOfPersons == 2 && " 1", "."), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "15px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Applicant Email address 2"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-2", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }}))), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "left", color: "red", paddingLeft: "0px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid email address of applicant 2.")), React.createElement(react_bootstrap_1.Modal.Footer, null, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default circular " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))))));
	    };
	    return AgentEmailModal;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = AgentEmailModal;


/***/ }),
/* 994 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var textInput_1 = __webpack_require__(703);
	var react_select_1 = __webpack_require__(688);
	var underscore_1 = __webpack_require__(540);
	var TelLinkComponent_1 = __webpack_require__(539);
	var agentlicensedmodal = null;
	var AgentLicensedModal = (function (_super) {
	    __extends(AgentLicensedModal, _super);
	    function AgentLicensedModal() {
	        _super.call(this);
	        this.state = {};
	    }
	    AgentLicensedModal.prototype.componentWillUnmount = function () {
	        console.log('componentWillUnmount');
	        if (agentlicensedmodal != null)
	            agentlicensedmodal.removeEventListener("keydown", this.keyDownAgentLicensedModal.bind(this), false);
	        agentlicensedmodal = null;
	    };
	    AgentLicensedModal.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.showModalPhone && agentlicensedmodal == null) {
	            console.log('componentWillReceiveProps');
	            var current = this;
	            setTimeout(function (current) {
	                var modal = document.querySelector('div[role="dialog"].fade.in');
	                if (modal) {
	                    agentlicensedmodal = modal;
	                    agentlicensedmodal.addEventListener("keydown", current.keyDownAgentLicensedModal.bind(current), false);
	                }
	            }, 200, current);
	        }
	    };
	    AgentLicensedModal.prototype.keyDownAgentLicensedModal = function (e) {
	        var keyCode = e.keyCode;
	        var isModalPopup = document.querySelector('div[role="dialog"].fade.in');
	        if (keyCode == 13 && isModalPopup != null) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                console.log("AgentLicenseModal.tsx");
	                this.saveQuote();
	            }
	        }
	    };
	    AgentLicensedModal.prototype.validateEmailForm = function () {
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if (this.props.noOfPersons == 2) {
	            if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	                isError = true;
	                this.setState({
	                    emailErrorExists: true,
	                    emailError0: true
	                });
	            }
	            else {
	                isError = false;
	                this.setState({
	                    emailErrorExists: false
	                });
	                if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                    isError = true;
	                    this.setState((_a = {},
	                        _a["emailError1"] = true,
	                        _a
	                    ));
	                }
	                else {
	                    this.setState((_b = {},
	                        _b["emailError1"] = false,
	                        _b
	                    ));
	                }
	                if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                    isError = true;
	                    this.setState((_c = {},
	                        _c["emailError0"] = true,
	                        _c
	                    ));
	                }
	                else {
	                    this.setState((_d = {},
	                        _d["emailError0"] = false,
	                        _d
	                    ));
	                }
	            }
	        }
	        else {
	            if (input1Valid) {
	                isError = false;
	                this.setState({
	                    emailError0: false
	                });
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	            else {
	                isError = true;
	                this.setState({
	                    emailError0: true,
	                    emailErrorExists: true
	                });
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    AgentLicensedModal.prototype.saveQuote = function () {
	        var _this = this;
	        var phoneError = underscore_1.isEmpty(this.state.phone);
	        if (phoneError) {
	            this.setState({
	                phoneError: true
	            });
	        }
	        else if (this.validateEmailForm()) {
	            this.setState({
	                savingQuote: true,
	                phoneError: false
	            });
	            this.props.saveQuote().then(function () {
	                _this.setState({
	                    savingQuote: false
	                });
	            });
	            ;
	        }
	    };
	    AgentLicensedModal.prototype.handlePhoneChange = function (e) {
	        if (this.validateEmailForm()) {
	            this.setState({
	                emailErrorExists: false
	            });
	        }
	        var val = String(e.target.value).trim();
	        var sampleVal = "123-123-1234";
	        if (val.length > 0 && (sampleVal && sampleVal.length > val.length) && !(new RegExp(/^[a-zA-Z0-9]*$/).test(sampleVal[val.length]))) {
	            if (this.state.phone && this.state.phone.length > val.length) {
	            }
	            else {
	                val = val + sampleVal[val.length];
	            }
	        }
	        this.props.handlePhoneChange(val);
	        this.setState({
	            phone: val,
	            phoneError: underscore_1.isEmpty(val)
	        });
	    };
	    AgentLicensedModal.prototype.onSlotChange = function (key, obj) {
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a
	        ));
	        this.props.handleSlotChange(obj.value);
	        var _a;
	    };
	    AgentLicensedModal.prototype.onTextAllowedChange = function (k, v) {
	        this.setState((_a = {}, _a[k] = v, _a));
	        this.props.keyValueChange(k, v);
	        var _a;
	    };
	    ;
	    AgentLicensedModal.prototype.handleChange = function (personIndex, e) {
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = String(e.target.value).trim(),
	            _a
	        ));
	        this.props.keyValueChange("email" + personIndex, String(e.target.value).trim());
	        if (this.validateEmailForm()) {
	            this.setState({
	                emailErrorExists: false
	            });
	        }
	        var _a;
	    };
	    AgentLicensedModal.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    AgentLicensedModal.prototype.render = function () {
	        var _this = this;
	        var timingSlots = [
	            {
	                value: "Morning",
	                label: "Morning"
	            },
	            {
	                value: "Afternoon",
	                label: "Afternoon"
	            },
	            {
	                value: "Evening",
	                label: "Evening"
	            },
	            {
	                value: "Night",
	                label: "Night"
	            }
	        ];
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, show: this.props.showModalPhone, onHide: this.props.onCloseModal, className: "email-modal-container agent-modal-container"}, React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text"}, "Drop ticket to Vantis Life call center"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description c-center", sm: 12})), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 6}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label slot-label"}, "Best time to reach applicant?"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "slot-input-container"}, React.createElement(react_select_1.default, {name: "form-field-slot", options: timingSlots, value: this.state.slot, onChange: function (slot) {
	            _this.onSlotChange("slot", slot);
	        }}))), React.createElement(react_bootstrap_1.Col, {sm: 6}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Phone number"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container"}, React.createElement(textInput_1.default, {name: "phone-number", placeholder: "866-826-8471", value: this.state.phone, onChange: this.handlePhoneChange.bind(this)}))), this.state.phoneError && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "right", color: "red", paddingRight: "33px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid phone number.")), React.createElement(react_bootstrap_1.Row, {className: "okay-to-text-number"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.onTextAllowedChange("text_accepted", "Yes");
	        }}, React.createElement("input", {type: "radio", name: "text_accepted", checked: this.state.text_accepted == "Yes"}), React.createElement("span", {style: { top: "3px" }}), React.createElement("label", {htmlFor: "text_accepted"}, " It's okay to text this number. ")))), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Applicant Email address ", this.props.noOfPersons == 2 && "1"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError0")}), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", textAlign: "left", fontSize: "18px", marginBottom: "10px" }}, "Please enter valid email address of applicant", this.props.noOfPersons == 2 && " 1", "."))), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label", style: { paddingLeft: "15px" }}, "Applicant Email address 2"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError1")}), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", textAlign: "left", fontSize: "18px", marginBottom: "10px" }}, "Please enter valid email address of applicant 2.")))), React.createElement(react_bootstrap_1.Modal.Footer, null, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 8, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default circular " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 10, className: "c-center", style: { marginTop: "20px" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "free-toll-no-text"}, "Vantis Life Call Center toll free number  |  Mon-Fri 8:30 am - 6 pm, Eastern Time"), React.createElement(react_bootstrap_1.Col, {className: "free-toll-no center"}, React.createElement(TelLinkComponent_1.default, {phoneNumber: this.props.phoneNumberDetails}))))))));
	    };
	    return AgentLicensedModal;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = AgentLicensedModal;


/***/ }),
/* 995 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_bootstrap_1 = __webpack_require__(280);
	var textInput_1 = __webpack_require__(703);
	var underscore_1 = __webpack_require__(540);
	var emailmodalacapturemodal = null;
	var AgentEmailModalCapture = (function (_super) {
	    __extends(AgentEmailModalCapture, _super);
	    function AgentEmailModalCapture() {
	        _super.call(this);
	        this.state = {};
	    }
	    AgentEmailModalCapture.prototype.componentWillUnmount = function () {
	        if (emailmodalacapturemodal != null)
	            emailmodalacapturemodal.removeEventListener("keydown", this.keyDownEmailModalCapture.bind(this), false);
	        emailmodalacapturemodal = null;
	    };
	    AgentEmailModalCapture.prototype.componentWillReceiveProps = function (nextProps) {
	        if (nextProps.showModalEmail && emailmodalacapturemodal == null) {
	            var current = this;
	            setTimeout(function (current) {
	                var modal = document.querySelector('div[role="dialog"].fade.in');
	                if (modal) {
	                    emailmodalacapturemodal = modal;
	                    emailmodalacapturemodal.addEventListener("keydown", current.keyDownEmailModalCapture.bind(current), false);
	                }
	            }, 200, current);
	        }
	    };
	    AgentEmailModalCapture.prototype.keyDownEmailModalCapture = function (e) {
	        var keyCode = e.keyCode;
	        var isModalPopup = document.querySelector('div[role="dialog"].fade.in');
	        if (keyCode == 13 && isModalPopup != null) {
	            var activeElement = document.activeElement;
	            if (activeElement.getAttribute('aria-haspopup') == null && !activeElement.classList.contains('react-datepicker-ignore-onclickoutside')) {
	                {
	                    this.saveQuote();
	                }
	            }
	        }
	    };
	    AgentEmailModalCapture.prototype.validateEmailForm = function () {
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if (this.props.noOfPersons == 2) {
	            if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	                isError = true;
	                this.setState({
	                    emailErrorExists: true,
	                    emailError0: true
	                });
	            }
	            else {
	                isError = false;
	                this.setState({
	                    emailErrorExists: false
	                });
	                if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                    isError = true;
	                    this.setState((_a = {},
	                        _a["emailError1"] = true,
	                        _a
	                    ));
	                }
	                else {
	                    this.setState((_b = {},
	                        _b["emailError1"] = false,
	                        _b
	                    ));
	                }
	                if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                    isError = true;
	                    this.setState((_c = {},
	                        _c["emailError0"] = true,
	                        _c
	                    ));
	                }
	                else {
	                    this.setState((_d = {},
	                        _d["emailError0"] = false,
	                        _d
	                    ));
	                }
	            }
	        }
	        else {
	            if (input1Valid) {
	                isError = false;
	                this.setState({
	                    emailError0: false
	                });
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	            else {
	                isError = true;
	                this.setState({
	                    emailError0: true,
	                    emailErrorExists: true
	                });
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    AgentEmailModalCapture.prototype.saveQuote = function () {
	        var _this = this;
	        console.log('saveQuote()');
	        console.log(this.props);
	        console.log(typeof this.props.saveQuote);
	        if (this.validateEmailForm()) {
	            this.setState({
	                savingQuote: true
	            });
	            this.props.saveQuote().then(function () {
	                _this.setState({
	                    savingQuote: false
	                });
	            });
	        }
	    };
	    AgentEmailModalCapture.prototype.handleChange = function (personIndex, e) {
	        if (this.validateEmailForm()) {
	            this.setState({
	                emailErrorExists: false
	            });
	        }
	        this.props.handleChange(personIndex, String(e.target.value).trim());
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = String(e.target.value).trim(),
	            _a
	        ));
	        var _a;
	    };
	    AgentEmailModalCapture.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    AgentEmailModalCapture.prototype.render = function () {
	        var _this = this;
	        return (React.createElement(react_bootstrap_1.Modal, {autoFocus: true, bsSize: "small", show: this.props.showModalEmail, onHide: this.props.onCloseModal, className: "email-modal-container email-modal-capture-container"}, React.createElement(react_bootstrap_1.Modal.Body, {style: { fontSize: "25px", textAlign: "center" }}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text email-quote-text-on-modal"}, "Email capture"), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description email-description-on-modal c-center", sm: 12}, this.props.fromAgentPage ?
	            "Before beginning the application, please enter the applicant's email address. An email with the quote information will be sent to them." :
	            "Before beginning the application, please enter your preferred email address.  We will send you the estimated quote for your records.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, null, " Applicant 1 Email "), this.props.noOfPersons != 2 && React.createElement(react_bootstrap_1.Row, null, " Email address ")), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError0")}), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", textAlign: "left", fontSize: "18px" }}, "Please enter valid email address of applicant", this.props.noOfPersons == 2 && " 1", "."))), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, style: { paddingLeft: "15px" }, className: "email-label"}, "Applicant 2 Email"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-2", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError1")}), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", textAlign: "left", fontSize: "18px" }}, "Please enter valid email address of applicant 2.")))), React.createElement(react_bootstrap_1.Modal.Footer, null, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default circular " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))))));
	    };
	    return AgentEmailModalCapture;
	}(React.Component));
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = AgentEmailModalCapture;


/***/ }),
/* 996 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var textInput_1 = __webpack_require__(703);
	var react_select_1 = __webpack_require__(688);
	var TelLinkComponent_1 = __webpack_require__(539);
	var ContactAgent = (function (_super) {
	    __extends(ContactAgent, _super);
	    function ContactAgent() {
	        _super.call(this);
	        this.state = {};
	        this.setState({
	            type_of_submission: 10003
	        });
	    }
	    ContactAgent.prototype.componentWillMount = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            if (this.props.quoteResponse && this.props.quoteResponse.LOGIN_URL && this.props.quoteResponse.LOGIN_URL.length > 0) {
	                window.location.href = this.props.quoteResponse.LOGIN_URL;
	                return;
	            }
	            if (this.props.quoteResponse && this.props.quoteResponse.redirect_url && this.props.quoteResponse.redirect_url.length > 0) {
	                window.location.href = this.props.quoteResponse.redirect_url;
	                return;
	            }
	            var basePath = this.props.location.pathname.indexOf("/agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            react_router_1.browserHistory.push(basePath + queryParamsString);
	        }
	    };
	    ContactAgent.prototype.handlePhoneChange = function (e) {
	        var val = String(e.target.value).trim();
	        var sampleVal = "123-123-1234";
	        if (val.length > 0 && (sampleVal && sampleVal.length > val.length) && !(new RegExp(/^[a-zA-Z0-9]*$/).test(sampleVal[val.length]))) {
	            if (this.state.phone && this.state.phone.length > val.length) {
	            }
	            else {
	                val = val + sampleVal[val.length];
	            }
	        }
	        val = String(val).trim();
	        this.setState({
	            phone: val
	        });
	    };
	    ContactAgent.prototype.handleSlotChange = function (v) {
	        this.setState({
	            slot: v
	        });
	    };
	    ContactAgent.prototype.onTextAllowedChange = function (k, v) {
	        this.setState((_a = {}, _a[k] = v, _a));
	        var _a;
	    };
	    ContactAgent.prototype.getExtraInfo = function (data) {
	        if (this.props.typeOfSubmission == 10003) {
	            data.request_type = 3;
	        }
	        else if (this.props.typeOfSubmission == 10001) {
	            data.request_type = 1;
	        }
	        else if (this.props.typeOfSubmission == 10002) {
	            data.request_type = 2;
	        }
	        else if (this.props.typeOfSubmission == 10004) {
	            data.request_type = 4;
	        }
	        else if (this.props.typeOfSubmission == 10005) {
	            data.request_type = 5;
	        }
	        else if (this.props.typeOfSubmission == 10006) {
	            data.request_type = 6;
	        }
	        else if (this.props.typeOfSubmission == 10007) {
	            data.request_type = 7;
	        }
	        if (this.state.slot) {
	            data.contact_time = this.state.slot;
	        }
	        if (this.state.phone) {
	            data.phone_number = this.state.phone;
	        }
	        if (this.state.text_accepted) {
	            data.text_accepted = this.state.text_accepted;
	        }
	        else {
	            data.text_accepted = "No";
	        }
	    };
	    ContactAgent.prototype.directToCorrespondingPage = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        var basePath = this.props.location.pathname.indexOf("agent") >= 0 || this.props.is_agent ? "/agent/" : "/";
	        if (this.state.nextStep == "continueToApplication") {
	            react_router_1.browserHistory.push(basePath + "/connect-to-agent" + queryParamsString);
	        }
	        else if (this.state.nextStep == "connectMeToAgent" + queryParamsString) {
	            react_router_1.browserHistory.push(basePath + "/agent/connect-to-agent" + queryParamsString);
	        }
	        else {
	            react_router_1.browserHistory.push(basePath + "/agent/email-to-quote" + queryParamsString);
	        }
	    };
	    ContactAgent.prototype.saveQuote = function () {
	        var _this = this;
	        var persons = [];
	        var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	        personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	        personOne.type_of_submission = this.state.type_of_submission;
	        personOne.request_type = this.state.type_of_submission;
	        this.getExtraInfo(personOne);
	        if (this.state.email0) {
	            personOne.email = this.state.email0;
	        }
	        persons.push(personOne);
	        if (this.props.noOfPersons == 2) {
	            var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	            personTwo.type_of_submission = this.state.type_of_submission;
	            this.getExtraInfo(personTwo);
	            if (this.state.email1) {
	                personTwo.email = this.state.email1;
	            }
	            persons.push(personTwo);
	        }
	        var data = {
	            applicants: JSON.stringify(persons)
	        };
	        this.getExtraInfo(data);
	        this.props.setPersonsData(persons);
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (this.validateEmailForm()) {
	            this.setState({
	                savingQuote: true
	            });
	            this.props.saveQuoteForm(data).then(function () {
	                if (_this.props.quoteResponse && _this.props.quoteResponse.LOGIN_URL && _this.props.quoteResponse.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.quoteResponse.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                    window.location.href = _this.props.quoteResponse.redirect_url;
	                    return;
	                }
	                var basePath = _this.props.location.pathname.indexOf("/agent") > 1 || _this.props.is_agent ? "/agent/" : "/";
	                react_router_1.browserHistory.push(basePath + "connect-agent-success" + queryParamsString);
	            }).catch(function () {
	                _this.submmitedProductForm = false;
	            });
	        }
	    };
	    ContactAgent.prototype.onSlotChange = function (key, obj) {
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a
	        ));
	        var _a;
	    };
	    ContactAgent.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    ;
	    ContactAgent.prototype.validateEmailForm = function () {
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if (this.props.noOfPersons == 2) {
	            if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	                isError = true;
	                this.setState({
	                    emailErrorExists: true,
	                    emailError0: true
	                });
	            }
	            else {
	                isError = false;
	                this.setState({
	                    emailErrorExists: false
	                });
	                if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                    isError = true;
	                    this.setState((_a = {},
	                        _a["emailError1"] = true,
	                        _a
	                    ));
	                }
	                else {
	                    this.setState((_b = {},
	                        _b["emailError1"] = false,
	                        _b
	                    ));
	                }
	                if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                    isError = true;
	                    this.setState((_c = {},
	                        _c["emailError0"] = true,
	                        _c
	                    ));
	                }
	                else {
	                    this.setState((_d = {},
	                        _d["emailError0"] = false,
	                        _d
	                    ));
	                }
	            }
	        }
	        else {
	            if (input1Valid) {
	                isError = false;
	                this.setState({
	                    input0Invalid: false
	                });
	                this.setState({
	                    savingQuote: true,
	                    emailErrorExists: false
	                });
	            }
	            else {
	                isError = true;
	                this.setState({
	                    input0Invalid: true,
	                    emailErrorExists: true
	                });
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    ;
	    ContactAgent.prototype.handleChange = function (personIndex, e) {
	        if (this.state.emailErrorExists) {
	            if (this.validateEmailForm()) {
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	        }
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = e.target.value,
	            _a
	        ));
	        var _a;
	    };
	    ;
	    ContactAgent.prototype.render = function () {
	        var _this = this;
	        var timingSlots = [
	            {
	                value: "Morning",
	                label: "Morning"
	            },
	            {
	                value: "Afternoon",
	                label: "Afternoon"
	            },
	            {
	                value: "Evening",
	                label: "Evening"
	            },
	            {
	                value: "Night",
	                label: "Night"
	            }
	        ];
	        return (React.createElement("div", {className: "email-modal-container agent-modal-container agent-page-container"}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text"}, React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "15px" }}, "Connect me to a licensed agent")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description c-center", sm: 12}, "Please complete the information below and a licensed agent will contact you to complete your application.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 6}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label slot-label"}, "Best time to reach you?"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "slot-input-container"}, React.createElement(react_select_1.default, {name: "form-field-slot", options: timingSlots, value: this.state.slot, onChange: function (slot) {
	            _this.onSlotChange("slot", slot);
	        }}))), React.createElement(react_bootstrap_1.Col, {sm: 6, className: "contact-agent-phone-container"}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Phone number"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container"}, React.createElement(textInput_1.default, {name: "phone-number", placeholder: "800-252-7254", value: this.state.phone, onChange: this.handlePhoneChange.bind(this)})))), React.createElement(react_bootstrap_1.Row, {className: "okay-to-text-number"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.onTextAllowedChange("text_accepted", "Yes");
	        }}, React.createElement("input", {type: "radio", name: "text_accepted", checked: this.state.text_accepted == "Yes"}), React.createElement("span", {style: { top: "3px" }}), React.createElement("label", {htmlFor: "text_accepted"}, " It's okay to text this number. ")))), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Applicant Email address"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError0")}), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px" }}, "Please enter valid email address of applicant", this.props.noOfPersons == 2 && " 1", "."))), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Applicant Email address 2"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError1")}), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px" }}, "Please enter valid email address of applicant 2."))), React.createElement(react_bootstrap_1.Row, {className: "contact-agent-text-submit-btn-container"}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {xs: 12, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right", width: "96%" }, className: "c-button-default " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "20px" }, className: "agent-modal-submit-text-container"}, React.createElement(react_bootstrap_1.Col, {className: "agent-modal-submit-text"}, "By clicking SUBMIT, I consent to receive phone calls from Vantis Life Insurance Company, at the telephone numbers indicated above including wireless numbers, if provided. I understand these calls may be generated using an automatic dialing system. I understand consent is not required to get a quote, apply for insurance or to make a purchase from Vantis Life Insurance Company.")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {xs: 10, className: "c-center", style: { marginTop: "20px" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {style: { marginBottom: "15px" }}, React.createElement("span", {className: "free-toll-no-text"}, "Vantis Life Call Center toll free number  |  M-F 8am to 7pm PST:"), React.createElement("span", {className: "free-toll-no center"}, React.createElement(TelLinkComponent_1.default, {phoneNumber: this.props.phoneNumberDetails})))))))));
	    };
	    return ContactAgent;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        plans: state.quotes.plans,
	        premiums: state.quotes.premiums,
	        typeOfSubmission: state.quotes.typeOfSubmission,
	        is_agent: state.quotes.is_agent,
	        quoteResponse: state.quotes.quoteResponse,
	        phoneNumberDetails: state.quotes.phoneNumberDetails
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        saveQuoteForm: function (data) {
	            return dispatch(Quote_1.saveQuoteForm(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(ContactAgent);


/***/ }),
/* 997 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var textInput_1 = __webpack_require__(703);
	var TelLinkComponent_1 = __webpack_require__(539);
	var EmailToQuote = (function (_super) {
	    __extends(EmailToQuote, _super);
	    function EmailToQuote() {
	        _super.call(this);
	        this.state = {};
	        this.setState({
	            type_of_submission: 10002
	        });
	    }
	    ;
	    EmailToQuote.prototype.componentWillMount = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            var basePath = this.props.location.pathname.indexOf("/agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            react_router_1.browserHistory.push(basePath + queryParamsString);
	        }
	    };
	    ;
	    EmailToQuote.prototype.isInAgentFlow = function () {
	        return window.location.pathname.indexOf("/agent") >= 0;
	    };
	    EmailToQuote.prototype.handlePhoneChange = function (e) {
	        var val = String(e.target.value).trim();
	        var sampleVal = "123-123-1234";
	        if (val.length > 0 && (sampleVal && sampleVal.length > val.length) && !(new RegExp(/^[a-zA-Z0-9]*$/).test(sampleVal[val.length]))) {
	            if (this.state.phone && this.state.phone.length > val.length) {
	            }
	            else {
	                val = val + sampleVal[val.length];
	            }
	        }
	        this.setState({
	            phone: val,
	            phoneError: underscore_1.isEmpty(val)
	        });
	    };
	    ;
	    EmailToQuote.prototype.validateEmailForm = function () {
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	            isError = true;
	            this.setState({
	                emailErrorExists: true,
	                emailError0: true
	            });
	        }
	        else {
	            isError = false;
	            this.setState({
	                emailErrorExists: false
	            });
	            if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                isError = true;
	                this.setState((_a = {},
	                    _a["emailError1"] = true,
	                    _a
	                ));
	            }
	            else {
	                this.setState((_b = {},
	                    _b["emailError1"] = false,
	                    _b
	                ));
	            }
	            if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                isError = true;
	                this.setState((_c = {},
	                    _c["emailError0"] = true,
	                    _c
	                ));
	            }
	            else {
	                this.setState((_d = {},
	                    _d["emailError0"] = false,
	                    _d
	                ));
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    ;
	    EmailToQuote.prototype.getExtraInfo = function (data) {
	        if (this.props.typeOfSubmission == 10003) {
	            data.request_type = 3;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	            else {
	                data.text_accepted = "No";
	            }
	        }
	        else if (this.props.typeOfSubmission == 10001) {
	            data.request_type = 1;
	        }
	        else if (this.props.typeOfSubmission == 10002) {
	            data.request_type = 2;
	        }
	        else if (this.props.typeOfSubmission == 10004) {
	            data.request_type = 4;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	        }
	        else if (this.props.typeOfSubmission == 10005) {
	            data.request_type = 5;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	        }
	        else if (this.props.typeOfSubmission == 10006) {
	            data.request_type = 6;
	        }
	        else if (this.props.typeOfSubmission == 10007) {
	            data.request_type = 7;
	        }
	        if (this.state.slot) {
	            data.contact_time = this.state.slot;
	        }
	        if (this.state.phone) {
	            data.phone_number = this.state.phone;
	        }
	        if (this.state.text_accepted) {
	            data.text_accepted = this.state.text_accepted;
	        }
	    };
	    EmailToQuote.prototype.saveQuote = function () {
	        var _this = this;
	        var persons = [];
	        if (this.validateEmailForm()) {
	            var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	            personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	            personOne.type_of_submission = this.state.type_of_submission;
	            if (this.state.email0) {
	                personOne.email = this.state.email0;
	            }
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	                personTwo.type_of_submission = this.state.type_of_submission;
	                if (this.state.email1) {
	                    personTwo.email = this.state.email1;
	                }
	                persons.push(personTwo);
	            }
	            var data = {
	                applicants: JSON.stringify(persons)
	            };
	            this.getExtraInfo(data);
	            this.props.setPersonsData(persons);
	            var queryParams = this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            this.setState({
	                savingQuote: true
	            });
	            queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	            this.props.saveQuoteForm(data).then(function () {
	                if (_this.props.quoteResponse && _this.props.quoteResponse.LOGIN_URL && _this.props.quoteResponse.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.quoteResponse.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                    window.location.href = _this.props.quoteResponse.redirect_url;
	                    return;
	                }
	                var basePath = _this.props.location.pathname.indexOf("/agent") > 1 || _this.props.is_agent ? "/agent/" : "/";
	                react_router_1.browserHistory.push(basePath + "email-quote-success" + queryParamsString);
	            }).catch(function () {
	                _this.submmitedProductForm = false;
	            });
	        }
	    };
	    ;
	    EmailToQuote.prototype.onSlotChange = function (key, obj) {
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a
	        ));
	        var _a;
	    };
	    ;
	    EmailToQuote.prototype.onTextAllowedChange = function (k, v) {
	        this.setState((_a = {}, _a[k] = v, _a));
	        var _a;
	    };
	    EmailToQuote.prototype.handleChange = function (personIndex, e) {
	        if (this.state.emailErrorExists) {
	            if (this.validateEmailForm()) {
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	        }
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = e.target.value,
	            _a
	        ));
	        var _a;
	    };
	    ;
	    EmailToQuote.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    ;
	    EmailToQuote.prototype.render = function () {
	        var _this = this;
	        return (React.createElement("div", {className: "email-modal-container agent-modal-container agent-page-container"}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text"}, React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "15px" }}, "Email the quote")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description c-center", sm: 12}, this.isInAgentFlow() ? (this.props.typeOfSubmission == 10006 ? "Fill out this info to email the quote to the applicant! The applicant can click on the link to complete the application." :
	            "Fill out this info to email the quote to the applicant! Then the application can be continued from the Agent panel.") :
	            "Fill out this info to email the quote to yourself for your records! Then you can click on the link to complete the application.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Applicant Email address", this.props.noOfPersons == 2 && " 1"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError0")}), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px" }}, "Please enter valid email address of applicant."))), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 6}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Phone number"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container"}, React.createElement(textInput_1.default, {name: "phone-number", placeholder: "866-826-8471", value: this.state.phone, onChange: this.handlePhoneChange.bind(this)})), this.state.phoneError && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "right", color: "red", paddingRight: "0px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px", textAlign: "left" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid phone number.")), React.createElement(react_bootstrap_1.Col, {sm: 6, className: "okay-to-text-number"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.onTextAllowedChange("text_accepted", "Yes");
	        }}, React.createElement("input", {type: "radio", name: "text_accepted", checked: this.state.text_accepted == "Yes"}), React.createElement("span", {style: { top: "3px" }}), React.createElement("label", {htmlFor: "text_accepted"}, " It's okay to text this number. "))))), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Applicant Email address 2"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError1")}), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px" }}, "Please enter valid email address of applicant 2."))), React.createElement(react_bootstrap_1.Row, {className: "contact-agent-text-submit-btn-container email-text-submit-btn-container"}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-btn-container"}, React.createElement(react_bootstrap_1.Col, {xs: 11, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "20px" }, className: "agent-modal-submit-text-container"}, React.createElement(react_bootstrap_1.Col, {className: "agent-modal-submit-text"}, "By clicking SUBMIT, I consent to receive phone calls from Vantis Life Insurance Company, at the telephone numbers indicated above including wireless numbers, if provided. I understand these calls may be generated using an automatic dialing system. I understand consent is not required to get a quote, apply for insurance or to make a purchase from Vantis Life Insurance Company.")), React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "15px" }}, React.createElement(react_bootstrap_1.Col, {sm: 10, className: "c-center", style: { marginTop: "20px" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "free-toll-no-text"}, "Vantis Life Call Center toll free number  |  Mon-Fri 8:30 am - 6 pm, Eastern Time"), React.createElement(react_bootstrap_1.Col, {className: "free-toll-no center"}, React.createElement(TelLinkComponent_1.default, {phoneNumber: this.props.phoneNumberDetails}))))))));
	    };
	    return EmailToQuote;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        plans: state.quotes.plans,
	        premiums: state.quotes.premiums,
	        typeOfSubmission: state.quotes.typeOfSubmission,
	        is_agent: state.quotes.is_agent,
	        quoteResponse: state.quotes.quoteResponse,
	        phoneNumberDetails: state.quotes.phoneNumberDetails
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        saveQuoteForm: function (data) {
	            return dispatch(Quote_1.saveQuoteForm(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(EmailToQuote);


/***/ }),
/* 998 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var textInput_1 = __webpack_require__(703);
	var EmailToQuote = (function (_super) {
	    __extends(EmailToQuote, _super);
	    function EmailToQuote() {
	        _super.call(this);
	        this.state = {};
	        this.setState({
	            type_of_submission: 10002
	        });
	    }
	    ;
	    EmailToQuote.prototype.componentWillMount = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            var basePath = this.props.location.pathname.indexOf("/agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            react_router_1.browserHistory.push(basePath + queryParamsString);
	        }
	    };
	    ;
	    EmailToQuote.prototype.isInAgentFlow = function () {
	        return window.location.pathname.indexOf("/agent") >= 0;
	    };
	    EmailToQuote.prototype.handlePhoneChange = function (e) {
	        this.setState({
	            phone: e.target.value
	        });
	    };
	    ;
	    EmailToQuote.prototype.validateEmailForm = function () {
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	            isError = true;
	            this.setState({
	                emailErrorExists: true,
	                emailError0: true
	            });
	        }
	        else {
	            isError = false;
	            this.setState({
	                emailErrorExists: false
	            });
	            if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                isError = true;
	                this.setState((_a = {},
	                    _a["emailError1"] = true,
	                    _a
	                ));
	            }
	            else {
	                this.setState((_b = {},
	                    _b["emailError1"] = false,
	                    _b
	                ));
	            }
	            if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                isError = true;
	                this.setState((_c = {},
	                    _c["emailError0"] = true,
	                    _c
	                ));
	            }
	            else {
	                this.setState((_d = {},
	                    _d["emailError0"] = false,
	                    _d
	                ));
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    ;
	    EmailToQuote.prototype.getExtraInfo = function (data) {
	        if (this.props.typeOfSubmission == 10003) {
	            data.request_type = 3;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	            else {
	                data.text_accepted = "No";
	            }
	        }
	        else if (this.props.typeOfSubmission == 10001) {
	            data.request_type = 1;
	        }
	        else if (this.props.typeOfSubmission == 10002) {
	            data.request_type = 2;
	        }
	        else if (this.props.typeOfSubmission == 10004) {
	            data.request_type = 4;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	        }
	        else if (this.props.typeOfSubmission == 10005) {
	            data.request_type = 5;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	        }
	        else if (this.props.typeOfSubmission == 10006) {
	            data.request_type = 6;
	        }
	        else if (this.props.typeOfSubmission == 10007) {
	            data.request_type = 7;
	        }
	        if (this.state.slot) {
	            data.contact_time = this.state.slot;
	        }
	        if (this.state.phone) {
	            data.phone_number = this.state.phone;
	        }
	        if (this.state.text_accepted) {
	            data.text_accepted = this.state.text_accepted;
	        }
	    };
	    EmailToQuote.prototype.saveQuote = function () {
	        var _this = this;
	        var persons = [];
	        if (this.validateEmailForm()) {
	            var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	            personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	            personOne.type_of_submission = this.state.type_of_submission;
	            if (this.state.email0) {
	                personOne.email = this.state.email0;
	            }
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	                personTwo.type_of_submission = this.state.type_of_submission;
	                if (this.state.email1) {
	                    personTwo.email = this.state.email1;
	                }
	                persons.push(personTwo);
	            }
	            var data = {
	                applicants: JSON.stringify(persons)
	            };
	            this.getExtraInfo(data);
	            this.props.setPersonsData(persons);
	            var queryParams = this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            this.setState({
	                savingQuote: true
	            });
	            queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	            this.props.saveQuoteForm(data).then(function () {
	                if (_this.props.quoteResponse && _this.props.quoteResponse.LOGIN_URL && _this.props.quoteResponse.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.quoteResponse.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                    window.location.href = _this.props.quoteResponse.redirect_url;
	                    return;
	                }
	                var basePath = _this.props.location.pathname.indexOf("/agent") > 1 || _this.props.is_agent ? "/agent/" : "/";
	                react_router_1.browserHistory.push(basePath + "email-quote-success" + queryParamsString);
	            }).catch(function () {
	                _this.submmitedProductForm = false;
	            });
	        }
	    };
	    ;
	    EmailToQuote.prototype.onSlotChange = function (key, obj) {
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a
	        ));
	        var _a;
	    };
	    ;
	    EmailToQuote.prototype.handleChange = function (personIndex, e) {
	        if (this.state.emailErrorExists) {
	            if (this.validateEmailForm()) {
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	        }
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = e.target.value,
	            _a
	        ));
	        var _a;
	    };
	    ;
	    EmailToQuote.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    ;
	    EmailToQuote.prototype.render = function () {
	        var _this = this;
	        return (React.createElement("div", {className: "email-modal-container agent-modal-container agent-page-container"}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text"}, React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "15px" }}, "Email the quote")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description c-center", sm: 12}, this.isInAgentFlow() ? (this.props.typeOfSubmission == 10006 ? "Fill out this info to email the quote to the applicant! The applicant can click on the link to complete the application." :
	            "Fill out this info to email the quote to the applicant! Then the application can be continued from the Agent panel.") :
	            "Fill out this info to email the quote to yourself for your records! Then you can click on the link to complete the application.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Applicant Email address", this.props.noOfPersons == 2 && " 1"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError0")}), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px" }}, "Please enter valid email address of applicant", this.props.noOfPersons == 2 && " 1", "."))), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Applicant Email address 2"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError1")}), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px" }}, "Please enter valid email address of applicant 2."))), React.createElement(react_bootstrap_1.Row, {className: "contact-agent-text-submit-btn-container email-text-submit-btn-container"}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-btn-container"}, React.createElement(react_bootstrap_1.Col, {xs: 11, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))))));
	    };
	    return EmailToQuote;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        plans: state.quotes.plans,
	        premiums: state.quotes.premiums,
	        typeOfSubmission: state.quotes.typeOfSubmission,
	        is_agent: state.quotes.is_agent,
	        quoteResponse: state.quotes.quoteResponse
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        saveQuoteForm: function (data) {
	            return dispatch(Quote_1.saveQuoteForm(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(EmailToQuote);


/***/ }),
/* 999 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var textInput_1 = __webpack_require__(703);
	var TelLinkComponent_1 = __webpack_require__(539);
	var EmailToQuote = (function (_super) {
	    __extends(EmailToQuote, _super);
	    function EmailToQuote() {
	        _super.call(this);
	        this.state = {};
	        this.setState({
	            type_of_submission: 10001
	        });
	    }
	    ;
	    EmailToQuote.prototype.componentWillMount = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            var basePath = this.props.location.pathname.indexOf("/agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            react_router_1.browserHistory.push(basePath + queryParamsString);
	        }
	    };
	    ;
	    EmailToQuote.prototype.isInAgentFlow = function () {
	        return window.location.pathname.indexOf("/agent") >= 0;
	    };
	    EmailToQuote.prototype.handlePhoneChange = function (e) {
	        var val = String(e.target.value).trim();
	        var sampleVal = "123-123-1234";
	        if (val.length > 0 && (sampleVal && sampleVal.length > val.length) && !(new RegExp(/^[a-zA-Z0-9]*$/).test(sampleVal[val.length]))) {
	            if (this.state.phone && this.state.phone.length > val.length) {
	            }
	            else {
	                val = val + sampleVal[val.length];
	            }
	        }
	        this.setState({
	            phone: val,
	            phoneError: underscore_1.isEmpty(val)
	        });
	    };
	    EmailToQuote.prototype.validateEmailForm = function () {
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	            isError = true;
	            this.setState({
	                emailErrorExists: true,
	                emailError0: true
	            });
	        }
	        else {
	            isError = false;
	            this.setState({
	                emailErrorExists: false
	            });
	            if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                isError = true;
	                this.setState((_a = {},
	                    _a["emailError1"] = true,
	                    _a
	                ));
	            }
	            else {
	                this.setState((_b = {},
	                    _b["emailError1"] = false,
	                    _b
	                ));
	            }
	            if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                isError = true;
	                this.setState((_c = {},
	                    _c["emailError0"] = true,
	                    _c
	                ));
	            }
	            else {
	                this.setState((_d = {},
	                    _d["emailError0"] = false,
	                    _d
	                ));
	            }
	        }
	        var phoneNumber = this.state.phone;
	        if (!underscore_1.isEmpty(phoneNumber)) {
	            var val = phoneNumber.trim();
	            this.setState({
	                phone: val,
	                phoneError: underscore_1.isEmpty(val)
	            });
	        }
	        else {
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    EmailToQuote.prototype.appendRequestType = function (person) {
	    };
	    EmailToQuote.prototype.getExtraInfo = function (data) {
	        if (this.state.phone) {
	            data.phone_number = this.state.phone;
	        }
	        if (this.state.text_accepted) {
	            data.text_accepted = this.state.text_accepted;
	        }
	        else {
	            data.text_accepted = "No";
	        }
	        if (this.props.typeOfSubmission == 10003) {
	            data.request_type = 3;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	        }
	        else if (this.props.typeOfSubmission == 10001) {
	            data.request_type = 1;
	        }
	        else if (this.props.typeOfSubmission == 10002) {
	            data.request_type = 2;
	        }
	        else if (this.props.typeOfSubmission == 10004) {
	            data.request_type = 4;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	        }
	        else if (this.props.typeOfSubmission == 10005) {
	            data.request_type = 5;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	        }
	        else if (this.props.typeOfSubmission == 10006) {
	            data.request_type = 6;
	        }
	        else if (this.props.typeOfSubmission == 10007) {
	            data.request_type = 7;
	        }
	        if (this.state.slot) {
	            data.contact_time = this.state.slot;
	        }
	        if (this.state.phone) {
	            data.phone_number = this.state.phone;
	        }
	        if (this.state.text_accepted) {
	            data.text_accepted = this.state.text_accepted;
	        }
	    };
	    EmailToQuote.prototype.saveQuote = function () {
	        var _this = this;
	        var persons = [];
	        if (this.validateEmailForm()) {
	            var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	            personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	            personOne.type_of_submission = this.state.type_of_submission;
	            personOne.request_type = 2;
	            if (this.state.email0) {
	                personOne.email = this.state.email0;
	            }
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	                personTwo.type_of_submission = this.state.type_of_submission;
	                personTwo.request_type = 2;
	                if (this.state.email1) {
	                    personTwo.email = this.state.email1;
	                }
	                persons.push(personTwo);
	            }
	            var data = {
	                applicants: JSON.stringify(persons)
	            };
	            this.getExtraInfo(data);
	            this.props.setPersonsData(persons);
	            var queryParams = this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	            this.setState({
	                savingQuote: true
	            });
	            this.props.saveQuoteForm(data).then(function () {
	                if (_this.props.quoteResponse && _this.props.quoteResponse.LOGIN_URL && _this.props.quoteResponse.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.quoteResponse.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                    window.location.href = _this.props.quoteResponse.redirect_url;
	                    return;
	                }
	                var basePath = _this.props.location.pathname.indexOf("/agent") > 1 || _this.props.is_agent ? "/agent/" : "/";
	                react_router_1.browserHistory.push(basePath + "email-quote-success" + queryParamsString);
	            }).catch(function () {
	                _this.submmitedProductForm = false;
	            });
	        }
	    };
	    EmailToQuote.prototype.onSlotChange = function (key, obj) {
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a
	        ));
	        var _a;
	    };
	    EmailToQuote.prototype.onTextAllowedChange = function (k, v) {
	        this.setState((_a = {}, _a[k] = v, _a));
	        var _a;
	    };
	    EmailToQuote.prototype.handleChange = function (personIndex, e) {
	        if (this.state.emailErrorExists) {
	            if (this.validateEmailForm()) {
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	        }
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = e.target.value,
	            _a
	        ));
	        var _a;
	    };
	    EmailToQuote.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    EmailToQuote.prototype.getSecondPersonName = function () {
	        if (this.props.persons && this.props.persons[1]) {
	            return 'and ' + this.props.persons[1].name;
	        }
	        return "";
	    };
	    EmailToQuote.prototype.render = function () {
	        var _this = this;
	        return (React.createElement("div", {className: "email-modal-container agent-modal-container agent-page-container"}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text"}, React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "15px" }}, "Email")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description c-center", sm: 12}, this.isInAgentFlow() ?
	            "Before beginning the application, please enter the applicant's email address. An email with the quote information will be sent to them." :
	            "Before beginning the application, please enter your preferred email address.  We will send you the estimated quote for your records.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Applicant Email address"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError0")}), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", textAlign: "left", fontSize: "18px" }}, "Please enter valid email address of applicant", this.props.noOfPersons == 2 && " 1", "."))), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "5px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Phone number"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container"}, React.createElement(textInput_1.default, {name: "phone-number", placeholder: "866-826-8471", value: this.state.phone, onChange: this.handlePhoneChange.bind(this)})), this.state.phoneError && React.createElement(react_bootstrap_1.Col, {style: { textAlign: "right", color: "red", paddingRight: "0px", marginBottom: "15px", fontSize: "15px", marginTop: "-5px", textAlign: "left" }, sm: 12, className: "c-subheader-text error"}, "Please enter valid phone number.")), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "okay-to-text-number"}, React.createElement(react_bootstrap_1.FormGroup, {className: "radio-group"}, React.createElement("div", {className: "c-radio", onClick: function () {
	            _this.onTextAllowedChange("text_accepted", "Yes");
	        }}, React.createElement("input", {type: "radio", name: "text_accepted", checked: this.state.text_accepted == "Yes"}), React.createElement("span", {style: { top: "3px" }}), React.createElement("label", {htmlFor: "text_accepted"}, " It's okay to text this number. "))))), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Applicant Email address 2"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError1")}), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", textAlign: "left", fontSize: "18px" }}, "Please enter valid email address of applicant 2."))), React.createElement(react_bootstrap_1.Row, {className: "contact-agent-text-submit-btn-container email-text-submit-btn-container"}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-btn-container"}, React.createElement(react_bootstrap_1.Col, {xs: 11, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))), React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "20px" }, className: "agent-modal-submit-text-container"}, React.createElement(react_bootstrap_1.Col, {className: "agent-modal-submit-text"}, "By clicking SUBMIT, I consent to receive phone calls from Vantis Life Insurance Company, at the telephone numbers indicated above including wireless numbers, if provided. I understand these calls may be generated using an automatic dialing system. I understand consent is not required to get a quote, apply for insurance or to make a purchase from Vantis Life Insurance Company.")), React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "15px" }}, React.createElement(react_bootstrap_1.Col, {sm: 10, className: "c-center", style: { marginTop: "20px" }}, React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "free-toll-no-text"}, "Vantis Life Call Center toll free number  |  Mon-Fri 8:30 am - 6 pm, Eastern Time"), React.createElement(react_bootstrap_1.Col, {className: "free-toll-no center"}, React.createElement(TelLinkComponent_1.default, {phoneNumber: this.props.phoneNumberDetails}))))))));
	    };
	    return EmailToQuote;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        plans: state.quotes.plans,
	        premiums: state.quotes.premiums,
	        typeOfSubmission: state.quotes.typeOfSubmission,
	        is_agent: state.quotes.is_agent,
	        quoteResponse: state.quotes.quoteResponse,
	        phoneNumberDetails: state.quotes.phoneNumberDetails
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        saveQuoteForm: function (data) {
	            return dispatch(Quote_1.saveQuoteForm(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(EmailToQuote);


/***/ }),
/* 1000 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var textInput_1 = __webpack_require__(703);
	var EmailToQuote = (function (_super) {
	    __extends(EmailToQuote, _super);
	    function EmailToQuote() {
	        _super.call(this);
	        this.state = {};
	        this.setState({
	            type_of_submission: 10001
	        });
	    }
	    ;
	    EmailToQuote.prototype.componentWillMount = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            var basePath = this.props.location.pathname.indexOf("/agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            react_router_1.browserHistory.push(basePath + queryParamsString);
	        }
	    };
	    ;
	    EmailToQuote.prototype.isInAgentFlow = function () {
	        return window.location.pathname.indexOf("/agent") >= 0;
	    };
	    EmailToQuote.prototype.handlePhoneChange = function (e) {
	        this.setState({
	            phone: e.target.value
	        });
	    };
	    EmailToQuote.prototype.validateEmailForm = function () {
	        var isError = false;
	        var emailRegex = /^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
	        var input1Valid = emailRegex.test(this.state.email0);
	        var input2Valid = emailRegex.test(this.state.email1);
	        if ((!input1Valid && underscore_1.isEmpty(this.state.email0)) && (!input2Valid && underscore_1.isEmpty(this.state.email1))) {
	            isError = true;
	            this.setState({
	                emailErrorExists: true,
	                emailError0: true
	            });
	        }
	        else {
	            isError = false;
	            this.setState({
	                emailErrorExists: false
	            });
	            if (!input2Valid && !underscore_1.isEmpty(this.state.email1)) {
	                isError = true;
	                this.setState((_a = {},
	                    _a["emailError1"] = true,
	                    _a
	                ));
	            }
	            else {
	                this.setState((_b = {},
	                    _b["emailError1"] = false,
	                    _b
	                ));
	            }
	            if (!input1Valid && !underscore_1.isEmpty(this.state.email0)) {
	                isError = true;
	                this.setState((_c = {},
	                    _c["emailError0"] = true,
	                    _c
	                ));
	            }
	            else {
	                this.setState((_d = {},
	                    _d["emailError0"] = false,
	                    _d
	                ));
	            }
	        }
	        return !isError;
	        var _a, _b, _c, _d;
	    };
	    EmailToQuote.prototype.appendRequestType = function (person) {
	    };
	    EmailToQuote.prototype.getExtraInfo = function (data) {
	        if (this.props.typeOfSubmission == 10003) {
	            data.request_type = 3;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	            else {
	                data.text_accepted = "No";
	            }
	        }
	        else if (this.props.typeOfSubmission == 10001) {
	            data.request_type = 1;
	        }
	        else if (this.props.typeOfSubmission == 10002) {
	            data.request_type = 2;
	        }
	        else if (this.props.typeOfSubmission == 10004) {
	            data.request_type = 4;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	        }
	        else if (this.props.typeOfSubmission == 10005) {
	            data.request_type = 5;
	            if (this.state.slot) {
	                data.contact_time = this.state.slot;
	            }
	            if (this.state.phone) {
	                data.phone_number = this.state.phone;
	            }
	            if (this.state.text_accepted) {
	                data.text_accepted = this.state.text_accepted;
	            }
	        }
	        else if (this.props.typeOfSubmission == 10006) {
	            data.request_type = 6;
	        }
	        else if (this.props.typeOfSubmission == 10007) {
	            data.request_type = 7;
	        }
	        if (this.state.slot) {
	            data.contact_time = this.state.slot;
	        }
	        if (this.state.phone) {
	            data.phone_number = this.state.phone;
	        }
	        if (this.state.text_accepted) {
	            data.text_accepted = this.state.text_accepted;
	        }
	    };
	    EmailToQuote.prototype.saveQuote = function () {
	        var _this = this;
	        var persons = [];
	        if (this.validateEmailForm()) {
	            var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	            personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	            personOne.type_of_submission = this.state.type_of_submission;
	            personOne.request_type = 2;
	            if (this.state.email0) {
	                personOne.email = this.state.email0;
	            }
	            persons.push(personOne);
	            if (this.props.noOfPersons == 2) {
	                var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	                personTwo.type_of_submission = this.state.type_of_submission;
	                personTwo.request_type = 2;
	                if (this.state.email1) {
	                    personTwo.email = this.state.email1;
	                }
	                persons.push(personTwo);
	            }
	            var data = {
	                applicants: JSON.stringify(persons)
	            };
	            this.getExtraInfo(data);
	            this.props.setPersonsData(persons);
	            var queryParams = this.props.location.query;
	            var queryParamsString = "?";
	            for (var k in queryParams) {
	                if (queryParams[k]) {
	                    queryParamsString += k + "=" + queryParams[k] + "&";
	                }
	                else {
	                    queryParamsString += k + "&";
	                }
	            }
	            queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	            this.setState({
	                savingQuote: true
	            });
	            this.props.saveQuoteForm(data).then(function () {
	                if (_this.props.quoteResponse && _this.props.quoteResponse.LOGIN_URL && _this.props.quoteResponse.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.quoteResponse.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                    window.location.href = _this.props.quoteResponse.redirect_url;
	                    return;
	                }
	                var basePath = _this.props.location.pathname.indexOf("/agent") > 1 || _this.props.is_agent ? "/agent/" : "/";
	                react_router_1.browserHistory.push(basePath + "email-quote-success" + queryParamsString);
	            }).catch(function () {
	                _this.submmitedProductForm = false;
	            });
	        }
	    };
	    EmailToQuote.prototype.onSlotChange = function (key, obj) {
	        this.setState((_a = {},
	            _a[key] = obj.value,
	            _a
	        ));
	        var _a;
	    };
	    EmailToQuote.prototype.handleChange = function (personIndex, e) {
	        if (this.state.emailErrorExists) {
	            if (this.validateEmailForm()) {
	                this.setState({
	                    emailErrorExists: false
	                });
	            }
	        }
	        this.setState((_a = {
	                personIndex: personIndex
	            },
	            _a["email" + personIndex] = e.target.value,
	            _a
	        ));
	        var _a;
	    };
	    EmailToQuote.prototype.getErrorsClassNames = function (errors, key) {
	        if (errors[key]) {
	            return "input-border-error";
	        }
	    };
	    EmailToQuote.prototype.getSecondPersonName = function () {
	        if (this.props.persons && this.props.persons[1]) {
	            return 'and ' + this.props.persons[1].name;
	        }
	        return "";
	    };
	    EmailToQuote.prototype.render = function () {
	        var _this = this;
	        return (React.createElement("div", {className: "email-modal-container agent-modal-container agent-page-container"}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-text"}, React.createElement(react_bootstrap_1.Row, {style: { marginLeft: "15px" }}, "Email capture")), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {className: "email-description c-center", sm: 12}, this.isInAgentFlow() ?
	            "Before beginning the application, please enter the applicant's email address. An email with the quote information will be sent to them." :
	            "Before beginning the application, please enter your preferred email address.  We will send you the estimated quote for your records.")), React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label email-label-on-modal"}, "Applicant Email address", this.props.noOfPersons == 2 && " 1"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email0, onChange: function (e) {
	            _this.handleChange(0, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError0")}), this.state.emailError0 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", textAlign: "left", fontSize: "18px" }}, "Please enter valid email address of applicant", this.props.noOfPersons == 2 && " 1", "."))), this.props.noOfPersons == 2 && React.createElement(react_bootstrap_1.Row, {style: { marginTop: "35px" }}, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-label"}, "Applicant Email address 2"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "email-input-container  email-input-container-on-modal"}, React.createElement(textInput_1.default, {name: "email-1", placeholder: "Enter your email", value: this.state.email1, onChange: function (e) {
	            _this.handleChange(1, e);
	        }, className: this.getErrorsClassNames(this.state, "emailError1")}), this.state.emailError1 && React.createElement(react_bootstrap_1.Col, {sm: 12, className: "c-subheader-text error-msg", style: { paddingLeft: "0px", textAlign: "left", fontSize: "18px" }}, "Please enter valid email address of applicant 2."))), React.createElement(react_bootstrap_1.Row, {className: "contact-agent-text-submit-btn-container email-text-submit-btn-container"}, React.createElement(react_bootstrap_1.Row, {className: "email-quote-btn-container"}, React.createElement(react_bootstrap_1.Col, {xs: 11, className: "c-center"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default " + (this.state.savingQuote ? "active" : ""), onClick: function () {
	            _this.saveQuote();
	        }}, "SUBMIT", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"})))))));
	    };
	    return EmailToQuote;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        plans: state.quotes.plans,
	        premiums: state.quotes.premiums,
	        typeOfSubmission: state.quotes.typeOfSubmission,
	        is_agent: state.quotes.is_agent,
	        quoteResponse: state.quotes.quoteResponse
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        saveQuoteForm: function (data) {
	            return dispatch(Quote_1.saveQuoteForm(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(EmailToQuote);


/***/ }),
/* 1001 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var ContactAgent = (function (_super) {
	    __extends(ContactAgent, _super);
	    function ContactAgent() {
	        _super.call(this);
	        this.state = {};
	    }
	    ;
	    ContactAgent.prototype.componentWillMount = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            var basePath = this.props.location.pathname.indexOf("agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            react_router_1.browserHistory.push(basePath + queryParamsString);
	        }
	    };
	    ;
	    ContactAgent.prototype.handlePhoneChange = function (e) {
	        this.setState({
	            phone: e.target.value
	        });
	    };
	    ;
	    ContactAgent.prototype.handleSlotChange = function (v) {
	        this.setState({
	            slot: v
	        });
	    };
	    ;
	    ContactAgent.prototype.onTextAllowedChange = function (k, v) {
	        this.setState((_a = {}, _a[k] = v, _a));
	        var _a;
	    };
	    ;
	    ContactAgent.prototype.directToCorrespondingPage = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (this.state.nextStep == "continueToApplication") {
	            react_router_1.browserHistory.push("/agent/connect-to-agent" + queryParamsString);
	        }
	        else if (this.state.nextStep == "connectMeToAgent") {
	            react_router_1.browserHistory.push("/agent/connect-to-agent" + queryParamsString);
	        }
	        else {
	            react_router_1.browserHistory.push("/agent/email-to-quote" + queryParamsString);
	        }
	    };
	    ;
	    ContactAgent.prototype.goBack = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        var basePath = this.props.location.pathname.indexOf("/agent") > 1 || this.props.is_agent ? "/agent/" : "/";
	        react_router_1.browserHistory.push(basePath + queryParamsString);
	    };
	    ;
	    ContactAgent.prototype.saveQuote = function () {
	        var _this = this;
	        var persons = [];
	        var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	        personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	        personOne.type_of_submission = this.state.type_of_submission;
	        if (this.state.email0) {
	            personOne.email = this.state.email0;
	        }
	        this.getExtraInfo(personOne);
	        persons.push(personOne);
	        if (this.props.noOfPersons == 2) {
	            var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	            personTwo.type_of_submission = this.state.type_of_submission;
	            if (this.state.email1) {
	                personTwo.email = this.state.email1;
	            }
	            this.getExtraInfo(personOne);
	            persons.push(personTwo);
	        }
	        var data = {
	            applicants: JSON.stringify(persons)
	        };
	        this.getExtraInfo(data);
	        this.props.setPersonsData(persons);
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        this.props.saveQuoteForm(data).then(function () {
	            if (_this.props.quoteResponse && _this.props.quoteResponse.LOGIN_URL && _this.props.quoteResponse.LOGIN_URL.length > 0) {
	                window.location.href = _this.props.quoteResponse.LOGIN_URL;
	                return;
	            }
	            if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                window.location.href = _this.props.quoteResponse.redirect_url;
	                return;
	            }
	            var basePath = _this.props.location.pathname.indexOf("agent") > 1 || _this.props.is_agent ? "/agent/" : "/";
	            react_router_1.browserHistory.push(basePath + "connect-agent-success" + queryParamsString);
	        }).catch(function () {
	            _this.submmitedProductForm = false;
	        });
	    };
	    ;
	    ContactAgent.prototype.getExtraInfo = function (data) {
	        if (this.state.type_of_submission == 10003) {
	            data.contact_time = this.state.slot;
	            data.phone_number = this.state.phone;
	        }
	    };
	    ;
	    ContactAgent.prototype.render = function () {
	        var _this = this;
	        var timingSlots = [
	            {
	                value: "Morning",
	                label: "Morning"
	            },
	            {
	                value: "Afternoon",
	                label: "Afternoon"
	            },
	            {
	                value: "Evening",
	                label: "Evening"
	            },
	            {
	                value: "Night",
	                label: "Night"
	            }
	        ];
	        return (React.createElement("div", {className: "next-steps-container agent-success-page-container"}, React.createElement(react_bootstrap_1.Row, {className: "thanks-phone-img-container"}, React.createElement("img", {style: { marginBottom: "34px", marginTop: "90px" }, src: "../images/thanks-phone.svg"})), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "confirmation-email-text"}, "Thank you!"), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "confirmation-email-text"}, this.props.quoteResponse && this.props.quoteResponse.data && this.props.quoteResponse.data.message_heading), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "confirmation-email-desc"}, this.props.quoteResponse && this.props.quoteResponse.data && this.props.quoteResponse.data.message_text)), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {xs: 11, className: "c-center agent-success-go-back-btn"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default active", onClick: function () {
	            _this.goBack();
	        }}, "GO BACK", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))));
	    };
	    return ContactAgent;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        plans: state.quotes.plans,
	        premiums: state.quotes.premiums,
	        is_agent: state.quotes.is_agent,
	        quoteResponse: state.quotes.quoteResponse
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        saveQuoteForm: function (data) {
	            return dispatch(Quote_1.saveQuoteForm(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(ContactAgent);


/***/ }),
/* 1002 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var moment = __webpack_require__(556);
	var react_redux_1 = __webpack_require__(268);
	var react_bootstrap_1 = __webpack_require__(280);
	var underscore_1 = __webpack_require__(540);
	var Quote_1 = __webpack_require__(709);
	var objectAssign = __webpack_require__(4);
	var react_router_1 = __webpack_require__(184);
	var ContactAgent = (function (_super) {
	    __extends(ContactAgent, _super);
	    function ContactAgent() {
	        _super.call(this);
	        this.state = {};
	    }
	    ;
	    ContactAgent.prototype.componentWillMount = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (underscore_1.isEmpty(this.props.plans) && underscore_1.isEmpty(this.props.persons)) {
	            var basePath = this.props.location.pathname.indexOf("agent") > 1 || this.props.is_agent ? "/agent" : "/";
	            react_router_1.browserHistory.push(basePath + queryParamsString);
	        }
	    };
	    ;
	    ContactAgent.prototype.handlePhoneChange = function (e) {
	        this.setState({
	            phone: e.target.value
	        });
	    };
	    ;
	    ContactAgent.prototype.handleSlotChange = function (v) {
	        this.setState({
	            slot: v
	        });
	    };
	    ;
	    ContactAgent.prototype.onTextAllowedChange = function (k, v) {
	        this.setState((_a = {}, _a[k] = v, _a));
	        var _a;
	    };
	    ;
	    ContactAgent.prototype.directToCorrespondingPage = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (this.state.nextStep == "continueToApplication") {
	            react_router_1.browserHistory.push("/agent/connect-to-agent" + queryParamsString);
	        }
	        else if (this.state.nextStep == "connectMeToAgent") {
	            react_router_1.browserHistory.push("/agent/connect-to-agent" + queryParamsString);
	        }
	        else {
	            react_router_1.browserHistory.push("/agent/email-to-quote" + queryParamsString);
	        }
	    };
	    ;
	    ContactAgent.prototype.goBack = function () {
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        var basePath = this.props.location.pathname.indexOf("/agent") > 1 || this.props.is_agent ? "/agent/" : "/";
	        react_router_1.browserHistory.push(basePath + queryParamsString);
	    };
	    ;
	    ContactAgent.prototype.saveQuote = function () {
	        var _this = this;
	        var persons = [];
	        var personOne = JSON.parse(JSON.stringify(this.props.persons[0]));
	        personOne.sBirthDate = moment(personOne.s_birthDate).format("YYYY-MM-DD");
	        personOne.type_of_submission = this.state.type_of_submission;
	        if (this.state.email0) {
	            personOne.email = this.state.email0;
	        }
	        this.getExtraInfo(personOne);
	        persons.push(personOne);
	        if (this.props.noOfPersons == 2) {
	            var personTwo = JSON.parse(JSON.stringify(this.props.persons[1]));
	            personTwo.type_of_submission = this.state.type_of_submission;
	            if (this.state.email1) {
	                personTwo.email = this.state.email1;
	            }
	            this.getExtraInfo(personOne);
	            persons.push(personTwo);
	        }
	        var data = {
	            applicants: JSON.stringify(persons)
	        };
	        this.getExtraInfo(data);
	        this.props.setPersonsData(persons);
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        this.props.saveQuoteForm(data).then(function () {
	            if (_this.props.quoteResponse && _this.props.quoteResponse.LOGIN_URL && _this.props.quoteResponse.LOGIN_URL.length > 0) {
	                window.location.href = _this.props.quoteResponse.LOGIN_URL;
	                return;
	            }
	            if (_this.props.quoteResponse && _this.props.quoteResponse.redirect_url && _this.props.quoteResponse.redirect_url.length > 0) {
	                window.location.href = _this.props.quoteResponse.redirect_url;
	                return;
	            }
	            var basePath = _this.props.location.pathname.indexOf("agent") > 1 || _this.props.is_agent ? "/agent/" : "/";
	            react_router_1.browserHistory.push(basePath + "connect-agent-success" + queryParamsString);
	        }).catch(function () {
	            _this.submmitedProductForm = false;
	        });
	    };
	    ContactAgent.prototype.getExtraInfo = function (data) {
	        if (this.state.type_of_submission == 10003) {
	            data.contact_time = this.state.slot;
	            data.phone_number = this.state.phone;
	        }
	    };
	    ContactAgent.prototype.render = function () {
	        var _this = this;
	        var timingSlots = [
	            {
	                value: "Morning",
	                label: "Morning"
	            },
	            {
	                value: "Afternoon",
	                label: "Afternoon"
	            },
	            {
	                value: "Evening",
	                label: "Evening"
	            },
	            {
	                value: "Night",
	                label: "Night"
	            }
	        ];
	        return (React.createElement("div", {className: "next-steps-container agent-success-page-container"}, React.createElement(react_bootstrap_1.Row, {className: "thanks-phone-img-container"}, React.createElement("img", {style: { marginBottom: "34px", marginTop: "90px" }, src: "../images/thanks-email.svg"})), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {sm: 12, className: "confirmation-email-text"}, this.props.quoteResponse && this.props.quoteResponse.data && this.props.quoteResponse.data.message_heading), React.createElement(react_bootstrap_1.Col, {sm: 12, className: "confirmation-email-desc"}, this.props.quoteResponse && this.props.quoteResponse.data && this.props.quoteResponse.data.message_text)), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {xs: 11, className: "c-center agent-success-go-back-btn"}, React.createElement(react_bootstrap_1.Button, {style: { float: "right" }, className: "c-button-default active", onClick: function () {
	            _this.goBack();
	        }}, "GO BACK", this.state.savingQuote && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))));
	    };
	    return ContactAgent;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        persons: state.quotes.persons,
	        products: state.quotes.products,
	        noOfPersons: state.selectPersons.noOfPersons,
	        plans: state.quotes.plans,
	        premiums: state.quotes.premiums,
	        is_agent: state.quotes.is_agent,
	        quoteResponse: state.quotes.quoteResponse
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        setPersonsData: function (data) {
	            return dispatch(Quote_1.setPersonsData(data));
	        },
	        saveQuoteForm: function (data) {
	            return dispatch(Quote_1.saveQuoteForm(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(ContactAgent);


/***/ }),
/* 1003 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_redux_1 = __webpack_require__(268);
	var Questions_1 = __webpack_require__(730);
	var react_router_1 = __webpack_require__(184);
	var underscore_1 = __webpack_require__(540);
	var react_bootstrap_1 = __webpack_require__(280);
	var paymentSuccess = (function (_super) {
	    __extends(paymentSuccess, _super);
	    function paymentSuccess() {
	        _super.call(this);
	        this.state = {};
	        this.invoice_number = [];
	        this.amount = [];
	        this.transaction_id = [];
	        this.card_number = [];
	    }
	    paymentSuccess.prototype.componentWillMount = function () {
	        var _this = this;
	        if (this.props.confirmationData && this.props.confirmationData.LOGIN_URL && this.props.confirmationData.LOGIN_URL.length > 0) {
	            window.location.href = this.props.confirmationData.LOGIN_URL;
	            return;
	        }
	        if (this.props.confirmationData && this.props.confirmationData.redirect_url && this.props.confirmationData.redirect_url.length > 0) {
	            window.location.href = this.props.confirmationData.redirect_url;
	            return;
	        }
	        this.setState({
	            allDone: false
	        });
	        console.log('query', this.props.location.query);
	        var invoice_number = this.props.location.query.ssl_invoice_number;
	        var amount = this.props.location.query.ssl_amount;
	        var transaction_id = this.props.location.query.ssl_txn_id;
	        var card_number = this.props.location.query.ssl_card_number;
	        this.setState({
	            invoice_number: invoice_number,
	            amount: amount,
	            transaction_id: transaction_id,
	            card_number: card_number
	        });
	        var queryParams = this.props.location.query;
	        var queryParamsString = "?";
	        for (var k in queryParams) {
	            if (queryParams[k]) {
	                queryParamsString += k + "=" + queryParams[k] + "&";
	            }
	            else {
	                queryParamsString += k + "&";
	            }
	        }
	        queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	        if (this.props.location && this.props.location.query && this.props.location.query.ssl_txn_id) {
	            this.props.makePayment(this.props.location.query).then(function (res) {
	                if (_this.props.paymentData && _this.props.paymentData.LOGIN_URL && _this.props.paymentData.LOGIN_URL.length > 0) {
	                    window.location.href = _this.props.paymentData.LOGIN_URL;
	                    return;
	                }
	                if (_this.props.paymentData && _this.props.paymentData.redirect_url && _this.props.paymentData.redirect_url.length > 0) {
	                    window.location.href = _this.props.paymentData.redirect_url;
	                    return;
	                }
	                var link = _this.props.paymentData && _this.props.paymentData.data &&
	                    _this.props.paymentData.data.current_document_data && _this.props.paymentData.data.current_document_data.sign_url;
	                if (_this.props.paymentData && _this.props.paymentData.status == false) {
	                    react_router_1.browserHistory.push("/error" + queryParamsString);
	                    return;
	                }
	                if (_this.props.paymentData.valid_user == 0) {
	                    react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                    return;
	                }
	                if (!underscore_1.isEmpty(link)) {
	                    window.location.href = link;
	                }
	                else if (underscore_1.isEmpty(_this.props.paymentData.data.current_document_data) && !underscore_1.isEmpty(_this.props.paymentData.data.offer_data)) {
	                    react_router_1.browserHistory.push("/offer" + queryParamsString);
	                }
	                else if (underscore_1.isEmpty(_this.props.paymentData.data.offer_data) && underscore_1.isEmpty(_this.props.paymentData.data.offer_data)) {
	                    _this.setState({
	                        allDone: true
	                    });
	                }
	            });
	        }
	        else {
	            this.setState({
	                allDone: true
	            });
	        }
	    };
	    paymentSuccess.prototype.shouldShowDefaultMessage = function () {
	        return this.state.allDone &&
	            !((this.props.paymentData && this.props.paymentData && this.props.paymentData.message) ||
	                (this.props.confirmationData && this.props.confirmationData && this.props.confirmationData.message));
	    };
	    paymentSuccess.prototype.onPayment = function () {
	        var _this = this;
	        var elavonData = this.props.paymentData && this.props.paymentData.data && this.props.paymentData.data.elavon_data;
	        var data = {};
	        data.elavon_params = elavonData && elavonData.elavon_params ? elavonData.elavon_params : [];
	        data.elavon_url = elavonData.elavon_url;
	        this.setState({
	            onPaymentGoingTo: true
	        });
	        if (this.props.paymentData && this.props.paymentData.LOGIN_URL && this.props.paymentData.LOGIN_URL.length > 0) {
	            window.location.href = this.props.paymentData.LOGIN_URL;
	            return;
	        }
	        if (this.props.paymentData && this.props.paymentData.redirect_url && this.props.paymentData.redirect_url.length > 0) {
	            window.location.href = this.props.paymentData.redirect_url;
	            return;
	        }
	        this.props.postPayment(data).then(function () {
	            if (_this.props.paymentInfo && _this.props.paymentInfo.LOGIN_URL && _this.props.paymentInfo.LOGIN_URL.length > 0) {
	                window.location.href = _this.props.paymentInfo.LOGIN_URL;
	                return;
	            }
	            if (_this.props.paymentInfo && _this.props.paymentInfo.redirect_url && _this.props.paymentInfo.redirect_url.length > 0) {
	                window.location.href = _this.props.paymentInfo.redirect_url;
	                return;
	            }
	            if (_this.props.paymentInfo && underscore_1.isEmpty(data.elavon_params)) {
	                var questionsInfo = JSON.parse(_this.props.paymentInfo);
	                var queryParams = _this.props.location.query;
	                var queryParamsString = "?";
	                for (var k in queryParams) {
	                    if (queryParams[k]) {
	                        queryParamsString += k + "=" + queryParams[k] + "&";
	                    }
	                    else {
	                        queryParamsString += k + "&";
	                    }
	                }
	                queryParamsString = queryParamsString.substring(0, queryParamsString.length - 1);
	                var link = questionsInfo && questionsInfo.data &&
	                    questionsInfo.data.current_document_data && questionsInfo.data.current_document_data.sign_url;
	                if (questionsInfo.valid_user == 0) {
	                    react_router_1.browserHistory.push("/authorize" + queryParamsString);
	                    return;
	                }
	                if (questionsInfo.application_complete_status == false || questionsInfo.application_complete_status == "false") {
	                    react_router_1.browserHistory.push("/questions" + queryParamsString);
	                    return;
	                }
	                if (!underscore_1.isEmpty(link)) {
	                    window.location.href = link;
	                }
	                else if (!underscore_1.isEmpty(questionsInfo.data) && underscore_1.isEmpty(questionsInfo.data.current_document_data) && !underscore_1.isEmpty(questionsInfo.data.offer_data)) {
	                    react_router_1.browserHistory.push("/offer" + queryParamsString);
	                }
	                else {
	                    react_router_1.browserHistory.push("/payment_success" + queryParamsString);
	                }
	                return;
	            }
	            window.location.href = "/payment";
	            _this.setState({
	                onPaymentGoingTo: false
	            });
	        });
	    };
	    paymentSuccess.prototype.render = function () {
	        var _this = this;
	        return (React.createElement("div", {className: "payment_styles_div"}, React.createElement(react_bootstrap_1.Row, {className: "questions-container c-center"}, !this.state.allDone && React.createElement("div", {className: "questions-content-container final-loading-messages"}, React.createElement("div", null, "Loading .... "), React.createElement("i", {className: "fa fa-spinner fa-spin fa-3x fa-fw main-loader"}))), React.createElement(react_bootstrap_1.Row, null, React.createElement(react_bootstrap_1.Col, {lg: 3, md: 3, sm: 3}, " "), this.state.allDone &&
	            React.createElement(react_bootstrap_1.Col, {lg: 6, md: 6, sm: 6, xs: 12, className: "text-center payment_styles pt10 pb20"}, React.createElement("h1", {className: "pb20"}, this.props.paymentData && this.props.paymentData.message), React.createElement("h1", {className: "pb20"}, this.props.confirmationData && this.props.confirmationData.message), React.createElement("h1", {className: "pb20"}, this.shouldShowDefaultMessage() && "Thanks for contacting us. We will reach you in sometime."), this.props.paymentData && this.props.paymentData && this.props.paymentData.data && this.props.paymentData.data.payment_fail == 1 && React.createElement(react_bootstrap_1.Button, {className: "c-button-default circular offer-start-coverage-btn action", style: { marginLeft: "30px!important", width: "60%" }, onClick: function () {
	                _this.onPayment();
	            }}, this.props.paymentData && this.props.paymentData.data && this.props.paymentData.data.button_title, this.state.onPaymentGoingTo && React.createElement("i", {className: "fa fa-circle-o-notch fa-spin fa-fw"}))))));
	    };
	    return paymentSuccess;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        paymentData: state.questions.paymentData,
	        confirmationData: state.questions.confirmationData,
	        paymentInfo: state.questions.paymentInfo
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {
	        makePayment: function (data) {
	            return dispatch(Questions_1.makePayment(data));
	        },
	        postPayment: function (data) {
	            return dispatch(Questions_1.postPayment(data));
	        }
	    };
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(paymentSuccess);


/***/ }),
/* 1004 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(1);
	var react_redux_1 = __webpack_require__(268);
	var Payment = (function (_super) {
	    __extends(Payment, _super);
	    function Payment() {
	        _super.call(this);
	        this.state = {};
	    }
	    Payment.prototype.htmlDecode = function (input) {
	        var e = document.createElement('div');
	        e.innerHTML = input;
	        return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
	    };
	    Payment.prototype.render = function () {
	        if (this.props.paymentInfo) {
	            return React.createElement("div", {dangerouslySetInnerHTML: { __html: this.props.paymentInfo }});
	        }
	        return null;
	    };
	    return Payment;
	}(React.Component));
	var mapStateToProps = function (state) {
	    return {
	        paymentInfo: state.questions.paymentInfo
	    };
	};
	var mapDispatchToProps = function (dispatch) {
	    return {};
	};
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.default = react_redux_1.connect(mapStateToProps, mapDispatchToProps)(Payment);


/***/ })
]));
//# sourceMappingURL=3.QuotePage.b078342c786ca01e5107.js.map